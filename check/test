int32_t
t1max(int32_t a, int32_t b)
{
    return a >= b ? a : b;
}
int32_t t1a = t1max(1, 2);
print("max(1, 2) = %d\n", t1a);
int32_t t1b = t1max(t1max(1, 4), t1max(3, 2));
print("max(max(1, 4), max(3, 2)) = %d\n", t1b);

class t2a_t {
    int32_t	i;
    float64_t	d;
    int32_t	v;
};
t2a_t t2ca = { 1, 2 };
int32_t t2i = t2ca.i;
int32_t t2v = 3;
t2ca.v = t2v;
print("%d %d %d\n", t2i, t2ca.d, t2ca.v);

auto t3vi[] = { 1, 2, 3, 4 };
auto t3i = 2, t3j = 12;
t3vi[t3i] = t3j;
print("%d\n", t3vi[t3i]);

int32_t t4a = 10;
++t4a;
print("%d\n", t4a);
int32_t t4b = t4a++;
print("%d %d\n", t4a, t4b);

int32_t t5a = 10;
goto t5forward;
t5a = t5a + 12;
t5forward:
print("%d\n", t5a);

void
t6_test()
{
    auto n = 10;
a:
    if (n < 0)
        goto d;
b:
    --n;
c:
    if (n > 0)
        goto a;
    print("n = %d\n", n);
    goto e;
d:
    print("oops\n");
if (false) {
    e:
        print("ok\n");
    }
}
t6_test();
print("should goto work on toplevel?\n");
goto t6_x;
if (null) {
    t6_x:
    print("why not?\n");
}
else
    print("probably not\n");

int8_t		t7i8 = -1;
uint8_t		t7u8 = 254;
int16_t		t7i16 = -2;
uint16_t	t7u16 = 65534;
int32_t		t7i32 = -4;
uint32_t	t7u32 = 4294967291;
int64_t		t7i64 = -8;
uint64_t	t7u64 = 18446744073709551608;
float32_t	t7f32 = 32.5;
float64_t	t7f64 = 64.5;
auto		t7w = 42;
auto		t7f = 1.5;
auto		t7z = 0x800000000000000000000000000000000;
auto		t7rr = 1/2;
auto		t7q = 0x800000000000000000000000000000001/7;
auto		t7r = 12345.625L;
auto		t7dd = 1.5*I;
auto		t7qq = 2/3*I;
auto		t7cc = 1.25L*I;
auto		t7s = "foobar";
auto		t7n = null;
print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
aw:	%d\n\
af:	%d\n\
az:	%x\n\
arr:	%d\n\
aq:	%x\n\
ar:	%d\n\
add:	%d\n\
aqq:	%d\n\
acc:	%d\n\
s:	%s\n\
n:	%s\n",
      t7i8,	t7u8,	t7i16,	t7u16,
      t7i32,	t7u32,	t7i64,	t7u64,
      t7f32,	t7f64,
      t7w,	t7f,
      t7z,	t7rr,	t7q,	t7r,
      t7dd,	t7qq,	t7cc,
      t7s, t7n);
void t7(void)
{
    int8_t	i8 = -2;
    uint8_t	u8 = 253;
    int16_t	i16 = -3;
    uint16_t	u16 = 65533;
    int32_t	i32 = -5;
    uint32_t	u32 = 4294967290;
    int64_t	i64 = -9;
    uint64_t	u64 = 18446744073709551607;
    float32_t	f32 = 32.25;
    float64_t	f64 = 64.25;
    auto	w = 41;
    auto	f = 1.75;
    auto	z = 0x800000000000000000000000000000001;
    auto	rr = 1/2;
    auto	q = 0x800000000000000000000000000000005/7;
    auto	r = 2345.625L;
    auto	dd = 2.5*I;
    auto	qq = 4/3*I;
    auto	cc = 3.25L*I;
    auto	s = "barfoo";
    auto	n = null;
    print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
	  i8,	u8,	i16,	u16,
	  i32,	u32,	i64,	u64,
	  f32,	f64,
	  w,	f,
	  z,	rr,	q,	r,
	  dd,	qq,	cc,
	  s,	n);
}
t7();
int8_t		v7i8[]  = { -1 };
uint8_t		v7u8[]  = { 0, 254 };
int16_t		v7i16[] = { 0, 1, -2 };
uint16_t	v7u16[] = { 0, 1, 2, 3, 65534 };
int32_t		v7i32[] = { 0, 1, 2, 3, 4, -4 };
uint32_t	v7u32[] = { 0, 1, 2, 3, 4, 5, 4294967291 };
int64_t		v7i64[] = { 0, 1, 2, 3, 4, 5, 6, -8 };
uint64_t	v7u64[] = { 0, 1, 2, 3, 4, 5, 6, 7, 18446744073709551608 };
float32_t	v7f32[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 32.5 };
float64_t	v7f64[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 64.5 };
auto		va7[] = {
    42, 1.5, 0x800000000000000000000000000000000, 1/2,
    0x800000000000000000000000000000001/7, 12345.625L, 1.5*I,
    2/3*I, 1.25L*I, "foobar", null
};
print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
      v7i8[0],	v7u8[1],	v7i16[2],	v7u16[3],
      v7i32[4],	v7u32[5],	v7i64[6],	v7u64[7],
      v7f32[8],	v7f64[9],
      va7[0],	va7[1],
      va7[2],	va7[3],	va7[4],	va7[5],
      va7[6],	va7[7],	va7[8],
      va7[9], va7[10]);

class t8c_t {
    uint8_t	i8;
    uint8_t	u8;
    int16_t	i16;
    uint16_t	u16;
    int32_t	i32;
    uint32_t	u32;
    int64_t	i64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	w;
    auto	f;
    auto	z;
    auto	rr;
    auto	q;
    auto	r;
    auto	dd;
    auto	qq;
    auto	cc;
    auto	s;
    auto	n;
};
t8c_t t8c = {
    0,
    255,
    -1,
    65535,
    -3,
    4294967290,
    -7,
    18446744073709551609,
    12.5,
    24.5,
    -42,
    -1.5,
    0x800000000000001000000000000000000,
    11/2,
    0x800000000000000001000000000000001/7,
    987612345.625L,
    2.25*I,
    7/3*I,
    3.25L*I,
    "string",
    null,
};
print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
      t8c.i8,	t8c.u8,		t8c.i16,	t8c.u16,
      t8c.i32,	t8c.u32,	t8c.i64,	t8c.u64,
      t8c.f32,	t8c.f64,
      t8c.w,	t8c.f,
      t8c.z,	t8c.rr,		t8c.q,		t8c.r,
      t8c.dd,	t8c.qq,		t8c.cc,
      t8c.s,	t8c.n);
void t8test(void)
{
    t8c_t c = {
	-2,
	253,
	-3,
	65533,
	-5,
	4294967290,
	9,
	18446744073709551607,
	32.25,
	64.25,
	41,
	1.75,
	0x800000000000000000000000000000001,
	1/2,
	0x800000000000000000000000000000005/7,
	2345.625L,
	2.5*I,
	4/3*I,
	3.25L*I,
	"barfoo"
    };
    print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
	  c.i8,		c.u8,	c.i16,	c.u16,
	  c.i32,	c.u32,	c.i64,	c.u64,
	  c.f32,	c.f64,
	  c.w,		c.f,
	  c.z,		c.rr,	c.q,	c.r,
	  c.dd,		c.qq,	c.cc,
	  c.s,		c.n);
}
t8test();

int8_t		t9i8 = -1;
uint8_t		t9u8 = 254;
int16_t		t9i16 = -2;
uint16_t	t9u16 = 65534;
int32_t		t9i32 = -4;
uint32_t	t9u32 = 4294967291;
int64_t		t9i64 = -8;
uint64_t	t9u64 = 18446744073709551608;
float32_t	t9f32 = 32.5;
float64_t	t9f64 = 64.5;
auto		t9w = 42;
auto		t9f = 1.5;
auto		t9z = 0x800000000000000000000000000000000;
auto		t9rr = 1/2;
auto		t9q = 0x800000000000000000000000000000001/7;
auto		t9r = 12345.625L;
auto		t9dd = 1.5*I;
auto		t9qq = 2/3*I;
auto		t9cc = 1.25L*I;
auto		t9s = "foobar";
auto		t9n;
class t9c_t {
    uint8_t	i8;
    uint8_t	u8;
    int16_t	i16;
    uint16_t	u16;
    int32_t	i32;
    uint32_t	u32;
    int64_t	i64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	w;
    auto	f;
    auto	z;
    auto	rr;
    auto	q;
    auto	r;
    auto	dd;
    auto	qq;
    auto	cc;
    auto	s;
    auto	n;
};
t9c_t t9c = {
    t9i8,	t9u8,	t9i16,	t9u16,	t9i32,	t9u32,	t9i64,	t9u64,
    t9f32,	t9f64,
    t9w,	t9f,	t9z,	t9rr,	t9q,	t9r,
    t9dd,	t9qq,	t9cc,	t9s,	t9n
};
print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
      t9c.i8,	t9c.u8,		t9c.i16,	t9c.u16,
      t9c.i32,	t9c.u32,	t9c.i64,	t9c.u64,
      t9c.f32,	t9c.f64,
      t9c.w,	t9c.f,
      t9c.z,	t9c.rr,		t9c.q,		t9c.r,
      t9c.dd,	t9c.qq,		t9c.cc,
      t9c.s,	t9c.n);
void t9(void)
{
    int8_t	i8 = -2;
    uint8_t	u8 = 253;
    int16_t	i16 = -3;
    uint16_t	u16 = 65533;
    int32_t	i32 = -5;
    uint32_t	u32 = 4294967290;
    int64_t	i64 = -9;
    uint64_t	u64 = 18446744073709551607;
    float32_t	f32 = 32.25;
    float64_t	f64 = 64.25;
    auto	w = 41;
    auto	f = 1.75;
    auto	z = 0x800000000000000000000000000000001;
    auto	rr = 1/2;
    auto	q = 0x800000000000000000000000000000005/7;
    auto	r = 2345.625L;
    auto	dd = 2.5*I;
    auto	qq = 4/3*I;
    auto	cc = 3.25L*I;
    auto	s = "barfoo";
    auto	n = null;
    t9c_t c = {
	i8,	u8,	i16,	u16,	i32,	u32,	i64,	u64,
	f32,	f64,
	w,	f,	z,	rr,	q,	r,
	dd,	qq,	cc,	s,	n
    };
    print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
s:	%s\n\
n:	%s\n",
	  c.i8,		c.u8,	c.i16,	c.u16,
	  c.i32,	c.u32,	c.i64,	c.u64,
	  c.f32,	c.f64,
	  c.w,		c.f,
	  c.z,		c.rr,	c.q,	c.r,
	  c.dd,		c.qq,	c.cc,
	  c.s,		c.n);
}
t9();

/* not */
int8_t		t10i8 = 0;
uint8_t		t10u8 = 1;
int16_t		t10i16 = 2;
uint16_t	t10u16 = 0;
int32_t		t10i32 = 0;
uint32_t	t10u32 = 3;
int64_t		t10i64 = 4;
uint64_t	t10u64 = 0;
float32_t	t10f32 = 1.0;
float64_t	t10f64 = 0.0;
auto		t10w = 1;
auto		t10f = 0.0;
auto		t10z = 0x822222222222222222222222222222222;
auto		t10rr = 3/7;
auto		t10q = 1/0x7ffffffffffffffffffffffffffffffff;
auto		t10r = 0.000005L;
auto		t10dd = 1.0*I;
auto		t10qq = I;
auto		t10cc = 1.0L*I;
auto		t10s = "str";
auto		t10n = null;
print("\
i8:	%d	%d\n\
u8:	%d	%d\n\
i16:	%d	%d\n\
u16:	%d	%d\n\
i32:	%d	%d\n\
u32:	%d	%d\n\
i64:	%d	%d\n\
u64:	%d	%d\n\
f32:	%d	%d\n\
f64:	%d	%d\n\
w:	%d	%d\n\
f:	%d	%d\n\
z:	%d	%x\n\
rr:	%d	%d\n\
q:	%d	%x\n\
r:	%d	%d\n\
dd:	%d	%d\n\
qq:	%d	%d\n\
cc:	%d	%d\n\
s:	%d	%d\n\
n:	%d	%d\n",
      !t10i8, 	t10i8, 	!t10u8,		t10u8,
      !t10i16,	t10i16,	!t10u16,	t10u16,
      !t10i32,	t10i32,	!t10u32,	t10u32,
      !t10i64,	t10i64,	!t10u64,	t10u64,
      !t10f32,	t10f32,	!t10f64,	t10f64,
      !t10w,	t10w,	!t10f,		t10f,
      !t10z,	t10z,	!t10rr,		t10rr,
      !t10q,	t10q,	!t10r,		t10r,
      !t10dd,	t10dd,	!t10qq,		t10qq,
      !t10cc,	t10cc,	!t10s,		t10s,
      !t10n,	t10n);

/* com */
int8_t		t11i8 = 0;
uint8_t		t11u8 = 1;
int16_t		t11i16 = 2;
uint16_t	t11u16 = 0;
int32_t		t11i32 = 0;
uint32_t	t11u32 = 3;
int64_t		t11i64 = 4;
uint64_t	t11u64 = 0;
auto		t11w = 1;
auto		t11z = 0x8222222222222222222222222222222;
auto		t11n;
print("\
i8:	%d	%d\n\
u8:	%d	%d\n\
i16:	%d	%d\n\
u16:	%d	%d\n\
i32:	%d	%d\n\
u32:	%d	%d\n\
i64:	%d	%d\n\
u64:	%d	%d\n\
w:	%d	%d\n\
z:	%x	%x\n\
n:	%x	%x\n",
      ~t11i8, 	t11i8, 	~t11u8,		t11u8,
      ~t11i16,	t11i16,	~t11u16,	t11u16,
      ~t11i32,	t11i32,	~t11u32,	t11u32,
      ~t11i64,	t11i64,	~t11u64,	t11u64,
      ~t11w,	t11w,	~t11z,		t11z,
      ~t11n,	t11n);

/* neg */
int8_t		t12i8 = -1;
uint8_t		t12u8 = 2;
int16_t		t12i16 = -3;
uint16_t	t12u16 = 4;
int32_t		t12i32 = -5;
uint32_t	t12u32 = 0;
int64_t		t12i64 = -4;
uint64_t	t12u64 = 8;
float32_t	t12f32 = -9.0;
float64_t	t12f64 = 10.0;
auto		t12w = 1;
auto		t12f = -2.0;
auto		t12z = 0x82222222222222222222222222222;
auto		t12rr = -3/7;
auto		t12q = -1/0x7ffffffffffffffffffffffffffff;
auto		t12r = 0.000005L;
auto		t12dd = -1.0*I;
auto		t12qq = I;
auto		t12cc = -1.0L*I;
auto		t12n = null;
print("\
i8:	%d	%d\n\
u8:	%d	%d\n\
i16:	%d	%d\n\
u16:	%d	%d\n\
i32:	%d	%d\n\
u32:	%d	%d\n\
i64:	%d	%d\n\
u64:	%d	%d\n\
f32:	%d	%d\n\
f64:	%d	%d\n\
w:	%d	%d\n\
f:	%d	%d\n\
z:	%x	%x\n\
rr:	%d	%d\n\
q:	%x	%x\n\
r:	%d	%d\n\
dd:	%d	%d\n\
qq:	%d	%d\n\
cc:	%d	%d\n\
n:	%d	%d\n",
      -t12i8, 	t12i8, 	-t12u8,		t12u8,
      -t12i16,	t12i16,	-t12u16,	t12u16,
      -t12i32,	t12i32,	-t12u32,	t12u32,
      -t12i64,	t12i64,	-t12u64,	t12u64,
      -t12f32,	t12f32,	-t12f64,	t12f64,
      -t12w,	t12w,	-t12f,		t12f,
      -t12z,	t12z,	-t12rr,		t12rr,
      -t12q,	t12q,	-t12r,		t12r,
      -t12dd,	t12dd,	-t12qq,		t12qq,
      -t12cc,	t12cc,	-t12n,		t12n);

void t13(void)
{
    int8_t	i8 = -2;
    uint8_t	u8 = 253;
    int16_t	i16 = -3;
    uint16_t	u16 = 65533;
    int32_t	i32 = -5;
    uint32_t	u32 = 4294967290;
    int64_t	i64 = -9;
    uint64_t	u64 = 18446744073709551607;
    float32_t	f32 = 32.25;
    float64_t	f64 = 64.25;
    auto	w = 41;
    auto	f = 1.75;
    auto	z = 0x800000000000000000000000000000001;
    auto	rr = 1/2;
    auto	q = 0x800000000000000000000000000000005/7;
    auto	r = 2345.625L;
    auto	dd = 2.5*I;
    auto	qq = 4/3*I;
    auto	cc = 3.25L*I;
    auto	n = null;
    print("++\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  ++i8,		++u8,	++i16,	++u16,
	  ++i32,	++u32,	++i64,	++u64,
	  ++f32,	++f64,
	  ++w,		++f,
	  ++z,		++rr,	++q,	++r,
	  ++dd,		++qq,	++cc,
	  ++n);
    print("v--\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  i8--,		u8--,	i16--,	u16--,
	  i32--,	u32--,	i64--,	u64--,
	  f32--,	f64--,
	  w--,		f--,
	  z--,		rr--,	q--,	r--,
	  dd--,		qq--,	cc--,
	  n--);
    print("v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  i8,		u8,	i16,	u16,
	  i32,		u32,	i64,	u64,
	  f32,		f64,
	  w,		f,
	  z,		rr,	q,	r,
	  dd,		qq,	cc,
	  n);
    print("v++\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  i8++,		u8++,	i16++,	u16++,
	  i32++,	u32++,	i64++,	u64++,
	  f32++,	f64++,
	  w++,		f++,
	  z++,		rr++,	q++,	r++,
	  dd++,		qq++,	cc++,
	  n++);
    print("v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  i8,		u8,	i16,	u16,
	  i32,		u32,	i64,	u64,
	  f32,		f64,
	  w,		f,
	  z,		rr,	q,	r,
	  dd,		qq,	cc,
	  n);
    print("--v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
w:	%d\n\
f:	%d\n\
z:	%x\n\
rr:	%d\n\
q:	%x\n\
r:	%d\n\
dd:	%d\n\
qq:	%d\n\
cc:	%d\n\
n:	%s\n",
	  --i8,		--u8,	--i16,	--u16,
	  --i32,	--u32,	--i64,	--u64,
	  --f32,	--f64,
	  --w,		--f,
	  --z,		--rr,	--q,	--r,
	  --dd,		--qq,	--cc,
	  --n);
}
t13();

class t14c_t {
    int8_t	i8;
    uint8_t	u8;
    int16_t	i16;
    uint16_t	u16;
    int32_t	i32;
    uint32_t	u32;
    int64_t	i64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	a;
    int8_t	vi8[];
    uint8_t	vu8[];
    int16_t	vi16[];
    uint16_t	vu16[];
    int32_t	vi32[];
    uint32_t	vu32[];
    int64_t	vi64[];
    uint64_t	vu64[];
    float32_t	vf32[];
    float64_t	vf64[];
    auto	va[];
};
void t14(int8_t		i8,
	 uint8_t	u8,
	 int16_t	i16,
	 uint16_t	u16,
	 int32_t	i32,
	 uint32_t	u32,
	 int64_t	i64,
	 uint64_t	u64,
	 float32_t	f32,
	 float64_t	f64,
	 auto		a)
{
    t14c_t	c = {
	i8, u8, i16, u16, i32, u32, i64, u64, f32, f64, a,
	{ i8 },
	{ 0, u8 },
	{ 0, 1, i16 },
	{ 0, 1, 2, u16 },
	{ 0, 1, 2, 3, i32 },
	{ 0, 1, 2, 3, 4, u32 },
	{ 0, 1, 2, 3, 4, 5, i64 },
	{ 0, 1, 2, 3, 4, 5, 6, u64 },
	{ 0, 1, 2, 3, 4, 5, 6, 7, f32 },
	{ 0, 1, 2, 3, 4, 5, 6, 7, 8, f64 },
	{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a }
    };
    print("++v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  ++c.i8,	++c.u8,
	  ++c.i16,	++c.u16,
	  ++c.i32,	++c.u32,
	  ++c.i64,	++c.u64,
	  ++c.f32,	++c.f64,
	  ++c.a,
	  ++c.vi8[0],	++c.vu8[1],
	  ++c.vi16[2],	++c.vu16[3],
	  ++c.vi32[4],	++c.vu32[5],
	  ++c.vi64[6],	++c.vu64[7],
	  ++c.vf32[8],	++c.vf64[9],
	  ++c.va[10]);
    print("v++\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  c.i8++,	c.u8++,
	  c.i16++,	c.u16++,
	  c.i32++,	c.u32++,
	  c.i64++,	c.u64++,
	  c.f32++,	c.f64++,
	  c.a++,
	  c.vi8[0]++,	c.vu8[1]++,
	  c.vi16[2]++,	c.vu16[3]++,
	  c.vi32[4]++,	c.vu32[5]++,
	  c.vi64[6]++,	c.vu64[7]++,
	  c.vf32[8]++,	c.vf64[9]++,
	  c.va[10]++);
    print("v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  c.i8,		c.u8,
	  c.i16,	c.u16,
	  c.i32,	c.u32,
	  c.i64,	c.u64,
	  c.f32,	c.f64,
	  c.a,
	  c.vi8[0],	c.vu8[1],
	  c.vi16[2],	c.vu16[3],
	  c.vi32[4],	c.vu32[5],
	  c.vi64[6],	c.vu64[7],
	  c.vf32[8],	c.vf64[9],
	  c.va[10]);
    print("v--\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  c.i8--,	c.u8--,
	  c.i16--,	c.u16--,
	  c.i32--,	c.u32--,
	  c.i64--,	c.u64--,
	  c.f32--,	c.f64--,
	  c.a--,
	  c.vi8[0]--,	c.vu8[1]--,
	  c.vi16[2]--,	c.vu16[3]--,
	  c.vi32[4]--,	c.vu32[5]--,
	  c.vi64[6]--,	c.vu64[7]--,
	  c.vf32[8]--,	c.vf64[9]--,
	  c.va[10]--);
    print("v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  c.i8,		c.u8,
	  c.i16,	c.u16,
	  c.i32,	c.u32,
	  c.i64,	c.u64,
	  c.f32,	c.f64,
	  c.a,
	  c.vi8[0],	c.vu8[1],
	  c.vi16[2],	c.vu16[3],
	  c.vi32[4],	c.vu32[5],
	  c.vi64[6],	c.vu64[7],
	  c.vf32[8],	c.vf64[9],
	  c.va[10]);
    print("--v\n\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%d\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%d\n",
	  --c.i8,	--c.u8,
	  --c.i16,	--c.u16,
	  --c.i32,	--c.u32,
	  --c.i64,	--c.u64,
	  --c.f32,	--c.f64,
	  --c.a,
	  --c.vi8[0],	--c.vu8[1],
	  --c.vi16[2],	--c.vu16[3],
	  --c.vi32[4],	--c.vu32[5],
	  --c.vi64[6],	--c.vu64[7],
	  --c.vf32[8],	--c.vf64[9],
	  --c.va[10]);
}
t14(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

int8_t		t15i8 = 10;
uint8_t		t15u8 = 0;
print("%d %d\n", t15i8 && t15u8, t15i8 || t15u8);
int16_t		t15i16 = 0;
uint16_t	t15u16 = -1;
print("%d %d\n", t15i16 && t15u16, t15i16 || t15u16);
int32_t		t15i32 = 2;
uint32_t	t15u32 = 2;
print("%d %d\n", t15u32 && t15i32, t15i32 || t15u32);
int64_t		t15i64 = 0;
uint64_t	t15u64 = 0;
print("%d %d\n", t15i64 && t15u64, t15u64 || t15i64);
float32_t	t15f32 = 0.5;
float64_t	t15f64 = 1.5;
print("%d %d\n", t15f32 && t15f64, t15f64 || t15f32);
auto		t15n = null;
auto		t15s = "foo";
print("%d %d\n", t15n && t15s, t15s || t15n);

int8_t		t16i8  = -8;
uint8_t		t16u8  =  8;
int16_t		t16i16 = -16;
uint16_t	t16u16 =  16;
int32_t		t16i32 = -32;
uint32_t	t16u32 =  32;
int64_t		t16i64 = -64;
uint64_t	t16u64 =  64;
float32_t	t16f32 = -32.0;
float64_t	t16f64 =  64.0;
auto		t16w   =  42;
auto		t16f   = -42.25;
auto		t16z   =  0x800000000000000000000000000000000;
auto		t16x   =  1/2;
auto		t16q   =  0x800000000000000000000000000000000/3;
auto		t16r   = -1.25L;
auto		t16dd  =  1.25+I;
auto		t16qq  =  4/3+I;
auto		t16cc  = -1.25L+I;
auto		t16s   =  "string";
auto		t16n   =  null;
print("%d < %d = %d\n", t16i8, t16i8,  t16i8 < t16i8);
print("%d < %d = %d\n", t16i8, t16u8,  t16i8 < t16u8);
print("%d < %d = %d\n", t16i8, t16i16, t16i8 < t16i16);
print("%d < %d = %d\n", t16i8, t16u16, t16i8 < t16u16);
print("%d < %d = %d\n", t16i8, t16i32, t16i8 < t16i32);
print("%d < %d = %d\n", t16i8, t16u32, t16i8 < t16u32);
print("%d < %d = %d\n", t16i8, t16i64, t16i8 < t16i64);
print("%d < %d = %d\n", t16i8, t16u64, t16i8 < t16u64);
print("%d < %d = %d\n", t16i8, t16f32, t16i8 < t16f32);
print("%d < %d = %d\n", t16i8, t16f64, t16i8 < t16f64);
print("%d < %d = %d\n", t16i8, t16w,   t16i8 < t16w);
print("%d < %d = %d\n", t16i8, t16f,   t16i8 < t16f);
print("%d < %d = %d\n", t16i8, t16z,   t16i8 < t16z);
print("%d < %d = %d\n", t16i8, t16x,   t16i8 < t16x);
print("%d < %d = %d\n", t16i8, t16q,   t16i8 < t16q);
print("%d < %d = %d\n", t16i8, t16r,   t16i8 < t16r);
print("%d < %d = %d\n", t16i8, t16n,   t16i8 < t16n);
print("%d <= %d = %d\n", t16i8, t16i8,  t16i8 <= t16i8);
print("%d <= %d = %d\n", t16i8, t16u8,  t16i8 <= t16u8);
print("%d <= %d = %d\n", t16i8, t16i16, t16i8 <= t16i16);
print("%d <= %d = %d\n", t16i8, t16u16, t16i8 <= t16u16);
print("%d <= %d = %d\n", t16i8, t16i32, t16i8 <= t16i32);
print("%d <= %d = %d\n", t16i8, t16u32, t16i8 <= t16u32);
print("%d <= %d = %d\n", t16i8, t16i64, t16i8 <= t16i64);
print("%d <= %d = %d\n", t16i8, t16u64, t16i8 <= t16u64);
print("%d <= %d = %d\n", t16i8, t16f32, t16i8 <= t16f32);
print("%d <= %d = %d\n", t16i8, t16f64, t16i8 <= t16f64);
print("%d <= %d = %d\n", t16i8, t16w,   t16i8 <= t16w);
print("%d <= %d = %d\n", t16i8, t16f,   t16i8 <= t16f);
print("%d <= %d = %d\n", t16i8, t16z,   t16i8 <= t16z);
print("%d <= %d = %d\n", t16i8, t16x,   t16i8 <= t16x);
print("%d <= %d = %d\n", t16i8, t16q,   t16i8 <= t16q);
print("%d <= %d = %d\n", t16i8, t16r,   t16i8 <= t16r);
print("%d <= %d = %d\n", t16i8, t16n,   t16i8 <= t16n);
print("%d == %d = %d\n", t16i8, t16i8,  t16i8 == t16i8);
print("%d == %d = %d\n", t16i8, t16u8,  t16i8 == t16u8);
print("%d == %d = %d\n", t16i8, t16i16, t16i8 == t16i16);
print("%d == %d = %d\n", t16i8, t16u16, t16i8 == t16u16);
print("%d == %d = %d\n", t16i8, t16i32, t16i8 == t16i32);
print("%d == %d = %d\n", t16i8, t16u32, t16i8 == t16u32);
print("%d == %d = %d\n", t16i8, t16i64, t16i8 == t16i64);
print("%d == %d = %d\n", t16i8, t16u64, t16i8 == t16u64);
print("%d == %d = %d\n", t16i8, t16f32, t16i8 == t16f32);
print("%d == %d = %d\n", t16i8, t16f64, t16i8 == t16f64);
print("%d == %d = %d\n", t16i8, t16w,   t16i8 == t16w);
print("%d == %d = %d\n", t16i8, t16f,   t16i8 == t16f);
print("%d == %d = %d\n", t16i8, t16z,   t16i8 == t16z);
print("%d == %d = %d\n", t16i8, t16x,   t16i8 == t16x);
print("%d == %d = %d\n", t16i8, t16q,   t16i8 == t16q);
print("%d == %d = %d\n", t16i8, t16r,   t16i8 == t16r);
print("%d == %d = %d\n", t16i8, t16dd,  t16i8 == t16dd);
print("%d == %d = %d\n", t16i8, t16qq,  t16i8 == t16qq);
print("%d == %d = %d\n", t16i8, t16cc,  t16i8 == t16cc);
print("%d == %d = %d\n", t16i8, t16s,   t16i8 == t16s);
print("%d == %d = %d\n", t16i8, t16n,   t16i8 == t16n);
print("%d >= %d = %d\n", t16i8, t16i8,  t16i8 >= t16i8);
print("%d >= %d = %d\n", t16i8, t16u8,  t16i8 >= t16u8);
print("%d >= %d = %d\n", t16i8, t16i16, t16i8 >= t16i16);
print("%d >= %d = %d\n", t16i8, t16u16, t16i8 >= t16u16);
print("%d >= %d = %d\n", t16i8, t16i32, t16i8 >= t16i32);
print("%d >= %d = %d\n", t16i8, t16u32, t16i8 >= t16u32);
print("%d >= %d = %d\n", t16i8, t16i64, t16i8 >= t16i64);
print("%d >= %d = %d\n", t16i8, t16u64, t16i8 >= t16u64);
print("%d >= %d = %d\n", t16i8, t16f32, t16i8 >= t16f32);
print("%d >= %d = %d\n", t16i8, t16f64, t16i8 >= t16f64);
print("%d >= %d = %d\n", t16i8, t16w,   t16i8 >= t16w);
print("%d >= %d = %d\n", t16i8, t16f,   t16i8 >= t16f);
print("%d >= %d = %d\n", t16i8, t16z,   t16i8 >= t16z);
print("%d >= %d = %d\n", t16i8, t16x,   t16i8 >= t16x);
print("%d >= %d = %d\n", t16i8, t16q,   t16i8 >= t16q);
print("%d >= %d = %d\n", t16i8, t16r,   t16i8 >= t16r);
print("%d >= %d = %d\n", t16i8, t16n,   t16i8 >= t16n);
print("%d > %d = %d\n", t16i8, t16i8,  t16i8 > t16i8);
print("%d > %d = %d\n", t16i8, t16u8,  t16i8 > t16u8);
print("%d > %d = %d\n", t16i8, t16i16, t16i8 > t16i16);
print("%d > %d = %d\n", t16i8, t16u16, t16i8 > t16u16);
print("%d > %d = %d\n", t16i8, t16i32, t16i8 > t16i32);
print("%d > %d = %d\n", t16i8, t16u32, t16i8 > t16u32);
print("%d > %d = %d\n", t16i8, t16i64, t16i8 > t16i64);
print("%d > %d = %d\n", t16i8, t16u64, t16i8 > t16u64);
print("%d > %d = %d\n", t16i8, t16f32, t16i8 > t16f32);
print("%d > %d = %d\n", t16i8, t16f64, t16i8 > t16f64);
print("%d > %d = %d\n", t16i8, t16w,   t16i8 > t16w);
print("%d > %d = %d\n", t16i8, t16f,   t16i8 > t16f);
print("%d > %d = %d\n", t16i8, t16z,   t16i8 > t16z);
print("%d > %d = %d\n", t16i8, t16x,   t16i8 > t16x);
print("%d > %d = %d\n", t16i8, t16q,   t16i8 > t16q);
print("%d > %d = %d\n", t16i8, t16r,   t16i8 > t16r);
print("%d > %d = %d\n", t16i8, t16n,   t16i8 > t16n);
print("%d != %d = %d\n", t16i8, t16i8,  t16i8 != t16i8);
print("%d != %d = %d\n", t16i8, t16u8,  t16i8 != t16u8);
print("%d != %d = %d\n", t16i8, t16i16, t16i8 != t16i16);
print("%d != %d = %d\n", t16i8, t16u16, t16i8 != t16u16);
print("%d != %d = %d\n", t16i8, t16i32, t16i8 != t16i32);
print("%d != %d = %d\n", t16i8, t16u32, t16i8 != t16u32);
print("%d != %d = %d\n", t16i8, t16i64, t16i8 != t16i64);
print("%d != %d = %d\n", t16i8, t16u64, t16i8 != t16u64);
print("%d != %d = %d\n", t16i8, t16f32, t16i8 != t16f32);
print("%d != %d = %d\n", t16i8, t16f64, t16i8 != t16f64);
print("%d != %d = %d\n", t16i8, t16w,   t16i8 != t16w);
print("%d != %d = %d\n", t16i8, t16f,   t16i8 != t16f);
print("%d != %d = %d\n", t16i8, t16z,   t16i8 != t16z);
print("%d != %d = %d\n", t16i8, t16x,   t16i8 != t16x);
print("%d != %d = %d\n", t16i8, t16q,   t16i8 != t16q);
print("%d != %d = %d\n", t16i8, t16r,   t16i8 != t16r);
print("%d != %d = %d\n", t16i8, t16dd,  t16i8 != t16dd);
print("%d != %d = %d\n", t16i8, t16qq,  t16i8 != t16qq);
print("%d != %d = %d\n", t16i8, t16cc,  t16i8 != t16cc);
print("%d != %d = %d\n", t16i8, t16s,   t16i8 != t16s);
print("%d != %d = %d\n", t16i8, t16n,   t16i8 != t16n);
print("%d < %d = %d\n", t16u8, t16i8,  t16u8 < t16i8);
print("%d < %d = %d\n", t16u8, t16u8,  t16u8 < t16u8);
print("%d < %d = %d\n", t16u8, t16i16, t16u8 < t16i16);
print("%d < %d = %d\n", t16u8, t16u16, t16u8 < t16u16);
print("%d < %d = %d\n", t16u8, t16i32, t16u8 < t16i32);
print("%d < %d = %d\n", t16u8, t16u32, t16u8 < t16u32);
print("%d < %d = %d\n", t16u8, t16i64, t16u8 < t16i64);
print("%d < %d = %d\n", t16u8, t16u64, t16u8 < t16u64);
print("%d < %d = %d\n", t16u8, t16f32, t16u8 < t16f32);
print("%d < %d = %d\n", t16u8, t16f64, t16u8 < t16f64);
print("%d < %d = %d\n", t16u8, t16w,   t16u8 < t16w);
print("%d < %d = %d\n", t16u8, t16f,   t16u8 < t16f);
print("%d < %d = %d\n", t16u8, t16z,   t16u8 < t16z);
print("%d < %d = %d\n", t16u8, t16x,   t16u8 < t16x);
print("%d < %d = %d\n", t16u8, t16q,   t16u8 < t16q);
print("%d < %d = %d\n", t16u8, t16r,   t16u8 < t16r);
print("%d < %d = %d\n", t16u8, t16n,   t16u8 < t16n);
print("%d <= %d = %d\n", t16u8, t16i8,  t16u8 <= t16i8);
print("%d <= %d = %d\n", t16u8, t16u8,  t16u8 <= t16u8);
print("%d <= %d = %d\n", t16u8, t16i16, t16u8 <= t16i16);
print("%d <= %d = %d\n", t16u8, t16u16, t16u8 <= t16u16);
print("%d <= %d = %d\n", t16u8, t16i32, t16u8 <= t16i32);
print("%d <= %d = %d\n", t16u8, t16u32, t16u8 <= t16u32);
print("%d <= %d = %d\n", t16u8, t16i64, t16u8 <= t16i64);
print("%d <= %d = %d\n", t16u8, t16u64, t16u8 <= t16u64);
print("%d <= %d = %d\n", t16u8, t16f32, t16u8 <= t16f32);
print("%d <= %d = %d\n", t16u8, t16f64, t16u8 <= t16f64);
print("%d <= %d = %d\n", t16u8, t16w,   t16u8 <= t16w);
print("%d <= %d = %d\n", t16u8, t16f,   t16u8 <= t16f);
print("%d <= %d = %d\n", t16u8, t16z,   t16u8 <= t16z);
print("%d <= %d = %d\n", t16u8, t16x,   t16u8 <= t16x);
print("%d <= %d = %d\n", t16u8, t16q,   t16u8 <= t16q);
print("%d <= %d = %d\n", t16u8, t16r,   t16u8 <= t16r);
print("%d <= %d = %d\n", t16u8, t16n,   t16u8 <= t16n);
print("%d == %d = %d\n", t16u8, t16i8,  t16u8 == t16i8);
print("%d == %d = %d\n", t16u8, t16u8,  t16u8 == t16u8);
print("%d == %d = %d\n", t16u8, t16i16, t16u8 == t16i16);
print("%d == %d = %d\n", t16u8, t16u16, t16u8 == t16u16);
print("%d == %d = %d\n", t16u8, t16i32, t16u8 == t16i32);
print("%d == %d = %d\n", t16u8, t16u32, t16u8 == t16u32);
print("%d == %d = %d\n", t16u8, t16i64, t16u8 == t16i64);
print("%d == %d = %d\n", t16u8, t16u64, t16u8 == t16u64);
print("%d == %d = %d\n", t16u8, t16f32, t16u8 == t16f32);
print("%d == %d = %d\n", t16u8, t16f64, t16u8 == t16f64);
print("%d == %d = %d\n", t16u8, t16w,   t16u8 == t16w);
print("%d == %d = %d\n", t16u8, t16f,   t16u8 == t16f);
print("%d == %d = %d\n", t16u8, t16z,   t16u8 == t16z);
print("%d == %d = %d\n", t16u8, t16x,   t16u8 == t16x);
print("%d == %d = %d\n", t16u8, t16q,   t16u8 == t16q);
print("%d == %d = %d\n", t16u8, t16r,   t16u8 == t16r);
print("%d == %d = %d\n", t16u8, t16dd,  t16u8 == t16dd);
print("%d == %d = %d\n", t16u8, t16qq,  t16u8 == t16qq);
print("%d == %d = %d\n", t16u8, t16cc,  t16u8 == t16cc);
print("%d == %d = %d\n", t16u8, t16s,   t16u8 == t16s);
print("%d == %d = %d\n", t16u8, t16n,   t16u8 == t16n);
print("%d >= %d = %d\n", t16u8, t16i8,  t16u8 >= t16i8);
print("%d >= %d = %d\n", t16u8, t16u8,  t16u8 >= t16u8);
print("%d >= %d = %d\n", t16u8, t16i16, t16u8 >= t16i16);
print("%d >= %d = %d\n", t16u8, t16u16, t16u8 >= t16u16);
print("%d >= %d = %d\n", t16u8, t16i32, t16u8 >= t16i32);
print("%d >= %d = %d\n", t16u8, t16u32, t16u8 >= t16u32);
print("%d >= %d = %d\n", t16u8, t16i64, t16u8 >= t16i64);
print("%d >= %d = %d\n", t16u8, t16u64, t16u8 >= t16u64);
print("%d >= %d = %d\n", t16u8, t16f32, t16u8 >= t16f32);
print("%d >= %d = %d\n", t16u8, t16f64, t16u8 >= t16f64);
print("%d >= %d = %d\n", t16u8, t16w,   t16u8 >= t16w);
print("%d >= %d = %d\n", t16u8, t16f,   t16u8 >= t16f);
print("%d >= %d = %d\n", t16u8, t16z,   t16u8 >= t16z);
print("%d >= %d = %d\n", t16u8, t16x,   t16u8 >= t16x);
print("%d >= %d = %d\n", t16u8, t16q,   t16u8 >= t16q);
print("%d >= %d = %d\n", t16u8, t16r,   t16u8 >= t16r);
print("%d >= %d = %d\n", t16u8, t16n,   t16u8 >= t16n);
print("%d > %d = %d\n", t16u8, t16i8,  t16u8 > t16i8);
print("%d > %d = %d\n", t16u8, t16u8,  t16u8 > t16u8);
print("%d > %d = %d\n", t16u8, t16i16, t16u8 > t16i16);
print("%d > %d = %d\n", t16u8, t16u16, t16u8 > t16u16);
print("%d > %d = %d\n", t16u8, t16i32, t16u8 > t16i32);
print("%d > %d = %d\n", t16u8, t16u32, t16u8 > t16u32);
print("%d > %d = %d\n", t16u8, t16i64, t16u8 > t16i64);
print("%d > %d = %d\n", t16u8, t16u64, t16u8 > t16u64);
print("%d > %d = %d\n", t16u8, t16f32, t16u8 > t16f32);
print("%d > %d = %d\n", t16u8, t16f64, t16u8 > t16f64);
print("%d > %d = %d\n", t16u8, t16w,   t16u8 > t16w);
print("%d > %d = %d\n", t16u8, t16f,   t16u8 > t16f);
print("%d > %d = %d\n", t16u8, t16z,   t16u8 > t16z);
print("%d > %d = %d\n", t16u8, t16x,   t16u8 > t16x);
print("%d > %d = %d\n", t16u8, t16q,   t16u8 > t16q);
print("%d > %d = %d\n", t16u8, t16r,   t16u8 > t16r);
print("%d > %d = %d\n", t16u8, t16n,   t16u8 > t16n);
print("%d != %d = %d\n", t16u8, t16i8,  t16u8 != t16i8);
print("%d != %d = %d\n", t16u8, t16u8,  t16u8 != t16u8);
print("%d != %d = %d\n", t16u8, t16i16, t16u8 != t16i16);
print("%d != %d = %d\n", t16u8, t16u16, t16u8 != t16u16);
print("%d != %d = %d\n", t16u8, t16i32, t16u8 != t16i32);
print("%d != %d = %d\n", t16u8, t16u32, t16u8 != t16u32);
print("%d != %d = %d\n", t16u8, t16i64, t16u8 != t16i64);
print("%d != %d = %d\n", t16u8, t16u64, t16u8 != t16u64);
print("%d != %d = %d\n", t16u8, t16f32, t16u8 != t16f32);
print("%d != %d = %d\n", t16u8, t16f64, t16u8 != t16f64);
print("%d != %d = %d\n", t16u8, t16w,   t16u8 != t16w);
print("%d != %d = %d\n", t16u8, t16f,   t16u8 != t16f);
print("%d != %d = %d\n", t16u8, t16z,   t16u8 != t16z);
print("%d != %d = %d\n", t16u8, t16x,   t16u8 != t16x);
print("%d != %d = %d\n", t16u8, t16q,   t16u8 != t16q);
print("%d != %d = %d\n", t16u8, t16r,   t16u8 != t16r);
print("%d != %d = %d\n", t16u8, t16dd,  t16u8 != t16dd);
print("%d != %d = %d\n", t16u8, t16qq,  t16u8 != t16qq);
print("%d != %d = %d\n", t16u8, t16cc,  t16u8 != t16cc);
print("%d != %d = %d\n", t16u8, t16s,   t16u8 != t16s);
print("%d != %d = %d\n", t16u8, t16n,   t16u8 != t16n);
print("%d < %d = %d\n", t16i16, t16i8,  t16i16 < t16i8);
print("%d < %d = %d\n", t16i16, t16u8,  t16i16 < t16u8);
print("%d < %d = %d\n", t16i16, t16i16, t16i16 < t16i16);
print("%d < %d = %d\n", t16i16, t16u16, t16i16 < t16u16);
print("%d < %d = %d\n", t16i16, t16i32, t16i16 < t16i32);
print("%d < %d = %d\n", t16i16, t16u32, t16i16 < t16u32);
print("%d < %d = %d\n", t16i16, t16i64, t16i16 < t16i64);
print("%d < %d = %d\n", t16i16, t16u64, t16i16 < t16u64);
print("%d < %d = %d\n", t16i16, t16f32, t16i16 < t16f32);
print("%d < %d = %d\n", t16i16, t16f64, t16i16 < t16f64);
print("%d < %d = %d\n", t16i16, t16w,   t16i16 < t16w);
print("%d < %d = %d\n", t16i16, t16f,   t16i16 < t16f);
print("%d < %d = %d\n", t16i16, t16z,   t16i16 < t16z);
print("%d < %d = %d\n", t16i16, t16x,   t16i16 < t16x);
print("%d < %d = %d\n", t16i16, t16q,   t16i16 < t16q);
print("%d < %d = %d\n", t16i16, t16r,   t16i16 < t16r);
print("%d < %d = %d\n", t16i16, t16n,   t16i16 < t16n);
print("%d <= %d = %d\n", t16i16, t16i8,  t16i16 <= t16i8);
print("%d <= %d = %d\n", t16i16, t16u8,  t16i16 <= t16u8);
print("%d <= %d = %d\n", t16i16, t16i16, t16i16 <= t16i16);
print("%d <= %d = %d\n", t16i16, t16u16, t16i16 <= t16u16);
print("%d <= %d = %d\n", t16i16, t16i32, t16i16 <= t16i32);
print("%d <= %d = %d\n", t16i16, t16u32, t16i16 <= t16u32);
print("%d <= %d = %d\n", t16i16, t16i64, t16i16 <= t16i64);
print("%d <= %d = %d\n", t16i16, t16u64, t16i16 <= t16u64);
print("%d <= %d = %d\n", t16i16, t16f32, t16i16 <= t16f32);
print("%d <= %d = %d\n", t16i16, t16f64, t16i16 <= t16f64);
print("%d <= %d = %d\n", t16i16, t16w,   t16i16 <= t16w);
print("%d <= %d = %d\n", t16i16, t16f,   t16i16 <= t16f);
print("%d <= %d = %d\n", t16i16, t16z,   t16i16 <= t16z);
print("%d <= %d = %d\n", t16i16, t16x,   t16i16 <= t16x);
print("%d <= %d = %d\n", t16i16, t16q,   t16i16 <= t16q);
print("%d <= %d = %d\n", t16i16, t16r,   t16i16 <= t16r);
print("%d <= %d = %d\n", t16i16, t16n,   t16i16 <= t16n);
print("%d == %d = %d\n", t16i16, t16i8,  t16i16 == t16i8);
print("%d == %d = %d\n", t16i16, t16u8,  t16i16 == t16u8);
print("%d == %d = %d\n", t16i16, t16i16, t16i16 == t16i16);
print("%d == %d = %d\n", t16i16, t16u16, t16i16 == t16u16);
print("%d == %d = %d\n", t16i16, t16i32, t16i16 == t16i32);
print("%d == %d = %d\n", t16i16, t16u32, t16i16 == t16u32);
print("%d == %d = %d\n", t16i16, t16i64, t16i16 == t16i64);
print("%d == %d = %d\n", t16i16, t16u64, t16i16 == t16u64);
print("%d == %d = %d\n", t16i16, t16f32, t16i16 == t16f32);
print("%d == %d = %d\n", t16i16, t16f64, t16i16 == t16f64);
print("%d == %d = %d\n", t16i16, t16w,   t16i16 == t16w);
print("%d == %d = %d\n", t16i16, t16f,   t16i16 == t16f);
print("%d == %d = %d\n", t16i16, t16z,   t16i16 == t16z);
print("%d == %d = %d\n", t16i16, t16x,   t16i16 == t16x);
print("%d == %d = %d\n", t16i16, t16q,   t16i16 == t16q);
print("%d == %d = %d\n", t16i16, t16r,   t16i16 == t16r);
print("%d == %d = %d\n", t16i16, t16dd,  t16i16 == t16dd);
print("%d == %d = %d\n", t16i16, t16qq,  t16i16 == t16qq);
print("%d == %d = %d\n", t16i16, t16cc,  t16i16 == t16cc);
print("%d == %d = %d\n", t16i16, t16s,   t16i16 == t16s);
print("%d == %d = %d\n", t16i16, t16n,   t16i16 == t16n);
print("%d >= %d = %d\n", t16i16, t16i8,  t16i16 >= t16i8);
print("%d >= %d = %d\n", t16i16, t16u8,  t16i16 >= t16u8);
print("%d >= %d = %d\n", t16i16, t16i16, t16i16 >= t16i16);
print("%d >= %d = %d\n", t16i16, t16u16, t16i16 >= t16u16);
print("%d >= %d = %d\n", t16i16, t16i32, t16i16 >= t16i32);
print("%d >= %d = %d\n", t16i16, t16u32, t16i16 >= t16u32);
print("%d >= %d = %d\n", t16i16, t16i64, t16i16 >= t16i64);
print("%d >= %d = %d\n", t16i16, t16u64, t16i16 >= t16u64);
print("%d >= %d = %d\n", t16i16, t16f32, t16i16 >= t16f32);
print("%d >= %d = %d\n", t16i16, t16f64, t16i16 >= t16f64);
print("%d >= %d = %d\n", t16i16, t16w,   t16i16 >= t16w);
print("%d >= %d = %d\n", t16i16, t16f,   t16i16 >= t16f);
print("%d >= %d = %d\n", t16i16, t16z,   t16i16 >= t16z);
print("%d >= %d = %d\n", t16i16, t16x,   t16i16 >= t16x);
print("%d >= %d = %d\n", t16i16, t16q,   t16i16 >= t16q);
print("%d >= %d = %d\n", t16i16, t16r,   t16i16 >= t16r);
print("%d >= %d = %d\n", t16i16, t16n,   t16i16 >= t16n);
print("%d > %d = %d\n", t16i16, t16i8,  t16i16 > t16i8);
print("%d > %d = %d\n", t16i16, t16u8,  t16i16 > t16u8);
print("%d > %d = %d\n", t16i16, t16i16, t16i16 > t16i16);
print("%d > %d = %d\n", t16i16, t16u16, t16i16 > t16u16);
print("%d > %d = %d\n", t16i16, t16i32, t16i16 > t16i32);
print("%d > %d = %d\n", t16i16, t16u32, t16i16 > t16u32);
print("%d > %d = %d\n", t16i16, t16i64, t16i16 > t16i64);
print("%d > %d = %d\n", t16i16, t16u64, t16i16 > t16u64);
print("%d > %d = %d\n", t16i16, t16f32, t16i16 > t16f32);
print("%d > %d = %d\n", t16i16, t16f64, t16i16 > t16f64);
print("%d > %d = %d\n", t16i16, t16w,   t16i16 > t16w);
print("%d > %d = %d\n", t16i16, t16f,   t16i16 > t16f);
print("%d > %d = %d\n", t16i16, t16z,   t16i16 > t16z);
print("%d > %d = %d\n", t16i16, t16x,   t16i16 > t16x);
print("%d > %d = %d\n", t16i16, t16q,   t16i16 > t16q);
print("%d > %d = %d\n", t16i16, t16r,   t16i16 > t16r);
print("%d > %d = %d\n", t16i16, t16n,   t16i16 > t16n);
print("%d != %d = %d\n", t16i16, t16i8,  t16i16 != t16i8);
print("%d != %d = %d\n", t16i16, t16u8,  t16i16 != t16u8);
print("%d != %d = %d\n", t16i16, t16i16, t16i16 != t16i16);
print("%d != %d = %d\n", t16i16, t16u16, t16i16 != t16u16);
print("%d != %d = %d\n", t16i16, t16i32, t16i16 != t16i32);
print("%d != %d = %d\n", t16i16, t16u32, t16i16 != t16u32);
print("%d != %d = %d\n", t16i16, t16i64, t16i16 != t16i64);
print("%d != %d = %d\n", t16i16, t16u64, t16i16 != t16u64);
print("%d != %d = %d\n", t16i16, t16f32, t16i16 != t16f32);
print("%d != %d = %d\n", t16i16, t16f64, t16i16 != t16f64);
print("%d != %d = %d\n", t16i16, t16w,   t16i16 != t16w);
print("%d != %d = %d\n", t16i16, t16f,   t16i16 != t16f);
print("%d != %d = %d\n", t16i16, t16z,   t16i16 != t16z);
print("%d != %d = %d\n", t16i16, t16x,   t16i16 != t16x);
print("%d != %d = %d\n", t16i16, t16q,   t16i16 != t16q);
print("%d != %d = %d\n", t16i16, t16r,   t16i16 != t16r);
print("%d != %d = %d\n", t16i16, t16dd,  t16i16 != t16dd);
print("%d != %d = %d\n", t16i16, t16qq,  t16i16 != t16qq);
print("%d != %d = %d\n", t16i16, t16cc,  t16i16 != t16cc);
print("%d != %d = %d\n", t16i16, t16s,   t16i16 != t16s);
print("%d != %d = %d\n", t16i16, t16n,   t16i16 != t16n);
print("%d < %d = %d\n", t16u16, t16i8,  t16u16 < t16i8);
print("%d < %d = %d\n", t16u16, t16u8,  t16u16 < t16u8);
print("%d < %d = %d\n", t16u16, t16i16, t16u16 < t16i16);
print("%d < %d = %d\n", t16u16, t16u16, t16u16 < t16u16);
print("%d < %d = %d\n", t16u16, t16i32, t16u16 < t16i32);
print("%d < %d = %d\n", t16u16, t16u32, t16u16 < t16u32);
print("%d < %d = %d\n", t16u16, t16i64, t16u16 < t16i64);
print("%d < %d = %d\n", t16u16, t16u64, t16u16 < t16u64);
print("%d < %d = %d\n", t16u16, t16f32, t16u16 < t16f32);
print("%d < %d = %d\n", t16u16, t16f64, t16u16 < t16f64);
print("%d < %d = %d\n", t16u16, t16w,   t16u16 < t16w);
print("%d < %d = %d\n", t16u16, t16f,   t16u16 < t16f);
print("%d < %d = %d\n", t16u16, t16z,   t16u16 < t16z);
print("%d < %d = %d\n", t16u16, t16x,   t16u16 < t16x);
print("%d < %d = %d\n", t16u16, t16q,   t16u16 < t16q);
print("%d < %d = %d\n", t16u16, t16r,   t16u16 < t16r);
print("%d < %d = %d\n", t16u16, t16n,   t16u16 < t16n);
print("%d <= %d = %d\n", t16u16, t16i8,  t16u16 <= t16i8);
print("%d <= %d = %d\n", t16u16, t16u8,  t16u16 <= t16u8);
print("%d <= %d = %d\n", t16u16, t16i16, t16u16 <= t16i16);
print("%d <= %d = %d\n", t16u16, t16u16, t16u16 <= t16u16);
print("%d <= %d = %d\n", t16u16, t16i32, t16u16 <= t16i32);
print("%d <= %d = %d\n", t16u16, t16u32, t16u16 <= t16u32);
print("%d <= %d = %d\n", t16u16, t16i64, t16u16 <= t16i64);
print("%d <= %d = %d\n", t16u16, t16u64, t16u16 <= t16u64);
print("%d <= %d = %d\n", t16u16, t16f32, t16u16 <= t16f32);
print("%d <= %d = %d\n", t16u16, t16f64, t16u16 <= t16f64);
print("%d <= %d = %d\n", t16u16, t16w,   t16u16 <= t16w);
print("%d <= %d = %d\n", t16u16, t16f,   t16u16 <= t16f);
print("%d <= %d = %d\n", t16u16, t16z,   t16u16 <= t16z);
print("%d <= %d = %d\n", t16u16, t16x,   t16u16 <= t16x);
print("%d <= %d = %d\n", t16u16, t16q,   t16u16 <= t16q);
print("%d <= %d = %d\n", t16u16, t16r,   t16u16 <= t16r);
print("%d <= %d = %d\n", t16u16, t16n,   t16u16 <= t16n);
print("%d == %d = %d\n", t16u16, t16i8,  t16u16 == t16i8);
print("%d == %d = %d\n", t16u16, t16u8,  t16u16 == t16u8);
print("%d == %d = %d\n", t16u16, t16i16, t16u16 == t16i16);
print("%d == %d = %d\n", t16u16, t16u16, t16u16 == t16u16);
print("%d == %d = %d\n", t16u16, t16i32, t16u16 == t16i32);
print("%d == %d = %d\n", t16u16, t16u32, t16u16 == t16u32);
print("%d == %d = %d\n", t16u16, t16i64, t16u16 == t16i64);
print("%d == %d = %d\n", t16u16, t16u64, t16u16 == t16u64);
print("%d == %d = %d\n", t16u16, t16f32, t16u16 == t16f32);
print("%d == %d = %d\n", t16u16, t16f64, t16u16 == t16f64);
print("%d == %d = %d\n", t16u16, t16w,   t16u16 == t16w);
print("%d == %d = %d\n", t16u16, t16f,   t16u16 == t16f);
print("%d == %d = %d\n", t16u16, t16z,   t16u16 == t16z);
print("%d == %d = %d\n", t16u16, t16x,   t16u16 == t16x);
print("%d == %d = %d\n", t16u16, t16q,   t16u16 == t16q);
print("%d == %d = %d\n", t16u16, t16r,   t16u16 == t16r);
print("%d == %d = %d\n", t16u16, t16dd,  t16u16 == t16dd);
print("%d == %d = %d\n", t16u16, t16qq,  t16u16 == t16qq);
print("%d == %d = %d\n", t16u16, t16cc,  t16u16 == t16cc);
print("%d == %d = %d\n", t16u16, t16s,   t16u16 == t16s);
print("%d == %d = %d\n", t16u16, t16n,   t16u16 == t16n);
print("%d >= %d = %d\n", t16u16, t16i8,  t16u16 >= t16i8);
print("%d >= %d = %d\n", t16u16, t16u8,  t16u16 >= t16u8);
print("%d >= %d = %d\n", t16u16, t16i16, t16u16 >= t16i16);
print("%d >= %d = %d\n", t16u16, t16u16, t16u16 >= t16u16);
print("%d >= %d = %d\n", t16u16, t16i32, t16u16 >= t16i32);
print("%d >= %d = %d\n", t16u16, t16u32, t16u16 >= t16u32);
print("%d >= %d = %d\n", t16u16, t16i64, t16u16 >= t16i64);
print("%d >= %d = %d\n", t16u16, t16u64, t16u16 >= t16u64);
print("%d >= %d = %d\n", t16u16, t16f32, t16u16 >= t16f32);
print("%d >= %d = %d\n", t16u16, t16f64, t16u16 >= t16f64);
print("%d >= %d = %d\n", t16u16, t16w,   t16u16 >= t16w);
print("%d >= %d = %d\n", t16u16, t16f,   t16u16 >= t16f);
print("%d >= %d = %d\n", t16u16, t16z,   t16u16 >= t16z);
print("%d >= %d = %d\n", t16u16, t16x,   t16u16 >= t16x);
print("%d >= %d = %d\n", t16u16, t16q,   t16u16 >= t16q);
print("%d >= %d = %d\n", t16u16, t16r,   t16u16 >= t16r);
print("%d >= %d = %d\n", t16u16, t16n,   t16u16 >= t16n);
print("%d > %d = %d\n", t16u16, t16i8,  t16u16 > t16i8);
print("%d > %d = %d\n", t16u16, t16u8,  t16u16 > t16u8);
print("%d > %d = %d\n", t16u16, t16i16, t16u16 > t16i16);
print("%d > %d = %d\n", t16u16, t16u16, t16u16 > t16u16);
print("%d > %d = %d\n", t16u16, t16i32, t16u16 > t16i32);
print("%d > %d = %d\n", t16u16, t16u32, t16u16 > t16u32);
print("%d > %d = %d\n", t16u16, t16i64, t16u16 > t16i64);
print("%d > %d = %d\n", t16u16, t16u64, t16u16 > t16u64);
print("%d > %d = %d\n", t16u16, t16f32, t16u16 > t16f32);
print("%d > %d = %d\n", t16u16, t16f64, t16u16 > t16f64);
print("%d > %d = %d\n", t16u16, t16w,   t16u16 > t16w);
print("%d > %d = %d\n", t16u16, t16f,   t16u16 > t16f);
print("%d > %d = %d\n", t16u16, t16z,   t16u16 > t16z);
print("%d > %d = %d\n", t16u16, t16x,   t16u16 > t16x);
print("%d > %d = %d\n", t16u16, t16q,   t16u16 > t16q);
print("%d > %d = %d\n", t16u16, t16r,   t16u16 > t16r);
print("%d > %d = %d\n", t16u16, t16n,   t16u16 > t16n);
print("%d != %d = %d\n", t16u16, t16i8,  t16u16 != t16i8);
print("%d != %d = %d\n", t16u16, t16u8,  t16u16 != t16u8);
print("%d != %d = %d\n", t16u16, t16i16, t16u16 != t16i16);
print("%d != %d = %d\n", t16u16, t16u16, t16u16 != t16u16);
print("%d != %d = %d\n", t16u16, t16i32, t16u16 != t16i32);
print("%d != %d = %d\n", t16u16, t16u32, t16u16 != t16u32);
print("%d != %d = %d\n", t16u16, t16i64, t16u16 != t16i64);
print("%d != %d = %d\n", t16u16, t16u64, t16u16 != t16u64);
print("%d != %d = %d\n", t16u16, t16f32, t16u16 != t16f32);
print("%d != %d = %d\n", t16u16, t16f64, t16u16 != t16f64);
print("%d != %d = %d\n", t16u16, t16w,   t16u16 != t16w);
print("%d != %d = %d\n", t16u16, t16f,   t16u16 != t16f);
print("%d != %d = %d\n", t16u16, t16z,   t16u16 != t16z);
print("%d != %d = %d\n", t16u16, t16x,   t16u16 != t16x);
print("%d != %d = %d\n", t16u16, t16q,   t16u16 != t16q);
print("%d != %d = %d\n", t16u16, t16r,   t16u16 != t16r);
print("%d != %d = %d\n", t16u16, t16dd,  t16u16 != t16dd);
print("%d != %d = %d\n", t16u16, t16qq,  t16u16 != t16qq);
print("%d != %d = %d\n", t16u16, t16cc,  t16u16 != t16cc);
print("%d != %d = %d\n", t16u16, t16s,   t16u16 != t16s);
print("%d != %d = %d\n", t16u16, t16n,   t16u16 != t16n);
print("%d < %d = %d\n", t16i32, t16i8,  t16i32 < t16i8);
print("%d < %d = %d\n", t16i32, t16u8,  t16i32 < t16u8);
print("%d < %d = %d\n", t16i32, t16i16, t16i32 < t16i16);
print("%d < %d = %d\n", t16i32, t16u16, t16i32 < t16u16);
print("%d < %d = %d\n", t16i32, t16i32, t16i32 < t16i32);
print("%d < %d = %d\n", t16i32, t16u32, t16i32 < t16u32);
print("%d < %d = %d\n", t16i32, t16i64, t16i32 < t16i64);
print("%d < %d = %d\n", t16i32, t16u64, t16i32 < t16u64);
print("%d < %d = %d\n", t16i32, t16f32, t16i32 < t16f32);
print("%d < %d = %d\n", t16i32, t16f64, t16i32 < t16f64);
print("%d < %d = %d\n", t16i32, t16w,   t16i32 < t16w);
print("%d < %d = %d\n", t16i32, t16f,   t16i32 < t16f);
print("%d < %d = %d\n", t16i32, t16z,   t16i32 < t16z);
print("%d < %d = %d\n", t16i32, t16x,   t16i32 < t16x);
print("%d < %d = %d\n", t16i32, t16q,   t16i32 < t16q);
print("%d < %d = %d\n", t16i32, t16r,   t16i32 < t16r);
print("%d < %d = %d\n", t16i32, t16n,   t16i32 < t16n);
print("%d <= %d = %d\n", t16i32, t16i8,  t16i32 <= t16i8);
print("%d <= %d = %d\n", t16i32, t16u8,  t16i32 <= t16u8);
print("%d <= %d = %d\n", t16i32, t16i16, t16i32 <= t16i16);
print("%d <= %d = %d\n", t16i32, t16u16, t16i32 <= t16u16);
print("%d <= %d = %d\n", t16i32, t16i32, t16i32 <= t16i32);
print("%d <= %d = %d\n", t16i32, t16u32, t16i32 <= t16u32);
print("%d <= %d = %d\n", t16i32, t16i64, t16i32 <= t16i64);
print("%d <= %d = %d\n", t16i32, t16u64, t16i32 <= t16u64);
print("%d <= %d = %d\n", t16i32, t16f32, t16i32 <= t16f32);
print("%d <= %d = %d\n", t16i32, t16f64, t16i32 <= t16f64);
print("%d <= %d = %d\n", t16i32, t16w,   t16i32 <= t16w);
print("%d <= %d = %d\n", t16i32, t16f,   t16i32 <= t16f);
print("%d <= %d = %d\n", t16i32, t16z,   t16i32 <= t16z);
print("%d <= %d = %d\n", t16i32, t16x,   t16i32 <= t16x);
print("%d <= %d = %d\n", t16i32, t16q,   t16i32 <= t16q);
print("%d <= %d = %d\n", t16i32, t16r,   t16i32 <= t16r);
print("%d <= %d = %d\n", t16i32, t16n,   t16i32 <= t16n);
print("%d == %d = %d\n", t16i32, t16i8,  t16i32 == t16i8);
print("%d == %d = %d\n", t16i32, t16u8,  t16i32 == t16u8);
print("%d == %d = %d\n", t16i32, t16i16, t16i32 == t16i16);
print("%d == %d = %d\n", t16i32, t16u16, t16i32 == t16u16);
print("%d == %d = %d\n", t16i32, t16i32, t16i32 == t16i32);
print("%d == %d = %d\n", t16i32, t16u32, t16i32 == t16u32);
print("%d == %d = %d\n", t16i32, t16i64, t16i32 == t16i64);
print("%d == %d = %d\n", t16i32, t16u64, t16i32 == t16u64);
print("%d == %d = %d\n", t16i32, t16f32, t16i32 == t16f32);
print("%d == %d = %d\n", t16i32, t16f64, t16i32 == t16f64);
print("%d == %d = %d\n", t16i32, t16w,   t16i32 == t16w);
print("%d == %d = %d\n", t16i32, t16f,   t16i32 == t16f);
print("%d == %d = %d\n", t16i32, t16z,   t16i32 == t16z);
print("%d == %d = %d\n", t16i32, t16x,   t16i32 == t16x);
print("%d == %d = %d\n", t16i32, t16q,   t16i32 == t16q);
print("%d == %d = %d\n", t16i32, t16r,   t16i32 == t16r);
print("%d == %d = %d\n", t16i32, t16dd,  t16i32 == t16dd);
print("%d == %d = %d\n", t16i32, t16qq,  t16i32 == t16qq);
print("%d == %d = %d\n", t16i32, t16cc,  t16i32 == t16cc);
print("%d == %d = %d\n", t16i32, t16s,   t16i32 == t16s);
print("%d == %d = %d\n", t16i32, t16n,   t16i32 == t16n);
print("%d >= %d = %d\n", t16i32, t16i8,  t16i32 >= t16i8);
print("%d >= %d = %d\n", t16i32, t16u8,  t16i32 >= t16u8);
print("%d >= %d = %d\n", t16i32, t16i16, t16i32 >= t16i16);
print("%d >= %d = %d\n", t16i32, t16u16, t16i32 >= t16u16);
print("%d >= %d = %d\n", t16i32, t16i32, t16i32 >= t16i32);
print("%d >= %d = %d\n", t16i32, t16u32, t16i32 >= t16u32);
print("%d >= %d = %d\n", t16i32, t16i64, t16i32 >= t16i64);
print("%d >= %d = %d\n", t16i32, t16u64, t16i32 >= t16u64);
print("%d >= %d = %d\n", t16i32, t16f32, t16i32 >= t16f32);
print("%d >= %d = %d\n", t16i32, t16f64, t16i32 >= t16f64);
print("%d >= %d = %d\n", t16i32, t16w,   t16i32 >= t16w);
print("%d >= %d = %d\n", t16i32, t16f,   t16i32 >= t16f);
print("%d >= %d = %d\n", t16i32, t16z,   t16i32 >= t16z);
print("%d >= %d = %d\n", t16i32, t16x,   t16i32 >= t16x);
print("%d >= %d = %d\n", t16i32, t16q,   t16i32 >= t16q);
print("%d >= %d = %d\n", t16i32, t16r,   t16i32 >= t16r);
print("%d >= %d = %d\n", t16i32, t16n,   t16i32 >= t16n);
print("%d > %d = %d\n", t16i32, t16i8,  t16i32 > t16i8);
print("%d > %d = %d\n", t16i32, t16u8,  t16i32 > t16u8);
print("%d > %d = %d\n", t16i32, t16i16, t16i32 > t16i16);
print("%d > %d = %d\n", t16i32, t16u16, t16i32 > t16u16);
print("%d > %d = %d\n", t16i32, t16i32, t16i32 > t16i32);
print("%d > %d = %d\n", t16i32, t16u32, t16i32 > t16u32);
print("%d > %d = %d\n", t16i32, t16i64, t16i32 > t16i64);
print("%d > %d = %d\n", t16i32, t16u64, t16i32 > t16u64);
print("%d > %d = %d\n", t16i32, t16f32, t16i32 > t16f32);
print("%d > %d = %d\n", t16i32, t16f64, t16i32 > t16f64);
print("%d > %d = %d\n", t16i32, t16w,   t16i32 > t16w);
print("%d > %d = %d\n", t16i32, t16f,   t16i32 > t16f);
print("%d > %d = %d\n", t16i32, t16z,   t16i32 > t16z);
print("%d > %d = %d\n", t16i32, t16x,   t16i32 > t16x);
print("%d > %d = %d\n", t16i32, t16q,   t16i32 > t16q);
print("%d > %d = %d\n", t16i32, t16r,   t16i32 > t16r);
print("%d > %d = %d\n", t16i32, t16n,   t16i32 > t16n);
print("%d != %d = %d\n", t16i32, t16i8,  t16i32 != t16i8);
print("%d != %d = %d\n", t16i32, t16u8,  t16i32 != t16u8);
print("%d != %d = %d\n", t16i32, t16i16, t16i32 != t16i16);
print("%d != %d = %d\n", t16i32, t16u16, t16i32 != t16u16);
print("%d != %d = %d\n", t16i32, t16i32, t16i32 != t16i32);
print("%d != %d = %d\n", t16i32, t16u32, t16i32 != t16u32);
print("%d != %d = %d\n", t16i32, t16i64, t16i32 != t16i64);
print("%d != %d = %d\n", t16i32, t16u64, t16i32 != t16u64);
print("%d != %d = %d\n", t16i32, t16f32, t16i32 != t16f32);
print("%d != %d = %d\n", t16i32, t16f64, t16i32 != t16f64);
print("%d != %d = %d\n", t16i32, t16w,   t16i32 != t16w);
print("%d != %d = %d\n", t16i32, t16f,   t16i32 != t16f);
print("%d != %d = %d\n", t16i32, t16z,   t16i32 != t16z);
print("%d != %d = %d\n", t16i32, t16x,   t16i32 != t16x);
print("%d != %d = %d\n", t16i32, t16q,   t16i32 != t16q);
print("%d != %d = %d\n", t16i32, t16r,   t16i32 != t16r);
print("%d != %d = %d\n", t16i32, t16dd,  t16i32 != t16dd);
print("%d != %d = %d\n", t16i32, t16qq,  t16i32 != t16qq);
print("%d != %d = %d\n", t16i32, t16cc,  t16i32 != t16cc);
print("%d != %d = %d\n", t16i32, t16s,   t16i32 != t16s);
print("%d != %d = %d\n", t16i32, t16n,   t16i32 != t16n);
print("%d < %d = %d\n", t16u32, t16i8,  t16u32 < t16i8);
print("%d < %d = %d\n", t16u32, t16u8,  t16u32 < t16u8);
print("%d < %d = %d\n", t16u32, t16i16, t16u32 < t16i16);
print("%d < %d = %d\n", t16u32, t16u16, t16u32 < t16u16);
print("%d < %d = %d\n", t16u32, t16i32, t16u32 < t16i32);
print("%d < %d = %d\n", t16u32, t16u32, t16u32 < t16u32);
print("%d < %d = %d\n", t16u32, t16i64, t16u32 < t16i64);
print("%d < %d = %d\n", t16u32, t16u64, t16u32 < t16u64);
print("%d < %d = %d\n", t16u32, t16f32, t16u32 < t16f32);
print("%d < %d = %d\n", t16u32, t16f64, t16u32 < t16f64);
print("%d < %d = %d\n", t16u32, t16w,   t16u32 < t16w);
print("%d < %d = %d\n", t16u32, t16f,   t16u32 < t16f);
print("%d < %d = %d\n", t16u32, t16z,   t16u32 < t16z);
print("%d < %d = %d\n", t16u32, t16x,   t16u32 < t16x);
print("%d < %d = %d\n", t16u32, t16q,   t16u32 < t16q);
print("%d < %d = %d\n", t16u32, t16r,   t16u32 < t16r);
print("%d < %d = %d\n", t16u32, t16n,   t16u32 < t16n);
print("%d <= %d = %d\n", t16u32, t16i8,  t16u32 <= t16i8);
print("%d <= %d = %d\n", t16u32, t16u8,  t16u32 <= t16u8);
print("%d <= %d = %d\n", t16u32, t16i16, t16u32 <= t16i16);
print("%d <= %d = %d\n", t16u32, t16u16, t16u32 <= t16u16);
print("%d <= %d = %d\n", t16u32, t16i32, t16u32 <= t16i32);
print("%d <= %d = %d\n", t16u32, t16u32, t16u32 <= t16u32);
print("%d <= %d = %d\n", t16u32, t16i64, t16u32 <= t16i64);
print("%d <= %d = %d\n", t16u32, t16u64, t16u32 <= t16u64);
print("%d <= %d = %d\n", t16u32, t16f32, t16u32 <= t16f32);
print("%d <= %d = %d\n", t16u32, t16f64, t16u32 <= t16f64);
print("%d <= %d = %d\n", t16u32, t16w,   t16u32 <= t16w);
print("%d <= %d = %d\n", t16u32, t16f,   t16u32 <= t16f);
print("%d <= %d = %d\n", t16u32, t16z,   t16u32 <= t16z);
print("%d <= %d = %d\n", t16u32, t16x,   t16u32 <= t16x);
print("%d <= %d = %d\n", t16u32, t16q,   t16u32 <= t16q);
print("%d <= %d = %d\n", t16u32, t16r,   t16u32 <= t16r);
print("%d <= %d = %d\n", t16u32, t16n,   t16u32 <= t16n);
print("%d == %d = %d\n", t16u32, t16i8,  t16u32 == t16i8);
print("%d == %d = %d\n", t16u32, t16u8,  t16u32 == t16u8);
print("%d == %d = %d\n", t16u32, t16i16, t16u32 == t16i16);
print("%d == %d = %d\n", t16u32, t16u16, t16u32 == t16u16);
print("%d == %d = %d\n", t16u32, t16i32, t16u32 == t16i32);
print("%d == %d = %d\n", t16u32, t16u32, t16u32 == t16u32);
print("%d == %d = %d\n", t16u32, t16i64, t16u32 == t16i64);
print("%d == %d = %d\n", t16u32, t16u64, t16u32 == t16u64);
print("%d == %d = %d\n", t16u32, t16f32, t16u32 == t16f32);
print("%d == %d = %d\n", t16u32, t16f64, t16u32 == t16f64);
print("%d == %d = %d\n", t16u32, t16w,   t16u32 == t16w);
print("%d == %d = %d\n", t16u32, t16f,   t16u32 == t16f);
print("%d == %d = %d\n", t16u32, t16z,   t16u32 == t16z);
print("%d == %d = %d\n", t16u32, t16x,   t16u32 == t16x);
print("%d == %d = %d\n", t16u32, t16q,   t16u32 == t16q);
print("%d == %d = %d\n", t16u32, t16r,   t16u32 == t16r);
print("%d == %d = %d\n", t16u32, t16dd,  t16u32 == t16dd);
print("%d == %d = %d\n", t16u32, t16qq,  t16u32 == t16qq);
print("%d == %d = %d\n", t16u32, t16cc,  t16u32 == t16cc);
print("%d == %d = %d\n", t16u32, t16s,   t16u32 == t16s);
print("%d == %d = %d\n", t16u32, t16n,   t16u32 == t16n);
print("%d >= %d = %d\n", t16u32, t16i8,  t16u32 >= t16i8);
print("%d >= %d = %d\n", t16u32, t16u8,  t16u32 >= t16u8);
print("%d >= %d = %d\n", t16u32, t16i16, t16u32 >= t16i16);
print("%d >= %d = %d\n", t16u32, t16u16, t16u32 >= t16u16);
print("%d >= %d = %d\n", t16u32, t16i32, t16u32 >= t16i32);
print("%d >= %d = %d\n", t16u32, t16u32, t16u32 >= t16u32);
print("%d >= %d = %d\n", t16u32, t16i64, t16u32 >= t16i64);
print("%d >= %d = %d\n", t16u32, t16u64, t16u32 >= t16u64);
print("%d >= %d = %d\n", t16u32, t16f32, t16u32 >= t16f32);
print("%d >= %d = %d\n", t16u32, t16f64, t16u32 >= t16f64);
print("%d >= %d = %d\n", t16u32, t16w,   t16u32 >= t16w);
print("%d >= %d = %d\n", t16u32, t16f,   t16u32 >= t16f);
print("%d >= %d = %d\n", t16u32, t16z,   t16u32 >= t16z);
print("%d >= %d = %d\n", t16u32, t16x,   t16u32 >= t16x);
print("%d >= %d = %d\n", t16u32, t16q,   t16u32 >= t16q);
print("%d >= %d = %d\n", t16u32, t16r,   t16u32 >= t16r);
print("%d >= %d = %d\n", t16u32, t16n,   t16u32 >= t16n);
print("%d > %d = %d\n", t16u32, t16i8,  t16u32 > t16i8);
print("%d > %d = %d\n", t16u32, t16u8,  t16u32 > t16u8);
print("%d > %d = %d\n", t16u32, t16i16, t16u32 > t16i16);
print("%d > %d = %d\n", t16u32, t16u16, t16u32 > t16u16);
print("%d > %d = %d\n", t16u32, t16i32, t16u32 > t16i32);
print("%d > %d = %d\n", t16u32, t16u32, t16u32 > t16u32);
print("%d > %d = %d\n", t16u32, t16i64, t16u32 > t16i64);
print("%d > %d = %d\n", t16u32, t16u64, t16u32 > t16u64);
print("%d > %d = %d\n", t16u32, t16f32, t16u32 > t16f32);
print("%d > %d = %d\n", t16u32, t16f64, t16u32 > t16f64);
print("%d > %d = %d\n", t16u32, t16w,   t16u32 > t16w);
print("%d > %d = %d\n", t16u32, t16f,   t16u32 > t16f);
print("%d > %d = %d\n", t16u32, t16z,   t16u32 > t16z);
print("%d > %d = %d\n", t16u32, t16x,   t16u32 > t16x);
print("%d > %d = %d\n", t16u32, t16q,   t16u32 > t16q);
print("%d > %d = %d\n", t16u32, t16r,   t16u32 > t16r);
print("%d > %d = %d\n", t16u32, t16n,   t16u32 > t16n);
print("%d != %d = %d\n", t16u32, t16i8,  t16u32 != t16i8);
print("%d != %d = %d\n", t16u32, t16u8,  t16u32 != t16u8);
print("%d != %d = %d\n", t16u32, t16i16, t16u32 != t16i16);
print("%d != %d = %d\n", t16u32, t16u16, t16u32 != t16u16);
print("%d != %d = %d\n", t16u32, t16i32, t16u32 != t16i32);
print("%d != %d = %d\n", t16u32, t16u32, t16u32 != t16u32);
print("%d != %d = %d\n", t16u32, t16i64, t16u32 != t16i64);
print("%d != %d = %d\n", t16u32, t16u64, t16u32 != t16u64);
print("%d != %d = %d\n", t16u32, t16f32, t16u32 != t16f32);
print("%d != %d = %d\n", t16u32, t16f64, t16u32 != t16f64);
print("%d != %d = %d\n", t16u32, t16w,   t16u32 != t16w);
print("%d != %d = %d\n", t16u32, t16f,   t16u32 != t16f);
print("%d != %d = %d\n", t16u32, t16z,   t16u32 != t16z);
print("%d != %d = %d\n", t16u32, t16x,   t16u32 != t16x);
print("%d != %d = %d\n", t16u32, t16q,   t16u32 != t16q);
print("%d != %d = %d\n", t16u32, t16r,   t16u32 != t16r);
print("%d != %d = %d\n", t16u32, t16dd,  t16u32 != t16dd);
print("%d != %d = %d\n", t16u32, t16qq,  t16u32 != t16qq);
print("%d != %d = %d\n", t16u32, t16cc,  t16u32 != t16cc);
print("%d != %d = %d\n", t16u32, t16s,   t16u32 != t16s);
print("%d != %d = %d\n", t16u32, t16n,   t16u32 != t16n);
print("%d < %d = %d\n", t16i64, t16i8,  t16i64 < t16i8);
print("%d < %d = %d\n", t16i64, t16u8,  t16i64 < t16u8);
print("%d < %d = %d\n", t16i64, t16i16, t16i64 < t16i16);
print("%d < %d = %d\n", t16i64, t16u16, t16i64 < t16u16);
print("%d < %d = %d\n", t16i64, t16i32, t16i64 < t16i32);
print("%d < %d = %d\n", t16i64, t16u32, t16i64 < t16u32);
print("%d < %d = %d\n", t16i64, t16i64, t16i64 < t16i64);
print("%d < %d = %d\n", t16i64, t16u64, t16i64 < t16u64);
print("%d < %d = %d\n", t16i64, t16f32, t16i64 < t16f32);
print("%d < %d = %d\n", t16i64, t16f64, t16i64 < t16f64);
print("%d < %d = %d\n", t16i64, t16w,   t16i64 < t16w);
print("%d < %d = %d\n", t16i64, t16f,   t16i64 < t16f);
print("%d < %d = %d\n", t16i64, t16z,   t16i64 < t16z);
print("%d < %d = %d\n", t16i64, t16x,   t16i64 < t16x);
print("%d < %d = %d\n", t16i64, t16q,   t16i64 < t16q);
print("%d < %d = %d\n", t16i64, t16r,   t16i64 < t16r);
print("%d < %d = %d\n", t16i64, t16n,   t16i64 < t16n);
print("%d <= %d = %d\n", t16i64, t16i8,  t16i64 <= t16i8);
print("%d <= %d = %d\n", t16i64, t16u8,  t16i64 <= t16u8);
print("%d <= %d = %d\n", t16i64, t16i16, t16i64 <= t16i16);
print("%d <= %d = %d\n", t16i64, t16u16, t16i64 <= t16u16);
print("%d <= %d = %d\n", t16i64, t16i32, t16i64 <= t16i32);
print("%d <= %d = %d\n", t16i64, t16u32, t16i64 <= t16u32);
print("%d <= %d = %d\n", t16i64, t16i64, t16i64 <= t16i64);
print("%d <= %d = %d\n", t16i64, t16u64, t16i64 <= t16u64);
print("%d <= %d = %d\n", t16i64, t16f32, t16i64 <= t16f32);
print("%d <= %d = %d\n", t16i64, t16f64, t16i64 <= t16f64);
print("%d <= %d = %d\n", t16i64, t16w,   t16i64 <= t16w);
print("%d <= %d = %d\n", t16i64, t16f,   t16i64 <= t16f);
print("%d <= %d = %d\n", t16i64, t16z,   t16i64 <= t16z);
print("%d <= %d = %d\n", t16i64, t16x,   t16i64 <= t16x);
print("%d <= %d = %d\n", t16i64, t16q,   t16i64 <= t16q);
print("%d <= %d = %d\n", t16i64, t16r,   t16i64 <= t16r);
print("%d <= %d = %d\n", t16i64, t16n,   t16i64 <= t16n);
print("%d == %d = %d\n", t16i64, t16i8,  t16i64 == t16i8);
print("%d == %d = %d\n", t16i64, t16u8,  t16i64 == t16u8);
print("%d == %d = %d\n", t16i64, t16i16, t16i64 == t16i16);
print("%d == %d = %d\n", t16i64, t16u16, t16i64 == t16u16);
print("%d == %d = %d\n", t16i64, t16i32, t16i64 == t16i32);
print("%d == %d = %d\n", t16i64, t16u32, t16i64 == t16u32);
print("%d == %d = %d\n", t16i64, t16i64, t16i64 == t16i64);
print("%d == %d = %d\n", t16i64, t16u64, t16i64 == t16u64);
print("%d == %d = %d\n", t16i64, t16f32, t16i64 == t16f32);
print("%d == %d = %d\n", t16i64, t16f64, t16i64 == t16f64);
print("%d == %d = %d\n", t16i64, t16w,   t16i64 == t16w);
print("%d == %d = %d\n", t16i64, t16f,   t16i64 == t16f);
print("%d == %d = %d\n", t16i64, t16z,   t16i64 == t16z);
print("%d == %d = %d\n", t16i64, t16x,   t16i64 == t16x);
print("%d == %d = %d\n", t16i64, t16q,   t16i64 == t16q);
print("%d == %d = %d\n", t16i64, t16r,   t16i64 == t16r);
print("%d == %d = %d\n", t16i64, t16dd,  t16i64 == t16dd);
print("%d == %d = %d\n", t16i64, t16qq,  t16i64 == t16qq);
print("%d == %d = %d\n", t16i64, t16cc,  t16i64 == t16cc);
print("%d == %d = %d\n", t16i64, t16s,   t16i64 == t16s);
print("%d == %d = %d\n", t16i64, t16n,   t16i64 == t16n);
print("%d >= %d = %d\n", t16i64, t16i8,  t16i64 >= t16i8);
print("%d >= %d = %d\n", t16i64, t16u8,  t16i64 >= t16u8);
print("%d >= %d = %d\n", t16i64, t16i16, t16i64 >= t16i16);
print("%d >= %d = %d\n", t16i64, t16u16, t16i64 >= t16u16);
print("%d >= %d = %d\n", t16i64, t16i32, t16i64 >= t16i32);
print("%d >= %d = %d\n", t16i64, t16u32, t16i64 >= t16u32);
print("%d >= %d = %d\n", t16i64, t16i64, t16i64 >= t16i64);
print("%d >= %d = %d\n", t16i64, t16u64, t16i64 >= t16u64);
print("%d >= %d = %d\n", t16i64, t16f32, t16i64 >= t16f32);
print("%d >= %d = %d\n", t16i64, t16f64, t16i64 >= t16f64);
print("%d >= %d = %d\n", t16i64, t16w,   t16i64 >= t16w);
print("%d >= %d = %d\n", t16i64, t16f,   t16i64 >= t16f);
print("%d >= %d = %d\n", t16i64, t16z,   t16i64 >= t16z);
print("%d >= %d = %d\n", t16i64, t16x,   t16i64 >= t16x);
print("%d >= %d = %d\n", t16i64, t16q,   t16i64 >= t16q);
print("%d >= %d = %d\n", t16i64, t16r,   t16i64 >= t16r);
print("%d >= %d = %d\n", t16i64, t16n,   t16i64 >= t16n);
print("%d > %d = %d\n", t16i64, t16i8,  t16i64 > t16i8);
print("%d > %d = %d\n", t16i64, t16u8,  t16i64 > t16u8);
print("%d > %d = %d\n", t16i64, t16i16, t16i64 > t16i16);
print("%d > %d = %d\n", t16i64, t16u16, t16i64 > t16u16);
print("%d > %d = %d\n", t16i64, t16i32, t16i64 > t16i32);
print("%d > %d = %d\n", t16i64, t16u32, t16i64 > t16u32);
print("%d > %d = %d\n", t16i64, t16i64, t16i64 > t16i64);
print("%d > %d = %d\n", t16i64, t16u64, t16i64 > t16u64);
print("%d > %d = %d\n", t16i64, t16f32, t16i64 > t16f32);
print("%d > %d = %d\n", t16i64, t16f64, t16i64 > t16f64);
print("%d > %d = %d\n", t16i64, t16w,   t16i64 > t16w);
print("%d > %d = %d\n", t16i64, t16f,   t16i64 > t16f);
print("%d > %d = %d\n", t16i64, t16z,   t16i64 > t16z);
print("%d > %d = %d\n", t16i64, t16x,   t16i64 > t16x);
print("%d > %d = %d\n", t16i64, t16q,   t16i64 > t16q);
print("%d > %d = %d\n", t16i64, t16r,   t16i64 > t16r);
print("%d > %d = %d\n", t16i64, t16n,   t16i64 > t16n);
print("%d != %d = %d\n", t16i64, t16i8,  t16i64 != t16i8);
print("%d != %d = %d\n", t16i64, t16u8,  t16i64 != t16u8);
print("%d != %d = %d\n", t16i64, t16i16, t16i64 != t16i16);
print("%d != %d = %d\n", t16i64, t16u16, t16i64 != t16u16);
print("%d != %d = %d\n", t16i64, t16i32, t16i64 != t16i32);
print("%d != %d = %d\n", t16i64, t16u32, t16i64 != t16u32);
print("%d != %d = %d\n", t16i64, t16i64, t16i64 != t16i64);
print("%d != %d = %d\n", t16i64, t16u64, t16i64 != t16u64);
print("%d != %d = %d\n", t16i64, t16f32, t16i64 != t16f32);
print("%d != %d = %d\n", t16i64, t16f64, t16i64 != t16f64);
print("%d != %d = %d\n", t16i64, t16w,   t16i64 != t16w);
print("%d != %d = %d\n", t16i64, t16f,   t16i64 != t16f);
print("%d != %d = %d\n", t16i64, t16z,   t16i64 != t16z);
print("%d != %d = %d\n", t16i64, t16x,   t16i64 != t16x);
print("%d != %d = %d\n", t16i64, t16q,   t16i64 != t16q);
print("%d != %d = %d\n", t16i64, t16r,   t16i64 != t16r);
print("%d != %d = %d\n", t16i64, t16dd,  t16i64 != t16dd);
print("%d != %d = %d\n", t16i64, t16qq,  t16i64 != t16qq);
print("%d != %d = %d\n", t16i64, t16cc,  t16i64 != t16cc);
print("%d != %d = %d\n", t16i64, t16s,   t16i64 != t16s);
print("%d != %d = %d\n", t16i64, t16n,   t16i64 != t16n);
print("%d < %d = %d\n", t16u64, t16i8,  t16u64 < t16i8);
print("%d < %d = %d\n", t16u64, t16u8,  t16u64 < t16u8);
print("%d < %d = %d\n", t16u64, t16i16, t16u64 < t16i16);
print("%d < %d = %d\n", t16u64, t16u16, t16u64 < t16u16);
print("%d < %d = %d\n", t16u64, t16i32, t16u64 < t16i32);
print("%d < %d = %d\n", t16u64, t16u32, t16u64 < t16u32);
print("%d < %d = %d\n", t16u64, t16i64, t16u64 < t16i64);
print("%d < %d = %d\n", t16u64, t16u64, t16u64 < t16u64);
print("%d < %d = %d\n", t16u64, t16f32, t16u64 < t16f32);
print("%d < %d = %d\n", t16u64, t16f64, t16u64 < t16f64);
print("%d < %d = %d\n", t16u64, t16w,   t16u64 < t16w);
print("%d < %d = %d\n", t16u64, t16f,   t16u64 < t16f);
print("%d < %d = %d\n", t16u64, t16z,   t16u64 < t16z);
print("%d < %d = %d\n", t16u64, t16x,   t16u64 < t16x);
print("%d < %d = %d\n", t16u64, t16q,   t16u64 < t16q);
print("%d < %d = %d\n", t16u64, t16r,   t16u64 < t16r);
print("%d < %d = %d\n", t16u64, t16n,   t16u64 < t16n);
print("%d <= %d = %d\n", t16u64, t16i8,  t16u64 <= t16i8);
print("%d <= %d = %d\n", t16u64, t16u8,  t16u64 <= t16u8);
print("%d <= %d = %d\n", t16u64, t16i16, t16u64 <= t16i16);
print("%d <= %d = %d\n", t16u64, t16u16, t16u64 <= t16u16);
print("%d <= %d = %d\n", t16u64, t16i32, t16u64 <= t16i32);
print("%d <= %d = %d\n", t16u64, t16u32, t16u64 <= t16u32);
print("%d <= %d = %d\n", t16u64, t16i64, t16u64 <= t16i64);
print("%d <= %d = %d\n", t16u64, t16u64, t16u64 <= t16u64);
print("%d <= %d = %d\n", t16u64, t16f32, t16u64 <= t16f32);
print("%d <= %d = %d\n", t16u64, t16f64, t16u64 <= t16f64);
print("%d <= %d = %d\n", t16u64, t16w,   t16u64 <= t16w);
print("%d <= %d = %d\n", t16u64, t16f,   t16u64 <= t16f);
print("%d <= %d = %d\n", t16u64, t16z,   t16u64 <= t16z);
print("%d <= %d = %d\n", t16u64, t16x,   t16u64 <= t16x);
print("%d <= %d = %d\n", t16u64, t16q,   t16u64 <= t16q);
print("%d <= %d = %d\n", t16u64, t16r,   t16u64 <= t16r);
print("%d <= %d = %d\n", t16u64, t16n,   t16u64 <= t16n);
print("%d == %d = %d\n", t16u64, t16i8,  t16u64 == t16i8);
print("%d == %d = %d\n", t16u64, t16u8,  t16u64 == t16u8);
print("%d == %d = %d\n", t16u64, t16i16, t16u64 == t16i16);
print("%d == %d = %d\n", t16u64, t16u16, t16u64 == t16u16);
print("%d == %d = %d\n", t16u64, t16i32, t16u64 == t16i32);
print("%d == %d = %d\n", t16u64, t16u32, t16u64 == t16u32);
print("%d == %d = %d\n", t16u64, t16i64, t16u64 == t16i64);
print("%d == %d = %d\n", t16u64, t16u64, t16u64 == t16u64);
print("%d == %d = %d\n", t16u64, t16f32, t16u64 == t16f32);
print("%d == %d = %d\n", t16u64, t16f64, t16u64 == t16f64);
print("%d == %d = %d\n", t16u64, t16w,   t16u64 == t16w);
print("%d == %d = %d\n", t16u64, t16f,   t16u64 == t16f);
print("%d == %d = %d\n", t16u64, t16z,   t16u64 == t16z);
print("%d == %d = %d\n", t16u64, t16x,   t16u64 == t16x);
print("%d == %d = %d\n", t16u64, t16q,   t16u64 == t16q);
print("%d == %d = %d\n", t16u64, t16r,   t16u64 == t16r);
print("%d == %d = %d\n", t16u64, t16dd,  t16u64 == t16dd);
print("%d == %d = %d\n", t16u64, t16qq,  t16u64 == t16qq);
print("%d == %d = %d\n", t16u64, t16cc,  t16u64 == t16cc);
print("%d == %d = %d\n", t16u64, t16s,   t16u64 == t16s);
print("%d == %d = %d\n", t16u64, t16n,   t16u64 == t16n);
print("%d >= %d = %d\n", t16u64, t16i8,  t16u64 >= t16i8);
print("%d >= %d = %d\n", t16u64, t16u8,  t16u64 >= t16u8);
print("%d >= %d = %d\n", t16u64, t16i16, t16u64 >= t16i16);
print("%d >= %d = %d\n", t16u64, t16u16, t16u64 >= t16u16);
print("%d >= %d = %d\n", t16u64, t16i32, t16u64 >= t16i32);
print("%d >= %d = %d\n", t16u64, t16u32, t16u64 >= t16u32);
print("%d >= %d = %d\n", t16u64, t16i64, t16u64 >= t16i64);
print("%d >= %d = %d\n", t16u64, t16u64, t16u64 >= t16u64);
print("%d >= %d = %d\n", t16u64, t16f32, t16u64 >= t16f32);
print("%d >= %d = %d\n", t16u64, t16f64, t16u64 >= t16f64);
print("%d >= %d = %d\n", t16u64, t16w,   t16u64 >= t16w);
print("%d >= %d = %d\n", t16u64, t16f,   t16u64 >= t16f);
print("%d >= %d = %d\n", t16u64, t16z,   t16u64 >= t16z);
print("%d >= %d = %d\n", t16u64, t16x,   t16u64 >= t16x);
print("%d >= %d = %d\n", t16u64, t16q,   t16u64 >= t16q);
print("%d >= %d = %d\n", t16u64, t16r,   t16u64 >= t16r);
print("%d >= %d = %d\n", t16u64, t16n,   t16u64 >= t16n);
print("%d > %d = %d\n", t16u64, t16i8,  t16u64 > t16i8);
print("%d > %d = %d\n", t16u64, t16u8,  t16u64 > t16u8);
print("%d > %d = %d\n", t16u64, t16i16, t16u64 > t16i16);
print("%d > %d = %d\n", t16u64, t16u16, t16u64 > t16u16);
print("%d > %d = %d\n", t16u64, t16i32, t16u64 > t16i32);
print("%d > %d = %d\n", t16u64, t16u32, t16u64 > t16u32);
print("%d > %d = %d\n", t16u64, t16i64, t16u64 > t16i64);
print("%d > %d = %d\n", t16u64, t16u64, t16u64 > t16u64);
print("%d > %d = %d\n", t16u64, t16f32, t16u64 > t16f32);
print("%d > %d = %d\n", t16u64, t16f64, t16u64 > t16f64);
print("%d > %d = %d\n", t16u64, t16w,   t16u64 > t16w);
print("%d > %d = %d\n", t16u64, t16f,   t16u64 > t16f);
print("%d > %d = %d\n", t16u64, t16z,   t16u64 > t16z);
print("%d > %d = %d\n", t16u64, t16x,   t16u64 > t16x);
print("%d > %d = %d\n", t16u64, t16q,   t16u64 > t16q);
print("%d > %d = %d\n", t16u64, t16r,   t16u64 > t16r);
print("%d > %d = %d\n", t16u64, t16n,   t16u64 > t16n);
print("%d != %d = %d\n", t16u64, t16i8,  t16u64 != t16i8);
print("%d != %d = %d\n", t16u64, t16u8,  t16u64 != t16u8);
print("%d != %d = %d\n", t16u64, t16i16, t16u64 != t16i16);
print("%d != %d = %d\n", t16u64, t16u16, t16u64 != t16u16);
print("%d != %d = %d\n", t16u64, t16i32, t16u64 != t16i32);
print("%d != %d = %d\n", t16u64, t16u32, t16u64 != t16u32);
print("%d != %d = %d\n", t16u64, t16i64, t16u64 != t16i64);
print("%d != %d = %d\n", t16u64, t16u64, t16u64 != t16u64);
print("%d != %d = %d\n", t16u64, t16f32, t16u64 != t16f32);
print("%d != %d = %d\n", t16u64, t16f64, t16u64 != t16f64);
print("%d != %d = %d\n", t16u64, t16w,   t16u64 != t16w);
print("%d != %d = %d\n", t16u64, t16f,   t16u64 != t16f);
print("%d != %d = %d\n", t16u64, t16z,   t16u64 != t16z);
print("%d != %d = %d\n", t16u64, t16x,   t16u64 != t16x);
print("%d != %d = %d\n", t16u64, t16q,   t16u64 != t16q);
print("%d != %d = %d\n", t16u64, t16r,   t16u64 != t16r);
print("%d != %d = %d\n", t16u64, t16dd,  t16u64 != t16dd);
print("%d != %d = %d\n", t16u64, t16qq,  t16u64 != t16qq);
print("%d != %d = %d\n", t16u64, t16cc,  t16u64 != t16cc);
print("%d != %d = %d\n", t16u64, t16s,   t16u64 != t16s);
print("%d != %d = %d\n", t16u64, t16n,   t16u64 != t16n);
print("%d < %d = %d\n", t16f32, t16i8,  t16f32 < t16i8);
print("%d < %d = %d\n", t16f32, t16u8,  t16f32 < t16u8);
print("%d < %d = %d\n", t16f32, t16i16, t16f32 < t16i16);
print("%d < %d = %d\n", t16f32, t16u16, t16f32 < t16u16);
print("%d < %d = %d\n", t16f32, t16i32, t16f32 < t16i32);
print("%d < %d = %d\n", t16f32, t16u32, t16f32 < t16u32);
print("%d < %d = %d\n", t16f32, t16i64, t16f32 < t16i64);
print("%d < %d = %d\n", t16f32, t16u64, t16f32 < t16u64);
print("%d < %d = %d\n", t16f32, t16f32, t16f32 < t16f32);
print("%d < %d = %d\n", t16f32, t16f64, t16f32 < t16f64);
print("%d < %d = %d\n", t16f32, t16w,   t16f32 < t16w);
print("%d < %d = %d\n", t16f32, t16f,   t16f32 < t16f);
print("%d < %d = %d\n", t16f32, t16z,   t16f32 < t16z);
print("%d < %d = %d\n", t16f32, t16x,   t16f32 < t16x);
print("%d < %d = %d\n", t16f32, t16q,   t16f32 < t16q);
print("%d < %d = %d\n", t16f32, t16r,   t16f32 < t16r);
print("%d < %d = %d\n", t16f32, t16n,   t16f32 < t16n);
print("%d <= %d = %d\n", t16f32, t16i8,  t16f32 <= t16i8);
print("%d <= %d = %d\n", t16f32, t16u8,  t16f32 <= t16u8);
print("%d <= %d = %d\n", t16f32, t16i16, t16f32 <= t16i16);
print("%d <= %d = %d\n", t16f32, t16u16, t16f32 <= t16u16);
print("%d <= %d = %d\n", t16f32, t16i32, t16f32 <= t16i32);
print("%d <= %d = %d\n", t16f32, t16u32, t16f32 <= t16u32);
print("%d <= %d = %d\n", t16f32, t16i64, t16f32 <= t16i64);
print("%d <= %d = %d\n", t16f32, t16u64, t16f32 <= t16u64);
print("%d <= %d = %d\n", t16f32, t16f32, t16f32 <= t16f32);
print("%d <= %d = %d\n", t16f32, t16f64, t16f32 <= t16f64);
print("%d <= %d = %d\n", t16f32, t16w,   t16f32 <= t16w);
print("%d <= %d = %d\n", t16f32, t16f,   t16f32 <= t16f);
print("%d <= %d = %d\n", t16f32, t16z,   t16f32 <= t16z);
print("%d <= %d = %d\n", t16f32, t16x,   t16f32 <= t16x);
print("%d <= %d = %d\n", t16f32, t16q,   t16f32 <= t16q);
print("%d <= %d = %d\n", t16f32, t16r,   t16f32 <= t16r);
print("%d <= %d = %d\n", t16f32, t16n,   t16f32 <= t16n);
print("%d == %d = %d\n", t16f32, t16i8,  t16f32 == t16i8);
print("%d == %d = %d\n", t16f32, t16u8,  t16f32 == t16u8);
print("%d == %d = %d\n", t16f32, t16i16, t16f32 == t16i16);
print("%d == %d = %d\n", t16f32, t16u16, t16f32 == t16u16);
print("%d == %d = %d\n", t16f32, t16i32, t16f32 == t16i32);
print("%d == %d = %d\n", t16f32, t16u32, t16f32 == t16u32);
print("%d == %d = %d\n", t16f32, t16i64, t16f32 == t16i64);
print("%d == %d = %d\n", t16f32, t16u64, t16f32 == t16u64);
print("%d == %d = %d\n", t16f32, t16f32, t16f32 == t16f32);
print("%d == %d = %d\n", t16f32, t16f64, t16f32 == t16f64);
print("%d == %d = %d\n", t16f32, t16w,   t16f32 == t16w);
print("%d == %d = %d\n", t16f32, t16f,   t16f32 == t16f);
print("%d == %d = %d\n", t16f32, t16z,   t16f32 == t16z);
print("%d == %d = %d\n", t16f32, t16x,   t16f32 == t16x);
print("%d == %d = %d\n", t16f32, t16q,   t16f32 == t16q);
print("%d == %d = %d\n", t16f32, t16r,   t16f32 == t16r);
print("%d == %d = %d\n", t16f32, t16dd,  t16f32 == t16dd);
print("%d == %d = %d\n", t16f32, t16qq,  t16f32 == t16qq);
print("%d == %d = %d\n", t16f32, t16cc,  t16f32 == t16cc);
print("%d == %d = %d\n", t16f32, t16s,   t16f32 == t16s);
print("%d == %d = %d\n", t16f32, t16n,   t16f32 == t16n);
print("%d >= %d = %d\n", t16f32, t16i8,  t16f32 >= t16i8);
print("%d >= %d = %d\n", t16f32, t16u8,  t16f32 >= t16u8);
print("%d >= %d = %d\n", t16f32, t16i16, t16f32 >= t16i16);
print("%d >= %d = %d\n", t16f32, t16u16, t16f32 >= t16u16);
print("%d >= %d = %d\n", t16f32, t16i32, t16f32 >= t16i32);
print("%d >= %d = %d\n", t16f32, t16u32, t16f32 >= t16u32);
print("%d >= %d = %d\n", t16f32, t16i64, t16f32 >= t16i64);
print("%d >= %d = %d\n", t16f32, t16u64, t16f32 >= t16u64);
print("%d >= %d = %d\n", t16f32, t16f32, t16f32 >= t16f32);
print("%d >= %d = %d\n", t16f32, t16f64, t16f32 >= t16f64);
print("%d >= %d = %d\n", t16f32, t16w,   t16f32 >= t16w);
print("%d >= %d = %d\n", t16f32, t16f,   t16f32 >= t16f);
print("%d >= %d = %d\n", t16f32, t16z,   t16f32 >= t16z);
print("%d >= %d = %d\n", t16f32, t16x,   t16f32 >= t16x);
print("%d >= %d = %d\n", t16f32, t16q,   t16f32 >= t16q);
print("%d >= %d = %d\n", t16f32, t16r,   t16f32 >= t16r);
print("%d >= %d = %d\n", t16f32, t16n,   t16f32 >= t16n);
print("%d > %d = %d\n", t16f32, t16i8,  t16f32 > t16i8);
print("%d > %d = %d\n", t16f32, t16u8,  t16f32 > t16u8);
print("%d > %d = %d\n", t16f32, t16i16, t16f32 > t16i16);
print("%d > %d = %d\n", t16f32, t16u16, t16f32 > t16u16);
print("%d > %d = %d\n", t16f32, t16i32, t16f32 > t16i32);
print("%d > %d = %d\n", t16f32, t16u32, t16f32 > t16u32);
print("%d > %d = %d\n", t16f32, t16i64, t16f32 > t16i64);
print("%d > %d = %d\n", t16f32, t16u64, t16f32 > t16u64);
print("%d > %d = %d\n", t16f32, t16f32, t16f32 > t16f32);
print("%d > %d = %d\n", t16f32, t16f64, t16f32 > t16f64);
print("%d > %d = %d\n", t16f32, t16w,   t16f32 > t16w);
print("%d > %d = %d\n", t16f32, t16f,   t16f32 > t16f);
print("%d > %d = %d\n", t16f32, t16z,   t16f32 > t16z);
print("%d > %d = %d\n", t16f32, t16x,   t16f32 > t16x);
print("%d > %d = %d\n", t16f32, t16q,   t16f32 > t16q);
print("%d > %d = %d\n", t16f32, t16r,   t16f32 > t16r);
print("%d > %d = %d\n", t16f32, t16n,   t16f32 > t16n);
print("%d != %d = %d\n", t16f32, t16i8,  t16f32 != t16i8);
print("%d != %d = %d\n", t16f32, t16u8,  t16f32 != t16u8);
print("%d != %d = %d\n", t16f32, t16i16, t16f32 != t16i16);
print("%d != %d = %d\n", t16f32, t16u16, t16f32 != t16u16);
print("%d != %d = %d\n", t16f32, t16i32, t16f32 != t16i32);
print("%d != %d = %d\n", t16f32, t16u32, t16f32 != t16u32);
print("%d != %d = %d\n", t16f32, t16i64, t16f32 != t16i64);
print("%d != %d = %d\n", t16f32, t16u64, t16f32 != t16u64);
print("%d != %d = %d\n", t16f32, t16f32, t16f32 != t16f32);
print("%d != %d = %d\n", t16f32, t16f64, t16f32 != t16f64);
print("%d != %d = %d\n", t16f32, t16w,   t16f32 != t16w);
print("%d != %d = %d\n", t16f32, t16f,   t16f32 != t16f);
print("%d != %d = %d\n", t16f32, t16z,   t16f32 != t16z);
print("%d != %d = %d\n", t16f32, t16x,   t16f32 != t16x);
print("%d != %d = %d\n", t16f32, t16q,   t16f32 != t16q);
print("%d != %d = %d\n", t16f32, t16r,   t16f32 != t16r);
print("%d != %d = %d\n", t16f32, t16dd,  t16f32 != t16dd);
print("%d != %d = %d\n", t16f32, t16qq,  t16f32 != t16qq);
print("%d != %d = %d\n", t16f32, t16cc,  t16f32 != t16cc);
print("%d != %d = %d\n", t16f32, t16s,   t16f32 != t16s);
print("%d != %d = %d\n", t16f32, t16n,   t16f32 != t16n);
print("%d < %d = %d\n", t16f64, t16i8,  t16f64 < t16i8);
print("%d < %d = %d\n", t16f64, t16u8,  t16f64 < t16u8);
print("%d < %d = %d\n", t16f64, t16i16, t16f64 < t16i16);
print("%d < %d = %d\n", t16f64, t16u16, t16f64 < t16u16);
print("%d < %d = %d\n", t16f64, t16i32, t16f64 < t16i32);
print("%d < %d = %d\n", t16f64, t16u32, t16f64 < t16u32);
print("%d < %d = %d\n", t16f64, t16i64, t16f64 < t16i64);
print("%d < %d = %d\n", t16f64, t16u64, t16f64 < t16u64);
print("%d < %d = %d\n", t16f64, t16f32, t16f64 < t16f32);
print("%d < %d = %d\n", t16f64, t16f64, t16f64 < t16f64);
print("%d < %d = %d\n", t16f64, t16w,   t16f64 < t16w);
print("%d < %d = %d\n", t16f64, t16f,   t16f64 < t16f);
print("%d < %d = %d\n", t16f64, t16z,   t16f64 < t16z);
print("%d < %d = %d\n", t16f64, t16x,   t16f64 < t16x);
print("%d < %d = %d\n", t16f64, t16q,   t16f64 < t16q);
print("%d < %d = %d\n", t16f64, t16r,   t16f64 < t16r);
print("%d < %d = %d\n", t16f64, t16n,   t16f64 < t16n);
print("%d <= %d = %d\n", t16f64, t16i8,  t16f64 <= t16i8);
print("%d <= %d = %d\n", t16f64, t16u8,  t16f64 <= t16u8);
print("%d <= %d = %d\n", t16f64, t16i16, t16f64 <= t16i16);
print("%d <= %d = %d\n", t16f64, t16u16, t16f64 <= t16u16);
print("%d <= %d = %d\n", t16f64, t16i32, t16f64 <= t16i32);
print("%d <= %d = %d\n", t16f64, t16u32, t16f64 <= t16u32);
print("%d <= %d = %d\n", t16f64, t16i64, t16f64 <= t16i64);
print("%d <= %d = %d\n", t16f64, t16u64, t16f64 <= t16u64);
print("%d <= %d = %d\n", t16f64, t16f32, t16f64 <= t16f32);
print("%d <= %d = %d\n", t16f64, t16f64, t16f64 <= t16f64);
print("%d <= %d = %d\n", t16f64, t16w,   t16f64 <= t16w);
print("%d <= %d = %d\n", t16f64, t16f,   t16f64 <= t16f);
print("%d <= %d = %d\n", t16f64, t16z,   t16f64 <= t16z);
print("%d <= %d = %d\n", t16f64, t16x,   t16f64 <= t16x);
print("%d <= %d = %d\n", t16f64, t16q,   t16f64 <= t16q);
print("%d <= %d = %d\n", t16f64, t16r,   t16f64 <= t16r);
print("%d <= %d = %d\n", t16f64, t16n,   t16f64 <= t16n);
print("%d == %d = %d\n", t16f64, t16i8,  t16f64 == t16i8);
print("%d == %d = %d\n", t16f64, t16u8,  t16f64 == t16u8);
print("%d == %d = %d\n", t16f64, t16i16, t16f64 == t16i16);
print("%d == %d = %d\n", t16f64, t16u16, t16f64 == t16u16);
print("%d == %d = %d\n", t16f64, t16i32, t16f64 == t16i32);
print("%d == %d = %d\n", t16f64, t16u32, t16f64 == t16u32);
print("%d == %d = %d\n", t16f64, t16i64, t16f64 == t16i64);
print("%d == %d = %d\n", t16f64, t16u64, t16f64 == t16u64);
print("%d == %d = %d\n", t16f64, t16f32, t16f64 == t16f32);
print("%d == %d = %d\n", t16f64, t16f64, t16f64 == t16f64);
print("%d == %d = %d\n", t16f64, t16w,   t16f64 == t16w);
print("%d == %d = %d\n", t16f64, t16f,   t16f64 == t16f);
print("%d == %d = %d\n", t16f64, t16z,   t16f64 == t16z);
print("%d == %d = %d\n", t16f64, t16x,   t16f64 == t16x);
print("%d == %d = %d\n", t16f64, t16q,   t16f64 == t16q);
print("%d == %d = %d\n", t16f64, t16r,   t16f64 == t16r);
print("%d == %d = %d\n", t16f64, t16dd,  t16f64 == t16dd);
print("%d == %d = %d\n", t16f64, t16qq,  t16f64 == t16qq);
print("%d == %d = %d\n", t16f64, t16cc,  t16f64 == t16cc);
print("%d == %d = %d\n", t16f64, t16s,   t16f64 == t16s);
print("%d == %d = %d\n", t16f64, t16n,   t16f64 == t16n);
print("%d >= %d = %d\n", t16f64, t16i8,  t16f64 >= t16i8);
print("%d >= %d = %d\n", t16f64, t16u8,  t16f64 >= t16u8);
print("%d >= %d = %d\n", t16f64, t16i16, t16f64 >= t16i16);
print("%d >= %d = %d\n", t16f64, t16u16, t16f64 >= t16u16);
print("%d >= %d = %d\n", t16f64, t16i32, t16f64 >= t16i32);
print("%d >= %d = %d\n", t16f64, t16u32, t16f64 >= t16u32);
print("%d >= %d = %d\n", t16f64, t16i64, t16f64 >= t16i64);
print("%d >= %d = %d\n", t16f64, t16u64, t16f64 >= t16u64);
print("%d >= %d = %d\n", t16f64, t16f32, t16f64 >= t16f32);
print("%d >= %d = %d\n", t16f64, t16f64, t16f64 >= t16f64);
print("%d >= %d = %d\n", t16f64, t16w,   t16f64 >= t16w);
print("%d >= %d = %d\n", t16f64, t16f,   t16f64 >= t16f);
print("%d >= %d = %d\n", t16f64, t16z,   t16f64 >= t16z);
print("%d >= %d = %d\n", t16f64, t16x,   t16f64 >= t16x);
print("%d >= %d = %d\n", t16f64, t16q,   t16f64 >= t16q);
print("%d >= %d = %d\n", t16f64, t16r,   t16f64 >= t16r);
print("%d >= %d = %d\n", t16f64, t16n,   t16f64 >= t16n);
print("%d > %d = %d\n", t16f64, t16i8,  t16f64 > t16i8);
print("%d > %d = %d\n", t16f64, t16u8,  t16f64 > t16u8);
print("%d > %d = %d\n", t16f64, t16i16, t16f64 > t16i16);
print("%d > %d = %d\n", t16f64, t16u16, t16f64 > t16u16);
print("%d > %d = %d\n", t16f64, t16i32, t16f64 > t16i32);
print("%d > %d = %d\n", t16f64, t16u32, t16f64 > t16u32);
print("%d > %d = %d\n", t16f64, t16i64, t16f64 > t16i64);
print("%d > %d = %d\n", t16f64, t16u64, t16f64 > t16u64);
print("%d > %d = %d\n", t16f64, t16f32, t16f64 > t16f32);
print("%d > %d = %d\n", t16f64, t16f64, t16f64 > t16f64);
print("%d > %d = %d\n", t16f64, t16w,   t16f64 > t16w);
print("%d > %d = %d\n", t16f64, t16f,   t16f64 > t16f);
print("%d > %d = %d\n", t16f64, t16z,   t16f64 > t16z);
print("%d > %d = %d\n", t16f64, t16x,   t16f64 > t16x);
print("%d > %d = %d\n", t16f64, t16q,   t16f64 > t16q);
print("%d > %d = %d\n", t16f64, t16r,   t16f64 > t16r);
print("%d > %d = %d\n", t16f64, t16n,   t16f64 > t16n);
print("%d != %d = %d\n", t16f64, t16i8,  t16f64 != t16i8);
print("%d != %d = %d\n", t16f64, t16u8,  t16f64 != t16u8);
print("%d != %d = %d\n", t16f64, t16i16, t16f64 != t16i16);
print("%d != %d = %d\n", t16f64, t16u16, t16f64 != t16u16);
print("%d != %d = %d\n", t16f64, t16i32, t16f64 != t16i32);
print("%d != %d = %d\n", t16f64, t16u32, t16f64 != t16u32);
print("%d != %d = %d\n", t16f64, t16i64, t16f64 != t16i64);
print("%d != %d = %d\n", t16f64, t16u64, t16f64 != t16u64);
print("%d != %d = %d\n", t16f64, t16f32, t16f64 != t16f32);
print("%d != %d = %d\n", t16f64, t16f64, t16f64 != t16f64);
print("%d != %d = %d\n", t16f64, t16w,   t16f64 != t16w);
print("%d != %d = %d\n", t16f64, t16f,   t16f64 != t16f);
print("%d != %d = %d\n", t16f64, t16z,   t16f64 != t16z);
print("%d != %d = %d\n", t16f64, t16x,   t16f64 != t16x);
print("%d != %d = %d\n", t16f64, t16q,   t16f64 != t16q);
print("%d != %d = %d\n", t16f64, t16r,   t16f64 != t16r);
print("%d != %d = %d\n", t16f64, t16dd,  t16f64 != t16dd);
print("%d != %d = %d\n", t16f64, t16qq,  t16f64 != t16qq);
print("%d != %d = %d\n", t16f64, t16cc,  t16f64 != t16cc);
print("%d != %d = %d\n", t16f64, t16s,   t16f64 != t16s);
print("%d != %d = %d\n", t16f64, t16n,   t16f64 != t16n);
print("%d < %d = %d\n", t16w, t16i8,  t16w < t16i8);
print("%d < %d = %d\n", t16w, t16u8,  t16w < t16u8);
print("%d < %d = %d\n", t16w, t16i16, t16w < t16i16);
print("%d < %d = %d\n", t16w, t16u16, t16w < t16u16);
print("%d < %d = %d\n", t16w, t16i32, t16w < t16i32);
print("%d < %d = %d\n", t16w, t16u32, t16w < t16u32);
print("%d < %d = %d\n", t16w, t16i64, t16w < t16i64);
print("%d < %d = %d\n", t16w, t16u64, t16w < t16u64);
print("%d < %d = %d\n", t16w, t16f32, t16w < t16f32);
print("%d < %d = %d\n", t16w, t16f64, t16w < t16f64);
print("%d < %d = %d\n", t16w, t16w,   t16w < t16w);
print("%d < %d = %d\n", t16w, t16f,   t16w < t16f);
print("%d < %d = %d\n", t16w, t16z,   t16w < t16z);
print("%d < %d = %d\n", t16w, t16x,   t16w < t16x);
print("%d < %d = %d\n", t16w, t16q,   t16w < t16q);
print("%d < %d = %d\n", t16w, t16r,   t16w < t16r);
print("%d < %d = %d\n", t16w, t16n,   t16w < t16n);
print("%d <= %d = %d\n", t16w, t16i8,  t16w <= t16i8);
print("%d <= %d = %d\n", t16w, t16u8,  t16w <= t16u8);
print("%d <= %d = %d\n", t16w, t16i16, t16w <= t16i16);
print("%d <= %d = %d\n", t16w, t16u16, t16w <= t16u16);
print("%d <= %d = %d\n", t16w, t16i32, t16w <= t16i32);
print("%d <= %d = %d\n", t16w, t16u32, t16w <= t16u32);
print("%d <= %d = %d\n", t16w, t16i64, t16w <= t16i64);
print("%d <= %d = %d\n", t16w, t16u64, t16w <= t16u64);
print("%d <= %d = %d\n", t16w, t16f32, t16w <= t16f32);
print("%d <= %d = %d\n", t16w, t16f64, t16w <= t16f64);
print("%d <= %d = %d\n", t16w, t16w,   t16w <= t16w);
print("%d <= %d = %d\n", t16w, t16f,   t16w <= t16f);
print("%d <= %d = %d\n", t16w, t16z,   t16w <= t16z);
print("%d <= %d = %d\n", t16w, t16x,   t16w <= t16x);
print("%d <= %d = %d\n", t16w, t16q,   t16w <= t16q);
print("%d <= %d = %d\n", t16w, t16r,   t16w <= t16r);
print("%d <= %d = %d\n", t16w, t16n,   t16w <= t16n);
print("%d == %d = %d\n", t16w, t16i8,  t16w == t16i8);
print("%d == %d = %d\n", t16w, t16u8,  t16w == t16u8);
print("%d == %d = %d\n", t16w, t16i16, t16w == t16i16);
print("%d == %d = %d\n", t16w, t16u16, t16w == t16u16);
print("%d == %d = %d\n", t16w, t16i32, t16w == t16i32);
print("%d == %d = %d\n", t16w, t16u32, t16w == t16u32);
print("%d == %d = %d\n", t16w, t16i64, t16w == t16i64);
print("%d == %d = %d\n", t16w, t16u64, t16w == t16u64);
print("%d == %d = %d\n", t16w, t16f32, t16w == t16f32);
print("%d == %d = %d\n", t16w, t16f64, t16w == t16f64);
print("%d == %d = %d\n", t16w, t16w,   t16w == t16w);
print("%d == %d = %d\n", t16w, t16f,   t16w == t16f);
print("%d == %d = %d\n", t16w, t16z,   t16w == t16z);
print("%d == %d = %d\n", t16w, t16x,   t16w == t16x);
print("%d == %d = %d\n", t16w, t16q,   t16w == t16q);
print("%d == %d = %d\n", t16w, t16r,   t16w == t16r);
print("%d == %d = %d\n", t16w, t16dd,  t16w == t16dd);
print("%d == %d = %d\n", t16w, t16qq,  t16w == t16qq);
print("%d == %d = %d\n", t16w, t16cc,  t16w == t16cc);
print("%d == %d = %d\n", t16w, t16s,   t16w == t16s);
print("%d == %d = %d\n", t16w, t16n,   t16w == t16n);
print("%d >= %d = %d\n", t16w, t16i8,  t16w >= t16i8);
print("%d >= %d = %d\n", t16w, t16u8,  t16w >= t16u8);
print("%d >= %d = %d\n", t16w, t16i16, t16w >= t16i16);
print("%d >= %d = %d\n", t16w, t16u16, t16w >= t16u16);
print("%d >= %d = %d\n", t16w, t16i32, t16w >= t16i32);
print("%d >= %d = %d\n", t16w, t16u32, t16w >= t16u32);
print("%d >= %d = %d\n", t16w, t16i64, t16w >= t16i64);
print("%d >= %d = %d\n", t16w, t16u64, t16w >= t16u64);
print("%d >= %d = %d\n", t16w, t16f32, t16w >= t16f32);
print("%d >= %d = %d\n", t16w, t16f64, t16w >= t16f64);
print("%d >= %d = %d\n", t16w, t16w,   t16w >= t16w);
print("%d >= %d = %d\n", t16w, t16f,   t16w >= t16f);
print("%d >= %d = %d\n", t16w, t16z,   t16w >= t16z);
print("%d >= %d = %d\n", t16w, t16x,   t16w >= t16x);
print("%d >= %d = %d\n", t16w, t16q,   t16w >= t16q);
print("%d >= %d = %d\n", t16w, t16r,   t16w >= t16r);
print("%d >= %d = %d\n", t16w, t16n,   t16w >= t16n);
print("%d > %d = %d\n", t16w, t16i8,  t16w > t16i8);
print("%d > %d = %d\n", t16w, t16u8,  t16w > t16u8);
print("%d > %d = %d\n", t16w, t16i16, t16w > t16i16);
print("%d > %d = %d\n", t16w, t16u16, t16w > t16u16);
print("%d > %d = %d\n", t16w, t16i32, t16w > t16i32);
print("%d > %d = %d\n", t16w, t16u32, t16w > t16u32);
print("%d > %d = %d\n", t16w, t16i64, t16w > t16i64);
print("%d > %d = %d\n", t16w, t16u64, t16w > t16u64);
print("%d > %d = %d\n", t16w, t16f32, t16w > t16f32);
print("%d > %d = %d\n", t16w, t16f64, t16w > t16f64);
print("%d > %d = %d\n", t16w, t16w,   t16w > t16w);
print("%d > %d = %d\n", t16w, t16f,   t16w > t16f);
print("%d > %d = %d\n", t16w, t16z,   t16w > t16z);
print("%d > %d = %d\n", t16w, t16x,   t16w > t16x);
print("%d > %d = %d\n", t16w, t16q,   t16w > t16q);
print("%d > %d = %d\n", t16w, t16r,   t16w > t16r);
print("%d > %d = %d\n", t16w, t16n,   t16w > t16n);
print("%d != %d = %d\n", t16w, t16i8,  t16w != t16i8);
print("%d != %d = %d\n", t16w, t16u8,  t16w != t16u8);
print("%d != %d = %d\n", t16w, t16i16, t16w != t16i16);
print("%d != %d = %d\n", t16w, t16u16, t16w != t16u16);
print("%d != %d = %d\n", t16w, t16i32, t16w != t16i32);
print("%d != %d = %d\n", t16w, t16u32, t16w != t16u32);
print("%d != %d = %d\n", t16w, t16i64, t16w != t16i64);
print("%d != %d = %d\n", t16w, t16u64, t16w != t16u64);
print("%d != %d = %d\n", t16w, t16f32, t16w != t16f32);
print("%d != %d = %d\n", t16w, t16f64, t16w != t16f64);
print("%d != %d = %d\n", t16w, t16w,   t16w != t16w);
print("%d != %d = %d\n", t16w, t16f,   t16w != t16f);
print("%d != %d = %d\n", t16w, t16z,   t16w != t16z);
print("%d != %d = %d\n", t16w, t16x,   t16w != t16x);
print("%d != %d = %d\n", t16w, t16q,   t16w != t16q);
print("%d != %d = %d\n", t16w, t16r,   t16w != t16r);
print("%d != %d = %d\n", t16w, t16dd,  t16w != t16dd);
print("%d != %d = %d\n", t16w, t16qq,  t16w != t16qq);
print("%d != %d = %d\n", t16w, t16cc,  t16w != t16cc);
print("%d != %d = %d\n", t16w, t16s,   t16w != t16s);
print("%d != %d = %d\n", t16w, t16n,   t16w != t16n);
print("%d < %d = %d\n", t16f, t16i8,  t16f < t16i8);
print("%d < %d = %d\n", t16f, t16u8,  t16f < t16u8);
print("%d < %d = %d\n", t16f, t16i16, t16f < t16i16);
print("%d < %d = %d\n", t16f, t16u16, t16f < t16u16);
print("%d < %d = %d\n", t16f, t16i32, t16f < t16i32);
print("%d < %d = %d\n", t16f, t16u32, t16f < t16u32);
print("%d < %d = %d\n", t16f, t16i64, t16f < t16i64);
print("%d < %d = %d\n", t16f, t16u64, t16f < t16u64);
print("%d < %d = %d\n", t16f, t16f32, t16f < t16f32);
print("%d < %d = %d\n", t16f, t16f64, t16f < t16f64);
print("%d < %d = %d\n", t16f, t16w,   t16f < t16w);
print("%d < %d = %d\n", t16f, t16f,   t16f < t16f);
print("%d < %d = %d\n", t16f, t16z,   t16f < t16z);
print("%d < %d = %d\n", t16f, t16x,   t16f < t16x);
print("%d < %d = %d\n", t16f, t16q,   t16f < t16q);
print("%d < %d = %d\n", t16f, t16r,   t16f < t16r);
print("%d < %d = %d\n", t16f, t16n,   t16f < t16n);
print("%d <= %d = %d\n", t16f, t16i8,  t16f <= t16i8);
print("%d <= %d = %d\n", t16f, t16u8,  t16f <= t16u8);
print("%d <= %d = %d\n", t16f, t16i16, t16f <= t16i16);
print("%d <= %d = %d\n", t16f, t16u16, t16f <= t16u16);
print("%d <= %d = %d\n", t16f, t16i32, t16f <= t16i32);
print("%d <= %d = %d\n", t16f, t16u32, t16f <= t16u32);
print("%d <= %d = %d\n", t16f, t16i64, t16f <= t16i64);
print("%d <= %d = %d\n", t16f, t16u64, t16f <= t16u64);
print("%d <= %d = %d\n", t16f, t16f32, t16f <= t16f32);
print("%d <= %d = %d\n", t16f, t16f64, t16f <= t16f64);
print("%d <= %d = %d\n", t16f, t16w,   t16f <= t16w);
print("%d <= %d = %d\n", t16f, t16f,   t16f <= t16f);
print("%d <= %d = %d\n", t16f, t16z,   t16f <= t16z);
print("%d <= %d = %d\n", t16f, t16x,   t16f <= t16x);
print("%d <= %d = %d\n", t16f, t16q,   t16f <= t16q);
print("%d <= %d = %d\n", t16f, t16r,   t16f <= t16r);
print("%d <= %d = %d\n", t16f, t16n,   t16f <= t16n);
print("%d == %d = %d\n", t16f, t16i8,  t16f == t16i8);
print("%d == %d = %d\n", t16f, t16u8,  t16f == t16u8);
print("%d == %d = %d\n", t16f, t16i16, t16f == t16i16);
print("%d == %d = %d\n", t16f, t16u16, t16f == t16u16);
print("%d == %d = %d\n", t16f, t16i32, t16f == t16i32);
print("%d == %d = %d\n", t16f, t16u32, t16f == t16u32);
print("%d == %d = %d\n", t16f, t16i64, t16f == t16i64);
print("%d == %d = %d\n", t16f, t16u64, t16f == t16u64);
print("%d == %d = %d\n", t16f, t16f32, t16f == t16f32);
print("%d == %d = %d\n", t16f, t16f64, t16f == t16f64);
print("%d == %d = %d\n", t16f, t16w,   t16f == t16w);
print("%d == %d = %d\n", t16f, t16f,   t16f == t16f);
print("%d == %d = %d\n", t16f, t16z,   t16f == t16z);
print("%d == %d = %d\n", t16f, t16x,   t16f == t16x);
print("%d == %d = %d\n", t16f, t16q,   t16f == t16q);
print("%d == %d = %d\n", t16f, t16r,   t16f == t16r);
print("%d == %d = %d\n", t16f, t16dd,  t16f == t16dd);
print("%d == %d = %d\n", t16f, t16qq,  t16f == t16qq);
print("%d == %d = %d\n", t16f, t16cc,  t16f == t16cc);
print("%d == %d = %d\n", t16f, t16s,   t16f == t16s);
print("%d == %d = %d\n", t16f, t16n,   t16f == t16n);
print("%d >= %d = %d\n", t16f, t16i8,  t16f >= t16i8);
print("%d >= %d = %d\n", t16f, t16u8,  t16f >= t16u8);
print("%d >= %d = %d\n", t16f, t16i16, t16f >= t16i16);
print("%d >= %d = %d\n", t16f, t16u16, t16f >= t16u16);
print("%d >= %d = %d\n", t16f, t16i32, t16f >= t16i32);
print("%d >= %d = %d\n", t16f, t16u32, t16f >= t16u32);
print("%d >= %d = %d\n", t16f, t16i64, t16f >= t16i64);
print("%d >= %d = %d\n", t16f, t16u64, t16f >= t16u64);
print("%d >= %d = %d\n", t16f, t16f32, t16f >= t16f32);
print("%d >= %d = %d\n", t16f, t16f64, t16f >= t16f64);
print("%d >= %d = %d\n", t16f, t16w,   t16f >= t16w);
print("%d >= %d = %d\n", t16f, t16f,   t16f >= t16f);
print("%d >= %d = %d\n", t16f, t16z,   t16f >= t16z);
print("%d >= %d = %d\n", t16f, t16x,   t16f >= t16x);
print("%d >= %d = %d\n", t16f, t16q,   t16f >= t16q);
print("%d >= %d = %d\n", t16f, t16r,   t16f >= t16r);
print("%d >= %d = %d\n", t16f, t16n,   t16f >= t16n);
print("%d > %d = %d\n", t16f, t16i8,  t16f > t16i8);
print("%d > %d = %d\n", t16f, t16u8,  t16f > t16u8);
print("%d > %d = %d\n", t16f, t16i16, t16f > t16i16);
print("%d > %d = %d\n", t16f, t16u16, t16f > t16u16);
print("%d > %d = %d\n", t16f, t16i32, t16f > t16i32);
print("%d > %d = %d\n", t16f, t16u32, t16f > t16u32);
print("%d > %d = %d\n", t16f, t16i64, t16f > t16i64);
print("%d > %d = %d\n", t16f, t16u64, t16f > t16u64);
print("%d > %d = %d\n", t16f, t16f32, t16f > t16f32);
print("%d > %d = %d\n", t16f, t16f64, t16f > t16f64);
print("%d > %d = %d\n", t16f, t16w,   t16f > t16w);
print("%d > %d = %d\n", t16f, t16f,   t16f > t16f);
print("%d > %d = %d\n", t16f, t16z,   t16f > t16z);
print("%d > %d = %d\n", t16f, t16x,   t16f > t16x);
print("%d > %d = %d\n", t16f, t16q,   t16f > t16q);
print("%d > %d = %d\n", t16f, t16r,   t16f > t16r);
print("%d > %d = %d\n", t16f, t16n,   t16f > t16n);
print("%d != %d = %d\n", t16f, t16i8,  t16f != t16i8);
print("%d != %d = %d\n", t16f, t16u8,  t16f != t16u8);
print("%d != %d = %d\n", t16f, t16i16, t16f != t16i16);
print("%d != %d = %d\n", t16f, t16u16, t16f != t16u16);
print("%d != %d = %d\n", t16f, t16i32, t16f != t16i32);
print("%d != %d = %d\n", t16f, t16u32, t16f != t16u32);
print("%d != %d = %d\n", t16f, t16i64, t16f != t16i64);
print("%d != %d = %d\n", t16f, t16u64, t16f != t16u64);
print("%d != %d = %d\n", t16f, t16f32, t16f != t16f32);
print("%d != %d = %d\n", t16f, t16f64, t16f != t16f64);
print("%d != %d = %d\n", t16f, t16w,   t16f != t16w);
print("%d != %d = %d\n", t16f, t16f,   t16f != t16f);
print("%d != %d = %d\n", t16f, t16z,   t16f != t16z);
print("%d != %d = %d\n", t16f, t16x,   t16f != t16x);
print("%d != %d = %d\n", t16f, t16q,   t16f != t16q);
print("%d != %d = %d\n", t16f, t16r,   t16f != t16r);
print("%d != %d = %d\n", t16f, t16dd,  t16f != t16dd);
print("%d != %d = %d\n", t16f, t16qq,  t16f != t16qq);
print("%d != %d = %d\n", t16f, t16cc,  t16f != t16cc);
print("%d != %d = %d\n", t16f, t16s,   t16f != t16s);
print("%d != %d = %d\n", t16f, t16n,   t16f != t16n);
print("%d < %d = %d\n", t16z, t16i8,  t16z < t16i8);
print("%d < %d = %d\n", t16z, t16u8,  t16z < t16u8);
print("%d < %d = %d\n", t16z, t16i16, t16z < t16i16);
print("%d < %d = %d\n", t16z, t16u16, t16z < t16u16);
print("%d < %d = %d\n", t16z, t16i32, t16z < t16i32);
print("%d < %d = %d\n", t16z, t16u32, t16z < t16u32);
print("%d < %d = %d\n", t16z, t16i64, t16z < t16i64);
print("%d < %d = %d\n", t16z, t16u64, t16z < t16u64);
print("%d < %d = %d\n", t16z, t16f32, t16z < t16f32);
print("%d < %d = %d\n", t16z, t16f64, t16z < t16f64);
print("%d < %d = %d\n", t16z, t16w,   t16z < t16w);
print("%d < %d = %d\n", t16z, t16f,   t16z < t16f);
print("%d < %d = %d\n", t16z, t16z,   t16z < t16z);
print("%d < %d = %d\n", t16z, t16x,   t16z < t16x);
print("%d < %d = %d\n", t16z, t16q,   t16z < t16q);
print("%d < %d = %d\n", t16z, t16r,   t16z < t16r);
print("%d < %d = %d\n", t16z, t16n,   t16z < t16n);
print("%d <= %d = %d\n", t16z, t16i8,  t16z <= t16i8);
print("%d <= %d = %d\n", t16z, t16u8,  t16z <= t16u8);
print("%d <= %d = %d\n", t16z, t16i16, t16z <= t16i16);
print("%d <= %d = %d\n", t16z, t16u16, t16z <= t16u16);
print("%d <= %d = %d\n", t16z, t16i32, t16z <= t16i32);
print("%d <= %d = %d\n", t16z, t16u32, t16z <= t16u32);
print("%d <= %d = %d\n", t16z, t16i64, t16z <= t16i64);
print("%d <= %d = %d\n", t16z, t16u64, t16z <= t16u64);
print("%d <= %d = %d\n", t16z, t16f32, t16z <= t16f32);
print("%d <= %d = %d\n", t16z, t16f64, t16z <= t16f64);
print("%d <= %d = %d\n", t16z, t16w,   t16z <= t16w);
print("%d <= %d = %d\n", t16z, t16f,   t16z <= t16f);
print("%d <= %d = %d\n", t16z, t16z,   t16z <= t16z);
print("%d <= %d = %d\n", t16z, t16x,   t16z <= t16x);
print("%d <= %d = %d\n", t16z, t16q,   t16z <= t16q);
print("%d <= %d = %d\n", t16z, t16r,   t16z <= t16r);
print("%d <= %d = %d\n", t16z, t16n,   t16z <= t16n);
print("%d == %d = %d\n", t16z, t16i8,  t16z == t16i8);
print("%d == %d = %d\n", t16z, t16u8,  t16z == t16u8);
print("%d == %d = %d\n", t16z, t16i16, t16z == t16i16);
print("%d == %d = %d\n", t16z, t16u16, t16z == t16u16);
print("%d == %d = %d\n", t16z, t16i32, t16z == t16i32);
print("%d == %d = %d\n", t16z, t16u32, t16z == t16u32);
print("%d == %d = %d\n", t16z, t16i64, t16z == t16i64);
print("%d == %d = %d\n", t16z, t16u64, t16z == t16u64);
print("%d == %d = %d\n", t16z, t16f32, t16z == t16f32);
print("%d == %d = %d\n", t16z, t16f64, t16z == t16f64);
print("%d == %d = %d\n", t16z, t16w,   t16z == t16w);
print("%d == %d = %d\n", t16z, t16f,   t16z == t16f);
print("%d == %d = %d\n", t16z, t16z,   t16z == t16z);
print("%d == %d = %d\n", t16z, t16x,   t16z == t16x);
print("%d == %d = %d\n", t16z, t16q,   t16z == t16q);
print("%d == %d = %d\n", t16z, t16r,   t16z == t16r);
print("%d == %d = %d\n", t16z, t16dd,  t16z == t16dd);
print("%d == %d = %d\n", t16z, t16qq,  t16z == t16qq);
print("%d == %d = %d\n", t16z, t16cc,  t16z == t16cc);
print("%d == %d = %d\n", t16z, t16s,   t16z == t16s);
print("%d == %d = %d\n", t16z, t16n,   t16z == t16n);
print("%d >= %d = %d\n", t16z, t16i8,  t16z >= t16i8);
print("%d >= %d = %d\n", t16z, t16u8,  t16z >= t16u8);
print("%d >= %d = %d\n", t16z, t16i16, t16z >= t16i16);
print("%d >= %d = %d\n", t16z, t16u16, t16z >= t16u16);
print("%d >= %d = %d\n", t16z, t16i32, t16z >= t16i32);
print("%d >= %d = %d\n", t16z, t16u32, t16z >= t16u32);
print("%d >= %d = %d\n", t16z, t16i64, t16z >= t16i64);
print("%d >= %d = %d\n", t16z, t16u64, t16z >= t16u64);
print("%d >= %d = %d\n", t16z, t16f32, t16z >= t16f32);
print("%d >= %d = %d\n", t16z, t16f64, t16z >= t16f64);
print("%d >= %d = %d\n", t16z, t16w,   t16z >= t16w);
print("%d >= %d = %d\n", t16z, t16f,   t16z >= t16f);
print("%d >= %d = %d\n", t16z, t16z,   t16z >= t16z);
print("%d >= %d = %d\n", t16z, t16x,   t16z >= t16x);
print("%d >= %d = %d\n", t16z, t16q,   t16z >= t16q);
print("%d >= %d = %d\n", t16z, t16r,   t16z >= t16r);
print("%d >= %d = %d\n", t16z, t16n,   t16z >= t16n);
print("%d > %d = %d\n", t16z, t16i8,  t16z > t16i8);
print("%d > %d = %d\n", t16z, t16u8,  t16z > t16u8);
print("%d > %d = %d\n", t16z, t16i16, t16z > t16i16);
print("%d > %d = %d\n", t16z, t16u16, t16z > t16u16);
print("%d > %d = %d\n", t16z, t16i32, t16z > t16i32);
print("%d > %d = %d\n", t16z, t16u32, t16z > t16u32);
print("%d > %d = %d\n", t16z, t16i64, t16z > t16i64);
print("%d > %d = %d\n", t16z, t16u64, t16z > t16u64);
print("%d > %d = %d\n", t16z, t16f32, t16z > t16f32);
print("%d > %d = %d\n", t16z, t16f64, t16z > t16f64);
print("%d > %d = %d\n", t16z, t16w,   t16z > t16w);
print("%d > %d = %d\n", t16z, t16f,   t16z > t16f);
print("%d > %d = %d\n", t16z, t16z,   t16z > t16z);
print("%d > %d = %d\n", t16z, t16x,   t16z > t16x);
print("%d > %d = %d\n", t16z, t16q,   t16z > t16q);
print("%d > %d = %d\n", t16z, t16r,   t16z > t16r);
print("%d > %d = %d\n", t16z, t16n,   t16z > t16n);
print("%d != %d = %d\n", t16z, t16i8,  t16z != t16i8);
print("%d != %d = %d\n", t16z, t16u8,  t16z != t16u8);
print("%d != %d = %d\n", t16z, t16i16, t16z != t16i16);
print("%d != %d = %d\n", t16z, t16u16, t16z != t16u16);
print("%d != %d = %d\n", t16z, t16i32, t16z != t16i32);
print("%d != %d = %d\n", t16z, t16u32, t16z != t16u32);
print("%d != %d = %d\n", t16z, t16i64, t16z != t16i64);
print("%d != %d = %d\n", t16z, t16u64, t16z != t16u64);
print("%d != %d = %d\n", t16z, t16f32, t16z != t16f32);
print("%d != %d = %d\n", t16z, t16f64, t16z != t16f64);
print("%d != %d = %d\n", t16z, t16w,   t16z != t16w);
print("%d != %d = %d\n", t16z, t16f,   t16z != t16f);
print("%d != %d = %d\n", t16z, t16z,   t16z != t16z);
print("%d != %d = %d\n", t16z, t16x,   t16z != t16x);
print("%d != %d = %d\n", t16z, t16q,   t16z != t16q);
print("%d != %d = %d\n", t16z, t16r,   t16z != t16r);
print("%d != %d = %d\n", t16z, t16dd,  t16z != t16dd);
print("%d != %d = %d\n", t16z, t16qq,  t16z != t16qq);
print("%d != %d = %d\n", t16z, t16cc,  t16z != t16cc);
print("%d != %d = %d\n", t16z, t16s,   t16z != t16s);
print("%d != %d = %d\n", t16z, t16n,   t16z != t16n);
print("%d < %d = %d\n", t16x, t16i8,  t16x < t16i8);
print("%d < %d = %d\n", t16x, t16u8,  t16x < t16u8);
print("%d < %d = %d\n", t16x, t16i16, t16x < t16i16);
print("%d < %d = %d\n", t16x, t16u16, t16x < t16u16);
print("%d < %d = %d\n", t16x, t16i32, t16x < t16i32);
print("%d < %d = %d\n", t16x, t16u32, t16x < t16u32);
print("%d < %d = %d\n", t16x, t16i64, t16x < t16i64);
print("%d < %d = %d\n", t16x, t16u64, t16x < t16u64);
print("%d < %d = %d\n", t16x, t16f32, t16x < t16f32);
print("%d < %d = %d\n", t16x, t16f64, t16x < t16f64);
print("%d < %d = %d\n", t16x, t16w,   t16x < t16w);
print("%d < %d = %d\n", t16x, t16f,   t16x < t16f);
print("%d < %d = %d\n", t16x, t16z,   t16x < t16z);
print("%d < %d = %d\n", t16x, t16x,   t16x < t16x);
print("%d < %d = %d\n", t16x, t16q,   t16x < t16q);
print("%d < %d = %d\n", t16x, t16r,   t16x < t16r);
print("%d < %d = %d\n", t16x, t16n,   t16x < t16n);
print("%d <= %d = %d\n", t16x, t16i8,  t16x <= t16i8);
print("%d <= %d = %d\n", t16x, t16u8,  t16x <= t16u8);
print("%d <= %d = %d\n", t16x, t16i16, t16x <= t16i16);
print("%d <= %d = %d\n", t16x, t16u16, t16x <= t16u16);
print("%d <= %d = %d\n", t16x, t16i32, t16x <= t16i32);
print("%d <= %d = %d\n", t16x, t16u32, t16x <= t16u32);
print("%d <= %d = %d\n", t16x, t16i64, t16x <= t16i64);
print("%d <= %d = %d\n", t16x, t16u64, t16x <= t16u64);
print("%d <= %d = %d\n", t16x, t16f32, t16x <= t16f32);
print("%d <= %d = %d\n", t16x, t16f64, t16x <= t16f64);
print("%d <= %d = %d\n", t16x, t16w,   t16x <= t16w);
print("%d <= %d = %d\n", t16x, t16f,   t16x <= t16f);
print("%d <= %d = %d\n", t16x, t16z,   t16x <= t16z);
print("%d <= %d = %d\n", t16x, t16x,   t16x <= t16x);
print("%d <= %d = %d\n", t16x, t16q,   t16x <= t16q);
print("%d <= %d = %d\n", t16x, t16r,   t16x <= t16r);
print("%d <= %d = %d\n", t16x, t16n,   t16x <= t16n);
print("%d == %d = %d\n", t16x, t16i8,  t16x == t16i8);
print("%d == %d = %d\n", t16x, t16u8,  t16x == t16u8);
print("%d == %d = %d\n", t16x, t16i16, t16x == t16i16);
print("%d == %d = %d\n", t16x, t16u16, t16x == t16u16);
print("%d == %d = %d\n", t16x, t16i32, t16x == t16i32);
print("%d == %d = %d\n", t16x, t16u32, t16x == t16u32);
print("%d == %d = %d\n", t16x, t16i64, t16x == t16i64);
print("%d == %d = %d\n", t16x, t16u64, t16x == t16u64);
print("%d == %d = %d\n", t16x, t16f32, t16x == t16f32);
print("%d == %d = %d\n", t16x, t16f64, t16x == t16f64);
print("%d == %d = %d\n", t16x, t16w,   t16x == t16w);
print("%d == %d = %d\n", t16x, t16f,   t16x == t16f);
print("%d == %d = %d\n", t16x, t16z,   t16x == t16z);
print("%d == %d = %d\n", t16x, t16x,   t16x == t16x);
print("%d == %d = %d\n", t16x, t16q,   t16x == t16q);
print("%d == %d = %d\n", t16x, t16r,   t16x == t16r);
print("%d == %d = %d\n", t16x, t16dd,  t16x == t16dd);
print("%d == %d = %d\n", t16x, t16qq,  t16x == t16qq);
print("%d == %d = %d\n", t16x, t16cc,  t16x == t16cc);
print("%d == %d = %d\n", t16x, t16s,   t16x == t16s);
print("%d == %d = %d\n", t16x, t16n,   t16x == t16n);
print("%d >= %d = %d\n", t16x, t16i8,  t16x >= t16i8);
print("%d >= %d = %d\n", t16x, t16u8,  t16x >= t16u8);
print("%d >= %d = %d\n", t16x, t16i16, t16x >= t16i16);
print("%d >= %d = %d\n", t16x, t16u16, t16x >= t16u16);
print("%d >= %d = %d\n", t16x, t16i32, t16x >= t16i32);
print("%d >= %d = %d\n", t16x, t16u32, t16x >= t16u32);
print("%d >= %d = %d\n", t16x, t16i64, t16x >= t16i64);
print("%d >= %d = %d\n", t16x, t16u64, t16x >= t16u64);
print("%d >= %d = %d\n", t16x, t16f32, t16x >= t16f32);
print("%d >= %d = %d\n", t16x, t16f64, t16x >= t16f64);
print("%d >= %d = %d\n", t16x, t16w,   t16x >= t16w);
print("%d >= %d = %d\n", t16x, t16f,   t16x >= t16f);
print("%d >= %d = %d\n", t16x, t16z,   t16x >= t16z);
print("%d >= %d = %d\n", t16x, t16x,   t16x >= t16x);
print("%d >= %d = %d\n", t16x, t16q,   t16x >= t16q);
print("%d >= %d = %d\n", t16x, t16r,   t16x >= t16r);
print("%d >= %d = %d\n", t16x, t16n,   t16x >= t16n);
print("%d > %d = %d\n", t16x, t16i8,  t16x > t16i8);
print("%d > %d = %d\n", t16x, t16u8,  t16x > t16u8);
print("%d > %d = %d\n", t16x, t16i16, t16x > t16i16);
print("%d > %d = %d\n", t16x, t16u16, t16x > t16u16);
print("%d > %d = %d\n", t16x, t16i32, t16x > t16i32);
print("%d > %d = %d\n", t16x, t16u32, t16x > t16u32);
print("%d > %d = %d\n", t16x, t16i64, t16x > t16i64);
print("%d > %d = %d\n", t16x, t16u64, t16x > t16u64);
print("%d > %d = %d\n", t16x, t16f32, t16x > t16f32);
print("%d > %d = %d\n", t16x, t16f64, t16x > t16f64);
print("%d > %d = %d\n", t16x, t16w,   t16x > t16w);
print("%d > %d = %d\n", t16x, t16f,   t16x > t16f);
print("%d > %d = %d\n", t16x, t16z,   t16x > t16z);
print("%d > %d = %d\n", t16x, t16x,   t16x > t16x);
print("%d > %d = %d\n", t16x, t16q,   t16x > t16q);
print("%d > %d = %d\n", t16x, t16r,   t16x > t16r);
print("%d > %d = %d\n", t16x, t16n,   t16x > t16n);
print("%d != %d = %d\n", t16x, t16i8,  t16x != t16i8);
print("%d != %d = %d\n", t16x, t16u8,  t16x != t16u8);
print("%d != %d = %d\n", t16x, t16i16, t16x != t16i16);
print("%d != %d = %d\n", t16x, t16u16, t16x != t16u16);
print("%d != %d = %d\n", t16x, t16i32, t16x != t16i32);
print("%d != %d = %d\n", t16x, t16u32, t16x != t16u32);
print("%d != %d = %d\n", t16x, t16i64, t16x != t16i64);
print("%d != %d = %d\n", t16x, t16u64, t16x != t16u64);
print("%d != %d = %d\n", t16x, t16f32, t16x != t16f32);
print("%d != %d = %d\n", t16x, t16f64, t16x != t16f64);
print("%d != %d = %d\n", t16x, t16w,   t16x != t16w);
print("%d != %d = %d\n", t16x, t16f,   t16x != t16f);
print("%d != %d = %d\n", t16x, t16z,   t16x != t16z);
print("%d != %d = %d\n", t16x, t16x,   t16x != t16x);
print("%d != %d = %d\n", t16x, t16q,   t16x != t16q);
print("%d != %d = %d\n", t16x, t16r,   t16x != t16r);
print("%d != %d = %d\n", t16x, t16dd,  t16x != t16dd);
print("%d != %d = %d\n", t16x, t16qq,  t16x != t16qq);
print("%d != %d = %d\n", t16x, t16cc,  t16x != t16cc);
print("%d != %d = %d\n", t16x, t16s,   t16x != t16s);
print("%d != %d = %d\n", t16x, t16n,   t16x != t16n);
print("%d < %d = %d\n", t16q, t16i8,  t16q < t16i8);
print("%d < %d = %d\n", t16q, t16u8,  t16q < t16u8);
print("%d < %d = %d\n", t16q, t16i16, t16q < t16i16);
print("%d < %d = %d\n", t16q, t16u16, t16q < t16u16);
print("%d < %d = %d\n", t16q, t16i32, t16q < t16i32);
print("%d < %d = %d\n", t16q, t16u32, t16q < t16u32);
print("%d < %d = %d\n", t16q, t16i64, t16q < t16i64);
print("%d < %d = %d\n", t16q, t16u64, t16q < t16u64);
print("%d < %d = %d\n", t16q, t16f32, t16q < t16f32);
print("%d < %d = %d\n", t16q, t16f64, t16q < t16f64);
print("%d < %d = %d\n", t16q, t16w,   t16q < t16w);
print("%d < %d = %d\n", t16q, t16f,   t16q < t16f);
print("%d < %d = %d\n", t16q, t16z,   t16q < t16z);
print("%d < %d = %d\n", t16q, t16x,   t16q < t16x);
print("%d < %d = %d\n", t16q, t16q,   t16q < t16q);
print("%d < %d = %d\n", t16q, t16r,   t16q < t16r);
print("%d < %d = %d\n", t16q, t16n,   t16q < t16n);
print("%d <= %d = %d\n", t16q, t16i8,  t16q <= t16i8);
print("%d <= %d = %d\n", t16q, t16u8,  t16q <= t16u8);
print("%d <= %d = %d\n", t16q, t16i16, t16q <= t16i16);
print("%d <= %d = %d\n", t16q, t16u16, t16q <= t16u16);
print("%d <= %d = %d\n", t16q, t16i32, t16q <= t16i32);
print("%d <= %d = %d\n", t16q, t16u32, t16q <= t16u32);
print("%d <= %d = %d\n", t16q, t16i64, t16q <= t16i64);
print("%d <= %d = %d\n", t16q, t16u64, t16q <= t16u64);
print("%d <= %d = %d\n", t16q, t16f32, t16q <= t16f32);
print("%d <= %d = %d\n", t16q, t16f64, t16q <= t16f64);
print("%d <= %d = %d\n", t16q, t16w,   t16q <= t16w);
print("%d <= %d = %d\n", t16q, t16f,   t16q <= t16f);
print("%d <= %d = %d\n", t16q, t16z,   t16q <= t16z);
print("%d <= %d = %d\n", t16q, t16x,   t16q <= t16x);
print("%d <= %d = %d\n", t16q, t16q,   t16q <= t16q);
print("%d <= %d = %d\n", t16q, t16r,   t16q <= t16r);
print("%d <= %d = %d\n", t16q, t16n,   t16q <= t16n);
print("%d == %d = %d\n", t16q, t16i8,  t16q == t16i8);
print("%d == %d = %d\n", t16q, t16u8,  t16q == t16u8);
print("%d == %d = %d\n", t16q, t16i16, t16q == t16i16);
print("%d == %d = %d\n", t16q, t16u16, t16q == t16u16);
print("%d == %d = %d\n", t16q, t16i32, t16q == t16i32);
print("%d == %d = %d\n", t16q, t16u32, t16q == t16u32);
print("%d == %d = %d\n", t16q, t16i64, t16q == t16i64);
print("%d == %d = %d\n", t16q, t16u64, t16q == t16u64);
print("%d == %d = %d\n", t16q, t16f32, t16q == t16f32);
print("%d == %d = %d\n", t16q, t16f64, t16q == t16f64);
print("%d == %d = %d\n", t16q, t16w,   t16q == t16w);
print("%d == %d = %d\n", t16q, t16f,   t16q == t16f);
print("%d == %d = %d\n", t16q, t16z,   t16q == t16z);
print("%d == %d = %d\n", t16q, t16x,   t16q == t16x);
print("%d == %d = %d\n", t16q, t16q,   t16q == t16q);
print("%d == %d = %d\n", t16q, t16r,   t16q == t16r);
print("%d == %d = %d\n", t16q, t16dd,  t16q == t16dd);
print("%d == %d = %d\n", t16q, t16qq,  t16q == t16qq);
print("%d == %d = %d\n", t16q, t16cc,  t16q == t16cc);
print("%d == %d = %d\n", t16q, t16s,   t16q == t16s);
print("%d == %d = %d\n", t16q, t16n,   t16q == t16n);
print("%d >= %d = %d\n", t16q, t16i8,  t16q >= t16i8);
print("%d >= %d = %d\n", t16q, t16u8,  t16q >= t16u8);
print("%d >= %d = %d\n", t16q, t16i16, t16q >= t16i16);
print("%d >= %d = %d\n", t16q, t16u16, t16q >= t16u16);
print("%d >= %d = %d\n", t16q, t16i32, t16q >= t16i32);
print("%d >= %d = %d\n", t16q, t16u32, t16q >= t16u32);
print("%d >= %d = %d\n", t16q, t16i64, t16q >= t16i64);
print("%d >= %d = %d\n", t16q, t16u64, t16q >= t16u64);
print("%d >= %d = %d\n", t16q, t16f32, t16q >= t16f32);
print("%d >= %d = %d\n", t16q, t16f64, t16q >= t16f64);
print("%d >= %d = %d\n", t16q, t16w,   t16q >= t16w);
print("%d >= %d = %d\n", t16q, t16f,   t16q >= t16f);
print("%d >= %d = %d\n", t16q, t16z,   t16q >= t16z);
print("%d >= %d = %d\n", t16q, t16x,   t16q >= t16x);
print("%d >= %d = %d\n", t16q, t16q,   t16q >= t16q);
print("%d >= %d = %d\n", t16q, t16r,   t16q >= t16r);
print("%d >= %d = %d\n", t16q, t16n,   t16q >= t16n);
print("%d > %d = %d\n", t16q, t16i8,  t16q > t16i8);
print("%d > %d = %d\n", t16q, t16u8,  t16q > t16u8);
print("%d > %d = %d\n", t16q, t16i16, t16q > t16i16);
print("%d > %d = %d\n", t16q, t16u16, t16q > t16u16);
print("%d > %d = %d\n", t16q, t16i32, t16q > t16i32);
print("%d > %d = %d\n", t16q, t16u32, t16q > t16u32);
print("%d > %d = %d\n", t16q, t16i64, t16q > t16i64);
print("%d > %d = %d\n", t16q, t16u64, t16q > t16u64);
print("%d > %d = %d\n", t16q, t16f32, t16q > t16f32);
print("%d > %d = %d\n", t16q, t16f64, t16q > t16f64);
print("%d > %d = %d\n", t16q, t16w,   t16q > t16w);
print("%d > %d = %d\n", t16q, t16f,   t16q > t16f);
print("%d > %d = %d\n", t16q, t16z,   t16q > t16z);
print("%d > %d = %d\n", t16q, t16x,   t16q > t16x);
print("%d > %d = %d\n", t16q, t16q,   t16q > t16q);
print("%d > %d = %d\n", t16q, t16r,   t16q > t16r);
print("%d > %d = %d\n", t16q, t16n,   t16q > t16n);
print("%d != %d = %d\n", t16q, t16i8,  t16q != t16i8);
print("%d != %d = %d\n", t16q, t16u8,  t16q != t16u8);
print("%d != %d = %d\n", t16q, t16i16, t16q != t16i16);
print("%d != %d = %d\n", t16q, t16u16, t16q != t16u16);
print("%d != %d = %d\n", t16q, t16i32, t16q != t16i32);
print("%d != %d = %d\n", t16q, t16u32, t16q != t16u32);
print("%d != %d = %d\n", t16q, t16i64, t16q != t16i64);
print("%d != %d = %d\n", t16q, t16u64, t16q != t16u64);
print("%d != %d = %d\n", t16q, t16f32, t16q != t16f32);
print("%d != %d = %d\n", t16q, t16f64, t16q != t16f64);
print("%d != %d = %d\n", t16q, t16w,   t16q != t16w);
print("%d != %d = %d\n", t16q, t16f,   t16q != t16f);
print("%d != %d = %d\n", t16q, t16z,   t16q != t16z);
print("%d != %d = %d\n", t16q, t16x,   t16q != t16x);
print("%d != %d = %d\n", t16q, t16q,   t16q != t16q);
print("%d != %d = %d\n", t16q, t16r,   t16q != t16r);
print("%d != %d = %d\n", t16q, t16dd,  t16q != t16dd);
print("%d != %d = %d\n", t16q, t16qq,  t16q != t16qq);
print("%d != %d = %d\n", t16q, t16cc,  t16q != t16cc);
print("%d != %d = %d\n", t16q, t16s,   t16q != t16s);
print("%d != %d = %d\n", t16q, t16n,   t16q != t16n);
print("%d < %d = %d\n", t16r, t16i8,  t16r < t16i8);
print("%d < %d = %d\n", t16r, t16u8,  t16r < t16u8);
print("%d < %d = %d\n", t16r, t16i16, t16r < t16i16);
print("%d < %d = %d\n", t16r, t16u16, t16r < t16u16);
print("%d < %d = %d\n", t16r, t16i32, t16r < t16i32);
print("%d < %d = %d\n", t16r, t16u32, t16r < t16u32);
print("%d < %d = %d\n", t16r, t16i64, t16r < t16i64);
print("%d < %d = %d\n", t16r, t16u64, t16r < t16u64);
print("%d < %d = %d\n", t16r, t16f32, t16r < t16f32);
print("%d < %d = %d\n", t16r, t16f64, t16r < t16f64);
print("%d < %d = %d\n", t16r, t16w,   t16r < t16w);
print("%d < %d = %d\n", t16r, t16f,   t16r < t16f);
print("%d < %d = %d\n", t16r, t16z,   t16r < t16z);
print("%d < %d = %d\n", t16r, t16x,   t16r < t16x);
print("%d < %d = %d\n", t16r, t16q,   t16r < t16q);
print("%d < %d = %d\n", t16r, t16r,   t16r < t16r);
print("%d < %d = %d\n", t16r, t16n,   t16r < t16n);
print("%d <= %d = %d\n", t16r, t16i8,  t16r <= t16i8);
print("%d <= %d = %d\n", t16r, t16u8,  t16r <= t16u8);
print("%d <= %d = %d\n", t16r, t16i16, t16r <= t16i16);
print("%d <= %d = %d\n", t16r, t16u16, t16r <= t16u16);
print("%d <= %d = %d\n", t16r, t16i32, t16r <= t16i32);
print("%d <= %d = %d\n", t16r, t16u32, t16r <= t16u32);
print("%d <= %d = %d\n", t16r, t16i64, t16r <= t16i64);
print("%d <= %d = %d\n", t16r, t16u64, t16r <= t16u64);
print("%d <= %d = %d\n", t16r, t16f32, t16r <= t16f32);
print("%d <= %d = %d\n", t16r, t16f64, t16r <= t16f64);
print("%d <= %d = %d\n", t16r, t16w,   t16r <= t16w);
print("%d <= %d = %d\n", t16r, t16f,   t16r <= t16f);
print("%d <= %d = %d\n", t16r, t16z,   t16r <= t16z);
print("%d <= %d = %d\n", t16r, t16x,   t16r <= t16x);
print("%d <= %d = %d\n", t16r, t16q,   t16r <= t16q);
print("%d <= %d = %d\n", t16r, t16r,   t16r <= t16r);
print("%d <= %d = %d\n", t16r, t16n,   t16r <= t16n);
print("%d == %d = %d\n", t16r, t16i8,  t16r == t16i8);
print("%d == %d = %d\n", t16r, t16u8,  t16r == t16u8);
print("%d == %d = %d\n", t16r, t16i16, t16r == t16i16);
print("%d == %d = %d\n", t16r, t16u16, t16r == t16u16);
print("%d == %d = %d\n", t16r, t16i32, t16r == t16i32);
print("%d == %d = %d\n", t16r, t16u32, t16r == t16u32);
print("%d == %d = %d\n", t16r, t16i64, t16r == t16i64);
print("%d == %d = %d\n", t16r, t16u64, t16r == t16u64);
print("%d == %d = %d\n", t16r, t16f32, t16r == t16f32);
print("%d == %d = %d\n", t16r, t16f64, t16r == t16f64);
print("%d == %d = %d\n", t16r, t16w,   t16r == t16w);
print("%d == %d = %d\n", t16r, t16f,   t16r == t16f);
print("%d == %d = %d\n", t16r, t16z,   t16r == t16z);
print("%d == %d = %d\n", t16r, t16x,   t16r == t16x);
print("%d == %d = %d\n", t16r, t16q,   t16r == t16q);
print("%d == %d = %d\n", t16r, t16r,   t16r == t16r);
print("%d == %d = %d\n", t16r, t16dd,  t16r == t16dd);
print("%d == %d = %d\n", t16r, t16qq,  t16r == t16qq);
print("%d == %d = %d\n", t16r, t16cc,  t16r == t16cc);
print("%d == %d = %d\n", t16r, t16s,   t16r == t16s);
print("%d == %d = %d\n", t16r, t16n,   t16r == t16n);
print("%d >= %d = %d\n", t16r, t16i8,  t16r >= t16i8);
print("%d >= %d = %d\n", t16r, t16u8,  t16r >= t16u8);
print("%d >= %d = %d\n", t16r, t16i16, t16r >= t16i16);
print("%d >= %d = %d\n", t16r, t16u16, t16r >= t16u16);
print("%d >= %d = %d\n", t16r, t16i32, t16r >= t16i32);
print("%d >= %d = %d\n", t16r, t16u32, t16r >= t16u32);
print("%d >= %d = %d\n", t16r, t16i64, t16r >= t16i64);
print("%d >= %d = %d\n", t16r, t16u64, t16r >= t16u64);
print("%d >= %d = %d\n", t16r, t16f32, t16r >= t16f32);
print("%d >= %d = %d\n", t16r, t16f64, t16r >= t16f64);
print("%d >= %d = %d\n", t16r, t16w,   t16r >= t16w);
print("%d >= %d = %d\n", t16r, t16f,   t16r >= t16f);
print("%d >= %d = %d\n", t16r, t16z,   t16r >= t16z);
print("%d >= %d = %d\n", t16r, t16x,   t16r >= t16x);
print("%d >= %d = %d\n", t16r, t16q,   t16r >= t16q);
print("%d >= %d = %d\n", t16r, t16r,   t16r >= t16r);
print("%d >= %d = %d\n", t16r, t16n,   t16r >= t16n);
print("%d > %d = %d\n", t16r, t16i8,  t16r > t16i8);
print("%d > %d = %d\n", t16r, t16u8,  t16r > t16u8);
print("%d > %d = %d\n", t16r, t16i16, t16r > t16i16);
print("%d > %d = %d\n", t16r, t16u16, t16r > t16u16);
print("%d > %d = %d\n", t16r, t16i32, t16r > t16i32);
print("%d > %d = %d\n", t16r, t16u32, t16r > t16u32);
print("%d > %d = %d\n", t16r, t16i64, t16r > t16i64);
print("%d > %d = %d\n", t16r, t16u64, t16r > t16u64);
print("%d > %d = %d\n", t16r, t16f32, t16r > t16f32);
print("%d > %d = %d\n", t16r, t16f64, t16r > t16f64);
print("%d > %d = %d\n", t16r, t16w,   t16r > t16w);
print("%d > %d = %d\n", t16r, t16f,   t16r > t16f);
print("%d > %d = %d\n", t16r, t16z,   t16r > t16z);
print("%d > %d = %d\n", t16r, t16x,   t16r > t16x);
print("%d > %d = %d\n", t16r, t16q,   t16r > t16q);
print("%d > %d = %d\n", t16r, t16r,   t16r > t16r);
print("%d > %d = %d\n", t16r, t16n,   t16r > t16n);
print("%d != %d = %d\n", t16r, t16i8,  t16r != t16i8);
print("%d != %d = %d\n", t16r, t16u8,  t16r != t16u8);
print("%d != %d = %d\n", t16r, t16i16, t16r != t16i16);
print("%d != %d = %d\n", t16r, t16u16, t16r != t16u16);
print("%d != %d = %d\n", t16r, t16i32, t16r != t16i32);
print("%d != %d = %d\n", t16r, t16u32, t16r != t16u32);
print("%d != %d = %d\n", t16r, t16i64, t16r != t16i64);
print("%d != %d = %d\n", t16r, t16u64, t16r != t16u64);
print("%d != %d = %d\n", t16r, t16f32, t16r != t16f32);
print("%d != %d = %d\n", t16r, t16f64, t16r != t16f64);
print("%d != %d = %d\n", t16r, t16w,   t16r != t16w);
print("%d != %d = %d\n", t16r, t16f,   t16r != t16f);
print("%d != %d = %d\n", t16r, t16z,   t16r != t16z);
print("%d != %d = %d\n", t16r, t16x,   t16r != t16x);
print("%d != %d = %d\n", t16r, t16q,   t16r != t16q);
print("%d != %d = %d\n", t16r, t16r,   t16r != t16r);
print("%d != %d = %d\n", t16r, t16dd,  t16r != t16dd);
print("%d != %d = %d\n", t16r, t16qq,  t16r != t16qq);
print("%d != %d = %d\n", t16r, t16cc,  t16r != t16cc);
print("%d != %d = %d\n", t16r, t16s,   t16r != t16s);
print("%d != %d = %d\n", t16r, t16n,   t16r != t16n);
print("%d == %d = %d\n", t16dd, t16i8,  t16dd == t16i8);
print("%d == %d = %d\n", t16dd, t16u8,  t16dd == t16u8);
print("%d == %d = %d\n", t16dd, t16i16, t16dd == t16i16);
print("%d == %d = %d\n", t16dd, t16u16, t16dd == t16u16);
print("%d == %d = %d\n", t16dd, t16i32, t16dd == t16i32);
print("%d == %d = %d\n", t16dd, t16u32, t16dd == t16u32);
print("%d == %d = %d\n", t16dd, t16i64, t16dd == t16i64);
print("%d == %d = %d\n", t16dd, t16u64, t16dd == t16u64);
print("%d == %d = %d\n", t16dd, t16f32, t16dd == t16f32);
print("%d == %d = %d\n", t16dd, t16f64, t16dd == t16f64);
print("%d == %d = %d\n", t16dd, t16w,   t16dd == t16w);
print("%d == %d = %d\n", t16dd, t16f,   t16dd == t16f);
print("%d == %d = %d\n", t16dd, t16z,   t16dd == t16z);
print("%d == %d = %d\n", t16dd, t16x,   t16dd == t16x);
print("%d == %d = %d\n", t16dd, t16q,   t16dd == t16q);
print("%d == %d = %d\n", t16dd, t16r,   t16dd == t16r);
print("%d == %d = %d\n", t16dd, t16dd,  t16dd == t16dd);
print("%d == %d = %d\n", t16dd, t16qq,  t16dd == t16qq);
print("%d == %d = %d\n", t16dd, t16cc,  t16dd == t16cc);
print("%d == %d = %d\n", t16dd, t16s,   t16dd == t16s);
print("%d == %d = %d\n", t16dd, t16n,   t16dd == t16n);
print("%d != %d = %d\n", t16dd, t16i8,  t16dd != t16i8);
print("%d != %d = %d\n", t16dd, t16u8,  t16dd != t16u8);
print("%d != %d = %d\n", t16dd, t16i16, t16dd != t16i16);
print("%d != %d = %d\n", t16dd, t16u16, t16dd != t16u16);
print("%d != %d = %d\n", t16dd, t16i32, t16dd != t16i32);
print("%d != %d = %d\n", t16dd, t16u32, t16dd != t16u32);
print("%d != %d = %d\n", t16dd, t16i64, t16dd != t16i64);
print("%d != %d = %d\n", t16dd, t16u64, t16dd != t16u64);
print("%d != %d = %d\n", t16dd, t16f32, t16dd != t16f32);
print("%d != %d = %d\n", t16dd, t16f64, t16dd != t16f64);
print("%d != %d = %d\n", t16dd, t16w,   t16dd != t16w);
print("%d != %d = %d\n", t16dd, t16f,   t16dd != t16f);
print("%d != %d = %d\n", t16dd, t16z,   t16dd != t16z);
print("%d != %d = %d\n", t16dd, t16x,   t16dd != t16x);
print("%d != %d = %d\n", t16dd, t16q,   t16dd != t16q);
print("%d != %d = %d\n", t16dd, t16r,   t16dd != t16r);
print("%d != %d = %d\n", t16dd, t16dd,  t16dd != t16dd);
print("%d != %d = %d\n", t16dd, t16qq,  t16dd != t16qq);
print("%d != %d = %d\n", t16dd, t16cc,  t16dd != t16cc);
print("%d != %d = %d\n", t16dd, t16s,   t16dd != t16s);
print("%d != %d = %d\n", t16dd, t16n,   t16dd != t16n);
print("%d == %d = %d\n", t16qq, t16i8,  t16qq == t16i8);
print("%d == %d = %d\n", t16qq, t16u8,  t16qq == t16u8);
print("%d == %d = %d\n", t16qq, t16i16, t16qq == t16i16);
print("%d == %d = %d\n", t16qq, t16u16, t16qq == t16u16);
print("%d == %d = %d\n", t16qq, t16i32, t16qq == t16i32);
print("%d == %d = %d\n", t16qq, t16u32, t16qq == t16u32);
print("%d == %d = %d\n", t16qq, t16i64, t16qq == t16i64);
print("%d == %d = %d\n", t16qq, t16u64, t16qq == t16u64);
print("%d == %d = %d\n", t16qq, t16f32, t16qq == t16f32);
print("%d == %d = %d\n", t16qq, t16f64, t16qq == t16f64);
print("%d == %d = %d\n", t16qq, t16w,   t16qq == t16w);
print("%d == %d = %d\n", t16qq, t16f,   t16qq == t16f);
print("%d == %d = %d\n", t16qq, t16z,   t16qq == t16z);
print("%d == %d = %d\n", t16qq, t16x,   t16qq == t16x);
print("%d == %d = %d\n", t16qq, t16q,   t16qq == t16q);
print("%d == %d = %d\n", t16qq, t16r,   t16qq == t16r);
print("%d == %d = %d\n", t16qq, t16dd,  t16qq == t16dd);
print("%d == %d = %d\n", t16qq, t16qq,  t16qq == t16qq);
print("%d == %d = %d\n", t16qq, t16cc,  t16qq == t16cc);
print("%d == %d = %d\n", t16qq, t16s,   t16qq == t16s);
print("%d == %d = %d\n", t16qq, t16n,   t16qq == t16n);
print("%d != %d = %d\n", t16qq, t16i8,  t16qq != t16i8);
print("%d != %d = %d\n", t16qq, t16u8,  t16qq != t16u8);
print("%d != %d = %d\n", t16qq, t16i16, t16qq != t16i16);
print("%d != %d = %d\n", t16qq, t16u16, t16qq != t16u16);
print("%d != %d = %d\n", t16qq, t16i32, t16qq != t16i32);
print("%d != %d = %d\n", t16qq, t16u32, t16qq != t16u32);
print("%d != %d = %d\n", t16qq, t16i64, t16qq != t16i64);
print("%d != %d = %d\n", t16qq, t16u64, t16qq != t16u64);
print("%d != %d = %d\n", t16qq, t16f32, t16qq != t16f32);
print("%d != %d = %d\n", t16qq, t16f64, t16qq != t16f64);
print("%d != %d = %d\n", t16qq, t16w,   t16qq != t16w);
print("%d != %d = %d\n", t16qq, t16f,   t16qq != t16f);
print("%d != %d = %d\n", t16qq, t16z,   t16qq != t16z);
print("%d != %d = %d\n", t16qq, t16x,   t16qq != t16x);
print("%d != %d = %d\n", t16qq, t16q,   t16qq != t16q);
print("%d != %d = %d\n", t16qq, t16r,   t16qq != t16r);
print("%d != %d = %d\n", t16qq, t16dd,  t16qq != t16dd);
print("%d != %d = %d\n", t16qq, t16qq,  t16qq != t16qq);
print("%d != %d = %d\n", t16qq, t16cc,  t16qq != t16cc);
print("%d != %d = %d\n", t16qq, t16s,   t16qq != t16s);
print("%d != %d = %d\n", t16qq, t16n,   t16qq != t16n);
print("%d == %d = %d\n", t16cc, t16i8,  t16cc == t16i8);
print("%d == %d = %d\n", t16cc, t16u8,  t16cc == t16u8);
print("%d == %d = %d\n", t16cc, t16i16, t16cc == t16i16);
print("%d == %d = %d\n", t16cc, t16u16, t16cc == t16u16);
print("%d == %d = %d\n", t16cc, t16i32, t16cc == t16i32);
print("%d == %d = %d\n", t16cc, t16u32, t16cc == t16u32);
print("%d == %d = %d\n", t16cc, t16i64, t16cc == t16i64);
print("%d == %d = %d\n", t16cc, t16u64, t16cc == t16u64);
print("%d == %d = %d\n", t16cc, t16f32, t16cc == t16f32);
print("%d == %d = %d\n", t16cc, t16f64, t16cc == t16f64);
print("%d == %d = %d\n", t16cc, t16w,   t16cc == t16w);
print("%d == %d = %d\n", t16cc, t16f,   t16cc == t16f);
print("%d == %d = %d\n", t16cc, t16z,   t16cc == t16z);
print("%d == %d = %d\n", t16cc, t16x,   t16cc == t16x);
print("%d == %d = %d\n", t16cc, t16q,   t16cc == t16q);
print("%d == %d = %d\n", t16cc, t16r,   t16cc == t16r);
print("%d == %d = %d\n", t16cc, t16dd,  t16cc == t16dd);
print("%d == %d = %d\n", t16cc, t16qq,  t16cc == t16qq);
print("%d == %d = %d\n", t16cc, t16cc,  t16cc == t16cc);
print("%d == %d = %d\n", t16cc, t16s,   t16cc == t16s);
print("%d == %d = %d\n", t16cc, t16n,   t16cc == t16n);
print("%d != %d = %d\n", t16cc, t16i8,  t16cc != t16i8);
print("%d != %d = %d\n", t16cc, t16u8,  t16cc != t16u8);
print("%d != %d = %d\n", t16cc, t16i16, t16cc != t16i16);
print("%d != %d = %d\n", t16cc, t16u16, t16cc != t16u16);
print("%d != %d = %d\n", t16cc, t16i32, t16cc != t16i32);
print("%d != %d = %d\n", t16cc, t16u32, t16cc != t16u32);
print("%d != %d = %d\n", t16cc, t16i64, t16cc != t16i64);
print("%d != %d = %d\n", t16cc, t16u64, t16cc != t16u64);
print("%d != %d = %d\n", t16cc, t16f32, t16cc != t16f32);
print("%d != %d = %d\n", t16cc, t16f64, t16cc != t16f64);
print("%d != %d = %d\n", t16cc, t16w,   t16cc != t16w);
print("%d != %d = %d\n", t16cc, t16f,   t16cc != t16f);
print("%d != %d = %d\n", t16cc, t16z,   t16cc != t16z);
print("%d != %d = %d\n", t16cc, t16x,   t16cc != t16x);
print("%d != %d = %d\n", t16cc, t16q,   t16cc != t16q);
print("%d != %d = %d\n", t16cc, t16r,   t16cc != t16r);
print("%d != %d = %d\n", t16cc, t16dd,  t16cc != t16dd);
print("%d != %d = %d\n", t16cc, t16qq,  t16cc != t16qq);
print("%d != %d = %d\n", t16cc, t16cc,  t16cc != t16cc);
print("%d != %d = %d\n", t16cc, t16s,   t16cc != t16s);
print("%d != %d = %d\n", t16cc, t16n,   t16cc != t16n);
print("%d == %d = %d\n", t16s, t16i8,  t16s == t16i8);
print("%d == %d = %d\n", t16s, t16u8,  t16s == t16u8);
print("%d == %d = %d\n", t16s, t16i16, t16s == t16i16);
print("%d == %d = %d\n", t16s, t16u16, t16s == t16u16);
print("%d == %d = %d\n", t16s, t16i32, t16s == t16i32);
print("%d == %d = %d\n", t16s, t16u32, t16s == t16u32);
print("%d == %d = %d\n", t16s, t16i64, t16s == t16i64);
print("%d == %d = %d\n", t16s, t16u64, t16s == t16u64);
print("%d == %d = %d\n", t16s, t16f32, t16s == t16f32);
print("%d == %d = %d\n", t16s, t16f64, t16s == t16f64);
print("%d == %d = %d\n", t16s, t16w,   t16s == t16w);
print("%d == %d = %d\n", t16s, t16f,   t16s == t16f);
print("%d == %d = %d\n", t16s, t16z,   t16s == t16z);
print("%d == %d = %d\n", t16s, t16x,   t16s == t16x);
print("%d == %d = %d\n", t16s, t16q,   t16s == t16q);
print("%d == %d = %d\n", t16s, t16r,   t16s == t16r);
print("%d == %d = %d\n", t16s, t16dd,  t16s == t16dd);
print("%d == %d = %d\n", t16s, t16qq,  t16s == t16qq);
print("%d == %d = %d\n", t16s, t16cc,  t16s == t16cc);
print("%d == %d = %d\n", t16s, t16s,   t16s == t16s);
print("%d == %d = %d\n", t16s, t16n,   t16s == t16n);
print("%d != %d = %d\n", t16s, t16i8,  t16s != t16i8);
print("%d != %d = %d\n", t16s, t16u8,  t16s != t16u8);
print("%d != %d = %d\n", t16s, t16i16, t16s != t16i16);
print("%d != %d = %d\n", t16s, t16u16, t16s != t16u16);
print("%d != %d = %d\n", t16s, t16i32, t16s != t16i32);
print("%d != %d = %d\n", t16s, t16u32, t16s != t16u32);
print("%d != %d = %d\n", t16s, t16i64, t16s != t16i64);
print("%d != %d = %d\n", t16s, t16u64, t16s != t16u64);
print("%d != %d = %d\n", t16s, t16f32, t16s != t16f32);
print("%d != %d = %d\n", t16s, t16f64, t16s != t16f64);
print("%d != %d = %d\n", t16s, t16w,   t16s != t16w);
print("%d != %d = %d\n", t16s, t16f,   t16s != t16f);
print("%d != %d = %d\n", t16s, t16z,   t16s != t16z);
print("%d != %d = %d\n", t16s, t16x,   t16s != t16x);
print("%d != %d = %d\n", t16s, t16q,   t16s != t16q);
print("%d != %d = %d\n", t16s, t16r,   t16s != t16r);
print("%d != %d = %d\n", t16s, t16dd,  t16s != t16dd);
print("%d != %d = %d\n", t16s, t16qq,  t16s != t16qq);
print("%d != %d = %d\n", t16s, t16cc,  t16s != t16cc);
print("%d != %d = %d\n", t16s, t16s,   t16s != t16s);
print("%d != %d = %d\n", t16s, t16n,   t16s != t16n);
print("%d < %d = %d\n", t16n, t16i8,  t16n < t16i8);
print("%d < %d = %d\n", t16n, t16u8,  t16n < t16u8);
print("%d < %d = %d\n", t16n, t16i16, t16n < t16i16);
print("%d < %d = %d\n", t16n, t16u16, t16n < t16u16);
print("%d < %d = %d\n", t16n, t16i32, t16n < t16i32);
print("%d < %d = %d\n", t16n, t16u32, t16n < t16u32);
print("%d < %d = %d\n", t16n, t16i64, t16n < t16i64);
print("%d < %d = %d\n", t16n, t16u64, t16n < t16u64);
print("%d < %d = %d\n", t16n, t16f32, t16n < t16f32);
print("%d < %d = %d\n", t16n, t16f64, t16n < t16f64);
print("%d < %d = %d\n", t16n, t16w,   t16n < t16w);
print("%d < %d = %d\n", t16n, t16f,   t16n < t16f);
print("%d < %d = %d\n", t16n, t16z,   t16n < t16z);
print("%d < %d = %d\n", t16n, t16x,   t16n < t16x);
print("%d < %d = %d\n", t16n, t16q,   t16n < t16q);
print("%d < %d = %d\n", t16n, t16r,   t16n < t16r);
print("%d < %d = %d\n", t16n, t16n,   t16n < t16n);
print("%d <= %d = %d\n", t16n, t16i8,  t16n <= t16i8);
print("%d <= %d = %d\n", t16n, t16u8,  t16n <= t16u8);
print("%d <= %d = %d\n", t16n, t16i16, t16n <= t16i16);
print("%d <= %d = %d\n", t16n, t16u16, t16n <= t16u16);
print("%d <= %d = %d\n", t16n, t16i32, t16n <= t16i32);
print("%d <= %d = %d\n", t16n, t16u32, t16n <= t16u32);
print("%d <= %d = %d\n", t16n, t16i64, t16n <= t16i64);
print("%d <= %d = %d\n", t16n, t16u64, t16n <= t16u64);
print("%d <= %d = %d\n", t16n, t16f32, t16n <= t16f32);
print("%d <= %d = %d\n", t16n, t16f64, t16n <= t16f64);
print("%d <= %d = %d\n", t16n, t16w,   t16n <= t16w);
print("%d <= %d = %d\n", t16n, t16f,   t16n <= t16f);
print("%d <= %d = %d\n", t16n, t16z,   t16n <= t16z);
print("%d <= %d = %d\n", t16n, t16x,   t16n <= t16x);
print("%d <= %d = %d\n", t16n, t16q,   t16n <= t16q);
print("%d <= %d = %d\n", t16n, t16r,   t16n <= t16r);
print("%d <= %d = %d\n", t16n, t16n,   t16n <= t16n);
print("%d == %d = %d\n", t16n, t16i8,  t16n == t16i8);
print("%d == %d = %d\n", t16n, t16u8,  t16n == t16u8);
print("%d == %d = %d\n", t16n, t16i16, t16n == t16i16);
print("%d == %d = %d\n", t16n, t16u16, t16n == t16u16);
print("%d == %d = %d\n", t16n, t16i32, t16n == t16i32);
print("%d == %d = %d\n", t16n, t16u32, t16n == t16u32);
print("%d == %d = %d\n", t16n, t16i64, t16n == t16i64);
print("%d == %d = %d\n", t16n, t16u64, t16n == t16u64);
print("%d == %d = %d\n", t16n, t16f32, t16n == t16f32);
print("%d == %d = %d\n", t16n, t16f64, t16n == t16f64);
print("%d == %d = %d\n", t16n, t16w,   t16n == t16w);
print("%d == %d = %d\n", t16n, t16f,   t16n == t16f);
print("%d == %d = %d\n", t16n, t16z,   t16n == t16z);
print("%d == %d = %d\n", t16n, t16x,   t16n == t16x);
print("%d == %d = %d\n", t16n, t16q,   t16n == t16q);
print("%d == %d = %d\n", t16n, t16r,   t16n == t16r);
print("%d == %d = %d\n", t16n, t16dd,  t16n == t16dd);
print("%d == %d = %d\n", t16n, t16qq,  t16n == t16qq);
print("%d == %d = %d\n", t16n, t16cc,  t16n == t16cc);
print("%d == %d = %d\n", t16n, t16s,   t16n == t16s);
print("%d == %d = %d\n", t16n, t16n,   t16n == t16n);
print("%d >= %d = %d\n", t16n, t16i8,  t16n >= t16i8);
print("%d >= %d = %d\n", t16n, t16u8,  t16n >= t16u8);
print("%d >= %d = %d\n", t16n, t16i16, t16n >= t16i16);
print("%d >= %d = %d\n", t16n, t16u16, t16n >= t16u16);
print("%d >= %d = %d\n", t16n, t16i32, t16n >= t16i32);
print("%d >= %d = %d\n", t16n, t16u32, t16n >= t16u32);
print("%d >= %d = %d\n", t16n, t16i64, t16n >= t16i64);
print("%d >= %d = %d\n", t16n, t16u64, t16n >= t16u64);
print("%d >= %d = %d\n", t16n, t16f32, t16n >= t16f32);
print("%d >= %d = %d\n", t16n, t16f64, t16n >= t16f64);
print("%d >= %d = %d\n", t16n, t16w,   t16n >= t16w);
print("%d >= %d = %d\n", t16n, t16f,   t16n >= t16f);
print("%d >= %d = %d\n", t16n, t16z,   t16n >= t16z);
print("%d >= %d = %d\n", t16n, t16x,   t16n >= t16x);
print("%d >= %d = %d\n", t16n, t16q,   t16n >= t16q);
print("%d >= %d = %d\n", t16n, t16r,   t16n >= t16r);
print("%d >= %d = %d\n", t16n, t16n,   t16n >= t16n);
print("%d > %d = %d\n", t16n, t16i8,  t16n > t16i8);
print("%d > %d = %d\n", t16n, t16u8,  t16n > t16u8);
print("%d > %d = %d\n", t16n, t16i16, t16n > t16i16);
print("%d > %d = %d\n", t16n, t16u16, t16n > t16u16);
print("%d > %d = %d\n", t16n, t16i32, t16n > t16i32);
print("%d > %d = %d\n", t16n, t16u32, t16n > t16u32);
print("%d > %d = %d\n", t16n, t16i64, t16n > t16i64);
print("%d > %d = %d\n", t16n, t16u64, t16n > t16u64);
print("%d > %d = %d\n", t16n, t16f32, t16n > t16f32);
print("%d > %d = %d\n", t16n, t16f64, t16n > t16f64);
print("%d > %d = %d\n", t16n, t16w,   t16n > t16w);
print("%d > %d = %d\n", t16n, t16f,   t16n > t16f);
print("%d > %d = %d\n", t16n, t16z,   t16n > t16z);
print("%d > %d = %d\n", t16n, t16x,   t16n > t16x);
print("%d > %d = %d\n", t16n, t16q,   t16n > t16q);
print("%d > %d = %d\n", t16n, t16r,   t16n > t16r);
print("%d > %d = %d\n", t16n, t16n,   t16n > t16n);
print("%d != %d = %d\n", t16n, t16i8,  t16n != t16i8);
print("%d != %d = %d\n", t16n, t16u8,  t16n != t16u8);
print("%d != %d = %d\n", t16n, t16i16, t16n != t16i16);
print("%d != %d = %d\n", t16n, t16u16, t16n != t16u16);
print("%d != %d = %d\n", t16n, t16i32, t16n != t16i32);
print("%d != %d = %d\n", t16n, t16u32, t16n != t16u32);
print("%d != %d = %d\n", t16n, t16i64, t16n != t16i64);
print("%d != %d = %d\n", t16n, t16u64, t16n != t16u64);
print("%d != %d = %d\n", t16n, t16f32, t16n != t16f32);
print("%d != %d = %d\n", t16n, t16f64, t16n != t16f64);
print("%d != %d = %d\n", t16n, t16w,   t16n != t16w);
print("%d != %d = %d\n", t16n, t16f,   t16n != t16f);
print("%d != %d = %d\n", t16n, t16z,   t16n != t16z);
print("%d != %d = %d\n", t16n, t16x,   t16n != t16x);
print("%d != %d = %d\n", t16n, t16q,   t16n != t16q);
print("%d != %d = %d\n", t16n, t16r,   t16n != t16r);
print("%d != %d = %d\n", t16n, t16dd,  t16n != t16dd);
print("%d != %d = %d\n", t16n, t16qq,  t16n != t16qq);
print("%d != %d = %d\n", t16n, t16cc,  t16n != t16cc);
print("%d != %d = %d\n", t16n, t16s,   t16n != t16s);
print("%d != %d = %d\n", t16n, t16n,   t16n != t16n);

int8_t		t17i8  = -9;
uint8_t		t17u8  =  9;
int16_t		t17i16 = -17;
uint16_t	t17u16 =  17;
int32_t		t17i32 = -33;
uint32_t	t17u32 =  33;
int64_t		t17i64 = -65;
uint64_t	t17u64 =  65;
auto		t17w   =  41;
auto		t17z   =  0x800000000000000000000000000000001;
auto		t17n   =  null;
print("%d & %d = %d\n", t17i8, t17i8,  t17i8 & t17i8);
print("%d & %d = %d\n", t17i8, t17u8,  t17i8 & t17u8);
print("%d & %d = %d\n", t17i8, t17i16, t17i8 & t17i16);
print("%d & %d = %d\n", t17i8, t17u16, t17i8 & t17u16);
print("%d & %d = %d\n", t17i8, t17i32, t17i8 & t17i32);
print("%d & %d = %d\n", t17i8, t17u32, t17i8 & t17u32);
print("%d & %d = %d\n", t17i8, t17i64, t17i8 & t17i64);
print("%d & %d = %d\n", t17i8, t17u64, t17i8 & t17u64);
print("%d & %d = %d\n", t17i8, t17w,   t17i8 & t17w);
print("%d & %d = %d\n", t17i8, t17z,   t17i8 & t17z);
print("%d & %d = %d\n", t17i8, t17n,   t17i8 & t17n);
print("%d | %d = %d\n", t17i8, t17i8,  t17i8 | t17i8);
print("%d | %d = %d\n", t17i8, t17u8,  t17i8 | t17u8);
print("%d | %d = %d\n", t17i8, t17i16, t17i8 | t17i16);
print("%d | %d = %d\n", t17i8, t17u16, t17i8 | t17u16);
print("%d | %d = %d\n", t17i8, t17i32, t17i8 | t17i32);
print("%d | %d = %d\n", t17i8, t17u32, t17i8 | t17u32);
print("%d | %d = %d\n", t17i8, t17i64, t17i8 | t17i64);
print("%d | %d = %d\n", t17i8, t17u64, t17i8 | t17u64);
print("%d | %d = %d\n", t17i8, t17w,   t17i8 | t17w);
print("%d | %d = %d\n", t17i8, t17z,   t17i8 | t17z);
print("%d | %d = %d\n", t17i8, t17n,   t17i8 | t17n);
print("%d ^ %d = %d\n", t17i8, t17i8,  t17i8 ^ t17i8);
print("%d ^ %d = %d\n", t17i8, t17u8,  t17i8 ^ t17u8);
print("%d ^ %d = %d\n", t17i8, t17i16, t17i8 ^ t17i16);
print("%d ^ %d = %d\n", t17i8, t17u16, t17i8 ^ t17u16);
print("%d ^ %d = %d\n", t17i8, t17i32, t17i8 ^ t17i32);
print("%d ^ %d = %d\n", t17i8, t17u32, t17i8 ^ t17u32);
print("%d ^ %d = %d\n", t17i8, t17i64, t17i8 ^ t17i64);
print("%d ^ %d = %d\n", t17i8, t17u64, t17i8 ^ t17u64);
print("%d ^ %d = %d\n", t17i8, t17w,   t17i8 ^ t17w);
print("%d ^ %d = %d\n", t17i8, t17z,   t17i8 ^ t17z);
print("%d ^ %d = %d\n", t17i8, t17n,   t17i8 ^ t17n);
print("%d & %d = %d\n", t17u8, t17i8,  t17u8 & t17i8);
print("%d & %d = %d\n", t17u8, t17u8,  t17u8 & t17u8);
print("%d & %d = %d\n", t17u8, t17i16, t17u8 & t17i16);
print("%d & %d = %d\n", t17u8, t17u16, t17u8 & t17u16);
print("%d & %d = %d\n", t17u8, t17i32, t17u8 & t17i32);
print("%d & %d = %d\n", t17u8, t17u32, t17u8 & t17u32);
print("%d & %d = %d\n", t17u8, t17i64, t17u8 & t17i64);
print("%d & %d = %d\n", t17u8, t17u64, t17u8 & t17u64);
print("%d & %d = %d\n", t17u8, t17w,   t17u8 & t17w);
print("%d & %d = %d\n", t17u8, t17z,   t17u8 & t17z);
print("%d & %d = %d\n", t17u8, t17n,   t17u8 & t17n);
print("%d | %d = %d\n", t17u8, t17i8,  t17u8 | t17i8);
print("%d | %d = %d\n", t17u8, t17u8,  t17u8 | t17u8);
print("%d | %d = %d\n", t17u8, t17i16, t17u8 | t17i16);
print("%d | %d = %d\n", t17u8, t17u16, t17u8 | t17u16);
print("%d | %d = %d\n", t17u8, t17i32, t17u8 | t17i32);
print("%d | %d = %d\n", t17u8, t17u32, t17u8 | t17u32);
print("%d | %d = %d\n", t17u8, t17i64, t17u8 | t17i64);
print("%d | %d = %d\n", t17u8, t17u64, t17u8 | t17u64);
print("%d | %d = %d\n", t17u8, t17w,   t17u8 | t17w);
print("%d | %d = %d\n", t17u8, t17z,   t17u8 | t17z);
print("%d | %d = %d\n", t17u8, t17n,   t17u8 | t17n);
print("%d ^ %d = %d\n", t17u8, t17i8,  t17u8 ^ t17i8);
print("%d ^ %d = %d\n", t17u8, t17u8,  t17u8 ^ t17u8);
print("%d ^ %d = %d\n", t17u8, t17i16, t17u8 ^ t17i16);
print("%d ^ %d = %d\n", t17u8, t17u16, t17u8 ^ t17u16);
print("%d ^ %d = %d\n", t17u8, t17i32, t17u8 ^ t17i32);
print("%d ^ %d = %d\n", t17u8, t17u32, t17u8 ^ t17u32);
print("%d ^ %d = %d\n", t17u8, t17i64, t17u8 ^ t17i64);
print("%d ^ %d = %d\n", t17u8, t17u64, t17u8 ^ t17u64);
print("%d ^ %d = %d\n", t17u8, t17w,   t17u8 ^ t17w);
print("%d ^ %d = %d\n", t17u8, t17z,   t17u8 ^ t17z);
print("%d ^ %d = %d\n", t17u8, t17n,   t17u8 ^ t17n);
print("%d & %d = %d\n", t17i16, t17i8,  t17i16 & t17i8);
print("%d & %d = %d\n", t17i16, t17u8,  t17i16 & t17u8);
print("%d & %d = %d\n", t17i16, t17i16, t17i16 & t17i16);
print("%d & %d = %d\n", t17i16, t17u16, t17i16 & t17u16);
print("%d & %d = %d\n", t17i16, t17i32, t17i16 & t17i32);
print("%d & %d = %d\n", t17i16, t17u32, t17i16 & t17u32);
print("%d & %d = %d\n", t17i16, t17i64, t17i16 & t17i64);
print("%d & %d = %d\n", t17i16, t17u64, t17i16 & t17u64);
print("%d & %d = %d\n", t17i16, t17w,   t17i16 & t17w);
print("%d & %d = %d\n", t17i16, t17z,   t17i16 & t17z);
print("%d & %d = %d\n", t17i16, t17n,   t17i16 & t17n);
print("%d | %d = %d\n", t17i16, t17i8,  t17i16 | t17i8);
print("%d | %d = %d\n", t17i16, t17u8,  t17i16 | t17u8);
print("%d | %d = %d\n", t17i16, t17i16, t17i16 | t17i16);
print("%d | %d = %d\n", t17i16, t17u16, t17i16 | t17u16);
print("%d | %d = %d\n", t17i16, t17i32, t17i16 | t17i32);
print("%d | %d = %d\n", t17i16, t17u32, t17i16 | t17u32);
print("%d | %d = %d\n", t17i16, t17i64, t17i16 | t17i64);
print("%d | %d = %d\n", t17i16, t17u64, t17i16 | t17u64);
print("%d | %d = %d\n", t17i16, t17w,   t17i16 | t17w);
print("%d | %d = %d\n", t17i16, t17z,   t17i16 | t17z);
print("%d | %d = %d\n", t17i16, t17n,   t17i16 | t17n);
print("%d ^ %d = %d\n", t17i16, t17i8,  t17i16 ^ t17i8);
print("%d ^ %d = %d\n", t17i16, t17u8,  t17i16 ^ t17u8);
print("%d ^ %d = %d\n", t17i16, t17i16, t17i16 ^ t17i16);
print("%d ^ %d = %d\n", t17i16, t17u16, t17i16 ^ t17u16);
print("%d ^ %d = %d\n", t17i16, t17i32, t17i16 ^ t17i32);
print("%d ^ %d = %d\n", t17i16, t17u32, t17i16 ^ t17u32);
print("%d ^ %d = %d\n", t17i16, t17i64, t17i16 ^ t17i64);
print("%d ^ %d = %d\n", t17i16, t17u64, t17i16 ^ t17u64);
print("%d ^ %d = %d\n", t17i16, t17w,   t17i16 ^ t17w);
print("%d ^ %d = %d\n", t17i16, t17z,   t17i16 ^ t17z);
print("%d ^ %d = %d\n", t17i16, t17n,   t17i16 ^ t17n);
print("%d & %d = %d\n", t17u16, t17i8,  t17u16 & t17i8);
print("%d & %d = %d\n", t17u16, t17u8,  t17u16 & t17u8);
print("%d & %d = %d\n", t17u16, t17i16, t17u16 & t17i16);
print("%d & %d = %d\n", t17u16, t17u16, t17u16 & t17u16);
print("%d & %d = %d\n", t17u16, t17i32, t17u16 & t17i32);
print("%d & %d = %d\n", t17u16, t17u32, t17u16 & t17u32);
print("%d & %d = %d\n", t17u16, t17i64, t17u16 & t17i64);
print("%d & %d = %d\n", t17u16, t17u64, t17u16 & t17u64);
print("%d & %d = %d\n", t17u16, t17w,   t17u16 & t17w);
print("%d & %d = %d\n", t17u16, t17z,   t17u16 & t17z);
print("%d & %d = %d\n", t17u16, t17n,   t17u16 & t17n);
print("%d | %d = %d\n", t17u16, t17i8,  t17u16 | t17i8);
print("%d | %d = %d\n", t17u16, t17u8,  t17u16 | t17u8);
print("%d | %d = %d\n", t17u16, t17i16, t17u16 | t17i16);
print("%d | %d = %d\n", t17u16, t17u16, t17u16 | t17u16);
print("%d | %d = %d\n", t17u16, t17i32, t17u16 | t17i32);
print("%d | %d = %d\n", t17u16, t17u32, t17u16 | t17u32);
print("%d | %d = %d\n", t17u16, t17i64, t17u16 | t17i64);
print("%d | %d = %d\n", t17u16, t17u64, t17u16 | t17u64);
print("%d | %d = %d\n", t17u16, t17w,   t17u16 | t17w);
print("%d | %d = %d\n", t17u16, t17z,   t17u16 | t17z);
print("%d | %d = %d\n", t17u16, t17n,   t17u16 | t17n);
print("%d ^ %d = %d\n", t17u16, t17i8,  t17u16 ^ t17i8);
print("%d ^ %d = %d\n", t17u16, t17u8,  t17u16 ^ t17u8);
print("%d ^ %d = %d\n", t17u16, t17i16, t17u16 ^ t17i16);
print("%d ^ %d = %d\n", t17u16, t17u16, t17u16 ^ t17u16);
print("%d ^ %d = %d\n", t17u16, t17i32, t17u16 ^ t17i32);
print("%d ^ %d = %d\n", t17u16, t17u32, t17u16 ^ t17u32);
print("%d ^ %d = %d\n", t17u16, t17i64, t17u16 ^ t17i64);
print("%d ^ %d = %d\n", t17u16, t17u64, t17u16 ^ t17u64);
print("%d ^ %d = %d\n", t17u16, t17w,   t17u16 ^ t17w);
print("%d ^ %d = %d\n", t17u16, t17z,   t17u16 ^ t17z);
print("%d ^ %d = %d\n", t17u16, t17n,   t17u16 ^ t17n);
print("%d & %d = %d\n", t17i32, t17i8,  t17u16 & t17i8);
print("%d & %d = %d\n", t17i32, t17u8,  t17u16 & t17u8);
print("%d & %d = %d\n", t17i32, t17i16, t17u16 & t17i16);
print("%d & %d = %d\n", t17i32, t17u16, t17u16 & t17u16);
print("%d & %d = %d\n", t17i32, t17i32, t17u16 & t17i32);
print("%d & %d = %d\n", t17i32, t17u32, t17u16 & t17u32);
print("%d & %d = %d\n", t17i32, t17i64, t17u16 & t17i64);
print("%d & %d = %d\n", t17i32, t17u64, t17u16 & t17u64);
print("%d & %d = %d\n", t17i32, t17w,   t17u16 & t17w);
print("%d & %d = %d\n", t17i32, t17z,   t17u16 & t17z);
print("%d & %d = %d\n", t17i32, t17n,   t17u16 & t17n);
print("%d | %d = %d\n", t17i32, t17i8,  t17u16 | t17i8);
print("%d | %d = %d\n", t17i32, t17u8,  t17u16 | t17u8);
print("%d | %d = %d\n", t17i32, t17i16, t17u16 | t17i16);
print("%d | %d = %d\n", t17i32, t17u16, t17u16 | t17u16);
print("%d | %d = %d\n", t17i32, t17i32, t17u16 | t17i32);
print("%d | %d = %d\n", t17i32, t17u32, t17u16 | t17u32);
print("%d | %d = %d\n", t17i32, t17i64, t17u16 | t17i64);
print("%d | %d = %d\n", t17i32, t17u64, t17u16 | t17u64);
print("%d | %d = %d\n", t17i32, t17w,   t17u16 | t17w);
print("%d | %d = %d\n", t17i32, t17z,   t17u16 | t17z);
print("%d | %d = %d\n", t17i32, t17n,   t17u16 | t17n);
print("%d ^ %d = %d\n", t17i32, t17i8,  t17u16 ^ t17i8);
print("%d ^ %d = %d\n", t17i32, t17u8,  t17u16 ^ t17u8);
print("%d ^ %d = %d\n", t17i32, t17i16, t17u16 ^ t17i16);
print("%d ^ %d = %d\n", t17i32, t17u16, t17u16 ^ t17u16);
print("%d ^ %d = %d\n", t17i32, t17i32, t17u16 ^ t17i32);
print("%d ^ %d = %d\n", t17i32, t17u32, t17u16 ^ t17u32);
print("%d ^ %d = %d\n", t17i32, t17i64, t17u16 ^ t17i64);
print("%d ^ %d = %d\n", t17i32, t17u64, t17u16 ^ t17u64);
print("%d ^ %d = %d\n", t17i32, t17w,   t17u16 ^ t17w);
print("%d ^ %d = %d\n", t17i32, t17z,   t17u16 ^ t17z);
print("%d ^ %d = %d\n", t17i32, t17n,   t17u16 ^ t17n);
print("%d & %d = %d\n", t17u32, t17i8,  t17u32 & t17i8);
print("%d & %d = %d\n", t17u32, t17u8,  t17u32 & t17u8);
print("%d & %d = %d\n", t17u32, t17i16, t17u32 & t17i16);
print("%d & %d = %d\n", t17u32, t17u16, t17u32 & t17u16);
print("%d & %d = %d\n", t17u32, t17i32, t17u32 & t17i32);
print("%d & %d = %d\n", t17u32, t17u32, t17u32 & t17u32);
print("%d & %d = %d\n", t17u32, t17i64, t17u32 & t17i64);
print("%d & %d = %d\n", t17u32, t17u64, t17u32 & t17u64);
print("%d & %d = %d\n", t17u32, t17w,   t17u32 & t17w);
print("%d & %d = %d\n", t17u32, t17z,   t17u32 & t17z);
print("%d & %d = %d\n", t17u32, t17n,   t17u32 & t17n);
print("%d | %d = %d\n", t17u32, t17i8,  t17u16 | t17i8);
print("%d | %d = %d\n", t17u32, t17u8,  t17u16 | t17u8);
print("%d | %d = %d\n", t17u32, t17i16, t17u16 | t17i16);
print("%d | %d = %d\n", t17u32, t17u16, t17u16 | t17u16);
print("%d | %d = %d\n", t17u32, t17i32, t17u16 | t17i32);
print("%d | %d = %d\n", t17u32, t17u32, t17u16 | t17u32);
print("%d | %d = %d\n", t17u32, t17i64, t17u16 | t17i64);
print("%d | %d = %d\n", t17u32, t17u64, t17u16 | t17u64);
print("%d | %d = %d\n", t17u32, t17w,   t17u16 | t17w);
print("%d | %d = %d\n", t17u32, t17z,   t17u16 | t17z);
print("%d | %d = %d\n", t17u32, t17n,   t17u16 | t17n);
print("%d ^ %d = %d\n", t17u32, t17i8,  t17u16 ^ t17i8);
print("%d ^ %d = %d\n", t17u32, t17u8,  t17u16 ^ t17u8);
print("%d ^ %d = %d\n", t17u32, t17i16, t17u16 ^ t17i16);
print("%d ^ %d = %d\n", t17u32, t17u16, t17u16 ^ t17u16);
print("%d ^ %d = %d\n", t17u32, t17i32, t17u16 ^ t17i32);
print("%d ^ %d = %d\n", t17u32, t17u32, t17u16 ^ t17u32);
print("%d ^ %d = %d\n", t17u32, t17i64, t17u16 ^ t17i64);
print("%d ^ %d = %d\n", t17u32, t17u64, t17u16 ^ t17u64);
print("%d ^ %d = %d\n", t17u32, t17w,   t17u16 ^ t17w);
print("%d ^ %d = %d\n", t17u32, t17z,   t17u16 ^ t17z);
print("%d ^ %d = %d\n", t17u32, t17n,   t17u16 ^ t17n);
print("%d & %d = %d\n", t17i64, t17i8,  t17u32 & t17i8);
print("%d & %d = %d\n", t17i64, t17u8,  t17u32 & t17u8);
print("%d & %d = %d\n", t17i64, t17i16, t17u32 & t17i16);
print("%d & %d = %d\n", t17i64, t17u16, t17u32 & t17u16);
print("%d & %d = %d\n", t17i64, t17i32, t17u32 & t17i32);
print("%d & %d = %d\n", t17i64, t17u32, t17u32 & t17u32);
print("%d & %d = %d\n", t17i64, t17i64, t17u32 & t17i64);
print("%d & %d = %d\n", t17i64, t17u64, t17u32 & t17u64);
print("%d & %d = %d\n", t17i64, t17w,   t17u32 & t17w);
print("%d & %d = %d\n", t17i64, t17z,   t17u32 & t17z);
print("%d & %d = %d\n", t17i64, t17n,   t17u32 & t17n);
print("%d | %d = %d\n", t17i64, t17i8,  t17u32 | t17i8);
print("%d | %d = %d\n", t17i64, t17u8,  t17u32 | t17u8);
print("%d | %d = %d\n", t17i64, t17i16, t17u32 | t17i16);
print("%d | %d = %d\n", t17i64, t17u16, t17u32 | t17u16);
print("%d | %d = %d\n", t17i64, t17i32, t17u32 | t17i32);
print("%d | %d = %d\n", t17i64, t17u32, t17u32 | t17u32);
print("%d | %d = %d\n", t17i64, t17i64, t17u32 | t17i64);
print("%d | %d = %d\n", t17i64, t17u64, t17u32 | t17u64);
print("%d | %d = %d\n", t17i64, t17w,   t17u32 | t17w);
print("%d | %d = %d\n", t17i64, t17z,   t17u32 | t17z);
print("%d | %d = %d\n", t17i64, t17n,   t17u32 | t17n);
print("%d ^ %d = %d\n", t17i64, t17i8,  t17u32 ^ t17i8);
print("%d ^ %d = %d\n", t17i64, t17u8,  t17u32 ^ t17u8);
print("%d ^ %d = %d\n", t17i64, t17i16, t17u32 ^ t17i16);
print("%d ^ %d = %d\n", t17i64, t17u16, t17u32 ^ t17u16);
print("%d ^ %d = %d\n", t17i64, t17i32, t17u32 ^ t17i32);
print("%d ^ %d = %d\n", t17i64, t17u32, t17u32 ^ t17u32);
print("%d ^ %d = %d\n", t17i64, t17i64, t17u32 ^ t17i64);
print("%d ^ %d = %d\n", t17i64, t17u64, t17u32 ^ t17u64);
print("%d ^ %d = %d\n", t17i64, t17w,   t17u32 ^ t17w);
print("%d ^ %d = %d\n", t17i64, t17z,   t17u32 ^ t17z);
print("%d ^ %d = %d\n", t17i64, t17n,   t17u32 ^ t17n);
print("%d & %d = %d\n", t17u64, t17i8,  t17u64 & t17i8);
print("%d & %d = %d\n", t17u64, t17u8,  t17u64 & t17u8);
print("%d & %d = %d\n", t17u64, t17i16, t17u64 & t17i16);
print("%d & %d = %d\n", t17u64, t17u16, t17u64 & t17u16);
print("%d & %d = %d\n", t17u64, t17i32, t17u64 & t17i32);
print("%d & %d = %d\n", t17u64, t17u32, t17u64 & t17u32);
print("%d & %d = %d\n", t17u64, t17i64, t17u64 & t17i64);
print("%d & %d = %d\n", t17u64, t17u64, t17u64 & t17u64);
print("%d & %d = %d\n", t17u64, t17w,   t17u64 & t17w);
print("%d & %d = %d\n", t17u64, t17z,   t17u64 & t17z);
print("%d & %d = %d\n", t17u64, t17n,   t17u64 & t17n);
print("%d | %d = %d\n", t17u64, t17i8,  t17u64 | t17i8);
print("%d | %d = %d\n", t17u64, t17u8,  t17u64 | t17u8);
print("%d | %d = %d\n", t17u64, t17i16, t17u64 | t17i16);
print("%d | %d = %d\n", t17u64, t17u16, t17u64 | t17u16);
print("%d | %d = %d\n", t17u64, t17i32, t17u64 | t17i32);
print("%d | %d = %d\n", t17u64, t17u32, t17u64 | t17u32);
print("%d | %d = %d\n", t17u64, t17i64, t17u64 | t17i64);
print("%d | %d = %d\n", t17u64, t17u64, t17u64 | t17u64);
print("%d | %d = %d\n", t17u64, t17w,   t17u64 | t17w);
print("%d | %d = %d\n", t17u64, t17z,   t17u64 | t17z);
print("%d | %d = %d\n", t17u64, t17n,   t17u64 | t17n);
print("%d ^ %d = %d\n", t17u64, t17i8,  t17u64 ^ t17i8);
print("%d ^ %d = %d\n", t17u64, t17u8,  t17u64 ^ t17u8);
print("%d ^ %d = %d\n", t17u64, t17i16, t17u64 ^ t17i16);
print("%d ^ %d = %d\n", t17u64, t17u16, t17u64 ^ t17u16);
print("%d ^ %d = %d\n", t17u64, t17i32, t17u64 ^ t17i32);
print("%d ^ %d = %d\n", t17u64, t17u32, t17u64 ^ t17u32);
print("%d ^ %d = %d\n", t17u64, t17i64, t17u64 ^ t17i64);
print("%d ^ %d = %d\n", t17u64, t17u64, t17u64 ^ t17u64);
print("%d ^ %d = %d\n", t17u64, t17w,   t17u64 ^ t17w);
print("%d ^ %d = %d\n", t17u64, t17z,   t17u64 ^ t17z);
print("%d ^ %d = %d\n", t17u64, t17n,   t17u64 ^ t17n);
print("%d & %d = %d\n", t17w, t17i8,  t17w & t17i8);
print("%d & %d = %d\n", t17w, t17u8,  t17w & t17u8);
print("%d & %d = %d\n", t17w, t17i16, t17w & t17i16);
print("%d & %d = %d\n", t17w, t17u16, t17w & t17u16);
print("%d & %d = %d\n", t17w, t17i32, t17w & t17i32);
print("%d & %d = %d\n", t17w, t17u32, t17w & t17u32);
print("%d & %d = %d\n", t17w, t17i64, t17w & t17i64);
print("%d & %d = %d\n", t17w, t17u64, t17w & t17u64);
print("%d & %d = %d\n", t17w, t17w,   t17w & t17w);
print("%d & %d = %d\n", t17w, t17z,   t17w & t17z);
print("%d & %d = %d\n", t17w, t17n,   t17w & t17n);
print("%d | %d = %d\n", t17w, t17i8,  t17w | t17i8);
print("%d | %d = %d\n", t17w, t17u8,  t17w | t17u8);
print("%d | %d = %d\n", t17w, t17i16, t17w | t17i16);
print("%d | %d = %d\n", t17w, t17u16, t17w | t17u16);
print("%d | %d = %d\n", t17w, t17i32, t17w | t17i32);
print("%d | %d = %d\n", t17w, t17u32, t17w | t17u32);
print("%d | %d = %d\n", t17w, t17i64, t17w | t17i64);
print("%d | %d = %d\n", t17w, t17u64, t17w | t17u64);
print("%d | %d = %d\n", t17w, t17w,   t17w | t17w);
print("%d | %d = %d\n", t17w, t17z,   t17w | t17z);
print("%d | %d = %d\n", t17w, t17n,   t17w | t17n);
print("%d ^ %d = %d\n", t17w, t17i8,  t17w ^ t17i8);
print("%d ^ %d = %d\n", t17w, t17u8,  t17w ^ t17u8);
print("%d ^ %d = %d\n", t17w, t17i16, t17w ^ t17i16);
print("%d ^ %d = %d\n", t17w, t17u16, t17w ^ t17u16);
print("%d ^ %d = %d\n", t17w, t17i32, t17w ^ t17i32);
print("%d ^ %d = %d\n", t17w, t17u32, t17w ^ t17u32);
print("%d ^ %d = %d\n", t17w, t17i64, t17w ^ t17i64);
print("%d ^ %d = %d\n", t17w, t17u64, t17w ^ t17u64);
print("%d ^ %d = %d\n", t17w, t17w,   t17w ^ t17w);
print("%d ^ %d = %d\n", t17w, t17z,   t17w ^ t17z);
print("%d ^ %d = %d\n", t17w, t17n,   t17w ^ t17n);
print("%d & %d = %d\n", t17z, t17i8,  t17z & t17i8);
print("%d & %d = %d\n", t17z, t17u8,  t17z & t17u8);
print("%d & %d = %d\n", t17z, t17i16, t17z & t17i16);
print("%d & %d = %d\n", t17z, t17u16, t17z & t17u16);
print("%d & %d = %d\n", t17z, t17i32, t17z & t17i32);
print("%d & %d = %d\n", t17z, t17u32, t17z & t17u32);
print("%d & %d = %d\n", t17z, t17i64, t17z & t17i64);
print("%d & %d = %d\n", t17z, t17u64, t17z & t17u64);
print("%d & %d = %d\n", t17z, t17w,   t17z & t17w);
print("%d & %d = %d\n", t17z, t17z,   t17z & t17z);
print("%d & %d = %d\n", t17z, t17n,   t17z & t17n);
print("%d | %d = %d\n", t17z, t17i8,  t17z | t17i8);
print("%d | %d = %d\n", t17z, t17u8,  t17z | t17u8);
print("%d | %d = %d\n", t17z, t17i16, t17z | t17i16);
print("%d | %d = %d\n", t17z, t17u16, t17z | t17u16);
print("%d | %d = %d\n", t17z, t17i32, t17z | t17i32);
print("%d | %d = %d\n", t17z, t17u32, t17z | t17u32);
print("%d | %d = %d\n", t17z, t17i64, t17z | t17i64);
print("%d | %d = %d\n", t17z, t17u64, t17z | t17u64);
print("%d | %d = %d\n", t17z, t17w,   t17z | t17w);
print("%d | %d = %d\n", t17z, t17z,   t17z | t17z);
print("%d | %d = %d\n", t17z, t17n,   t17z | t17n);
print("%d ^ %d = %d\n", t17z, t17i8,  t17z ^ t17i8);
print("%d ^ %d = %d\n", t17z, t17u8,  t17z ^ t17u8);
print("%d ^ %d = %d\n", t17z, t17i16, t17z ^ t17i16);
print("%d ^ %d = %d\n", t17z, t17u16, t17z ^ t17u16);
print("%d ^ %d = %d\n", t17z, t17i32, t17z ^ t17i32);
print("%d ^ %d = %d\n", t17z, t17u32, t17z ^ t17u32);
print("%d ^ %d = %d\n", t17z, t17i64, t17z ^ t17i64);
print("%d ^ %d = %d\n", t17z, t17u64, t17z ^ t17u64);
print("%d ^ %d = %d\n", t17z, t17w,   t17z ^ t17w);
print("%d ^ %d = %d\n", t17z, t17z,   t17z ^ t17z);
print("%d ^ %d = %d\n", t17z, t17n,   t17z ^ t17n);
print("%d & %d = %d\n", t17n, t17i8,  t17n & t17i8);
print("%d & %d = %d\n", t17n, t17u8,  t17n & t17u8);
print("%d & %d = %d\n", t17n, t17i16, t17n & t17i16);
print("%d & %d = %d\n", t17n, t17u16, t17n & t17u16);
print("%d & %d = %d\n", t17n, t17i32, t17n & t17i32);
print("%d & %d = %d\n", t17n, t17u32, t17n & t17u32);
print("%d & %d = %d\n", t17n, t17i64, t17n & t17i64);
print("%d & %d = %d\n", t17n, t17u64, t17n & t17u64);
print("%d & %d = %d\n", t17n, t17w,   t17n & t17w);
print("%d & %d = %d\n", t17n, t17z,   t17n & t17z);
print("%d & %d = %d\n", t17n, t17n,   t17n & t17n);
print("%d | %d = %d\n", t17n, t17i8,  t17n | t17i8);
print("%d | %d = %d\n", t17n, t17u8,  t17n | t17u8);
print("%d | %d = %d\n", t17n, t17i16, t17n | t17i16);
print("%d | %d = %d\n", t17n, t17u16, t17n | t17u16);
print("%d | %d = %d\n", t17n, t17i32, t17n | t17i32);
print("%d | %d = %d\n", t17n, t17u32, t17n | t17u32);
print("%d | %d = %d\n", t17n, t17i64, t17n | t17i64);
print("%d | %d = %d\n", t17n, t17u64, t17n | t17u64);
print("%d | %d = %d\n", t17n, t17w,   t17n | t17w);
print("%d | %d = %d\n", t17n, t17z,   t17n | t17z);
print("%d | %d = %d\n", t17n, t17n,   t17n | t17n);
print("%d ^ %d = %d\n", t17n, t17i8,  t17n ^ t17i8);
print("%d ^ %d = %d\n", t17n, t17u8,  t17n ^ t17u8);
print("%d ^ %d = %d\n", t17n, t17i16, t17n ^ t17i16);
print("%d ^ %d = %d\n", t17n, t17u16, t17n ^ t17u16);
print("%d ^ %d = %d\n", t17n, t17i32, t17n ^ t17i32);
print("%d ^ %d = %d\n", t17n, t17u32, t17n ^ t17u32);
print("%d ^ %d = %d\n", t17n, t17i64, t17n ^ t17i64);
print("%d ^ %d = %d\n", t17n, t17u64, t17n ^ t17u64);
print("%d ^ %d = %d\n", t17n, t17w,   t17n ^ t17w);
print("%d ^ %d = %d\n", t17n, t17z,   t17n ^ t17z);
print("%d ^ %d = %d\n", t17n, t17n,   t17n ^ t17n);

int8_t		t18i8  = -4;
uint8_t		t18u8  =  12;
int16_t		t18i16 = -12;
uint16_t	t18u16 =  20;
int32_t		t18i32 = -28;
uint32_t	t18u32 =  36;
int64_t		t18i64 = -60;
uint64_t	t18u64 =  68;
float32_t	t18f32 = -28.0;
float64_t	t18f64 =  68.0;
auto		t18w   =  46;
auto		t18f   = -38.25;
auto		t18z   =  0x800000000000000000000000000000002;
auto		t18x   =  3/2;
auto		t18q   =  0x800000000000000000000000000000000/5;
auto		t18r   = -1.75L;
auto		t18dd  =  1.75+I;
auto		t18qq  =  8/3+I;
auto		t18cc  = -1.75L+I;
auto		t18n   =  null;
print("%d <<   0 = %d\n", t18i8, t18i8 <<   0);
print("%d <<   2 = %d\n", t18i8, t18i8 <<   2);
print("%d <<   4 = %d\n", t18i8, t18i8 <<   4);
print("%d <<   8 = %d\n", t18i8, t18i8 <<   8);
print("%d <<  16 = %d\n", t18i8, t18i8 <<  16);
print("%d <<  32 = %d\n", t18i8, t18i8 <<  32);
print("%d <<  64 = %d\n", t18i8, t18i8 <<  64);
print("%d << 128 = %d\n", t18i8, t18i8 << 128);
print("%d >>   0 = %d\n", t18i8, t18i8 >>   0);
print("%d >>   2 = %d\n", t18i8, t18i8 >>   2);
print("%d >>   4 = %d\n", t18i8, t18i8 >>   4);
print("%d >>   8 = %d\n", t18i8, t18i8 >>   8);
print("%d >>  16 = %d\n", t18i8, t18i8 >>  16);
print("%d >>  32 = %d\n", t18i8, t18i8 >>  32);
print("%d >>  64 = %d\n", t18i8, t18i8 >>  64);
print("%d >> 128 = %d\n", t18i8, t18i8 >> 128);
print("%d <<   0 = %d\n", t18u8, t18u8 <<   0);
print("%d <<   2 = %d\n", t18u8, t18u8 <<   2);
print("%d <<   4 = %d\n", t18u8, t18u8 <<   4);
print("%d <<   8 = %d\n", t18u8, t18u8 <<   8);
print("%d <<  16 = %d\n", t18u8, t18u8 <<  16);
print("%d <<  32 = %d\n", t18u8, t18u8 <<  32);
print("%d <<  64 = %d\n", t18u8, t18u8 <<  64);
print("%d << 128 = %d\n", t18u8, t18u8 << 128);
print("%d >>   0 = %d\n", t18u8, t18u8 >>   0);
print("%d >>   2 = %d\n", t18u8, t18u8 >>   2);
print("%d >>   4 = %d\n", t18u8, t18u8 >>   4);
print("%d >>   8 = %d\n", t18u8, t18u8 >>   8);
print("%d >>  16 = %d\n", t18u8, t18u8 >>  16);
print("%d >>  32 = %d\n", t18u8, t18u8 >>  32);
print("%d >>  64 = %d\n", t18u8, t18u8 >>  64);
print("%d >> 128 = %d\n", t18u8, t18u8 >> 128);
print("%d <<   0 = %d\n", t18i16, t18i16 <<   0);
print("%d <<   2 = %d\n", t18i16, t18i16 <<   2);
print("%d <<   4 = %d\n", t18i16, t18i16 <<   4);
print("%d <<   8 = %d\n", t18i16, t18i16 <<   8);
print("%d <<  16 = %d\n", t18i16, t18i16 <<  16);
print("%d <<  32 = %d\n", t18i16, t18i16 <<  32);
print("%d <<  64 = %d\n", t18i16, t18i16 <<  64);
print("%d << 128 = %d\n", t18i16, t18i16 << 128);
print("%d >>   0 = %d\n", t18i16, t18i16 >>   0);
print("%d >>   2 = %d\n", t18i16, t18i16 >>   2);
print("%d >>   4 = %d\n", t18i16, t18i16 >>   4);
print("%d >>   8 = %d\n", t18i16, t18i16 >>   8);
print("%d >>  16 = %d\n", t18i16, t18i16 >>  16);
print("%d >>  32 = %d\n", t18i16, t18i16 >>  32);
print("%d >>  64 = %d\n", t18i16, t18i16 >>  64);
print("%d >> 128 = %d\n", t18i16, t18i16 >> 128);
print("%d <<   0 = %d\n", t18u16, t18u16 <<   0);
print("%d <<   2 = %d\n", t18u16, t18u16 <<   2);
print("%d <<   4 = %d\n", t18u16, t18u16 <<   4);
print("%d <<   8 = %d\n", t18u16, t18u16 <<   8);
print("%d <<  16 = %d\n", t18u16, t18u16 <<  16);
print("%d <<  32 = %d\n", t18u16, t18u16 <<  32);
print("%d <<  64 = %d\n", t18u16, t18u16 <<  64);
print("%d << 128 = %d\n", t18u16, t18u16 << 128);
print("%d >>   0 = %d\n", t18u16, t18u16 >>   0);
print("%d >>   2 = %d\n", t18u16, t18u16 >>   2);
print("%d >>   4 = %d\n", t18u16, t18u16 >>   4);
print("%d >>   8 = %d\n", t18u16, t18u16 >>   8);
print("%d >>  16 = %d\n", t18u16, t18u16 >>  16);
print("%d >>  32 = %d\n", t18u16, t18u16 >>  32);
print("%d >>  64 = %d\n", t18u16, t18u16 >>  64);
print("%d >> 128 = %d\n", t18u16, t18u16 >> 128);
print("%d <<   0 = %d\n", t18i32, t18i32 <<   0);
print("%d <<   2 = %d\n", t18i32, t18i32 <<   2);
print("%d <<   4 = %d\n", t18i32, t18i32 <<   4);
print("%d <<   8 = %d\n", t18i32, t18i32 <<   8);
print("%d <<  16 = %d\n", t18i32, t18i32 <<  16);
print("%d <<  32 = %d\n", t18i32, t18i32 <<  32);
print("%d <<  64 = %d\n", t18i32, t18i32 <<  64);
print("%d << 128 = %d\n", t18i32, t18i32 << 128);
print("%d >>   0 = %d\n", t18i32, t18i32 >>   0);
print("%d >>   2 = %d\n", t18i32, t18i32 >>   2);
print("%d >>   4 = %d\n", t18i32, t18i32 >>   4);
print("%d >>   8 = %d\n", t18i32, t18i32 >>   8);
print("%d >>  16 = %d\n", t18i32, t18i32 >>  16);
print("%d >>  32 = %d\n", t18i32, t18i32 >>  32);
print("%d >>  64 = %d\n", t18i32, t18i32 >>  64);
print("%d >> 128 = %d\n", t18i32, t18i32 >> 128);
print("%d <<   0 = %d\n", t18u32, t18u32 <<   0);
print("%d <<   2 = %d\n", t18u32, t18u32 <<   2);
print("%d <<   4 = %d\n", t18u32, t18u32 <<   4);
print("%d <<   8 = %d\n", t18u32, t18u32 <<   8);
print("%d <<  16 = %d\n", t18u32, t18u32 <<  16);
print("%d <<  32 = %d\n", t18u32, t18u32 <<  32);
print("%d <<  64 = %d\n", t18u32, t18u32 <<  64);
print("%d << 128 = %d\n", t18u32, t18u32 << 128);
print("%d >>   0 = %d\n", t18u32, t18u32 >>   0);
print("%d >>   2 = %d\n", t18u32, t18u32 >>   2);
print("%d >>   4 = %d\n", t18u32, t18u32 >>   4);
print("%d >>   8 = %d\n", t18u32, t18u32 >>   8);
print("%d >>  16 = %d\n", t18u32, t18u32 >>  16);
print("%d >>  32 = %d\n", t18u32, t18u32 >>  32);
print("%d >>  64 = %d\n", t18u32, t18u32 >>  64);
print("%d >> 128 = %d\n", t18u32, t18u32 >> 128);
print("%d <<   0 = %d\n", t18i64, t18i64 <<   0);
print("%d <<   2 = %d\n", t18i64, t18i64 <<   2);
print("%d <<   4 = %d\n", t18i64, t18i64 <<   4);
print("%d <<   8 = %d\n", t18i64, t18i64 <<   8);
print("%d <<  16 = %d\n", t18i64, t18i64 <<  16);
print("%d <<  32 = %d\n", t18i64, t18i64 <<  32);
print("%d <<  64 = %d\n", t18i64, t18i64 <<  64);
print("%d << 128 = %d\n", t18i64, t18i64 << 128);
print("%d >>   0 = %d\n", t18i64, t18i64 >>   0);
print("%d >>   2 = %d\n", t18i64, t18i64 >>   2);
print("%d >>   4 = %d\n", t18i64, t18i64 >>   4);
print("%d >>   8 = %d\n", t18i64, t18i64 >>   8);
print("%d >>  16 = %d\n", t18i64, t18i64 >>  16);
print("%d >>  32 = %d\n", t18i64, t18i64 >>  32);
print("%d >>  64 = %d\n", t18i64, t18i64 >>  64);
print("%d >> 128 = %d\n", t18i64, t18i64 >> 128);
print("%d <<   0 = %d\n", t18u64, t18u64 <<   0);
print("%d <<   2 = %d\n", t18u64, t18u64 <<   2);
print("%d <<   4 = %d\n", t18u64, t18u64 <<   4);
print("%d <<   8 = %d\n", t18u64, t18u64 <<   8);
print("%d <<  16 = %d\n", t18u64, t18u64 <<  16);
print("%d <<  32 = %d\n", t18u64, t18u64 <<  32);
print("%d <<  64 = %d\n", t18u64, t18u64 <<  64);
print("%d << 128 = %d\n", t18u64, t18u64 << 128);
print("%d >>   0 = %d\n", t18u64, t18u64 >>   0);
print("%d >>   2 = %d\n", t18u64, t18u64 >>   2);
print("%d >>   4 = %d\n", t18u64, t18u64 >>   4);
print("%d >>   8 = %d\n", t18u64, t18u64 >>   8);
print("%d >>  16 = %d\n", t18u64, t18u64 >>  16);
print("%d >>  32 = %d\n", t18u64, t18u64 >>  32);
print("%d >>  64 = %d\n", t18u64, t18u64 >>  64);
print("%d >> 128 = %d\n", t18u64, t18u64 >> 128);
print("%d <<   0 = %d\n", t18f32, t18f32 <<   0);
print("%d <<   2 = %d\n", t18f32, t18f32 <<   2);
print("%d <<   4 = %d\n", t18f32, t18f32 <<   4);
print("%d <<   8 = %d\n", t18f32, t18f32 <<   8);
print("%d <<  16 = %d\n", t18f32, t18f32 <<  16);
print("%d <<  32 = %d\n", t18f32, t18f32 <<  32);
print("%d <<  64 = %d\n", t18f32, t18f32 <<  64);
print("%d << 128 = %d\n", t18f32, t18f32 << 128);
print("%d >>   0 = %d\n", t18f32, t18f32 >>   0);
print("%d >>   2 = %d\n", t18f32, t18f32 >>   2);
print("%d >>   4 = %d\n", t18f32, t18f32 >>   4);
print("%d >>   8 = %d\n", t18f32, t18f32 >>   8);
print("%d >>  16 = %d\n", t18f32, t18f32 >>  16);
print("%d >>  32 = %d\n", t18f32, t18f32 >>  32);
print("%d >>  64 = %d\n", t18f32, t18f32 >>  64);
print("%d >> 128 = %d\n", t18f32, t18f32 >> 128);
print("%d <<   0 = %d\n", t18f64, t18f64 <<   0);
print("%d <<   2 = %d\n", t18f64, t18f64 <<   2);
print("%d <<   4 = %d\n", t18f64, t18f64 <<   4);
print("%d <<   8 = %d\n", t18f64, t18f64 <<   8);
print("%d <<  16 = %d\n", t18f64, t18f64 <<  16);
print("%d <<  32 = %d\n", t18f64, t18f64 <<  32);
print("%d <<  64 = %d\n", t18f64, t18f64 <<  64);
print("%d << 128 = %d\n", t18f64, t18f64 << 128);
print("%d >>   0 = %d\n", t18f64, t18f64 >>   0);
print("%d >>   2 = %d\n", t18f64, t18f64 >>   2);
print("%d >>   4 = %d\n", t18f64, t18f64 >>   4);
print("%d >>   8 = %d\n", t18f64, t18f64 >>   8);
print("%d >>  16 = %d\n", t18f64, t18f64 >>  16);
print("%d >>  32 = %d\n", t18f64, t18f64 >>  32);
print("%d >>  64 = %d\n", t18f64, t18f64 >>  64);
print("%d >> 128 = %d\n", t18f64, t18f64 >> 128);
print("%d <<   0 = %d\n", t18w, t18w <<   0);
print("%d <<   2 = %d\n", t18w, t18w <<   2);
print("%d <<   4 = %d\n", t18w, t18w <<   4);
print("%d <<   8 = %d\n", t18w, t18w <<   8);
print("%d <<  16 = %d\n", t18w, t18w <<  16);
print("%d <<  32 = %d\n", t18w, t18w <<  32);
print("%d <<  64 = %d\n", t18w, t18w <<  64);
print("%d << 128 = %d\n", t18w, t18w << 128);
print("%d >>   0 = %d\n", t18w, t18w >>   0);
print("%d >>   2 = %d\n", t18w, t18w >>   2);
print("%d >>   4 = %d\n", t18w, t18w >>   4);
print("%d >>   8 = %d\n", t18w, t18w >>   8);
print("%d >>  16 = %d\n", t18w, t18w >>  16);
print("%d >>  32 = %d\n", t18w, t18w >>  32);
print("%d >>  64 = %d\n", t18w, t18w >>  64);
print("%d >> 128 = %d\n", t18w, t18w >> 128);
print("%d <<   0 = %d\n", t18f, t18f <<   0);
print("%d <<   2 = %d\n", t18f, t18f <<   2);
print("%d <<   4 = %d\n", t18f, t18f <<   4);
print("%d <<   8 = %d\n", t18f, t18f <<   8);
print("%d <<  16 = %d\n", t18f, t18f <<  16);
print("%d <<  32 = %d\n", t18f, t18f <<  32);
print("%d <<  64 = %d\n", t18f, t18f <<  64);
print("%d << 128 = %d\n", t18f, t18f << 128);
print("%d >>   0 = %d\n", t18f, t18f >>   0);
print("%d >>   2 = %d\n", t18f, t18f >>   2);
print("%d >>   4 = %d\n", t18f, t18f >>   4);
print("%d >>   8 = %d\n", t18f, t18f >>   8);
print("%d >>  16 = %d\n", t18f, t18f >>  16);
print("%d >>  32 = %d\n", t18f, t18f >>  32);
print("%d >>  64 = %d\n", t18f, t18f >>  64);
print("%d >> 128 = %d\n", t18f, t18f >> 128);
print("%d <<   0 = %d\n", t18z, t18z <<   0);
print("%d <<   2 = %d\n", t18z, t18z <<   2);
print("%d <<   4 = %d\n", t18z, t18z <<   4);
print("%d <<   8 = %d\n", t18z, t18z <<   8);
print("%d <<  16 = %d\n", t18z, t18z <<  16);
print("%d <<  32 = %d\n", t18z, t18z <<  32);
print("%d <<  64 = %d\n", t18z, t18z <<  64);
print("%d << 128 = %d\n", t18z, t18z << 128);
print("%d >>   0 = %d\n", t18z, t18z >>   0);
print("%d >>   2 = %d\n", t18z, t18z >>   2);
print("%d >>   4 = %d\n", t18z, t18z >>   4);
print("%d >>   8 = %d\n", t18z, t18z >>   8);
print("%d >>  16 = %d\n", t18z, t18z >>  16);
print("%d >>  32 = %d\n", t18z, t18z >>  32);
print("%d >>  64 = %d\n", t18z, t18z >>  64);
print("%d >> 128 = %d\n", t18z, t18z >> 128);
print("%d <<   0 = %d\n", t18x, t18x <<   0);
print("%d <<   2 = %d\n", t18x, t18x <<   2);
print("%d <<   4 = %d\n", t18x, t18x <<   4);
print("%d <<   8 = %d\n", t18x, t18x <<   8);
print("%d <<  16 = %d\n", t18x, t18x <<  16);
print("%d <<  32 = %d\n", t18x, t18x <<  32);
print("%d <<  64 = %d\n", t18x, t18x <<  64);
print("%d << 128 = %d\n", t18x, t18x << 128);
print("%d >>   0 = %d\n", t18x, t18x >>   0);
print("%d >>   2 = %d\n", t18x, t18x >>   2);
print("%d >>   4 = %d\n", t18x, t18x >>   4);
print("%d >>   8 = %d\n", t18x, t18x >>   8);
print("%d >>  16 = %d\n", t18x, t18x >>  16);
print("%d >>  32 = %d\n", t18x, t18x >>  32);
print("%d >>  64 = %d\n", t18x, t18x >>  64);
print("%d >> 128 = %d\n", t18x, t18x >> 128);
print("%d <<   0 = %d\n", t18q, t18q <<   0);
print("%d <<   2 = %d\n", t18q, t18q <<   2);
print("%d <<   4 = %d\n", t18q, t18q <<   4);
print("%d <<   8 = %d\n", t18q, t18q <<   8);
print("%d <<  16 = %d\n", t18q, t18q <<  16);
print("%d <<  32 = %d\n", t18q, t18q <<  32);
print("%d <<  64 = %d\n", t18q, t18q <<  64);
print("%d << 128 = %d\n", t18q, t18q << 128);
print("%d >>   0 = %d\n", t18q, t18q >>   0);
print("%d >>   2 = %d\n", t18q, t18q >>   2);
print("%d >>   4 = %d\n", t18q, t18q >>   4);
print("%d >>   8 = %d\n", t18q, t18q >>   8);
print("%d >>  16 = %d\n", t18q, t18q >>  16);
print("%d >>  32 = %d\n", t18q, t18q >>  32);
print("%d >>  64 = %d\n", t18q, t18q >>  64);
print("%d >> 128 = %d\n", t18q, t18q >> 128);
print("%d <<   0 = %d\n", t18r, t18r <<   0);
print("%d <<   2 = %d\n", t18r, t18r <<   2);
print("%d <<   4 = %d\n", t18r, t18r <<   4);
print("%d <<   8 = %d\n", t18r, t18r <<   8);
print("%d <<  16 = %d\n", t18r, t18r <<  16);
print("%d <<  32 = %d\n", t18r, t18r <<  32);
print("%d <<  64 = %d\n", t18r, t18r <<  64);
print("%d << 128 = %d\n", t18r, t18r << 128);
print("%d >>   0 = %d\n", t18r, t18r >>   0);
print("%d >>   2 = %d\n", t18r, t18r >>   2);
print("%d >>   4 = %d\n", t18r, t18r >>   4);
print("%d >>   8 = %d\n", t18r, t18r >>   8);
print("%d >>  16 = %d\n", t18r, t18r >>  16);
print("%d >>  32 = %d\n", t18r, t18r >>  32);
print("%d >>  64 = %d\n", t18r, t18r >>  64);
print("%d >> 128 = %d\n", t18r, t18r >> 128);
print("%d <<   0 = %d\n", t18dd, t18dd <<   0);
print("%d <<   2 = %d\n", t18dd, t18dd <<   2);
print("%d <<   4 = %d\n", t18dd, t18dd <<   4);
print("%d <<   8 = %d\n", t18dd, t18dd <<   8);
print("%d <<  16 = %d\n", t18dd, t18dd <<  16);
print("%d <<  32 = %d\n", t18dd, t18dd <<  32);
print("%d <<  64 = %d\n", t18dd, t18dd <<  64);
print("%d << 128 = %d\n", t18dd, t18dd << 128);
print("%d >>   0 = %d\n", t18dd, t18dd >>   0);
print("%d >>   2 = %d\n", t18dd, t18dd >>   2);
print("%d >>   4 = %d\n", t18dd, t18dd >>   4);
print("%d >>   8 = %d\n", t18dd, t18dd >>   8);
print("%d >>  16 = %d\n", t18dd, t18dd >>  16);
print("%d >>  32 = %d\n", t18dd, t18dd >>  32);
print("%d >>  64 = %d\n", t18dd, t18dd >>  64);
print("%d >> 128 = %d\n", t18dd, t18dd >> 128);
print("%d <<   0 = %d\n", t18qq, t18qq <<   0);
print("%d <<   2 = %d\n", t18qq, t18qq <<   2);
print("%d <<   4 = %d\n", t18qq, t18qq <<   4);
print("%d <<   8 = %d\n", t18qq, t18qq <<   8);
print("%d <<  16 = %d\n", t18qq, t18qq <<  16);
print("%d <<  32 = %d\n", t18qq, t18qq <<  32);
print("%d <<  64 = %d\n", t18qq, t18qq <<  64);
print("%d << 128 = %d\n", t18qq, t18qq << 128);
print("%d >>   0 = %d\n", t18qq, t18qq >>   0);
print("%d >>   2 = %d\n", t18qq, t18qq >>   2);
print("%d >>   4 = %d\n", t18qq, t18qq >>   4);
print("%d >>   8 = %d\n", t18qq, t18qq >>   8);
print("%d >>  16 = %d\n", t18qq, t18qq >>  16);
print("%d >>  32 = %d\n", t18qq, t18qq >>  32);
print("%d >>  64 = %d\n", t18qq, t18qq >>  64);
print("%d >> 128 = %d\n", t18qq, t18qq >> 128);
print("%d <<   0 = %d\n", t18cc, t18cc <<   0);
print("%d <<   2 = %d\n", t18cc, t18cc <<   2);
print("%d <<   4 = %d\n", t18cc, t18cc <<   4);
print("%d <<   8 = %d\n", t18cc, t18cc <<   8);
print("%d <<  16 = %d\n", t18cc, t18cc <<  16);
print("%d <<  32 = %d\n", t18cc, t18cc <<  32);
print("%d <<  64 = %d\n", t18cc, t18cc <<  64);
print("%d << 128 = %d\n", t18cc, t18cc << 128);
print("%d >>   0 = %d\n", t18cc, t18cc >>   0);
print("%d >>   2 = %d\n", t18cc, t18cc >>   2);
print("%d >>   4 = %d\n", t18cc, t18cc >>   4);
print("%d >>   8 = %d\n", t18cc, t18cc >>   8);
print("%d >>  16 = %d\n", t18cc, t18cc >>  16);
print("%d >>  32 = %d\n", t18cc, t18cc >>  32);
print("%d >>  64 = %d\n", t18cc, t18cc >>  64);
print("%d >> 128 = %d\n", t18cc, t18cc >> 128);
print("%d <<   0 = %d\n", t18n, t18n <<   0);
print("%d <<   2 = %d\n", t18n, t18n <<   2);
print("%d <<   4 = %d\n", t18n, t18n <<   4);
print("%d <<   8 = %d\n", t18n, t18n <<   8);
print("%d <<  16 = %d\n", t18n, t18n <<  16);
print("%d <<  32 = %d\n", t18n, t18n <<  32);
print("%d <<  64 = %d\n", t18n, t18n <<  64);
print("%d << 128 = %d\n", t18n, t18n << 128);
print("%d >>   0 = %d\n", t18n, t18n >>   0);
print("%d >>   2 = %d\n", t18n, t18n >>   2);
print("%d >>   4 = %d\n", t18n, t18n >>   4);
print("%d >>   8 = %d\n", t18n, t18n >>   8);
print("%d >>  16 = %d\n", t18n, t18n >>  16);
print("%d >>  32 = %d\n", t18n, t18n >>  32);
print("%d >>  64 = %d\n", t18n, t18n >>  64);
print("%d >> 128 = %d\n", t18n, t18n >> 128);
int16_t		t18s0   = 0;
int16_t		t18s2   = 2;
int16_t		t18s4   = 4;
int16_t		t18s8   = 8;
int16_t		t18s16  = 16;
int16_t		t18s32  = 32;
int16_t		t18s64  = 64;
int16_t		t18s128 = 128;
print("%d <<   0 = %d\n", t18i8, t18i8 <<   t18s0);
print("%d <<   2 = %d\n", t18i8, t18i8 <<   t18s2);
print("%d <<   4 = %d\n", t18i8, t18i8 <<   t18s4);
print("%d <<   8 = %d\n", t18i8, t18i8 <<   t18s8);
print("%d <<  16 = %d\n", t18i8, t18i8 <<  t18s16);
print("%d <<  32 = %d\n", t18i8, t18i8 <<  t18s32);
print("%d <<  64 = %d\n", t18i8, t18i8 <<  t18s64);
print("%d << 128 = %d\n", t18i8, t18i8 << t18s128);
print("%d >>   0 = %d\n", t18i8, t18i8 >>   t18s0);
print("%d >>   2 = %d\n", t18i8, t18i8 >>   t18s2);
print("%d >>   4 = %d\n", t18i8, t18i8 >>   t18s4);
print("%d >>   8 = %d\n", t18i8, t18i8 >>   t18s8);
print("%d >>  16 = %d\n", t18i8, t18i8 >>  t18s16);
print("%d >>  32 = %d\n", t18i8, t18i8 >>  t18s32);
print("%d >>  64 = %d\n", t18i8, t18i8 >>  t18s64);
print("%d >> 128 = %d\n", t18i8, t18i8 >> t18s128);
print("%d <<   0 = %d\n", t18u8, t18u8 <<   t18s0);
print("%d <<   2 = %d\n", t18u8, t18u8 <<   t18s2);
print("%d <<   4 = %d\n", t18u8, t18u8 <<   t18s4);
print("%d <<   8 = %d\n", t18u8, t18u8 <<   t18s8);
print("%d <<  16 = %d\n", t18u8, t18u8 <<  t18s16);
print("%d <<  32 = %d\n", t18u8, t18u8 <<  t18s32);
print("%d <<  64 = %d\n", t18u8, t18u8 <<  t18s64);
print("%d << 128 = %d\n", t18u8, t18u8 << t18s128);
print("%d >>   0 = %d\n", t18u8, t18u8 >>   t18s0);
print("%d >>   2 = %d\n", t18u8, t18u8 >>   t18s2);
print("%d >>   4 = %d\n", t18u8, t18u8 >>   t18s4);
print("%d >>   8 = %d\n", t18u8, t18u8 >>   t18s8);
print("%d >>  16 = %d\n", t18u8, t18u8 >>  t18s16);
print("%d >>  32 = %d\n", t18u8, t18u8 >>  t18s32);
print("%d >>  64 = %d\n", t18u8, t18u8 >>  t18s64);
print("%d >> 128 = %d\n", t18u8, t18u8 >> t18s128);
print("%d <<   0 = %d\n", t18i16, t18i16 <<   t18s0);
print("%d <<   2 = %d\n", t18i16, t18i16 <<   t18s2);
print("%d <<   4 = %d\n", t18i16, t18i16 <<   t18s4);
print("%d <<   8 = %d\n", t18i16, t18i16 <<   t18s8);
print("%d <<  16 = %d\n", t18i16, t18i16 <<  t18s16);
print("%d <<  32 = %d\n", t18i16, t18i16 <<  t18s32);
print("%d <<  64 = %d\n", t18i16, t18i16 <<  t18s64);
print("%d << 128 = %d\n", t18i16, t18i16 << t18s128);
print("%d >>   0 = %d\n", t18i16, t18i16 >>   t18s0);
print("%d >>   2 = %d\n", t18i16, t18i16 >>   t18s2);
print("%d >>   4 = %d\n", t18i16, t18i16 >>   t18s4);
print("%d >>   8 = %d\n", t18i16, t18i16 >>   t18s8);
print("%d >>  16 = %d\n", t18i16, t18i16 >>  t18s16);
print("%d >>  32 = %d\n", t18i16, t18i16 >>  t18s32);
print("%d >>  64 = %d\n", t18i16, t18i16 >>  t18s64);
print("%d >> 128 = %d\n", t18i16, t18i16 >> t18s128);
print("%d <<   0 = %d\n", t18u16, t18u16 <<   t18s0);
print("%d <<   2 = %d\n", t18u16, t18u16 <<   t18s2);
print("%d <<   4 = %d\n", t18u16, t18u16 <<   t18s4);
print("%d <<   8 = %d\n", t18u16, t18u16 <<   t18s8);
print("%d <<  16 = %d\n", t18u16, t18u16 <<  t18s16);
print("%d <<  32 = %d\n", t18u16, t18u16 <<  t18s32);
print("%d <<  64 = %d\n", t18u16, t18u16 <<  t18s64);
print("%d << 128 = %d\n", t18u16, t18u16 << t18s128);
print("%d >>   0 = %d\n", t18u16, t18u16 >>   t18s0);
print("%d >>   2 = %d\n", t18u16, t18u16 >>   t18s2);
print("%d >>   4 = %d\n", t18u16, t18u16 >>   t18s4);
print("%d >>   8 = %d\n", t18u16, t18u16 >>   t18s8);
print("%d >>  16 = %d\n", t18u16, t18u16 >>  t18s16);
print("%d >>  32 = %d\n", t18u16, t18u16 >>  t18s32);
print("%d >>  64 = %d\n", t18u16, t18u16 >>  t18s64);
print("%d >> 128 = %d\n", t18u16, t18u16 >> t18s128);
print("%d <<   0 = %d\n", t18i32, t18i32 <<   t18s0);
print("%d <<   2 = %d\n", t18i32, t18i32 <<   t18s2);
print("%d <<   4 = %d\n", t18i32, t18i32 <<   t18s4);
print("%d <<   8 = %d\n", t18i32, t18i32 <<   t18s8);
print("%d <<  16 = %d\n", t18i32, t18i32 <<  t18s16);
print("%d <<  32 = %d\n", t18i32, t18i32 <<  t18s32);
print("%d <<  64 = %d\n", t18i32, t18i32 <<  t18s64);
print("%d << 128 = %d\n", t18i32, t18i32 << t18s128);
print("%d >>   0 = %d\n", t18i32, t18i32 >>   t18s0);
print("%d >>   2 = %d\n", t18i32, t18i32 >>   t18s2);
print("%d >>   4 = %d\n", t18i32, t18i32 >>   t18s4);
print("%d >>   8 = %d\n", t18i32, t18i32 >>   t18s8);
print("%d >>  16 = %d\n", t18i32, t18i32 >>  t18s16);
print("%d >>  32 = %d\n", t18i32, t18i32 >>  t18s32);
print("%d >>  64 = %d\n", t18i32, t18i32 >>  t18s64);
print("%d >> 128 = %d\n", t18i32, t18i32 >> t18s128);
print("%d <<   0 = %d\n", t18u32, t18u32 <<   t18s0);
print("%d <<   2 = %d\n", t18u32, t18u32 <<   t18s2);
print("%d <<   4 = %d\n", t18u32, t18u32 <<   t18s4);
print("%d <<   8 = %d\n", t18u32, t18u32 <<   t18s8);
print("%d <<  16 = %d\n", t18u32, t18u32 <<  t18s16);
print("%d <<  32 = %d\n", t18u32, t18u32 <<  t18s32);
print("%d <<  64 = %d\n", t18u32, t18u32 <<  t18s64);
print("%d << 128 = %d\n", t18u32, t18u32 << t18s128);
print("%d >>   0 = %d\n", t18u32, t18u32 >>   t18s0);
print("%d >>   2 = %d\n", t18u32, t18u32 >>   t18s2);
print("%d >>   4 = %d\n", t18u32, t18u32 >>   t18s4);
print("%d >>   8 = %d\n", t18u32, t18u32 >>   t18s8);
print("%d >>  16 = %d\n", t18u32, t18u32 >>  t18s16);
print("%d >>  32 = %d\n", t18u32, t18u32 >>  t18s32);
print("%d >>  64 = %d\n", t18u32, t18u32 >>  t18s64);
print("%d >> 128 = %d\n", t18u32, t18u32 >> t18s128);
print("%d <<   0 = %d\n", t18i64, t18i64 <<   t18s0);
print("%d <<   2 = %d\n", t18i64, t18i64 <<   t18s2);
print("%d <<   4 = %d\n", t18i64, t18i64 <<   t18s4);
print("%d <<   8 = %d\n", t18i64, t18i64 <<   t18s8);
print("%d <<  16 = %d\n", t18i64, t18i64 <<  t18s16);
print("%d <<  32 = %d\n", t18i64, t18i64 <<  t18s32);
print("%d <<  64 = %d\n", t18i64, t18i64 <<  t18s64);
print("%d << 128 = %d\n", t18i64, t18i64 << t18s128);
print("%d >>   0 = %d\n", t18i64, t18i64 >>   t18s0);
print("%d >>   2 = %d\n", t18i64, t18i64 >>   t18s2);
print("%d >>   4 = %d\n", t18i64, t18i64 >>   t18s4);
print("%d >>   8 = %d\n", t18i64, t18i64 >>   t18s8);
print("%d >>  16 = %d\n", t18i64, t18i64 >>  t18s16);
print("%d >>  32 = %d\n", t18i64, t18i64 >>  t18s32);
print("%d >>  64 = %d\n", t18i64, t18i64 >>  t18s64);
print("%d >> 128 = %d\n", t18i64, t18i64 >> t18s128);
print("%d <<   0 = %d\n", t18u64, t18u64 <<   t18s0);
print("%d <<   2 = %d\n", t18u64, t18u64 <<   t18s2);
print("%d <<   4 = %d\n", t18u64, t18u64 <<   t18s4);
print("%d <<   8 = %d\n", t18u64, t18u64 <<   t18s8);
print("%d <<  16 = %d\n", t18u64, t18u64 <<  t18s16);
print("%d <<  32 = %d\n", t18u64, t18u64 <<  t18s32);
print("%d <<  64 = %d\n", t18u64, t18u64 <<  t18s64);
print("%d << 128 = %d\n", t18u64, t18u64 << t18s128);
print("%d >>   0 = %d\n", t18u64, t18u64 >>   t18s0);
print("%d >>   2 = %d\n", t18u64, t18u64 >>   t18s2);
print("%d >>   4 = %d\n", t18u64, t18u64 >>   t18s4);
print("%d >>   8 = %d\n", t18u64, t18u64 >>   t18s8);
print("%d >>  16 = %d\n", t18u64, t18u64 >>  t18s16);
print("%d >>  32 = %d\n", t18u64, t18u64 >>  t18s32);
print("%d >>  64 = %d\n", t18u64, t18u64 >>  t18s64);
print("%d >> 128 = %d\n", t18u64, t18u64 >> t18s128);
print("%d <<   0 = %d\n", t18f32, t18f32 <<   t18s0);
print("%d <<   2 = %d\n", t18f32, t18f32 <<   t18s2);
print("%d <<   4 = %d\n", t18f32, t18f32 <<   t18s4);
print("%d <<   8 = %d\n", t18f32, t18f32 <<   t18s8);
print("%d <<  16 = %d\n", t18f32, t18f32 <<  t18s16);
print("%d <<  32 = %d\n", t18f32, t18f32 <<  t18s32);
print("%d <<  64 = %d\n", t18f32, t18f32 <<  t18s64);
print("%d << 128 = %d\n", t18f32, t18f32 << t18s128);
print("%d >>   0 = %d\n", t18f32, t18f32 >>   t18s0);
print("%d >>   2 = %d\n", t18f32, t18f32 >>   t18s2);
print("%d >>   4 = %d\n", t18f32, t18f32 >>   t18s4);
print("%d >>   8 = %d\n", t18f32, t18f32 >>   t18s8);
print("%d >>  16 = %d\n", t18f32, t18f32 >>  t18s16);
print("%d >>  32 = %d\n", t18f32, t18f32 >>  t18s32);
print("%d >>  64 = %d\n", t18f32, t18f32 >>  t18s64);
print("%d >> 128 = %d\n", t18f32, t18f32 >> t18s128);
print("%d <<   0 = %d\n", t18f64, t18f64 <<   t18s0);
print("%d <<   2 = %d\n", t18f64, t18f64 <<   t18s2);
print("%d <<   4 = %d\n", t18f64, t18f64 <<   t18s4);
print("%d <<   8 = %d\n", t18f64, t18f64 <<   t18s8);
print("%d <<  16 = %d\n", t18f64, t18f64 <<  t18s16);
print("%d <<  32 = %d\n", t18f64, t18f64 <<  t18s32);
print("%d <<  64 = %d\n", t18f64, t18f64 <<  t18s64);
print("%d << 128 = %d\n", t18f64, t18f64 << t18s128);
print("%d >>   0 = %d\n", t18f64, t18f64 >>   t18s0);
print("%d >>   2 = %d\n", t18f64, t18f64 >>   t18s2);
print("%d >>   4 = %d\n", t18f64, t18f64 >>   t18s4);
print("%d >>   8 = %d\n", t18f64, t18f64 >>   t18s8);
print("%d >>  16 = %d\n", t18f64, t18f64 >>  t18s16);
print("%d >>  32 = %d\n", t18f64, t18f64 >>  t18s32);
print("%d >>  64 = %d\n", t18f64, t18f64 >>  t18s64);
print("%d >> 128 = %d\n", t18f64, t18f64 >> t18s128);
print("%d <<   0 = %d\n", t18w, t18w <<   t18s0);
print("%d <<   2 = %d\n", t18w, t18w <<   t18s2);
print("%d <<   4 = %d\n", t18w, t18w <<   t18s4);
print("%d <<   8 = %d\n", t18w, t18w <<   t18s8);
print("%d <<  16 = %d\n", t18w, t18w <<  t18s16);
print("%d <<  32 = %d\n", t18w, t18w <<  t18s32);
print("%d <<  64 = %d\n", t18w, t18w <<  t18s64);
print("%d << 128 = %d\n", t18w, t18w << t18s128);
print("%d >>   0 = %d\n", t18w, t18w >>   t18s0);
print("%d >>   2 = %d\n", t18w, t18w >>   t18s2);
print("%d >>   4 = %d\n", t18w, t18w >>   t18s4);
print("%d >>   8 = %d\n", t18w, t18w >>   t18s8);
print("%d >>  16 = %d\n", t18w, t18w >>  t18s16);
print("%d >>  32 = %d\n", t18w, t18w >>  t18s32);
print("%d >>  64 = %d\n", t18w, t18w >>  t18s64);
print("%d >> 128 = %d\n", t18w, t18w >> t18s128);
print("%d <<   0 = %d\n", t18f, t18f <<   t18s0);
print("%d <<   2 = %d\n", t18f, t18f <<   t18s2);
print("%d <<   4 = %d\n", t18f, t18f <<   t18s4);
print("%d <<   8 = %d\n", t18f, t18f <<   t18s8);
print("%d <<  16 = %d\n", t18f, t18f <<  t18s16);
print("%d <<  32 = %d\n", t18f, t18f <<  t18s32);
print("%d <<  64 = %d\n", t18f, t18f <<  t18s64);
print("%d << 128 = %d\n", t18f, t18f << t18s128);
print("%d >>   0 = %d\n", t18f, t18f >>   t18s0);
print("%d >>   2 = %d\n", t18f, t18f >>   t18s2);
print("%d >>   4 = %d\n", t18f, t18f >>   t18s4);
print("%d >>   8 = %d\n", t18f, t18f >>   t18s8);
print("%d >>  16 = %d\n", t18f, t18f >>  t18s16);
print("%d >>  32 = %d\n", t18f, t18f >>  t18s32);
print("%d >>  64 = %d\n", t18f, t18f >>  t18s64);
print("%d >> 128 = %d\n", t18f, t18f >> t18s128);
print("%d <<   0 = %d\n", t18z, t18z <<   t18s0);
print("%d <<   2 = %d\n", t18z, t18z <<   t18s2);
print("%d <<   4 = %d\n", t18z, t18z <<   t18s4);
print("%d <<   8 = %d\n", t18z, t18z <<   t18s8);
print("%d <<  16 = %d\n", t18z, t18z <<  t18s16);
print("%d <<  32 = %d\n", t18z, t18z <<  t18s32);
print("%d <<  64 = %d\n", t18z, t18z <<  t18s64);
print("%d << 128 = %d\n", t18z, t18z << t18s128);
print("%d >>   0 = %d\n", t18z, t18z >>   t18s0);
print("%d >>   2 = %d\n", t18z, t18z >>   t18s2);
print("%d >>   4 = %d\n", t18z, t18z >>   t18s4);
print("%d >>   8 = %d\n", t18z, t18z >>   t18s8);
print("%d >>  16 = %d\n", t18z, t18z >>  t18s16);
print("%d >>  32 = %d\n", t18z, t18z >>  t18s32);
print("%d >>  64 = %d\n", t18z, t18z >>  t18s64);
print("%d >> 128 = %d\n", t18z, t18z >> t18s128);
print("%d <<   0 = %d\n", t18x, t18x <<   t18s0);
print("%d <<   2 = %d\n", t18x, t18x <<   t18s2);
print("%d <<   4 = %d\n", t18x, t18x <<   t18s4);
print("%d <<   8 = %d\n", t18x, t18x <<   t18s8);
print("%d <<  16 = %d\n", t18x, t18x <<  t18s16);
print("%d <<  32 = %d\n", t18x, t18x <<  t18s32);
print("%d <<  64 = %d\n", t18x, t18x <<  t18s64);
print("%d << 128 = %d\n", t18x, t18x << t18s128);
print("%d >>   0 = %d\n", t18x, t18x >>   t18s0);
print("%d >>   2 = %d\n", t18x, t18x >>   t18s2);
print("%d >>   4 = %d\n", t18x, t18x >>   t18s4);
print("%d >>   8 = %d\n", t18x, t18x >>   t18s8);
print("%d >>  16 = %d\n", t18x, t18x >>  t18s16);
print("%d >>  32 = %d\n", t18x, t18x >>  t18s32);
print("%d >>  64 = %d\n", t18x, t18x >>  t18s64);
print("%d >> 128 = %d\n", t18x, t18x >> t18s128);
print("%d <<   0 = %d\n", t18q, t18q <<   t18s0);
print("%d <<   2 = %d\n", t18q, t18q <<   t18s2);
print("%d <<   4 = %d\n", t18q, t18q <<   t18s4);
print("%d <<   8 = %d\n", t18q, t18q <<   t18s8);
print("%d <<  16 = %d\n", t18q, t18q <<  t18s16);
print("%d <<  32 = %d\n", t18q, t18q <<  t18s32);
print("%d <<  64 = %d\n", t18q, t18q <<  t18s64);
print("%d << 128 = %d\n", t18q, t18q << t18s128);
print("%d >>   0 = %d\n", t18q, t18q >>   t18s0);
print("%d >>   2 = %d\n", t18q, t18q >>   t18s2);
print("%d >>   4 = %d\n", t18q, t18q >>   t18s4);
print("%d >>   8 = %d\n", t18q, t18q >>   t18s8);
print("%d >>  16 = %d\n", t18q, t18q >>  t18s16);
print("%d >>  32 = %d\n", t18q, t18q >>  t18s32);
print("%d >>  64 = %d\n", t18q, t18q >>  t18s64);
print("%d >> 128 = %d\n", t18q, t18q >> t18s128);
print("%d <<   0 = %d\n", t18r, t18r <<   t18s0);
print("%d <<   2 = %d\n", t18r, t18r <<   t18s2);
print("%d <<   4 = %d\n", t18r, t18r <<   t18s4);
print("%d <<   8 = %d\n", t18r, t18r <<   t18s8);
print("%d <<  16 = %d\n", t18r, t18r <<  t18s16);
print("%d <<  32 = %d\n", t18r, t18r <<  t18s32);
print("%d <<  64 = %d\n", t18r, t18r <<  t18s64);
print("%d << 128 = %d\n", t18r, t18r << t18s128);
print("%d >>   0 = %d\n", t18r, t18r >>   t18s0);
print("%d >>   2 = %d\n", t18r, t18r >>   t18s2);
print("%d >>   4 = %d\n", t18r, t18r >>   t18s4);
print("%d >>   8 = %d\n", t18r, t18r >>   t18s8);
print("%d >>  16 = %d\n", t18r, t18r >>  t18s16);
print("%d >>  32 = %d\n", t18r, t18r >>  t18s32);
print("%d >>  64 = %d\n", t18r, t18r >>  t18s64);
print("%d >> 128 = %d\n", t18r, t18r >> t18s128);
print("%d <<   0 = %d\n", t18dd, t18dd <<   t18s0);
print("%d <<   2 = %d\n", t18dd, t18dd <<   t18s2);
print("%d <<   4 = %d\n", t18dd, t18dd <<   t18s4);
print("%d <<   8 = %d\n", t18dd, t18dd <<   t18s8);
print("%d <<  16 = %d\n", t18dd, t18dd <<  t18s16);
print("%d <<  32 = %d\n", t18dd, t18dd <<  t18s32);
print("%d <<  64 = %d\n", t18dd, t18dd <<  t18s64);
print("%d << 128 = %d\n", t18dd, t18dd << t18s128);
print("%d >>   0 = %d\n", t18dd, t18dd >>   t18s0);
print("%d >>   2 = %d\n", t18dd, t18dd >>   t18s2);
print("%d >>   4 = %d\n", t18dd, t18dd >>   t18s4);
print("%d >>   8 = %d\n", t18dd, t18dd >>   t18s8);
print("%d >>  16 = %d\n", t18dd, t18dd >>  t18s16);
print("%d >>  32 = %d\n", t18dd, t18dd >>  t18s32);
print("%d >>  64 = %d\n", t18dd, t18dd >>  t18s64);
print("%d >> 128 = %d\n", t18dd, t18dd >> t18s128);
print("%d <<   0 = %d\n", t18qq, t18qq <<   t18s0);
print("%d <<   2 = %d\n", t18qq, t18qq <<   t18s2);
print("%d <<   4 = %d\n", t18qq, t18qq <<   t18s4);
print("%d <<   8 = %d\n", t18qq, t18qq <<   t18s8);
print("%d <<  16 = %d\n", t18qq, t18qq <<  t18s16);
print("%d <<  32 = %d\n", t18qq, t18qq <<  t18s32);
print("%d <<  64 = %d\n", t18qq, t18qq <<  t18s64);
print("%d << 128 = %d\n", t18qq, t18qq << t18s128);
print("%d >>   0 = %d\n", t18qq, t18qq >>   t18s0);
print("%d >>   2 = %d\n", t18qq, t18qq >>   t18s2);
print("%d >>   4 = %d\n", t18qq, t18qq >>   t18s4);
print("%d >>   8 = %d\n", t18qq, t18qq >>   t18s8);
print("%d >>  16 = %d\n", t18qq, t18qq >>  t18s16);
print("%d >>  32 = %d\n", t18qq, t18qq >>  t18s32);
print("%d >>  64 = %d\n", t18qq, t18qq >>  t18s64);
print("%d >> 128 = %d\n", t18qq, t18qq >> t18s128);
print("%d <<   0 = %d\n", t18cc, t18cc <<   t18s0);
print("%d <<   2 = %d\n", t18cc, t18cc <<   t18s2);
print("%d <<   4 = %d\n", t18cc, t18cc <<   t18s4);
print("%d <<   8 = %d\n", t18cc, t18cc <<   t18s8);
print("%d <<  16 = %d\n", t18cc, t18cc <<  t18s16);
print("%d <<  32 = %d\n", t18cc, t18cc <<  t18s32);
print("%d <<  64 = %d\n", t18cc, t18cc <<  t18s64);
print("%d << 128 = %d\n", t18cc, t18cc << t18s128);
print("%d >>   0 = %d\n", t18cc, t18cc >>   t18s0);
print("%d >>   2 = %d\n", t18cc, t18cc >>   t18s2);
print("%d >>   4 = %d\n", t18cc, t18cc >>   t18s4);
print("%d >>   8 = %d\n", t18cc, t18cc >>   t18s8);
print("%d >>  16 = %d\n", t18cc, t18cc >>  t18s16);
print("%d >>  32 = %d\n", t18cc, t18cc >>  t18s32);
print("%d >>  64 = %d\n", t18cc, t18cc >>  t18s64);
print("%d >> 128 = %d\n", t18cc, t18cc >> t18s128);
print("%d <<   0 = %d\n", t18n, t18n <<   t18s0);
print("%d <<   2 = %d\n", t18n, t18n <<   t18s2);
print("%d <<   4 = %d\n", t18n, t18n <<   t18s4);
print("%d <<   8 = %d\n", t18n, t18n <<   t18s8);
print("%d <<  16 = %d\n", t18n, t18n <<  t18s16);
print("%d <<  32 = %d\n", t18n, t18n <<  t18s32);
print("%d <<  64 = %d\n", t18n, t18n <<  t18s64);
print("%d << 128 = %d\n", t18n, t18n << t18s128);
print("%d >>   0 = %d\n", t18n, t18n >>   t18s0);
print("%d >>   2 = %d\n", t18n, t18n >>   t18s2);
print("%d >>   4 = %d\n", t18n, t18n >>   t18s4);
print("%d >>   8 = %d\n", t18n, t18n >>   t18s8);
print("%d >>  16 = %d\n", t18n, t18n >>  t18s16);
print("%d >>  32 = %d\n", t18n, t18n >>  t18s32);
print("%d >>  64 = %d\n", t18n, t18n >>  t18s64);
print("%d >> 128 = %d\n", t18n, t18n >> t18s128);
float32_t		t18x0   = 0;
float32_t		t18x2   = 2;
float32_t		t18x4   = 4;
float32_t		t18x8   = 8;
float32_t		t18x16  = 16;
float32_t		t18x32  = 32;
float32_t		t18x64  = 64;
float32_t		t18x128 = 128;
print("%d <<   0 = %d\n", t18i8, t18i8 <<   t18x0);
print("%d <<   2 = %d\n", t18i8, t18i8 <<   t18x2);
print("%d <<   4 = %d\n", t18i8, t18i8 <<   t18x4);
print("%d <<   8 = %d\n", t18i8, t18i8 <<   t18x8);
print("%d <<  16 = %d\n", t18i8, t18i8 <<  t18x16);
print("%d <<  32 = %d\n", t18i8, t18i8 <<  t18x32);
print("%d <<  64 = %d\n", t18i8, t18i8 <<  t18x64);
print("%d << 128 = %d\n", t18i8, t18i8 << t18x128);
print("%d >>   0 = %d\n", t18i8, t18i8 >>   t18x0);
print("%d >>   2 = %d\n", t18i8, t18i8 >>   t18x2);
print("%d >>   4 = %d\n", t18i8, t18i8 >>   t18x4);
print("%d >>   8 = %d\n", t18i8, t18i8 >>   t18x8);
print("%d >>  16 = %d\n", t18i8, t18i8 >>  t18x16);
print("%d >>  32 = %d\n", t18i8, t18i8 >>  t18x32);
print("%d >>  64 = %d\n", t18i8, t18i8 >>  t18x64);
print("%d >> 128 = %d\n", t18i8, t18i8 >> t18x128);
print("%d <<   0 = %d\n", t18u8, t18u8 <<   t18x0);
print("%d <<   2 = %d\n", t18u8, t18u8 <<   t18x2);
print("%d <<   4 = %d\n", t18u8, t18u8 <<   t18x4);
print("%d <<   8 = %d\n", t18u8, t18u8 <<   t18x8);
print("%d <<  16 = %d\n", t18u8, t18u8 <<  t18x16);
print("%d <<  32 = %d\n", t18u8, t18u8 <<  t18x32);
print("%d <<  64 = %d\n", t18u8, t18u8 <<  t18x64);
print("%d << 128 = %d\n", t18u8, t18u8 << t18x128);
print("%d >>   0 = %d\n", t18u8, t18u8 >>   t18x0);
print("%d >>   2 = %d\n", t18u8, t18u8 >>   t18x2);
print("%d >>   4 = %d\n", t18u8, t18u8 >>   t18x4);
print("%d >>   8 = %d\n", t18u8, t18u8 >>   t18x8);
print("%d >>  16 = %d\n", t18u8, t18u8 >>  t18x16);
print("%d >>  32 = %d\n", t18u8, t18u8 >>  t18x32);
print("%d >>  64 = %d\n", t18u8, t18u8 >>  t18x64);
print("%d >> 128 = %d\n", t18u8, t18u8 >> t18x128);
print("%d <<   0 = %d\n", t18i16, t18i16 <<   t18x0);
print("%d <<   2 = %d\n", t18i16, t18i16 <<   t18x2);
print("%d <<   4 = %d\n", t18i16, t18i16 <<   t18x4);
print("%d <<   8 = %d\n", t18i16, t18i16 <<   t18x8);
print("%d <<  16 = %d\n", t18i16, t18i16 <<  t18x16);
print("%d <<  32 = %d\n", t18i16, t18i16 <<  t18x32);
print("%d <<  64 = %d\n", t18i16, t18i16 <<  t18x64);
print("%d << 128 = %d\n", t18i16, t18i16 << t18x128);
print("%d >>   0 = %d\n", t18i16, t18i16 >>   t18x0);
print("%d >>   2 = %d\n", t18i16, t18i16 >>   t18x2);
print("%d >>   4 = %d\n", t18i16, t18i16 >>   t18x4);
print("%d >>   8 = %d\n", t18i16, t18i16 >>   t18x8);
print("%d >>  16 = %d\n", t18i16, t18i16 >>  t18x16);
print("%d >>  32 = %d\n", t18i16, t18i16 >>  t18x32);
print("%d >>  64 = %d\n", t18i16, t18i16 >>  t18x64);
print("%d >> 128 = %d\n", t18i16, t18i16 >> t18x128);
print("%d <<   0 = %d\n", t18u16, t18u16 <<   t18x0);
print("%d <<   2 = %d\n", t18u16, t18u16 <<   t18x2);
print("%d <<   4 = %d\n", t18u16, t18u16 <<   t18x4);
print("%d <<   8 = %d\n", t18u16, t18u16 <<   t18x8);
print("%d <<  16 = %d\n", t18u16, t18u16 <<  t18x16);
print("%d <<  32 = %d\n", t18u16, t18u16 <<  t18x32);
print("%d <<  64 = %d\n", t18u16, t18u16 <<  t18x64);
print("%d << 128 = %d\n", t18u16, t18u16 << t18x128);
print("%d >>   0 = %d\n", t18u16, t18u16 >>   t18x0);
print("%d >>   2 = %d\n", t18u16, t18u16 >>   t18x2);
print("%d >>   4 = %d\n", t18u16, t18u16 >>   t18x4);
print("%d >>   8 = %d\n", t18u16, t18u16 >>   t18x8);
print("%d >>  16 = %d\n", t18u16, t18u16 >>  t18x16);
print("%d >>  32 = %d\n", t18u16, t18u16 >>  t18x32);
print("%d >>  64 = %d\n", t18u16, t18u16 >>  t18x64);
print("%d >> 128 = %d\n", t18u16, t18u16 >> t18x128);
print("%d <<   0 = %d\n", t18i32, t18i32 <<   t18x0);
print("%d <<   2 = %d\n", t18i32, t18i32 <<   t18x2);
print("%d <<   4 = %d\n", t18i32, t18i32 <<   t18x4);
print("%d <<   8 = %d\n", t18i32, t18i32 <<   t18x8);
print("%d <<  16 = %d\n", t18i32, t18i32 <<  t18x16);
print("%d <<  32 = %d\n", t18i32, t18i32 <<  t18x32);
print("%d <<  64 = %d\n", t18i32, t18i32 <<  t18x64);
print("%d << 128 = %d\n", t18i32, t18i32 << t18x128);
print("%d >>   0 = %d\n", t18i32, t18i32 >>   t18x0);
print("%d >>   2 = %d\n", t18i32, t18i32 >>   t18x2);
print("%d >>   4 = %d\n", t18i32, t18i32 >>   t18x4);
print("%d >>   8 = %d\n", t18i32, t18i32 >>   t18x8);
print("%d >>  16 = %d\n", t18i32, t18i32 >>  t18x16);
print("%d >>  32 = %d\n", t18i32, t18i32 >>  t18x32);
print("%d >>  64 = %d\n", t18i32, t18i32 >>  t18x64);
print("%d >> 128 = %d\n", t18i32, t18i32 >> t18x128);
print("%d <<   0 = %d\n", t18u32, t18u32 <<   t18x0);
print("%d <<   2 = %d\n", t18u32, t18u32 <<   t18x2);
print("%d <<   4 = %d\n", t18u32, t18u32 <<   t18x4);
print("%d <<   8 = %d\n", t18u32, t18u32 <<   t18x8);
print("%d <<  16 = %d\n", t18u32, t18u32 <<  t18x16);
print("%d <<  32 = %d\n", t18u32, t18u32 <<  t18x32);
print("%d <<  64 = %d\n", t18u32, t18u32 <<  t18x64);
print("%d << 128 = %d\n", t18u32, t18u32 << t18x128);
print("%d >>   0 = %d\n", t18u32, t18u32 >>   t18x0);
print("%d >>   2 = %d\n", t18u32, t18u32 >>   t18x2);
print("%d >>   4 = %d\n", t18u32, t18u32 >>   t18x4);
print("%d >>   8 = %d\n", t18u32, t18u32 >>   t18x8);
print("%d >>  16 = %d\n", t18u32, t18u32 >>  t18x16);
print("%d >>  32 = %d\n", t18u32, t18u32 >>  t18x32);
print("%d >>  64 = %d\n", t18u32, t18u32 >>  t18x64);
print("%d >> 128 = %d\n", t18u32, t18u32 >> t18x128);
print("%d <<   0 = %d\n", t18i64, t18i64 <<   t18x0);
print("%d <<   2 = %d\n", t18i64, t18i64 <<   t18x2);
print("%d <<   4 = %d\n", t18i64, t18i64 <<   t18x4);
print("%d <<   8 = %d\n", t18i64, t18i64 <<   t18x8);
print("%d <<  16 = %d\n", t18i64, t18i64 <<  t18x16);
print("%d <<  32 = %d\n", t18i64, t18i64 <<  t18x32);
print("%d <<  64 = %d\n", t18i64, t18i64 <<  t18x64);
print("%d << 128 = %d\n", t18i64, t18i64 << t18x128);
print("%d >>   0 = %d\n", t18i64, t18i64 >>   t18x0);
print("%d >>   2 = %d\n", t18i64, t18i64 >>   t18x2);
print("%d >>   4 = %d\n", t18i64, t18i64 >>   t18x4);
print("%d >>   8 = %d\n", t18i64, t18i64 >>   t18x8);
print("%d >>  16 = %d\n", t18i64, t18i64 >>  t18x16);
print("%d >>  32 = %d\n", t18i64, t18i64 >>  t18x32);
print("%d >>  64 = %d\n", t18i64, t18i64 >>  t18x64);
print("%d >> 128 = %d\n", t18i64, t18i64 >> t18x128);
print("%d <<   0 = %d\n", t18u64, t18u64 <<   t18x0);
print("%d <<   2 = %d\n", t18u64, t18u64 <<   t18x2);
print("%d <<   4 = %d\n", t18u64, t18u64 <<   t18x4);
print("%d <<   8 = %d\n", t18u64, t18u64 <<   t18x8);
print("%d <<  16 = %d\n", t18u64, t18u64 <<  t18x16);
print("%d <<  32 = %d\n", t18u64, t18u64 <<  t18x32);
print("%d <<  64 = %d\n", t18u64, t18u64 <<  t18x64);
print("%d << 128 = %d\n", t18u64, t18u64 << t18x128);
print("%d >>   0 = %d\n", t18u64, t18u64 >>   t18x0);
print("%d >>   2 = %d\n", t18u64, t18u64 >>   t18x2);
print("%d >>   4 = %d\n", t18u64, t18u64 >>   t18x4);
print("%d >>   8 = %d\n", t18u64, t18u64 >>   t18x8);
print("%d >>  16 = %d\n", t18u64, t18u64 >>  t18x16);
print("%d >>  32 = %d\n", t18u64, t18u64 >>  t18x32);
print("%d >>  64 = %d\n", t18u64, t18u64 >>  t18x64);
print("%d >> 128 = %d\n", t18u64, t18u64 >> t18x128);
print("%d <<   0 = %d\n", t18f32, t18f32 <<   t18x0);
print("%d <<   2 = %d\n", t18f32, t18f32 <<   t18x2);
print("%d <<   4 = %d\n", t18f32, t18f32 <<   t18x4);
print("%d <<   8 = %d\n", t18f32, t18f32 <<   t18x8);
print("%d <<  16 = %d\n", t18f32, t18f32 <<  t18x16);
print("%d <<  32 = %d\n", t18f32, t18f32 <<  t18x32);
print("%d <<  64 = %d\n", t18f32, t18f32 <<  t18x64);
print("%d << 128 = %d\n", t18f32, t18f32 << t18x128);
print("%d >>   0 = %d\n", t18f32, t18f32 >>   t18x0);
print("%d >>   2 = %d\n", t18f32, t18f32 >>   t18x2);
print("%d >>   4 = %d\n", t18f32, t18f32 >>   t18x4);
print("%d >>   8 = %d\n", t18f32, t18f32 >>   t18x8);
print("%d >>  16 = %d\n", t18f32, t18f32 >>  t18x16);
print("%d >>  32 = %d\n", t18f32, t18f32 >>  t18x32);
print("%d >>  64 = %d\n", t18f32, t18f32 >>  t18x64);
print("%d >> 128 = %d\n", t18f32, t18f32 >> t18x128);
print("%d <<   0 = %d\n", t18f64, t18f64 <<   t18x0);
print("%d <<   2 = %d\n", t18f64, t18f64 <<   t18x2);
print("%d <<   4 = %d\n", t18f64, t18f64 <<   t18x4);
print("%d <<   8 = %d\n", t18f64, t18f64 <<   t18x8);
print("%d <<  16 = %d\n", t18f64, t18f64 <<  t18x16);
print("%d <<  32 = %d\n", t18f64, t18f64 <<  t18x32);
print("%d <<  64 = %d\n", t18f64, t18f64 <<  t18x64);
print("%d << 128 = %d\n", t18f64, t18f64 << t18x128);
print("%d >>   0 = %d\n", t18f64, t18f64 >>   t18x0);
print("%d >>   2 = %d\n", t18f64, t18f64 >>   t18x2);
print("%d >>   4 = %d\n", t18f64, t18f64 >>   t18x4);
print("%d >>   8 = %d\n", t18f64, t18f64 >>   t18x8);
print("%d >>  16 = %d\n", t18f64, t18f64 >>  t18x16);
print("%d >>  32 = %d\n", t18f64, t18f64 >>  t18x32);
print("%d >>  64 = %d\n", t18f64, t18f64 >>  t18x64);
print("%d >> 128 = %d\n", t18f64, t18f64 >> t18x128);
print("%d <<   0 = %d\n", t18w, t18w <<   t18x0);
print("%d <<   2 = %d\n", t18w, t18w <<   t18x2);
print("%d <<   4 = %d\n", t18w, t18w <<   t18x4);
print("%d <<   8 = %d\n", t18w, t18w <<   t18x8);
print("%d <<  16 = %d\n", t18w, t18w <<  t18x16);
print("%d <<  32 = %d\n", t18w, t18w <<  t18x32);
print("%d <<  64 = %d\n", t18w, t18w <<  t18x64);
print("%d << 128 = %d\n", t18w, t18w << t18x128);
print("%d >>   0 = %d\n", t18w, t18w >>   t18x0);
print("%d >>   2 = %d\n", t18w, t18w >>   t18x2);
print("%d >>   4 = %d\n", t18w, t18w >>   t18x4);
print("%d >>   8 = %d\n", t18w, t18w >>   t18x8);
print("%d >>  16 = %d\n", t18w, t18w >>  t18x16);
print("%d >>  32 = %d\n", t18w, t18w >>  t18x32);
print("%d >>  64 = %d\n", t18w, t18w >>  t18x64);
print("%d >> 128 = %d\n", t18w, t18w >> t18x128);
print("%d <<   0 = %d\n", t18f, t18f <<   t18x0);
print("%d <<   2 = %d\n", t18f, t18f <<   t18x2);
print("%d <<   4 = %d\n", t18f, t18f <<   t18x4);
print("%d <<   8 = %d\n", t18f, t18f <<   t18x8);
print("%d <<  16 = %d\n", t18f, t18f <<  t18x16);
print("%d <<  32 = %d\n", t18f, t18f <<  t18x32);
print("%d <<  64 = %d\n", t18f, t18f <<  t18x64);
print("%d << 128 = %d\n", t18f, t18f << t18x128);
print("%d >>   0 = %d\n", t18f, t18f >>   t18x0);
print("%d >>   2 = %d\n", t18f, t18f >>   t18x2);
print("%d >>   4 = %d\n", t18f, t18f >>   t18x4);
print("%d >>   8 = %d\n", t18f, t18f >>   t18x8);
print("%d >>  16 = %d\n", t18f, t18f >>  t18x16);
print("%d >>  32 = %d\n", t18f, t18f >>  t18x32);
print("%d >>  64 = %d\n", t18f, t18f >>  t18x64);
print("%d >> 128 = %d\n", t18f, t18f >> t18x128);
print("%d <<   0 = %d\n", t18z, t18z <<   t18x0);
print("%d <<   2 = %d\n", t18z, t18z <<   t18x2);
print("%d <<   4 = %d\n", t18z, t18z <<   t18x4);
print("%d <<   8 = %d\n", t18z, t18z <<   t18x8);
print("%d <<  16 = %d\n", t18z, t18z <<  t18x16);
print("%d <<  32 = %d\n", t18z, t18z <<  t18x32);
print("%d <<  64 = %d\n", t18z, t18z <<  t18x64);
print("%d << 128 = %d\n", t18z, t18z << t18x128);
print("%d >>   0 = %d\n", t18z, t18z >>   t18x0);
print("%d >>   2 = %d\n", t18z, t18z >>   t18x2);
print("%d >>   4 = %d\n", t18z, t18z >>   t18x4);
print("%d >>   8 = %d\n", t18z, t18z >>   t18x8);
print("%d >>  16 = %d\n", t18z, t18z >>  t18x16);
print("%d >>  32 = %d\n", t18z, t18z >>  t18x32);
print("%d >>  64 = %d\n", t18z, t18z >>  t18x64);
print("%d >> 128 = %d\n", t18z, t18z >> t18x128);
print("%d <<   0 = %d\n", t18x, t18x <<   t18x0);
print("%d <<   2 = %d\n", t18x, t18x <<   t18x2);
print("%d <<   4 = %d\n", t18x, t18x <<   t18x4);
print("%d <<   8 = %d\n", t18x, t18x <<   t18x8);
print("%d <<  16 = %d\n", t18x, t18x <<  t18x16);
print("%d <<  32 = %d\n", t18x, t18x <<  t18x32);
print("%d <<  64 = %d\n", t18x, t18x <<  t18x64);
print("%d << 128 = %d\n", t18x, t18x << t18x128);
print("%d >>   0 = %d\n", t18x, t18x >>   t18x0);
print("%d >>   2 = %d\n", t18x, t18x >>   t18x2);
print("%d >>   4 = %d\n", t18x, t18x >>   t18x4);
print("%d >>   8 = %d\n", t18x, t18x >>   t18x8);
print("%d >>  16 = %d\n", t18x, t18x >>  t18x16);
print("%d >>  32 = %d\n", t18x, t18x >>  t18x32);
print("%d >>  64 = %d\n", t18x, t18x >>  t18x64);
print("%d >> 128 = %d\n", t18x, t18x >> t18x128);
print("%d <<   0 = %d\n", t18q, t18q <<   t18x0);
print("%d <<   2 = %d\n", t18q, t18q <<   t18x2);
print("%d <<   4 = %d\n", t18q, t18q <<   t18x4);
print("%d <<   8 = %d\n", t18q, t18q <<   t18x8);
print("%d <<  16 = %d\n", t18q, t18q <<  t18x16);
print("%d <<  32 = %d\n", t18q, t18q <<  t18x32);
print("%d <<  64 = %d\n", t18q, t18q <<  t18x64);
print("%d << 128 = %d\n", t18q, t18q << t18x128);
print("%d >>   0 = %d\n", t18q, t18q >>   t18x0);
print("%d >>   2 = %d\n", t18q, t18q >>   t18x2);
print("%d >>   4 = %d\n", t18q, t18q >>   t18x4);
print("%d >>   8 = %d\n", t18q, t18q >>   t18x8);
print("%d >>  16 = %d\n", t18q, t18q >>  t18x16);
print("%d >>  32 = %d\n", t18q, t18q >>  t18x32);
print("%d >>  64 = %d\n", t18q, t18q >>  t18x64);
print("%d >> 128 = %d\n", t18q, t18q >> t18x128);
print("%d <<   0 = %d\n", t18r, t18r <<   t18x0);
print("%d <<   2 = %d\n", t18r, t18r <<   t18x2);
print("%d <<   4 = %d\n", t18r, t18r <<   t18x4);
print("%d <<   8 = %d\n", t18r, t18r <<   t18x8);
print("%d <<  16 = %d\n", t18r, t18r <<  t18x16);
print("%d <<  32 = %d\n", t18r, t18r <<  t18x32);
print("%d <<  64 = %d\n", t18r, t18r <<  t18x64);
print("%d << 128 = %d\n", t18r, t18r << t18x128);
print("%d >>   0 = %d\n", t18r, t18r >>   t18x0);
print("%d >>   2 = %d\n", t18r, t18r >>   t18x2);
print("%d >>   4 = %d\n", t18r, t18r >>   t18x4);
print("%d >>   8 = %d\n", t18r, t18r >>   t18x8);
print("%d >>  16 = %d\n", t18r, t18r >>  t18x16);
print("%d >>  32 = %d\n", t18r, t18r >>  t18x32);
print("%d >>  64 = %d\n", t18r, t18r >>  t18x64);
print("%d >> 128 = %d\n", t18r, t18r >> t18x128);
print("%d <<   0 = %d\n", t18dd, t18dd <<   t18x0);
print("%d <<   2 = %d\n", t18dd, t18dd <<   t18x2);
print("%d <<   4 = %d\n", t18dd, t18dd <<   t18x4);
print("%d <<   8 = %d\n", t18dd, t18dd <<   t18x8);
print("%d <<  16 = %d\n", t18dd, t18dd <<  t18x16);
print("%d <<  32 = %d\n", t18dd, t18dd <<  t18x32);
print("%d <<  64 = %d\n", t18dd, t18dd <<  t18x64);
print("%d << 128 = %d\n", t18dd, t18dd << t18x128);
print("%d >>   0 = %d\n", t18dd, t18dd >>   t18x0);
print("%d >>   2 = %d\n", t18dd, t18dd >>   t18x2);
print("%d >>   4 = %d\n", t18dd, t18dd >>   t18x4);
print("%d >>   8 = %d\n", t18dd, t18dd >>   t18x8);
print("%d >>  16 = %d\n", t18dd, t18dd >>  t18x16);
print("%d >>  32 = %d\n", t18dd, t18dd >>  t18x32);
print("%d >>  64 = %d\n", t18dd, t18dd >>  t18x64);
print("%d >> 128 = %d\n", t18dd, t18dd >> t18x128);
print("%d <<   0 = %d\n", t18qq, t18qq <<   t18x0);
print("%d <<   2 = %d\n", t18qq, t18qq <<   t18x2);
print("%d <<   4 = %d\n", t18qq, t18qq <<   t18x4);
print("%d <<   8 = %d\n", t18qq, t18qq <<   t18x8);
print("%d <<  16 = %d\n", t18qq, t18qq <<  t18x16);
print("%d <<  32 = %d\n", t18qq, t18qq <<  t18x32);
print("%d <<  64 = %d\n", t18qq, t18qq <<  t18x64);
print("%d << 128 = %d\n", t18qq, t18qq << t18x128);
print("%d >>   0 = %d\n", t18qq, t18qq >>   t18x0);
print("%d >>   2 = %d\n", t18qq, t18qq >>   t18x2);
print("%d >>   4 = %d\n", t18qq, t18qq >>   t18x4);
print("%d >>   8 = %d\n", t18qq, t18qq >>   t18x8);
print("%d >>  16 = %d\n", t18qq, t18qq >>  t18x16);
print("%d >>  32 = %d\n", t18qq, t18qq >>  t18x32);
print("%d >>  64 = %d\n", t18qq, t18qq >>  t18x64);
print("%d >> 128 = %d\n", t18qq, t18qq >> t18x128);
print("%d <<   0 = %d\n", t18cc, t18cc <<   t18x0);
print("%d <<   2 = %d\n", t18cc, t18cc <<   t18x2);
print("%d <<   4 = %d\n", t18cc, t18cc <<   t18x4);
print("%d <<   8 = %d\n", t18cc, t18cc <<   t18x8);
print("%d <<  16 = %d\n", t18cc, t18cc <<  t18x16);
print("%d <<  32 = %d\n", t18cc, t18cc <<  t18x32);
print("%d <<  64 = %d\n", t18cc, t18cc <<  t18x64);
print("%d << 128 = %d\n", t18cc, t18cc << t18x128);
print("%d >>   0 = %d\n", t18cc, t18cc >>   t18x0);
print("%d >>   2 = %d\n", t18cc, t18cc >>   t18x2);
print("%d >>   4 = %d\n", t18cc, t18cc >>   t18x4);
print("%d >>   8 = %d\n", t18cc, t18cc >>   t18x8);
print("%d >>  16 = %d\n", t18cc, t18cc >>  t18x16);
print("%d >>  32 = %d\n", t18cc, t18cc >>  t18x32);
print("%d >>  64 = %d\n", t18cc, t18cc >>  t18x64);
print("%d >> 128 = %d\n", t18cc, t18cc >> t18x128);
print("%d <<   0 = %d\n", t18n, t18n <<   t18x0);
print("%d <<   2 = %d\n", t18n, t18n <<   t18x2);
print("%d <<   4 = %d\n", t18n, t18n <<   t18x4);
print("%d <<   8 = %d\n", t18n, t18n <<   t18x8);
print("%d <<  16 = %d\n", t18n, t18n <<  t18x16);
print("%d <<  32 = %d\n", t18n, t18n <<  t18x32);
print("%d <<  64 = %d\n", t18n, t18n <<  t18x64);
print("%d << 128 = %d\n", t18n, t18n << t18x128);
print("%d >>   0 = %d\n", t18n, t18n >>   t18x0);
print("%d >>   2 = %d\n", t18n, t18n >>   t18x2);
print("%d >>   4 = %d\n", t18n, t18n >>   t18x4);
print("%d >>   8 = %d\n", t18n, t18n >>   t18x8);
print("%d >>  16 = %d\n", t18n, t18n >>  t18x16);
print("%d >>  32 = %d\n", t18n, t18n >>  t18x32);
print("%d >>  64 = %d\n", t18n, t18n >>  t18x64);
print("%d >> 128 = %d\n", t18n, t18n >> t18x128);
float64_t		t18d0   = 0;
float64_t		t18d2   = 2;
float64_t		t18d4   = 4;
float64_t		t18d8   = 8;
float64_t		t18d16  = 16;
float64_t		t18d32  = 32;
float64_t		t18d64  = 64;
float64_t		t18d128 = 128;
print("%d <<   0 = %d\n", t18i8, t18i8 <<   t18d0);
print("%d <<   2 = %d\n", t18i8, t18i8 <<   t18d2);
print("%d <<   4 = %d\n", t18i8, t18i8 <<   t18d4);
print("%d <<   8 = %d\n", t18i8, t18i8 <<   t18d8);
print("%d <<  16 = %d\n", t18i8, t18i8 <<  t18d16);
print("%d <<  32 = %d\n", t18i8, t18i8 <<  t18d32);
print("%d <<  64 = %d\n", t18i8, t18i8 <<  t18d64);
print("%d << 128 = %d\n", t18i8, t18i8 << t18d128);
print("%d >>   0 = %d\n", t18i8, t18i8 >>   t18d0);
print("%d >>   2 = %d\n", t18i8, t18i8 >>   t18d2);
print("%d >>   4 = %d\n", t18i8, t18i8 >>   t18d4);
print("%d >>   8 = %d\n", t18i8, t18i8 >>   t18d8);
print("%d >>  16 = %d\n", t18i8, t18i8 >>  t18d16);
print("%d >>  32 = %d\n", t18i8, t18i8 >>  t18d32);
print("%d >>  64 = %d\n", t18i8, t18i8 >>  t18d64);
print("%d >> 128 = %d\n", t18i8, t18i8 >> t18d128);
print("%d <<   0 = %d\n", t18u8, t18u8 <<   t18d0);
print("%d <<   2 = %d\n", t18u8, t18u8 <<   t18d2);
print("%d <<   4 = %d\n", t18u8, t18u8 <<   t18d4);
print("%d <<   8 = %d\n", t18u8, t18u8 <<   t18d8);
print("%d <<  16 = %d\n", t18u8, t18u8 <<  t18d16);
print("%d <<  32 = %d\n", t18u8, t18u8 <<  t18d32);
print("%d <<  64 = %d\n", t18u8, t18u8 <<  t18d64);
print("%d << 128 = %d\n", t18u8, t18u8 << t18d128);
print("%d >>   0 = %d\n", t18u8, t18u8 >>   t18d0);
print("%d >>   2 = %d\n", t18u8, t18u8 >>   t18d2);
print("%d >>   4 = %d\n", t18u8, t18u8 >>   t18d4);
print("%d >>   8 = %d\n", t18u8, t18u8 >>   t18d8);
print("%d >>  16 = %d\n", t18u8, t18u8 >>  t18d16);
print("%d >>  32 = %d\n", t18u8, t18u8 >>  t18d32);
print("%d >>  64 = %d\n", t18u8, t18u8 >>  t18d64);
print("%d >> 128 = %d\n", t18u8, t18u8 >> t18d128);
print("%d <<   0 = %d\n", t18i16, t18i16 <<   t18d0);
print("%d <<   2 = %d\n", t18i16, t18i16 <<   t18d2);
print("%d <<   4 = %d\n", t18i16, t18i16 <<   t18d4);
print("%d <<   8 = %d\n", t18i16, t18i16 <<   t18d8);
print("%d <<  16 = %d\n", t18i16, t18i16 <<  t18d16);
print("%d <<  32 = %d\n", t18i16, t18i16 <<  t18d32);
print("%d <<  64 = %d\n", t18i16, t18i16 <<  t18d64);
print("%d << 128 = %d\n", t18i16, t18i16 << t18d128);
print("%d >>   0 = %d\n", t18i16, t18i16 >>   t18d0);
print("%d >>   2 = %d\n", t18i16, t18i16 >>   t18d2);
print("%d >>   4 = %d\n", t18i16, t18i16 >>   t18d4);
print("%d >>   8 = %d\n", t18i16, t18i16 >>   t18d8);
print("%d >>  16 = %d\n", t18i16, t18i16 >>  t18d16);
print("%d >>  32 = %d\n", t18i16, t18i16 >>  t18d32);
print("%d >>  64 = %d\n", t18i16, t18i16 >>  t18d64);
print("%d >> 128 = %d\n", t18i16, t18i16 >> t18d128);
print("%d <<   0 = %d\n", t18u16, t18u16 <<   t18d0);
print("%d <<   2 = %d\n", t18u16, t18u16 <<   t18d2);
print("%d <<   4 = %d\n", t18u16, t18u16 <<   t18d4);
print("%d <<   8 = %d\n", t18u16, t18u16 <<   t18d8);
print("%d <<  16 = %d\n", t18u16, t18u16 <<  t18d16);
print("%d <<  32 = %d\n", t18u16, t18u16 <<  t18d32);
print("%d <<  64 = %d\n", t18u16, t18u16 <<  t18d64);
print("%d << 128 = %d\n", t18u16, t18u16 << t18d128);
print("%d >>   0 = %d\n", t18u16, t18u16 >>   t18d0);
print("%d >>   2 = %d\n", t18u16, t18u16 >>   t18d2);
print("%d >>   4 = %d\n", t18u16, t18u16 >>   t18d4);
print("%d >>   8 = %d\n", t18u16, t18u16 >>   t18d8);
print("%d >>  16 = %d\n", t18u16, t18u16 >>  t18d16);
print("%d >>  32 = %d\n", t18u16, t18u16 >>  t18d32);
print("%d >>  64 = %d\n", t18u16, t18u16 >>  t18d64);
print("%d >> 128 = %d\n", t18u16, t18u16 >> t18d128);
print("%d <<   0 = %d\n", t18i32, t18i32 <<   t18d0);
print("%d <<   2 = %d\n", t18i32, t18i32 <<   t18d2);
print("%d <<   4 = %d\n", t18i32, t18i32 <<   t18d4);
print("%d <<   8 = %d\n", t18i32, t18i32 <<   t18d8);
print("%d <<  16 = %d\n", t18i32, t18i32 <<  t18d16);
print("%d <<  32 = %d\n", t18i32, t18i32 <<  t18d32);
print("%d <<  64 = %d\n", t18i32, t18i32 <<  t18d64);
print("%d << 128 = %d\n", t18i32, t18i32 << t18d128);
print("%d >>   0 = %d\n", t18i32, t18i32 >>   t18d0);
print("%d >>   2 = %d\n", t18i32, t18i32 >>   t18d2);
print("%d >>   4 = %d\n", t18i32, t18i32 >>   t18d4);
print("%d >>   8 = %d\n", t18i32, t18i32 >>   t18d8);
print("%d >>  16 = %d\n", t18i32, t18i32 >>  t18d16);
print("%d >>  32 = %d\n", t18i32, t18i32 >>  t18d32);
print("%d >>  64 = %d\n", t18i32, t18i32 >>  t18d64);
print("%d >> 128 = %d\n", t18i32, t18i32 >> t18d128);
print("%d <<   0 = %d\n", t18u32, t18u32 <<   t18d0);
print("%d <<   2 = %d\n", t18u32, t18u32 <<   t18d2);
print("%d <<   4 = %d\n", t18u32, t18u32 <<   t18d4);
print("%d <<   8 = %d\n", t18u32, t18u32 <<   t18d8);
print("%d <<  16 = %d\n", t18u32, t18u32 <<  t18d16);
print("%d <<  32 = %d\n", t18u32, t18u32 <<  t18d32);
print("%d <<  64 = %d\n", t18u32, t18u32 <<  t18d64);
print("%d << 128 = %d\n", t18u32, t18u32 << t18d128);
print("%d >>   0 = %d\n", t18u32, t18u32 >>   t18d0);
print("%d >>   2 = %d\n", t18u32, t18u32 >>   t18d2);
print("%d >>   4 = %d\n", t18u32, t18u32 >>   t18d4);
print("%d >>   8 = %d\n", t18u32, t18u32 >>   t18d8);
print("%d >>  16 = %d\n", t18u32, t18u32 >>  t18d16);
print("%d >>  32 = %d\n", t18u32, t18u32 >>  t18d32);
print("%d >>  64 = %d\n", t18u32, t18u32 >>  t18d64);
print("%d >> 128 = %d\n", t18u32, t18u32 >> t18d128);
print("%d <<   0 = %d\n", t18i64, t18i64 <<   t18d0);
print("%d <<   2 = %d\n", t18i64, t18i64 <<   t18d2);
print("%d <<   4 = %d\n", t18i64, t18i64 <<   t18d4);
print("%d <<   8 = %d\n", t18i64, t18i64 <<   t18d8);
print("%d <<  16 = %d\n", t18i64, t18i64 <<  t18d16);
print("%d <<  32 = %d\n", t18i64, t18i64 <<  t18d32);
print("%d <<  64 = %d\n", t18i64, t18i64 <<  t18d64);
print("%d << 128 = %d\n", t18i64, t18i64 << t18d128);
print("%d >>   0 = %d\n", t18i64, t18i64 >>   t18d0);
print("%d >>   2 = %d\n", t18i64, t18i64 >>   t18d2);
print("%d >>   4 = %d\n", t18i64, t18i64 >>   t18d4);
print("%d >>   8 = %d\n", t18i64, t18i64 >>   t18d8);
print("%d >>  16 = %d\n", t18i64, t18i64 >>  t18d16);
print("%d >>  32 = %d\n", t18i64, t18i64 >>  t18d32);
print("%d >>  64 = %d\n", t18i64, t18i64 >>  t18d64);
print("%d >> 128 = %d\n", t18i64, t18i64 >> t18d128);
print("%d <<   0 = %d\n", t18u64, t18u64 <<   t18d0);
print("%d <<   2 = %d\n", t18u64, t18u64 <<   t18d2);
print("%d <<   4 = %d\n", t18u64, t18u64 <<   t18d4);
print("%d <<   8 = %d\n", t18u64, t18u64 <<   t18d8);
print("%d <<  16 = %d\n", t18u64, t18u64 <<  t18d16);
print("%d <<  32 = %d\n", t18u64, t18u64 <<  t18d32);
print("%d <<  64 = %d\n", t18u64, t18u64 <<  t18d64);
print("%d << 128 = %d\n", t18u64, t18u64 << t18d128);
print("%d >>   0 = %d\n", t18u64, t18u64 >>   t18d0);
print("%d >>   2 = %d\n", t18u64, t18u64 >>   t18d2);
print("%d >>   4 = %d\n", t18u64, t18u64 >>   t18d4);
print("%d >>   8 = %d\n", t18u64, t18u64 >>   t18d8);
print("%d >>  16 = %d\n", t18u64, t18u64 >>  t18d16);
print("%d >>  32 = %d\n", t18u64, t18u64 >>  t18d32);
print("%d >>  64 = %d\n", t18u64, t18u64 >>  t18d64);
print("%d >> 128 = %d\n", t18u64, t18u64 >> t18d128);
print("%d <<   0 = %d\n", t18d32, t18d32 <<   t18d0);
print("%d <<   2 = %d\n", t18d32, t18d32 <<   t18d2);
print("%d <<   4 = %d\n", t18d32, t18d32 <<   t18d4);
print("%d <<   8 = %d\n", t18d32, t18d32 <<   t18d8);
print("%d <<  16 = %d\n", t18d32, t18d32 <<  t18d16);
print("%d <<  32 = %d\n", t18d32, t18d32 <<  t18d32);
print("%d <<  64 = %d\n", t18d32, t18d32 <<  t18d64);
print("%d << 128 = %d\n", t18d32, t18d32 << t18d128);
print("%d >>   0 = %d\n", t18d32, t18d32 >>   t18d0);
print("%d >>   2 = %d\n", t18d32, t18d32 >>   t18d2);
print("%d >>   4 = %d\n", t18d32, t18d32 >>   t18d4);
print("%d >>   8 = %d\n", t18d32, t18d32 >>   t18d8);
print("%d >>  16 = %d\n", t18d32, t18d32 >>  t18d16);
print("%d >>  32 = %d\n", t18d32, t18d32 >>  t18d32);
print("%d >>  64 = %d\n", t18d32, t18d32 >>  t18d64);
print("%d >> 128 = %d\n", t18d32, t18d32 >> t18d128);
print("%d <<   0 = %d\n", t18d64, t18d64 <<   t18d0);
print("%d <<   2 = %d\n", t18d64, t18d64 <<   t18d2);
print("%d <<   4 = %d\n", t18d64, t18d64 <<   t18d4);
print("%d <<   8 = %d\n", t18d64, t18d64 <<   t18d8);
print("%d <<  16 = %d\n", t18d64, t18d64 <<  t18d16);
print("%d <<  32 = %d\n", t18d64, t18d64 <<  t18d32);
print("%d <<  64 = %d\n", t18d64, t18d64 <<  t18d64);
print("%d << 128 = %d\n", t18d64, t18d64 << t18d128);
print("%d >>   0 = %d\n", t18d64, t18d64 >>   t18d0);
print("%d >>   2 = %d\n", t18d64, t18d64 >>   t18d2);
print("%d >>   4 = %d\n", t18d64, t18d64 >>   t18d4);
print("%d >>   8 = %d\n", t18d64, t18d64 >>   t18d8);
print("%d >>  16 = %d\n", t18d64, t18d64 >>  t18d16);
print("%d >>  32 = %d\n", t18d64, t18d64 >>  t18d32);
print("%d >>  64 = %d\n", t18d64, t18d64 >>  t18d64);
print("%d >> 128 = %d\n", t18d64, t18d64 >> t18d128);
print("%d <<   0 = %d\n", t18w, t18w <<   t18d0);
print("%d <<   2 = %d\n", t18w, t18w <<   t18d2);
print("%d <<   4 = %d\n", t18w, t18w <<   t18d4);
print("%d <<   8 = %d\n", t18w, t18w <<   t18d8);
print("%d <<  16 = %d\n", t18w, t18w <<  t18d16);
print("%d <<  32 = %d\n", t18w, t18w <<  t18d32);
print("%d <<  64 = %d\n", t18w, t18w <<  t18d64);
print("%d << 128 = %d\n", t18w, t18w << t18d128);
print("%d >>   0 = %d\n", t18w, t18w >>   t18d0);
print("%d >>   2 = %d\n", t18w, t18w >>   t18d2);
print("%d >>   4 = %d\n", t18w, t18w >>   t18d4);
print("%d >>   8 = %d\n", t18w, t18w >>   t18d8);
print("%d >>  16 = %d\n", t18w, t18w >>  t18d16);
print("%d >>  32 = %d\n", t18w, t18w >>  t18d32);
print("%d >>  64 = %d\n", t18w, t18w >>  t18d64);
print("%d >> 128 = %d\n", t18w, t18w >> t18d128);
print("%d <<   0 = %d\n", t18f, t18f <<   t18d0);
print("%d <<   2 = %d\n", t18f, t18f <<   t18d2);
print("%d <<   4 = %d\n", t18f, t18f <<   t18d4);
print("%d <<   8 = %d\n", t18f, t18f <<   t18d8);
print("%d <<  16 = %d\n", t18f, t18f <<  t18d16);
print("%d <<  32 = %d\n", t18f, t18f <<  t18d32);
print("%d <<  64 = %d\n", t18f, t18f <<  t18d64);
print("%d << 128 = %d\n", t18f, t18f << t18d128);
print("%d >>   0 = %d\n", t18f, t18f >>   t18d0);
print("%d >>   2 = %d\n", t18f, t18f >>   t18d2);
print("%d >>   4 = %d\n", t18f, t18f >>   t18d4);
print("%d >>   8 = %d\n", t18f, t18f >>   t18d8);
print("%d >>  16 = %d\n", t18f, t18f >>  t18d16);
print("%d >>  32 = %d\n", t18f, t18f >>  t18d32);
print("%d >>  64 = %d\n", t18f, t18f >>  t18d64);
print("%d >> 128 = %d\n", t18f, t18f >> t18d128);
print("%d <<   0 = %d\n", t18z, t18z <<   t18d0);
print("%d <<   2 = %d\n", t18z, t18z <<   t18d2);
print("%d <<   4 = %d\n", t18z, t18z <<   t18d4);
print("%d <<   8 = %d\n", t18z, t18z <<   t18d8);
print("%d <<  16 = %d\n", t18z, t18z <<  t18d16);
print("%d <<  32 = %d\n", t18z, t18z <<  t18d32);
print("%d <<  64 = %d\n", t18z, t18z <<  t18d64);
print("%d << 128 = %d\n", t18z, t18z << t18d128);
print("%d >>   0 = %d\n", t18z, t18z >>   t18d0);
print("%d >>   2 = %d\n", t18z, t18z >>   t18d2);
print("%d >>   4 = %d\n", t18z, t18z >>   t18d4);
print("%d >>   8 = %d\n", t18z, t18z >>   t18d8);
print("%d >>  16 = %d\n", t18z, t18z >>  t18d16);
print("%d >>  32 = %d\n", t18z, t18z >>  t18d32);
print("%d >>  64 = %d\n", t18z, t18z >>  t18d64);
print("%d >> 128 = %d\n", t18z, t18z >> t18d128);
print("%d <<   0 = %d\n", t18x, t18x <<   t18d0);
print("%d <<   2 = %d\n", t18x, t18x <<   t18d2);
print("%d <<   4 = %d\n", t18x, t18x <<   t18d4);
print("%d <<   8 = %d\n", t18x, t18x <<   t18d8);
print("%d <<  16 = %d\n", t18x, t18x <<  t18d16);
print("%d <<  32 = %d\n", t18x, t18x <<  t18d32);
print("%d <<  64 = %d\n", t18x, t18x <<  t18d64);
print("%d << 128 = %d\n", t18x, t18x << t18d128);
print("%d >>   0 = %d\n", t18x, t18x >>   t18d0);
print("%d >>   2 = %d\n", t18x, t18x >>   t18d2);
print("%d >>   4 = %d\n", t18x, t18x >>   t18d4);
print("%d >>   8 = %d\n", t18x, t18x >>   t18d8);
print("%d >>  16 = %d\n", t18x, t18x >>  t18d16);
print("%d >>  32 = %d\n", t18x, t18x >>  t18d32);
print("%d >>  64 = %d\n", t18x, t18x >>  t18d64);
print("%d >> 128 = %d\n", t18x, t18x >> t18d128);
print("%d <<   0 = %d\n", t18q, t18q <<   t18d0);
print("%d <<   2 = %d\n", t18q, t18q <<   t18d2);
print("%d <<   4 = %d\n", t18q, t18q <<   t18d4);
print("%d <<   8 = %d\n", t18q, t18q <<   t18d8);
print("%d <<  16 = %d\n", t18q, t18q <<  t18d16);
print("%d <<  32 = %d\n", t18q, t18q <<  t18d32);
print("%d <<  64 = %d\n", t18q, t18q <<  t18d64);
print("%d << 128 = %d\n", t18q, t18q << t18d128);
print("%d >>   0 = %d\n", t18q, t18q >>   t18d0);
print("%d >>   2 = %d\n", t18q, t18q >>   t18d2);
print("%d >>   4 = %d\n", t18q, t18q >>   t18d4);
print("%d >>   8 = %d\n", t18q, t18q >>   t18d8);
print("%d >>  16 = %d\n", t18q, t18q >>  t18d16);
print("%d >>  32 = %d\n", t18q, t18q >>  t18d32);
print("%d >>  64 = %d\n", t18q, t18q >>  t18d64);
print("%d >> 128 = %d\n", t18q, t18q >> t18d128);
print("%d <<   0 = %d\n", t18r, t18r <<   t18d0);
print("%d <<   2 = %d\n", t18r, t18r <<   t18d2);
print("%d <<   4 = %d\n", t18r, t18r <<   t18d4);
print("%d <<   8 = %d\n", t18r, t18r <<   t18d8);
print("%d <<  16 = %d\n", t18r, t18r <<  t18d16);
print("%d <<  32 = %d\n", t18r, t18r <<  t18d32);
print("%d <<  64 = %d\n", t18r, t18r <<  t18d64);
print("%d << 128 = %d\n", t18r, t18r << t18d128);
print("%d >>   0 = %d\n", t18r, t18r >>   t18d0);
print("%d >>   2 = %d\n", t18r, t18r >>   t18d2);
print("%d >>   4 = %d\n", t18r, t18r >>   t18d4);
print("%d >>   8 = %d\n", t18r, t18r >>   t18d8);
print("%d >>  16 = %d\n", t18r, t18r >>  t18d16);
print("%d >>  32 = %d\n", t18r, t18r >>  t18d32);
print("%d >>  64 = %d\n", t18r, t18r >>  t18d64);
print("%d >> 128 = %d\n", t18r, t18r >> t18d128);
print("%d <<   0 = %d\n", t18dd, t18dd <<   t18d0);
print("%d <<   2 = %d\n", t18dd, t18dd <<   t18d2);
print("%d <<   4 = %d\n", t18dd, t18dd <<   t18d4);
print("%d <<   8 = %d\n", t18dd, t18dd <<   t18d8);
print("%d <<  16 = %d\n", t18dd, t18dd <<  t18d16);
print("%d <<  32 = %d\n", t18dd, t18dd <<  t18d32);
print("%d <<  64 = %d\n", t18dd, t18dd <<  t18d64);
print("%d << 128 = %d\n", t18dd, t18dd << t18d128);
print("%d >>   0 = %d\n", t18dd, t18dd >>   t18d0);
print("%d >>   2 = %d\n", t18dd, t18dd >>   t18d2);
print("%d >>   4 = %d\n", t18dd, t18dd >>   t18d4);
print("%d >>   8 = %d\n", t18dd, t18dd >>   t18d8);
print("%d >>  16 = %d\n", t18dd, t18dd >>  t18d16);
print("%d >>  32 = %d\n", t18dd, t18dd >>  t18d32);
print("%d >>  64 = %d\n", t18dd, t18dd >>  t18d64);
print("%d >> 128 = %d\n", t18dd, t18dd >> t18d128);
print("%d <<   0 = %d\n", t18qq, t18qq <<   t18d0);
print("%d <<   2 = %d\n", t18qq, t18qq <<   t18d2);
print("%d <<   4 = %d\n", t18qq, t18qq <<   t18d4);
print("%d <<   8 = %d\n", t18qq, t18qq <<   t18d8);
print("%d <<  16 = %d\n", t18qq, t18qq <<  t18d16);
print("%d <<  32 = %d\n", t18qq, t18qq <<  t18d32);
print("%d <<  64 = %d\n", t18qq, t18qq <<  t18d64);
print("%d << 128 = %d\n", t18qq, t18qq << t18d128);
print("%d >>   0 = %d\n", t18qq, t18qq >>   t18d0);
print("%d >>   2 = %d\n", t18qq, t18qq >>   t18d2);
print("%d >>   4 = %d\n", t18qq, t18qq >>   t18d4);
print("%d >>   8 = %d\n", t18qq, t18qq >>   t18d8);
print("%d >>  16 = %d\n", t18qq, t18qq >>  t18d16);
print("%d >>  32 = %d\n", t18qq, t18qq >>  t18d32);
print("%d >>  64 = %d\n", t18qq, t18qq >>  t18d64);
print("%d >> 128 = %d\n", t18qq, t18qq >> t18d128);
print("%d <<   0 = %d\n", t18cc, t18cc <<   t18d0);
print("%d <<   2 = %d\n", t18cc, t18cc <<   t18d2);
print("%d <<   4 = %d\n", t18cc, t18cc <<   t18d4);
print("%d <<   8 = %d\n", t18cc, t18cc <<   t18d8);
print("%d <<  16 = %d\n", t18cc, t18cc <<  t18d16);
print("%d <<  32 = %d\n", t18cc, t18cc <<  t18d32);
print("%d <<  64 = %d\n", t18cc, t18cc <<  t18d64);
print("%d << 128 = %d\n", t18cc, t18cc << t18d128);
print("%d >>   0 = %d\n", t18cc, t18cc >>   t18d0);
print("%d >>   2 = %d\n", t18cc, t18cc >>   t18d2);
print("%d >>   4 = %d\n", t18cc, t18cc >>   t18d4);
print("%d >>   8 = %d\n", t18cc, t18cc >>   t18d8);
print("%d >>  16 = %d\n", t18cc, t18cc >>  t18d16);
print("%d >>  32 = %d\n", t18cc, t18cc >>  t18d32);
print("%d >>  64 = %d\n", t18cc, t18cc >>  t18d64);
print("%d >> 128 = %d\n", t18cc, t18cc >> t18d128);
print("%d <<   0 = %d\n", t18n, t18n <<   t18d0);
print("%d <<   2 = %d\n", t18n, t18n <<   t18d2);
print("%d <<   4 = %d\n", t18n, t18n <<   t18d4);
print("%d <<   8 = %d\n", t18n, t18n <<   t18d8);
print("%d <<  16 = %d\n", t18n, t18n <<  t18d16);
print("%d <<  32 = %d\n", t18n, t18n <<  t18d32);
print("%d <<  64 = %d\n", t18n, t18n <<  t18d64);
print("%d << 128 = %d\n", t18n, t18n << t18d128);
print("%d >>   0 = %d\n", t18n, t18n >>   t18d0);
print("%d >>   2 = %d\n", t18n, t18n >>   t18d2);
print("%d >>   4 = %d\n", t18n, t18n >>   t18d4);
print("%d >>   8 = %d\n", t18n, t18n >>   t18d8);
print("%d >>  16 = %d\n", t18n, t18n >>  t18d16);
print("%d >>  32 = %d\n", t18n, t18n >>  t18d32);
print("%d >>  64 = %d\n", t18n, t18n >>  t18d64);
print("%d >> 128 = %d\n", t18n, t18n >> t18d128);
auto		t18a0   = 0;
auto		t18a2   = 2;
auto		t18a4   = 4;
auto		t18a8   = 8;
auto		t18a16  = 16;
auto		t18a32  = 32;
auto		t18a64  = 64;
auto		t18a128 = 128;
print("%d <<   0 = %d\n", t18i8, t18i8 <<   t18a0);
print("%d <<   2 = %d\n", t18i8, t18i8 <<   t18a2);
print("%d <<   4 = %d\n", t18i8, t18i8 <<   t18a4);
print("%d <<   8 = %d\n", t18i8, t18i8 <<   t18a8);
print("%d <<  16 = %d\n", t18i8, t18i8 <<  t18a16);
print("%d <<  32 = %d\n", t18i8, t18i8 <<  t18a32);
print("%d <<  64 = %d\n", t18i8, t18i8 <<  t18a64);
print("%d << 128 = %d\n", t18i8, t18i8 << t18a128);
print("%d >>   0 = %d\n", t18i8, t18i8 >>   t18a0);
print("%d >>   2 = %d\n", t18i8, t18i8 >>   t18a2);
print("%d >>   4 = %d\n", t18i8, t18i8 >>   t18a4);
print("%d >>   8 = %d\n", t18i8, t18i8 >>   t18a8);
print("%d >>  16 = %d\n", t18i8, t18i8 >>  t18a16);
print("%d >>  32 = %d\n", t18i8, t18i8 >>  t18a32);
print("%d >>  64 = %d\n", t18i8, t18i8 >>  t18a64);
print("%d >> 128 = %d\n", t18i8, t18i8 >> t18a128);
print("%d <<   0 = %d\n", t18u8, t18u8 <<   t18a0);
print("%d <<   2 = %d\n", t18u8, t18u8 <<   t18a2);
print("%d <<   4 = %d\n", t18u8, t18u8 <<   t18a4);
print("%d <<   8 = %d\n", t18u8, t18u8 <<   t18a8);
print("%d <<  16 = %d\n", t18u8, t18u8 <<  t18a16);
print("%d <<  32 = %d\n", t18u8, t18u8 <<  t18a32);
print("%d <<  64 = %d\n", t18u8, t18u8 <<  t18a64);
print("%d << 128 = %d\n", t18u8, t18u8 << t18a128);
print("%d >>   0 = %d\n", t18u8, t18u8 >>   t18a0);
print("%d >>   2 = %d\n", t18u8, t18u8 >>   t18a2);
print("%d >>   4 = %d\n", t18u8, t18u8 >>   t18a4);
print("%d >>   8 = %d\n", t18u8, t18u8 >>   t18a8);
print("%d >>  16 = %d\n", t18u8, t18u8 >>  t18a16);
print("%d >>  32 = %d\n", t18u8, t18u8 >>  t18a32);
print("%d >>  64 = %d\n", t18u8, t18u8 >>  t18a64);
print("%d >> 128 = %d\n", t18u8, t18u8 >> t18a128);
print("%d <<   0 = %d\n", t18i16, t18i16 <<   t18a0);
print("%d <<   2 = %d\n", t18i16, t18i16 <<   t18a2);
print("%d <<   4 = %d\n", t18i16, t18i16 <<   t18a4);
print("%d <<   8 = %d\n", t18i16, t18i16 <<   t18a8);
print("%d <<  16 = %d\n", t18i16, t18i16 <<  t18a16);
print("%d <<  32 = %d\n", t18i16, t18i16 <<  t18a32);
print("%d <<  64 = %d\n", t18i16, t18i16 <<  t18a64);
print("%d << 128 = %d\n", t18i16, t18i16 << t18a128);
print("%d >>   0 = %d\n", t18i16, t18i16 >>   t18a0);
print("%d >>   2 = %d\n", t18i16, t18i16 >>   t18a2);
print("%d >>   4 = %d\n", t18i16, t18i16 >>   t18a4);
print("%d >>   8 = %d\n", t18i16, t18i16 >>   t18a8);
print("%d >>  16 = %d\n", t18i16, t18i16 >>  t18a16);
print("%d >>  32 = %d\n", t18i16, t18i16 >>  t18a32);
print("%d >>  64 = %d\n", t18i16, t18i16 >>  t18a64);
print("%d >> 128 = %d\n", t18i16, t18i16 >> t18a128);
print("%d <<   0 = %d\n", t18u16, t18u16 <<   t18a0);
print("%d <<   2 = %d\n", t18u16, t18u16 <<   t18a2);
print("%d <<   4 = %d\n", t18u16, t18u16 <<   t18a4);
print("%d <<   8 = %d\n", t18u16, t18u16 <<   t18a8);
print("%d <<  16 = %d\n", t18u16, t18u16 <<  t18a16);
print("%d <<  32 = %d\n", t18u16, t18u16 <<  t18a32);
print("%d <<  64 = %d\n", t18u16, t18u16 <<  t18a64);
print("%d << 128 = %d\n", t18u16, t18u16 << t18a128);
print("%d >>   0 = %d\n", t18u16, t18u16 >>   t18a0);
print("%d >>   2 = %d\n", t18u16, t18u16 >>   t18a2);
print("%d >>   4 = %d\n", t18u16, t18u16 >>   t18a4);
print("%d >>   8 = %d\n", t18u16, t18u16 >>   t18a8);
print("%d >>  16 = %d\n", t18u16, t18u16 >>  t18a16);
print("%d >>  32 = %d\n", t18u16, t18u16 >>  t18a32);
print("%d >>  64 = %d\n", t18u16, t18u16 >>  t18a64);
print("%d >> 128 = %d\n", t18u16, t18u16 >> t18a128);
print("%d <<   0 = %d\n", t18i32, t18i32 <<   t18a0);
print("%d <<   2 = %d\n", t18i32, t18i32 <<   t18a2);
print("%d <<   4 = %d\n", t18i32, t18i32 <<   t18a4);
print("%d <<   8 = %d\n", t18i32, t18i32 <<   t18a8);
print("%d <<  16 = %d\n", t18i32, t18i32 <<  t18a16);
print("%d <<  32 = %d\n", t18i32, t18i32 <<  t18a32);
print("%d <<  64 = %d\n", t18i32, t18i32 <<  t18a64);
print("%d << 128 = %d\n", t18i32, t18i32 << t18a128);
print("%d >>   0 = %d\n", t18i32, t18i32 >>   t18a0);
print("%d >>   2 = %d\n", t18i32, t18i32 >>   t18a2);
print("%d >>   4 = %d\n", t18i32, t18i32 >>   t18a4);
print("%d >>   8 = %d\n", t18i32, t18i32 >>   t18a8);
print("%d >>  16 = %d\n", t18i32, t18i32 >>  t18a16);
print("%d >>  32 = %d\n", t18i32, t18i32 >>  t18a32);
print("%d >>  64 = %d\n", t18i32, t18i32 >>  t18a64);
print("%d >> 128 = %d\n", t18i32, t18i32 >> t18a128);
print("%d <<   0 = %d\n", t18u32, t18u32 <<   t18a0);
print("%d <<   2 = %d\n", t18u32, t18u32 <<   t18a2);
print("%d <<   4 = %d\n", t18u32, t18u32 <<   t18a4);
print("%d <<   8 = %d\n", t18u32, t18u32 <<   t18a8);
print("%d <<  16 = %d\n", t18u32, t18u32 <<  t18a16);
print("%d <<  32 = %d\n", t18u32, t18u32 <<  t18a32);
print("%d <<  64 = %d\n", t18u32, t18u32 <<  t18a64);
print("%d << 128 = %d\n", t18u32, t18u32 << t18a128);
print("%d >>   0 = %d\n", t18u32, t18u32 >>   t18a0);
print("%d >>   2 = %d\n", t18u32, t18u32 >>   t18a2);
print("%d >>   4 = %d\n", t18u32, t18u32 >>   t18a4);
print("%d >>   8 = %d\n", t18u32, t18u32 >>   t18a8);
print("%d >>  16 = %d\n", t18u32, t18u32 >>  t18a16);
print("%d >>  32 = %d\n", t18u32, t18u32 >>  t18a32);
print("%d >>  64 = %d\n", t18u32, t18u32 >>  t18a64);
print("%d >> 128 = %d\n", t18u32, t18u32 >> t18a128);
print("%d <<   0 = %d\n", t18i64, t18i64 <<   t18a0);
print("%d <<   2 = %d\n", t18i64, t18i64 <<   t18a2);
print("%d <<   4 = %d\n", t18i64, t18i64 <<   t18a4);
print("%d <<   8 = %d\n", t18i64, t18i64 <<   t18a8);
print("%d <<  16 = %d\n", t18i64, t18i64 <<  t18a16);
print("%d <<  32 = %d\n", t18i64, t18i64 <<  t18a32);
print("%d <<  64 = %d\n", t18i64, t18i64 <<  t18a64);
print("%d << 128 = %d\n", t18i64, t18i64 << t18a128);
print("%d >>   0 = %d\n", t18i64, t18i64 >>   t18a0);
print("%d >>   2 = %d\n", t18i64, t18i64 >>   t18a2);
print("%d >>   4 = %d\n", t18i64, t18i64 >>   t18a4);
print("%d >>   8 = %d\n", t18i64, t18i64 >>   t18a8);
print("%d >>  16 = %d\n", t18i64, t18i64 >>  t18a16);
print("%d >>  32 = %d\n", t18i64, t18i64 >>  t18a32);
print("%d >>  64 = %d\n", t18i64, t18i64 >>  t18a64);
print("%d >> 128 = %d\n", t18i64, t18i64 >> t18a128);
print("%d <<   0 = %d\n", t18u64, t18u64 <<   t18a0);
print("%d <<   2 = %d\n", t18u64, t18u64 <<   t18a2);
print("%d <<   4 = %d\n", t18u64, t18u64 <<   t18a4);
print("%d <<   8 = %d\n", t18u64, t18u64 <<   t18a8);
print("%d <<  16 = %d\n", t18u64, t18u64 <<  t18a16);
print("%d <<  32 = %d\n", t18u64, t18u64 <<  t18a32);
print("%d <<  64 = %d\n", t18u64, t18u64 <<  t18a64);
print("%d << 128 = %d\n", t18u64, t18u64 << t18a128);
print("%d >>   0 = %d\n", t18u64, t18u64 >>   t18a0);
print("%d >>   2 = %d\n", t18u64, t18u64 >>   t18a2);
print("%d >>   4 = %d\n", t18u64, t18u64 >>   t18a4);
print("%d >>   8 = %d\n", t18u64, t18u64 >>   t18a8);
print("%d >>  16 = %d\n", t18u64, t18u64 >>  t18a16);
print("%d >>  32 = %d\n", t18u64, t18u64 >>  t18a32);
print("%d >>  64 = %d\n", t18u64, t18u64 >>  t18a64);
print("%d >> 128 = %d\n", t18u64, t18u64 >> t18a128);
print("%d <<   0 = %d\n", t18a32, t18a32 <<   t18a0);
print("%d <<   2 = %d\n", t18a32, t18a32 <<   t18a2);
print("%d <<   4 = %d\n", t18a32, t18a32 <<   t18a4);
print("%d <<   8 = %d\n", t18a32, t18a32 <<   t18a8);
print("%d <<  16 = %d\n", t18a32, t18a32 <<  t18a16);
print("%d <<  32 = %d\n", t18a32, t18a32 <<  t18a32);
print("%d <<  64 = %d\n", t18a32, t18a32 <<  t18a64);
print("%d << 128 = %d\n", t18a32, t18a32 << t18a128);
print("%d >>   0 = %d\n", t18a32, t18a32 >>   t18a0);
print("%d >>   2 = %d\n", t18a32, t18a32 >>   t18a2);
print("%d >>   4 = %d\n", t18a32, t18a32 >>   t18a4);
print("%d >>   8 = %d\n", t18a32, t18a32 >>   t18a8);
print("%d >>  16 = %d\n", t18a32, t18a32 >>  t18a16);
print("%d >>  32 = %d\n", t18a32, t18a32 >>  t18a32);
print("%d >>  64 = %d\n", t18a32, t18a32 >>  t18a64);
print("%d >> 128 = %d\n", t18a32, t18a32 >> t18a128);
print("%d <<   0 = %d\n", t18a64, t18a64 <<   t18a0);
print("%d <<   2 = %d\n", t18a64, t18a64 <<   t18a2);
print("%d <<   4 = %d\n", t18a64, t18a64 <<   t18a4);
print("%d <<   8 = %d\n", t18a64, t18a64 <<   t18a8);
print("%d <<  16 = %d\n", t18a64, t18a64 <<  t18a16);
print("%d <<  32 = %d\n", t18a64, t18a64 <<  t18a32);
print("%d <<  64 = %d\n", t18a64, t18a64 <<  t18a64);
print("%d << 128 = %d\n", t18a64, t18a64 << t18a128);
print("%d >>   0 = %d\n", t18a64, t18a64 >>   t18a0);
print("%d >>   2 = %d\n", t18a64, t18a64 >>   t18a2);
print("%d >>   4 = %d\n", t18a64, t18a64 >>   t18a4);
print("%d >>   8 = %d\n", t18a64, t18a64 >>   t18a8);
print("%d >>  16 = %d\n", t18a64, t18a64 >>  t18a16);
print("%d >>  32 = %d\n", t18a64, t18a64 >>  t18a32);
print("%d >>  64 = %d\n", t18a64, t18a64 >>  t18a64);
print("%d >> 128 = %d\n", t18a64, t18a64 >> t18a128);
print("%d <<   0 = %d\n", t18w, t18w <<   t18a0);
print("%d <<   2 = %d\n", t18w, t18w <<   t18a2);
print("%d <<   4 = %d\n", t18w, t18w <<   t18a4);
print("%d <<   8 = %d\n", t18w, t18w <<   t18a8);
print("%d <<  16 = %d\n", t18w, t18w <<  t18a16);
print("%d <<  32 = %d\n", t18w, t18w <<  t18a32);
print("%d <<  64 = %d\n", t18w, t18w <<  t18a64);
print("%d << 128 = %d\n", t18w, t18w << t18a128);
print("%d >>   0 = %d\n", t18w, t18w >>   t18a0);
print("%d >>   2 = %d\n", t18w, t18w >>   t18a2);
print("%d >>   4 = %d\n", t18w, t18w >>   t18a4);
print("%d >>   8 = %d\n", t18w, t18w >>   t18a8);
print("%d >>  16 = %d\n", t18w, t18w >>  t18a16);
print("%d >>  32 = %d\n", t18w, t18w >>  t18a32);
print("%d >>  64 = %d\n", t18w, t18w >>  t18a64);
print("%d >> 128 = %d\n", t18w, t18w >> t18a128);
print("%d <<   0 = %d\n", t18f, t18f <<   t18a0);
print("%d <<   2 = %d\n", t18f, t18f <<   t18a2);
print("%d <<   4 = %d\n", t18f, t18f <<   t18a4);
print("%d <<   8 = %d\n", t18f, t18f <<   t18a8);
print("%d <<  16 = %d\n", t18f, t18f <<  t18a16);
print("%d <<  32 = %d\n", t18f, t18f <<  t18a32);
print("%d <<  64 = %d\n", t18f, t18f <<  t18a64);
print("%d << 128 = %d\n", t18f, t18f << t18a128);
print("%d >>   0 = %d\n", t18f, t18f >>   t18a0);
print("%d >>   2 = %d\n", t18f, t18f >>   t18a2);
print("%d >>   4 = %d\n", t18f, t18f >>   t18a4);
print("%d >>   8 = %d\n", t18f, t18f >>   t18a8);
print("%d >>  16 = %d\n", t18f, t18f >>  t18a16);
print("%d >>  32 = %d\n", t18f, t18f >>  t18a32);
print("%d >>  64 = %d\n", t18f, t18f >>  t18a64);
print("%d >> 128 = %d\n", t18f, t18f >> t18a128);
print("%d <<   0 = %d\n", t18z, t18z <<   t18a0);
print("%d <<   2 = %d\n", t18z, t18z <<   t18a2);
print("%d <<   4 = %d\n", t18z, t18z <<   t18a4);
print("%d <<   8 = %d\n", t18z, t18z <<   t18a8);
print("%d <<  16 = %d\n", t18z, t18z <<  t18a16);
print("%d <<  32 = %d\n", t18z, t18z <<  t18a32);
print("%d <<  64 = %d\n", t18z, t18z <<  t18a64);
print("%d << 128 = %d\n", t18z, t18z << t18a128);
print("%d >>   0 = %d\n", t18z, t18z >>   t18a0);
print("%d >>   2 = %d\n", t18z, t18z >>   t18a2);
print("%d >>   4 = %d\n", t18z, t18z >>   t18a4);
print("%d >>   8 = %d\n", t18z, t18z >>   t18a8);
print("%d >>  16 = %d\n", t18z, t18z >>  t18a16);
print("%d >>  32 = %d\n", t18z, t18z >>  t18a32);
print("%d >>  64 = %d\n", t18z, t18z >>  t18a64);
print("%d >> 128 = %d\n", t18z, t18z >> t18a128);
print("%d <<   0 = %d\n", t18x, t18x <<   t18a0);
print("%d <<   2 = %d\n", t18x, t18x <<   t18a2);
print("%d <<   4 = %d\n", t18x, t18x <<   t18a4);
print("%d <<   8 = %d\n", t18x, t18x <<   t18a8);
print("%d <<  16 = %d\n", t18x, t18x <<  t18a16);
print("%d <<  32 = %d\n", t18x, t18x <<  t18a32);
print("%d <<  64 = %d\n", t18x, t18x <<  t18a64);
print("%d << 128 = %d\n", t18x, t18x << t18a128);
print("%d >>   0 = %d\n", t18x, t18x >>   t18a0);
print("%d >>   2 = %d\n", t18x, t18x >>   t18a2);
print("%d >>   4 = %d\n", t18x, t18x >>   t18a4);
print("%d >>   8 = %d\n", t18x, t18x >>   t18a8);
print("%d >>  16 = %d\n", t18x, t18x >>  t18a16);
print("%d >>  32 = %d\n", t18x, t18x >>  t18a32);
print("%d >>  64 = %d\n", t18x, t18x >>  t18a64);
print("%d >> 128 = %d\n", t18x, t18x >> t18a128);
print("%d <<   0 = %d\n", t18q, t18q <<   t18a0);
print("%d <<   2 = %d\n", t18q, t18q <<   t18a2);
print("%d <<   4 = %d\n", t18q, t18q <<   t18a4);
print("%d <<   8 = %d\n", t18q, t18q <<   t18a8);
print("%d <<  16 = %d\n", t18q, t18q <<  t18a16);
print("%d <<  32 = %d\n", t18q, t18q <<  t18a32);
print("%d <<  64 = %d\n", t18q, t18q <<  t18a64);
print("%d << 128 = %d\n", t18q, t18q << t18a128);
print("%d >>   0 = %d\n", t18q, t18q >>   t18a0);
print("%d >>   2 = %d\n", t18q, t18q >>   t18a2);
print("%d >>   4 = %d\n", t18q, t18q >>   t18a4);
print("%d >>   8 = %d\n", t18q, t18q >>   t18a8);
print("%d >>  16 = %d\n", t18q, t18q >>  t18a16);
print("%d >>  32 = %d\n", t18q, t18q >>  t18a32);
print("%d >>  64 = %d\n", t18q, t18q >>  t18a64);
print("%d >> 128 = %d\n", t18q, t18q >> t18a128);
print("%d <<   0 = %d\n", t18r, t18r <<   t18a0);
print("%d <<   2 = %d\n", t18r, t18r <<   t18a2);
print("%d <<   4 = %d\n", t18r, t18r <<   t18a4);
print("%d <<   8 = %d\n", t18r, t18r <<   t18a8);
print("%d <<  16 = %d\n", t18r, t18r <<  t18a16);
print("%d <<  32 = %d\n", t18r, t18r <<  t18a32);
print("%d <<  64 = %d\n", t18r, t18r <<  t18a64);
print("%d << 128 = %d\n", t18r, t18r << t18a128);
print("%d >>   0 = %d\n", t18r, t18r >>   t18a0);
print("%d >>   2 = %d\n", t18r, t18r >>   t18a2);
print("%d >>   4 = %d\n", t18r, t18r >>   t18a4);
print("%d >>   8 = %d\n", t18r, t18r >>   t18a8);
print("%d >>  16 = %d\n", t18r, t18r >>  t18a16);
print("%d >>  32 = %d\n", t18r, t18r >>  t18a32);
print("%d >>  64 = %d\n", t18r, t18r >>  t18a64);
print("%d >> 128 = %d\n", t18r, t18r >> t18a128);
print("%d <<   0 = %d\n", t18dd, t18dd <<   t18a0);
print("%d <<   2 = %d\n", t18dd, t18dd <<   t18a2);
print("%d <<   4 = %d\n", t18dd, t18dd <<   t18a4);
print("%d <<   8 = %d\n", t18dd, t18dd <<   t18a8);
print("%d <<  16 = %d\n", t18dd, t18dd <<  t18a16);
print("%d <<  32 = %d\n", t18dd, t18dd <<  t18a32);
print("%d <<  64 = %d\n", t18dd, t18dd <<  t18a64);
print("%d << 128 = %d\n", t18dd, t18dd << t18a128);
print("%d >>   0 = %d\n", t18dd, t18dd >>   t18a0);
print("%d >>   2 = %d\n", t18dd, t18dd >>   t18a2);
print("%d >>   4 = %d\n", t18dd, t18dd >>   t18a4);
print("%d >>   8 = %d\n", t18dd, t18dd >>   t18a8);
print("%d >>  16 = %d\n", t18dd, t18dd >>  t18a16);
print("%d >>  32 = %d\n", t18dd, t18dd >>  t18a32);
print("%d >>  64 = %d\n", t18dd, t18dd >>  t18a64);
print("%d >> 128 = %d\n", t18dd, t18dd >> t18a128);
print("%d <<   0 = %d\n", t18qq, t18qq <<   t18a0);
print("%d <<   2 = %d\n", t18qq, t18qq <<   t18a2);
print("%d <<   4 = %d\n", t18qq, t18qq <<   t18a4);
print("%d <<   8 = %d\n", t18qq, t18qq <<   t18a8);
print("%d <<  16 = %d\n", t18qq, t18qq <<  t18a16);
print("%d <<  32 = %d\n", t18qq, t18qq <<  t18a32);
print("%d <<  64 = %d\n", t18qq, t18qq <<  t18a64);
print("%d << 128 = %d\n", t18qq, t18qq << t18a128);
print("%d >>   0 = %d\n", t18qq, t18qq >>   t18a0);
print("%d >>   2 = %d\n", t18qq, t18qq >>   t18a2);
print("%d >>   4 = %d\n", t18qq, t18qq >>   t18a4);
print("%d >>   8 = %d\n", t18qq, t18qq >>   t18a8);
print("%d >>  16 = %d\n", t18qq, t18qq >>  t18a16);
print("%d >>  32 = %d\n", t18qq, t18qq >>  t18a32);
print("%d >>  64 = %d\n", t18qq, t18qq >>  t18a64);
print("%d >> 128 = %d\n", t18qq, t18qq >> t18a128);
print("%d <<   0 = %d\n", t18cc, t18cc <<   t18a0);
print("%d <<   2 = %d\n", t18cc, t18cc <<   t18a2);
print("%d <<   4 = %d\n", t18cc, t18cc <<   t18a4);
print("%d <<   8 = %d\n", t18cc, t18cc <<   t18a8);
print("%d <<  16 = %d\n", t18cc, t18cc <<  t18a16);
print("%d <<  32 = %d\n", t18cc, t18cc <<  t18a32);
print("%d <<  64 = %d\n", t18cc, t18cc <<  t18a64);
print("%d << 128 = %d\n", t18cc, t18cc << t18a128);
print("%d >>   0 = %d\n", t18cc, t18cc >>   t18a0);
print("%d >>   2 = %d\n", t18cc, t18cc >>   t18a2);
print("%d >>   4 = %d\n", t18cc, t18cc >>   t18a4);
print("%d >>   8 = %d\n", t18cc, t18cc >>   t18a8);
print("%d >>  16 = %d\n", t18cc, t18cc >>  t18a16);
print("%d >>  32 = %d\n", t18cc, t18cc >>  t18a32);
print("%d >>  64 = %d\n", t18cc, t18cc >>  t18a64);
print("%d >> 128 = %d\n", t18cc, t18cc >> t18a128);
print("%d <<   0 = %d\n", t18n, t18n <<   t18a0);
print("%d <<   2 = %d\n", t18n, t18n <<   t18a2);
print("%d <<   4 = %d\n", t18n, t18n <<   t18a4);
print("%d <<   8 = %d\n", t18n, t18n <<   t18a8);
print("%d <<  16 = %d\n", t18n, t18n <<  t18a16);
print("%d <<  32 = %d\n", t18n, t18n <<  t18a32);
print("%d <<  64 = %d\n", t18n, t18n <<  t18a64);
print("%d << 128 = %d\n", t18n, t18n << t18a128);
print("%d >>   0 = %d\n", t18n, t18n >>   t18a0);
print("%d >>   2 = %d\n", t18n, t18n >>   t18a2);
print("%d >>   4 = %d\n", t18n, t18n >>   t18a4);
print("%d >>   8 = %d\n", t18n, t18n >>   t18a8);
print("%d >>  16 = %d\n", t18n, t18n >>  t18a16);
print("%d >>  32 = %d\n", t18n, t18n >>  t18a32);
print("%d >>  64 = %d\n", t18n, t18n >>  t18a64);
print("%d >> 128 = %d\n", t18n, t18n >> t18a128);

int8_t		t19i8  = -8;
uint8_t		t19u8  =  8;
int16_t		t19i16 = -16;
uint16_t	t19u16 =  16;
int32_t		t19i32 = -32;
uint32_t	t19u32 =  32;
int64_t		t19i64 = -64;
uint64_t	t19u64 =  64;
float32_t	t19f32 = -32.0;
float64_t	t19f64 =  64.0;
auto		t19w   =  42;
auto		t19f   = -42.25;
auto		t19z   =  0x800000000000000000000000000000000;
auto		t19x   =  1/2;
auto		t19q   =  0x800000000000000000000000000000000/3;
auto		t19r   = -1.25L;
auto		t19dd  =  1.25+I;
auto		t19qq  =  4/3+I;
auto		t19cc  = -1.25L+I;
auto		t19n   =  null;
print("%d + %d = %d\n", t19i8, -8,     t19i8 + -8);
print("%d + %d = %d\n", t19i8,  8,     t19i8 +  8);
print("%d + %d = %d\n", t19i8, 32.0,   t19i8 + 32.0);
print("%d + %d = %d\n", t19i8, 0x800000000000000000000000000000000, t19i8 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19i8, 1/2,    t19i8 + 1/2);
print("%d + %d = %d\n", t19i8, 0x800000000000000000000000000000000/3, t19i8 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19i8, 1.25L,  t19i8 +  1.25L);
print("%d + %d = %d\n", t19i8, 1.25*I, t19i8 +  1.25*I);
print("%d + %d = %d\n", t19i8, 1/2*I,  t19i8 +  1/2*I);
print("%d + %d = %d\n", t19i8, 1.2L*I, t19i8 +  1.2L+I);
print("%d + %d = %d\n", t19i8, t19i8,  t19i8 + t19i8);
print("%d + %d = %d\n", t19i8, t19u8,  t19i8 + t19u8);
print("%d + %d = %d\n", t19i8, t19i16, t19i8 + t19i16);
print("%d + %d = %d\n", t19i8, t19u16, t19i8 + t19u16);
print("%d + %d = %d\n", t19i8, t19i32, t19i8 + t19i32);
print("%d + %d = %d\n", t19i8, t19u32, t19i8 + t19u32);
print("%d + %d = %d\n", t19i8, t19i64, t19i8 + t19i64);
print("%d + %d = %d\n", t19i8, t19u64, t19i8 + t19u64);
print("%d + %d = %d\n", t19i8, t19f32, t19i8 + t19f32);
print("%d + %d = %d\n", t19i8, t19f64, t19i8 + t19f64);
print("%d + %d = %d\n", t19i8, t19w,   t19i8 + t19w);
print("%d + %d = %d\n", t19i8, t19f,   t19i8 + t19f);
print("%d + %d = %d\n", t19i8, t19z,   t19i8 + t19z);
print("%d + %d = %d\n", t19i8, t19x,   t19i8 + t19x);
print("%d + %d = %d\n", t19i8, t19q,   t19i8 + t19q);
print("%d + %d = %d\n", t19i8, t19r,   t19i8 + t19r);
print("%d + %d = %d\n", t19i8, t19n,   t19i8 + t19n);
print("%d + %d = %d\n", t19u8, -8,     t19u8 + -8);
print("%d + %d = %d\n", t19u8,  8,     t19u8 +  8);
print("%d + %d = %d\n", t19u8, 32.0,   t19u8 + 32.0);
print("%d + %d = %d\n", t19u8, 0x800000000000000000000000000000000, t19u8 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19u8, 1/2,    t19u8 + 1/2);
print("%d + %d = %d\n", t19u8, 0x800000000000000000000000000000000/3, t19u8 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19u8, 1.25L,  t19u8 +  1.25L);
print("%d + %d = %d\n", t19u8, 1.25*I, t19u8 +  1.25*I);
print("%d + %d = %d\n", t19u8, 1/2*I,  t19u8 +  1/2*I);
print("%d + %d = %d\n", t19u8, 1.2L*I, t19u8 +  1.2L+I);
print("%d + %d = %d\n", t19u8, t19i8,  t19u8 + t19i8);
print("%d + %d = %d\n", t19u8, t19u8,  t19u8 + t19u8);
print("%d + %d = %d\n", t19u8, t19i16, t19u8 + t19i16);
print("%d + %d = %d\n", t19u8, t19u16, t19u8 + t19u16);
print("%d + %d = %d\n", t19u8, t19i32, t19u8 + t19i32);
print("%d + %d = %d\n", t19u8, t19u32, t19u8 + t19u32);
print("%d + %d = %d\n", t19u8, t19i64, t19u8 + t19i64);
print("%d + %d = %d\n", t19u8, t19u64, t19u8 + t19u64);
print("%d + %d = %d\n", t19u8, t19f32, t19u8 + t19f32);
print("%d + %d = %d\n", t19u8, t19f64, t19u8 + t19f64);
print("%d + %d = %d\n", t19u8, t19w,   t19u8 + t19w);
print("%d + %d = %d\n", t19u8, t19f,   t19u8 + t19f);
print("%d + %d = %d\n", t19u8, t19z,   t19u8 + t19z);
print("%d + %d = %d\n", t19u8, t19x,   t19u8 + t19x);
print("%d + %d = %d\n", t19u8, t19q,   t19u8 + t19q);
print("%d + %d = %d\n", t19u8, t19r,   t19u8 + t19r);
print("%d + %d = %d\n", t19u8, t19n,   t19u8 + t19n);
print("%d + %d = %d\n", t19i16, -8,     t19i16 + -8);
print("%d + %d = %d\n", t19i16,  8,     t19i16 +  8);
print("%d + %d = %d\n", t19i16, 32.0,   t19i16 + 32.0);
print("%d + %d = %d\n", t19i16, 0x800000000000000000000000000000000, t19i16 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19i16, 1/2,    t19i16 + 1/2);
print("%d + %d = %d\n", t19i16, 0x800000000000000000000000000000000/3, t19i16 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19i16, 1.25L,  t19i16 +  1.25L);
print("%d + %d = %d\n", t19i16, 1.25*I, t19i16 +  1.25*I);
print("%d + %d = %d\n", t19i16, 1/2*I,  t19i16 +  1/2*I);
print("%d + %d = %d\n", t19i16, 1.2L*I, t19i16 +  1.2L+I);
print("%d + %d = %d\n", t19i16, t19i8,  t19i16 + t19i8);
print("%d + %d = %d\n", t19i16, t19u8,  t19i16 + t19u8);
print("%d + %d = %d\n", t19i16, t19i16, t19i16 + t19i16);
print("%d + %d = %d\n", t19i16, t19u16, t19i16 + t19u16);
print("%d + %d = %d\n", t19i16, t19i32, t19i16 + t19i32);
print("%d + %d = %d\n", t19i16, t19u32, t19i16 + t19u32);
print("%d + %d = %d\n", t19i16, t19i64, t19i16 + t19i64);
print("%d + %d = %d\n", t19i16, t19u64, t19i16 + t19u64);
print("%d + %d = %d\n", t19i16, t19f32, t19i16 + t19f32);
print("%d + %d = %d\n", t19i16, t19f64, t19i16 + t19f64);
print("%d + %d = %d\n", t19i16, t19w,   t19i16 + t19w);
print("%d + %d = %d\n", t19i16, t19f,   t19i16 + t19f);
print("%d + %d = %d\n", t19i16, t19z,   t19i16 + t19z);
print("%d + %d = %d\n", t19i16, t19x,   t19i16 + t19x);
print("%d + %d = %d\n", t19i16, t19q,   t19i16 + t19q);
print("%d + %d = %d\n", t19i16, t19r,   t19i16 + t19r);
print("%d + %d = %d\n", t19i16, t19n,   t19i16 + t19n);
print("%d + %d = %d\n", t19u16, -8,     t19u16 + -8);
print("%d + %d = %d\n", t19u16,  8,     t19u16 +  8);
print("%d + %d = %d\n", t19u16, 32.0,   t19u16 + 32.0);
print("%d + %d = %d\n", t19u16, 0x800000000000000000000000000000000, t19u16 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19u16, 1/2,    t19u16 + 1/2);
print("%d + %d = %d\n", t19u16, 0x800000000000000000000000000000000/3, t19u16 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19u16, 1.25L,  t19u16 +  1.25L);
print("%d + %d = %d\n", t19u16, 1.25*I, t19u16 +  1.25*I);
print("%d + %d = %d\n", t19u16, 1/2*I,  t19u16 +  1/2*I);
print("%d + %d = %d\n", t19u16, 1.2L*I, t19u16 +  1.2L+I);
print("%d + %d = %d\n", t19u16, t19i8,  t19u16 + t19i8);
print("%d + %d = %d\n", t19u16, t19u8,  t19u16 + t19u8);
print("%d + %d = %d\n", t19u16, t19i16, t19u16 + t19i16);
print("%d + %d = %d\n", t19u16, t19u16, t19u16 + t19u16);
print("%d + %d = %d\n", t19u16, t19i32, t19u16 + t19i32);
print("%d + %d = %d\n", t19u16, t19u32, t19u16 + t19u32);
print("%d + %d = %d\n", t19u16, t19i64, t19u16 + t19i64);
print("%d + %d = %d\n", t19u16, t19u64, t19u16 + t19u64);
print("%d + %d = %d\n", t19u16, t19f32, t19u16 + t19f32);
print("%d + %d = %d\n", t19u16, t19f64, t19u16 + t19f64);
print("%d + %d = %d\n", t19u16, t19w,   t19u16 + t19w);
print("%d + %d = %d\n", t19u16, t19f,   t19u16 + t19f);
print("%d + %d = %d\n", t19u16, t19z,   t19u16 + t19z);
print("%d + %d = %d\n", t19u16, t19x,   t19u16 + t19x);
print("%d + %d = %d\n", t19u16, t19q,   t19u16 + t19q);
print("%d + %d = %d\n", t19u16, t19r,   t19u16 + t19r);
print("%d + %d = %d\n", t19u16, t19n,   t19u16 + t19n);
print("%d + %d = %d\n", t19i32, -8,     t19i32 + -8);
print("%d + %d = %d\n", t19i32,  8,     t19i32 +  8);
print("%d + %d = %d\n", t19i32, 32.0,   t19i32 + 32.0);
print("%d + %d = %d\n", t19i32, 0x800000000000000000000000000000000, t19i32 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19i32, 1/2,    t19i32 + 1/2);
print("%d + %d = %d\n", t19i32, 0x800000000000000000000000000000000/3, t19i32 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19i32, 1.25L,  t19i32 +  1.25L);
print("%d + %d = %d\n", t19i32, 1.25*I, t19i32 +  1.25*I);
print("%d + %d = %d\n", t19i32, 1/2*I,  t19i32 +  1/2*I);
print("%d + %d = %d\n", t19i32, 1.2L*I, t19i32 +  1.2L+I);
print("%d + %d = %d\n", t19i32, t19i8,  t19i32 + t19i8);
print("%d + %d = %d\n", t19i32, t19u8,  t19i32 + t19u8);
print("%d + %d = %d\n", t19i32, t19i16, t19i32 + t19i16);
print("%d + %d = %d\n", t19i32, t19u16, t19i32 + t19u16);
print("%d + %d = %d\n", t19i32, t19i32, t19i32 + t19i32);
print("%d + %d = %d\n", t19i32, t19u32, t19i32 + t19u32);
print("%d + %d = %d\n", t19i32, t19i64, t19i32 + t19i64);
print("%d + %d = %d\n", t19i32, t19u64, t19i32 + t19u64);
print("%d + %d = %d\n", t19i32, t19f32, t19i32 + t19f32);
print("%d + %d = %d\n", t19i32, t19f64, t19i32 + t19f64);
print("%d + %d = %d\n", t19i32, t19w,   t19i32 + t19w);
print("%d + %d = %d\n", t19i32, t19f,   t19i32 + t19f);
print("%d + %d = %d\n", t19i32, t19z,   t19i32 + t19z);
print("%d + %d = %d\n", t19i32, t19x,   t19i32 + t19x);
print("%d + %d = %d\n", t19i32, t19q,   t19i32 + t19q);
print("%d + %d = %d\n", t19i32, t19r,   t19i32 + t19r);
print("%d + %d = %d\n", t19i32, t19n,   t19i32 + t19n);
print("%d + %d = %d\n", t19u32, -8,     t19u32 + -8);
print("%d + %d = %d\n", t19u32,  8,     t19u32 +  8);
print("%d + %d = %d\n", t19u32, 32.0,   t19u32 + 32.0);
print("%d + %d = %d\n", t19u32, 0x800000000000000000000000000000000, t19u32 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19u32, 1/2,    t19u32 + 1/2);
print("%d + %d = %d\n", t19u32, 0x800000000000000000000000000000000/3, t19u32 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19u32, 1.25L,  t19u32 +  1.25L);
print("%d + %d = %d\n", t19u32, 1.25*I, t19u32 +  1.25*I);
print("%d + %d = %d\n", t19u32, 1/2*I,  t19u32 +  1/2*I);
print("%d + %d = %d\n", t19u32, 1.2L*I, t19u32 +  1.2L+I);
print("%d + %d = %d\n", t19u32, t19i8,  t19u32 + t19i8);
print("%d + %d = %d\n", t19u32, t19u8,  t19u32 + t19u8);
print("%d + %d = %d\n", t19u32, t19i16, t19u32 + t19i16);
print("%d + %d = %d\n", t19u32, t19u16, t19u32 + t19u16);
print("%d + %d = %d\n", t19u32, t19i32, t19u32 + t19i32);
print("%d + %d = %d\n", t19u32, t19u32, t19u32 + t19u32);
print("%d + %d = %d\n", t19u32, t19i64, t19u32 + t19i64);
print("%d + %d = %d\n", t19u32, t19u64, t19u32 + t19u64);
print("%d + %d = %d\n", t19u32, t19f32, t19u32 + t19f32);
print("%d + %d = %d\n", t19u32, t19f64, t19u32 + t19f64);
print("%d + %d = %d\n", t19u32, t19w,   t19u32 + t19w);
print("%d + %d = %d\n", t19u32, t19f,   t19u32 + t19f);
print("%d + %d = %d\n", t19u32, t19z,   t19u32 + t19z);
print("%d + %d = %d\n", t19u32, t19x,   t19u32 + t19x);
print("%d + %d = %d\n", t19u32, t19q,   t19u32 + t19q);
print("%d + %d = %d\n", t19u32, t19r,   t19u32 + t19r);
print("%d + %d = %d\n", t19u32, t19n,   t19u32 + t19n);
print("%d + %d = %d\n", t19i64, -8,     t19i64 + -8);
print("%d + %d = %d\n", t19i64,  8,     t19i64 +  8);
print("%d + %d = %d\n", t19i64, 32.0,   t19i64 + 32.0);
print("%d + %d = %d\n", t19i64, 0x800000000000000000000000000000000, t19i64 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19i64, 1/2,    t19i64 + 1/2);
print("%d + %d = %d\n", t19i64, 0x800000000000000000000000000000000/3, t19i64 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19i64, 1.25L,  t19i64 +  1.25L);
print("%d + %d = %d\n", t19i64, 1.25*I, t19i64 +  1.25*I);
print("%d + %d = %d\n", t19i64, 1/2*I,  t19i64 +  1/2*I);
print("%d + %d = %d\n", t19i64, 1.2L*I, t19i64 +  1.2L+I);
print("%d + %d = %d\n", t19i64, t19i8,  t19i64 + t19i8);
print("%d + %d = %d\n", t19i64, t19u8,  t19i64 + t19u8);
print("%d + %d = %d\n", t19i64, t19i16, t19i64 + t19i16);
print("%d + %d = %d\n", t19i64, t19u16, t19i64 + t19u16);
print("%d + %d = %d\n", t19i64, t19i32, t19i64 + t19i32);
print("%d + %d = %d\n", t19i64, t19u32, t19i64 + t19u32);
print("%d + %d = %d\n", t19i64, t19i64, t19i64 + t19i64);
print("%d + %d = %d\n", t19i64, t19u64, t19i64 + t19u64);
print("%d + %d = %d\n", t19i64, t19f32, t19i64 + t19f32);
print("%d + %d = %d\n", t19i64, t19f64, t19i64 + t19f64);
print("%d + %d = %d\n", t19i64, t19w,   t19i64 + t19w);
print("%d + %d = %d\n", t19i64, t19f,   t19i64 + t19f);
print("%d + %d = %d\n", t19i64, t19z,   t19i64 + t19z);
print("%d + %d = %d\n", t19i64, t19x,   t19i64 + t19x);
print("%d + %d = %d\n", t19i64, t19q,   t19i64 + t19q);
print("%d + %d = %d\n", t19i64, t19r,   t19i64 + t19r);
print("%d + %d = %d\n", t19i64, t19n,   t19i64 + t19n);
print("%d + %d = %d\n", t19u64, -8,     t19u64 + -8);
print("%d + %d = %d\n", t19u64,  8,     t19u64 +  8);
print("%d + %d = %d\n", t19u64, 32.0,   t19u64 + 32.0);
print("%d + %d = %d\n", t19u64, 0x800000000000000000000000000000000, t19u64 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19u64, 1/2,    t19u64 + 1/2);
print("%d + %d = %d\n", t19u64, 0x800000000000000000000000000000000/3, t19u64 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19u64, 1.25L,  t19u64 +  1.25L);
print("%d + %d = %d\n", t19u64, 1.25*I, t19u64 +  1.25*I);
print("%d + %d = %d\n", t19u64, 1/2*I,  t19u64 +  1/2*I);
print("%d + %d = %d\n", t19u64, 1.2L*I, t19u64 +  1.2L+I);
print("%d + %d = %d\n", t19u64, t19i8,  t19u64 + t19i8);
print("%d + %d = %d\n", t19u64, t19u8,  t19u64 + t19u8);
print("%d + %d = %d\n", t19u64, t19i16, t19u64 + t19i16);
print("%d + %d = %d\n", t19u64, t19u16, t19u64 + t19u16);
print("%d + %d = %d\n", t19u64, t19i32, t19u64 + t19i32);
print("%d + %d = %d\n", t19u64, t19u32, t19u64 + t19u32);
print("%d + %d = %d\n", t19u64, t19i64, t19u64 + t19i64);
print("%d + %d = %d\n", t19u64, t19u64, t19u64 + t19u64);
print("%d + %d = %d\n", t19u64, t19f32, t19u64 + t19f32);
print("%d + %d = %d\n", t19u64, t19f64, t19u64 + t19f64);
print("%d + %d = %d\n", t19u64, t19w,   t19u64 + t19w);
print("%d + %d = %d\n", t19u64, t19f,   t19u64 + t19f);
print("%d + %d = %d\n", t19u64, t19z,   t19u64 + t19z);
print("%d + %d = %d\n", t19u64, t19x,   t19u64 + t19x);
print("%d + %d = %d\n", t19u64, t19q,   t19u64 + t19q);
print("%d + %d = %d\n", t19u64, t19r,   t19u64 + t19r);
print("%d + %d = %d\n", t19u64, t19n,   t19u64 + t19n);
print("%d + %d = %d\n", t19f32, -8,     t19f32 + -8);
print("%d + %d = %d\n", t19f32,  8,     t19f32 +  8);
print("%d + %d = %d\n", t19f32, 32.0,   t19f32 + 32.0);
print("%d + %d = %d\n", t19f32, 0x800000000000000000000000000000000, t19f32 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19f32, 1/2,    t19f32 + 1/2);
print("%d + %d = %d\n", t19f32, 0x800000000000000000000000000000000/3, t19f32 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19f32, 1.25L,  t19f32 +  1.25L);
print("%d + %d = %d\n", t19f32, 1.25*I, t19f32 +  1.25*I);
print("%d + %d = %d\n", t19f32, 1/2*I,  t19f32 +  1/2*I);
print("%d + %d = %d\n", t19f32, 1.2L*I, t19f32 +  1.2L+I);
print("%d + %d = %d\n", t19f32, t19i8,  t19f32 + t19i8);
print("%d + %d = %d\n", t19f32, t19u8,  t19f32 + t19u8);
print("%d + %d = %d\n", t19f32, t19i16, t19f32 + t19i16);
print("%d + %d = %d\n", t19f32, t19u16, t19f32 + t19u16);
print("%d + %d = %d\n", t19f32, t19i32, t19f32 + t19i32);
print("%d + %d = %d\n", t19f32, t19u32, t19f32 + t19u32);
print("%d + %d = %d\n", t19f32, t19i64, t19f32 + t19i64);
print("%d + %d = %d\n", t19f32, t19u64, t19f32 + t19u64);
print("%d + %d = %d\n", t19f32, t19f32, t19f32 + t19f32);
print("%d + %d = %d\n", t19f32, t19f64, t19f32 + t19f64);
print("%d + %d = %d\n", t19f32, t19w,   t19f32 + t19w);
print("%d + %d = %d\n", t19f32, t19f,   t19f32 + t19f);
print("%d + %d = %d\n", t19f32, t19z,   t19f32 + t19z);
print("%d + %d = %d\n", t19f32, t19x,   t19f32 + t19x);
print("%d + %d = %d\n", t19f32, t19q,   t19f32 + t19q);
print("%d + %d = %d\n", t19f32, t19r,   t19f32 + t19r);
print("%d + %d = %d\n", t19f32, t19n,   t19f32 + t19n);
print("%d + %d = %d\n", t19f64, -8,     t19f64 + -8);
print("%d + %d = %d\n", t19f64,  8,     t19f64 +  8);
print("%d + %d = %d\n", t19f64, 32.0,   t19f64 + 32.0);
print("%d + %d = %d\n", t19f64, 0x800000000000000000000000000000000, t19f64 + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19f64, 1/2,    t19f64 + 1/2);
print("%d + %d = %d\n", t19f64, 0x800000000000000000000000000000000/3, t19f64 + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19f64, 1.25L,  t19f64 +  1.25L);
print("%d + %d = %d\n", t19f64, 1.25*I, t19f64 +  1.25*I);
print("%d + %d = %d\n", t19f64, 1/2*I,  t19f64 +  1/2*I);
print("%d + %d = %d\n", t19f64, 1.2L*I, t19f64 +  1.2L+I);
print("%d + %d = %d\n", t19f64, t19i8,  t19f64 + t19i8);
print("%d + %d = %d\n", t19f64, t19u8,  t19f64 + t19u8);
print("%d + %d = %d\n", t19f64, t19i16, t19f64 + t19i16);
print("%d + %d = %d\n", t19f64, t19u16, t19f64 + t19u16);
print("%d + %d = %d\n", t19f64, t19i32, t19f64 + t19i32);
print("%d + %d = %d\n", t19f64, t19u32, t19f64 + t19u32);
print("%d + %d = %d\n", t19f64, t19i64, t19f64 + t19i64);
print("%d + %d = %d\n", t19f64, t19u64, t19f64 + t19u64);
print("%d + %d = %d\n", t19f64, t19f32, t19f64 + t19f32);
print("%d + %d = %d\n", t19f64, t19f64, t19f64 + t19f64);
print("%d + %d = %d\n", t19f64, t19w,   t19f64 + t19w);
print("%d + %d = %d\n", t19f64, t19f,   t19f64 + t19f);
print("%d + %d = %d\n", t19f64, t19z,   t19f64 + t19z);
print("%d + %d = %d\n", t19f64, t19x,   t19f64 + t19x);
print("%d + %d = %d\n", t19f64, t19q,   t19f64 + t19q);
print("%d + %d = %d\n", t19f64, t19r,   t19f64 + t19r);
print("%d + %d = %d\n", t19f64, t19n,   t19f64 + t19n);
print("%d + %d = %d\n", t19w, -8,     t19w + -8);
print("%d + %d = %d\n", t19w,  8,     t19w +  8);
print("%d + %d = %d\n", t19w, 32.0,   t19w + 32.0);
print("%d + %d = %d\n", t19w, 0x800000000000000000000000000000000, t19w + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19w, 1/2,    t19w + 1/2);
print("%d + %d = %d\n", t19w, 0x800000000000000000000000000000000/3, t19w + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19w, 1.25L,  t19w +  1.25L);
print("%d + %d = %d\n", t19w, 1.25*I, t19w +  1.25*I);
print("%d + %d = %d\n", t19w, 1/2*I,  t19w +  1/2*I);
print("%d + %d = %d\n", t19w, 1.2L*I, t19w +  1.2L+I);
print("%d + %d = %d\n", t19w, t19i8,  t19w + t19i8);
print("%d + %d = %d\n", t19w, t19u8,  t19w + t19u8);
print("%d + %d = %d\n", t19w, t19i16, t19w + t19i16);
print("%d + %d = %d\n", t19w, t19u16, t19w + t19u16);
print("%d + %d = %d\n", t19w, t19i32, t19w + t19i32);
print("%d + %d = %d\n", t19w, t19u32, t19w + t19u32);
print("%d + %d = %d\n", t19w, t19i64, t19w + t19i64);
print("%d + %d = %d\n", t19w, t19u64, t19w + t19u64);
print("%d + %d = %d\n", t19w, t19f32, t19w + t19f32);
print("%d + %d = %d\n", t19w, t19f64, t19w + t19f64);
print("%d + %d = %d\n", t19w, t19w,   t19w + t19w);
print("%d + %d = %d\n", t19w, t19f,   t19w + t19f);
print("%d + %d = %d\n", t19w, t19z,   t19w + t19z);
print("%d + %d = %d\n", t19w, t19x,   t19w + t19x);
print("%d + %d = %d\n", t19w, t19q,   t19w + t19q);
print("%d + %d = %d\n", t19w, t19r,   t19w + t19r);
print("%d + %d = %d\n", t19w, t19n,   t19w + t19n);
print("%d + %d = %d\n", t19f, -8,     t19f + -8);
print("%d + %d = %d\n", t19f,  8,     t19f +  8);
print("%d + %d = %d\n", t19f, 32.0,   t19f + 32.0);
print("%d + %d = %d\n", t19f, 0x800000000000000000000000000000000, t19f + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19f, 1/2,    t19f + 1/2);
print("%d + %d = %d\n", t19f, 0x800000000000000000000000000000000/3, t19f + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19f, 1.25L,  t19f +  1.25L);
print("%d + %d = %d\n", t19f, 1.25*I, t19f +  1.25*I);
print("%d + %d = %d\n", t19f, 1/2*I,  t19f +  1/2*I);
print("%d + %d = %d\n", t19f, 1.2L*I, t19f +  1.2L+I);
print("%d + %d = %d\n", t19f, t19i8,  t19f + t19i8);
print("%d + %d = %d\n", t19f, t19u8,  t19f + t19u8);
print("%d + %d = %d\n", t19f, t19i16, t19f + t19i16);
print("%d + %d = %d\n", t19f, t19u16, t19f + t19u16);
print("%d + %d = %d\n", t19f, t19i32, t19f + t19i32);
print("%d + %d = %d\n", t19f, t19u32, t19f + t19u32);
print("%d + %d = %d\n", t19f, t19i64, t19f + t19i64);
print("%d + %d = %d\n", t19f, t19u64, t19f + t19u64);
print("%d + %d = %d\n", t19f, t19f32, t19f + t19f32);
print("%d + %d = %d\n", t19f, t19f64, t19f + t19f64);
print("%d + %d = %d\n", t19f, t19w,   t19f + t19w);
print("%d + %d = %d\n", t19f, t19f,   t19f + t19f);
print("%d + %d = %d\n", t19f, t19z,   t19f + t19z);
print("%d + %d = %d\n", t19f, t19x,   t19f + t19x);
print("%d + %d = %d\n", t19f, t19q,   t19f + t19q);
print("%d + %d = %d\n", t19f, t19r,   t19f + t19r);
print("%d + %d = %d\n", t19f, t19n,   t19f + t19n);
print("%d + %d = %d\n", t19z, -8,     t19z + -8);
print("%d + %d = %d\n", t19z,  8,     t19z +  8);
print("%d + %d = %d\n", t19z, 32.0,   t19z + 32.0);
print("%d + %d = %d\n", t19z, 0x800000000000000000000000000000000, t19z + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19z, 1/2,    t19z + 1/2);
print("%d + %d = %d\n", t19z, 0x800000000000000000000000000000000/3, t19z + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19z, 1.25L,  t19z +  1.25L);
print("%d + %d = %d\n", t19z, 1.25*I, t19z +  1.25*I);
print("%d + %d = %d\n", t19z, 1/2*I,  t19z +  1/2*I);
print("%d + %d = %d\n", t19z, 1.2L*I, t19z +  1.2L+I);
print("%d + %d = %d\n", t19z, t19i8,  t19z + t19i8);
print("%d + %d = %d\n", t19z, t19u8,  t19z + t19u8);
print("%d + %d = %d\n", t19z, t19i16, t19z + t19i16);
print("%d + %d = %d\n", t19z, t19u16, t19z + t19u16);
print("%d + %d = %d\n", t19z, t19i32, t19z + t19i32);
print("%d + %d = %d\n", t19z, t19u32, t19z + t19u32);
print("%d + %d = %d\n", t19z, t19i64, t19z + t19i64);
print("%d + %d = %d\n", t19z, t19u64, t19z + t19u64);
print("%d + %d = %d\n", t19z, t19f32, t19z + t19f32);
print("%d + %d = %d\n", t19z, t19f64, t19z + t19f64);
print("%d + %d = %d\n", t19z, t19w,   t19z + t19w);
print("%d + %d = %d\n", t19z, t19f,   t19z + t19f);
print("%d + %d = %d\n", t19z, t19z,   t19z + t19z);
print("%d + %d = %d\n", t19z, t19x,   t19z + t19x);
print("%d + %d = %d\n", t19z, t19q,   t19z + t19q);
print("%d + %d = %d\n", t19z, t19r,   t19z + t19r);
print("%d + %d = %d\n", t19z, t19n,   t19z + t19n);
print("%d + %d = %d\n", t19x, -8,     t19x + -8);
print("%d + %d = %d\n", t19x,  8,     t19x +  8);
print("%d + %d = %d\n", t19x, 32.0,   t19x + 32.0);
print("%d + %d = %d\n", t19x, 0x800000000000000000000000000000000, t19x + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19x, 1/2,    t19x + 1/2);
print("%d + %d = %d\n", t19x, 0x800000000000000000000000000000000/3, t19x + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19x, 1.25L,  t19x +  1.25L);
print("%d + %d = %d\n", t19x, 1.25*I, t19x +  1.25*I);
print("%d + %d = %d\n", t19x, 1/2*I,  t19x +  1/2*I);
print("%d + %d = %d\n", t19x, 1.2L*I, t19x +  1.2L+I);
print("%d + %d = %d\n", t19x, t19i8,  t19x + t19i8);
print("%d + %d = %d\n", t19x, t19u8,  t19x + t19u8);
print("%d + %d = %d\n", t19x, t19i16, t19x + t19i16);
print("%d + %d = %d\n", t19x, t19u16, t19x + t19u16);
print("%d + %d = %d\n", t19x, t19i32, t19x + t19i32);
print("%d + %d = %d\n", t19x, t19u32, t19x + t19u32);
print("%d + %d = %d\n", t19x, t19i64, t19x + t19i64);
print("%d + %d = %d\n", t19x, t19u64, t19x + t19u64);
print("%d + %d = %d\n", t19x, t19f32, t19x + t19f32);
print("%d + %d = %d\n", t19x, t19f64, t19x + t19f64);
print("%d + %d = %d\n", t19x, t19w,   t19x + t19w);
print("%d + %d = %d\n", t19x, t19f,   t19x + t19f);
print("%d + %d = %d\n", t19x, t19z,   t19x + t19z);
print("%d + %d = %d\n", t19x, t19x,   t19x + t19x);
print("%d + %d = %d\n", t19x, t19q,   t19x + t19q);
print("%d + %d = %d\n", t19x, t19r,   t19x + t19r);
print("%d + %d = %d\n", t19x, t19n,   t19x + t19n);
print("%d + %d = %d\n", t19q, -8,     t19q + -8);
print("%d + %d = %d\n", t19q,  8,     t19q +  8);
print("%d + %d = %d\n", t19q, 32.0,   t19q + 32.0);
print("%d + %d = %d\n", t19q, 0x800000000000000000000000000000000, t19q + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19q, 1/2,    t19q + 1/2);
print("%d + %d = %d\n", t19q, 0x800000000000000000000000000000000/3, t19q + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19q, 1.25L,  t19q +  1.25L);
print("%d + %d = %d\n", t19q, 1.25*I, t19q +  1.25*I);
print("%d + %d = %d\n", t19q, 1/2*I,  t19q +  1/2*I);
print("%d + %d = %d\n", t19q, 1.2L*I, t19q +  1.2L+I);
print("%d + %d = %d\n", t19q, t19i8,  t19q + t19i8);
print("%d + %d = %d\n", t19q, t19u8,  t19q + t19u8);
print("%d + %d = %d\n", t19q, t19i16, t19q + t19i16);
print("%d + %d = %d\n", t19q, t19u16, t19q + t19u16);
print("%d + %d = %d\n", t19q, t19i32, t19q + t19i32);
print("%d + %d = %d\n", t19q, t19u32, t19q + t19u32);
print("%d + %d = %d\n", t19q, t19i64, t19q + t19i64);
print("%d + %d = %d\n", t19q, t19u64, t19q + t19u64);
print("%d + %d = %d\n", t19q, t19f32, t19q + t19f32);
print("%d + %d = %d\n", t19q, t19f64, t19q + t19f64);
print("%d + %d = %d\n", t19q, t19w,   t19q + t19w);
print("%d + %d = %d\n", t19q, t19f,   t19q + t19f);
print("%d + %d = %d\n", t19q, t19z,   t19q + t19z);
print("%d + %d = %d\n", t19q, t19x,   t19q + t19x);
print("%d + %d = %d\n", t19q, t19q,   t19q + t19q);
print("%d + %d = %d\n", t19q, t19r,   t19q + t19r);
print("%d + %d = %d\n", t19q, t19n,   t19q + t19n);
print("%d + %d = %d\n", t19r, -8,     t19r + -8);
print("%d + %d = %d\n", t19r,  8,     t19r +  8);
print("%d + %d = %d\n", t19r, 32.0,   t19r + 32.0);
print("%d + %d = %d\n", t19r, 0x800000000000000000000000000000000, t19r + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19r, 1/2,    t19r + 1/2);
print("%d + %d = %d\n", t19r, 0x800000000000000000000000000000000/3, t19r + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19r, 1.25L,  t19r +  1.25L);
print("%d + %d = %d\n", t19r, 1.25*I, t19r +  1.25*I);
print("%d + %d = %d\n", t19r, 1/2*I,  t19r +  1/2*I);
print("%d + %d = %d\n", t19r, 1.2L*I, t19r +  1.2L+I);
print("%d + %d = %d\n", t19r, t19i8,  t19r + t19i8);
print("%d + %d = %d\n", t19r, t19u8,  t19r + t19u8);
print("%d + %d = %d\n", t19r, t19i16, t19r + t19i16);
print("%d + %d = %d\n", t19r, t19u16, t19r + t19u16);
print("%d + %d = %d\n", t19r, t19i32, t19r + t19i32);
print("%d + %d = %d\n", t19r, t19u32, t19r + t19u32);
print("%d + %d = %d\n", t19r, t19i64, t19r + t19i64);
print("%d + %d = %d\n", t19r, t19u64, t19r + t19u64);
print("%d + %d = %d\n", t19r, t19f32, t19r + t19f32);
print("%d + %d = %d\n", t19r, t19f64, t19r + t19f64);
print("%d + %d = %d\n", t19r, t19w,   t19r + t19w);
print("%d + %d = %d\n", t19r, t19f,   t19r + t19f);
print("%d + %d = %d\n", t19r, t19z,   t19r + t19z);
print("%d + %d = %d\n", t19r, t19x,   t19r + t19x);
print("%d + %d = %d\n", t19r, t19q,   t19r + t19q);
print("%d + %d = %d\n", t19r, t19r,   t19r + t19r);
print("%d + %d = %d\n", t19r, t19n,   t19r + t19n);
print("%d + %d = %d\n", t19dd, -8,     t19dd + -8);
print("%d + %d = %d\n", t19dd,  8,     t19dd +  8);
print("%d + %d = %d\n", t19dd, 32.0,   t19dd + 32.0);
print("%d + %d = %d\n", t19dd, 0x800000000000000000000000000000000, t19dd + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19dd, 1/2,    t19dd + 1/2);
print("%d + %d = %d\n", t19dd, 0x800000000000000000000000000000000/3, t19dd + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19dd, 1.25L,  t19dd +  1.25L);
print("%d + %d = %d\n", t19dd, 1.25*I, t19dd +  1.25*I);
print("%d + %d = %d\n", t19dd, 1/2*I,  t19dd +  1/2*I);
print("%d + %d = %d\n", t19dd, 1.2L*I, t19dd +  1.2L+I);
print("%d + %d = %d\n", t19dd, t19i8,  t19dd + t19i8);
print("%d + %d = %d\n", t19dd, t19u8,  t19dd + t19u8);
print("%d + %d = %d\n", t19dd, t19i16, t19dd + t19i16);
print("%d + %d = %d\n", t19dd, t19u16, t19dd + t19u16);
print("%d + %d = %d\n", t19dd, t19i32, t19dd + t19i32);
print("%d + %d = %d\n", t19dd, t19u32, t19dd + t19u32);
print("%d + %d = %d\n", t19dd, t19i64, t19dd + t19i64);
print("%d + %d = %d\n", t19dd, t19u64, t19dd + t19u64);
print("%d + %d = %d\n", t19dd, t19f32, t19dd + t19f32);
print("%d + %d = %d\n", t19dd, t19f64, t19dd + t19f64);
print("%d + %d = %d\n", t19dd, t19w,   t19dd + t19w);
print("%d + %d = %d\n", t19dd, t19f,   t19dd + t19f);
print("%d + %d = %d\n", t19dd, t19z,   t19dd + t19z);
print("%d + %d = %d\n", t19dd, t19x,   t19dd + t19x);
print("%d + %d = %d\n", t19dd, t19q,   t19dd + t19q);
print("%d + %d = %d\n", t19dd, t19r,   t19dd + t19r);
print("%d + %d = %d\n", t19dd, t19n,   t19dd + t19n);
print("%d + %d = %d\n", t19qq, -8,     t19qq + -8);
print("%d + %d = %d\n", t19qq,  8,     t19qq +  8);
print("%d + %d = %d\n", t19qq, 32.0,   t19qq + 32.0);
print("%d + %d = %d\n", t19qq, 0x800000000000000000000000000000000, t19qq + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19qq, 1/2,    t19qq + 1/2);
print("%d + %d = %d\n", t19qq, 0x800000000000000000000000000000000/3, t19qq + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19qq, 1.25L,  t19qq +  1.25L);
print("%d + %d = %d\n", t19qq, 1.25*I, t19qq +  1.25*I);
print("%d + %d = %d\n", t19qq, 1/2*I,  t19qq +  1/2*I);
print("%d + %d = %d\n", t19qq, 1.2L*I, t19qq +  1.2L+I);
print("%d + %d = %d\n", t19qq, t19i8,  t19qq + t19i8);
print("%d + %d = %d\n", t19qq, t19u8,  t19qq + t19u8);
print("%d + %d = %d\n", t19qq, t19i16, t19qq + t19i16);
print("%d + %d = %d\n", t19qq, t19u16, t19qq + t19u16);
print("%d + %d = %d\n", t19qq, t19i32, t19qq + t19i32);
print("%d + %d = %d\n", t19qq, t19u32, t19qq + t19u32);
print("%d + %d = %d\n", t19qq, t19i64, t19qq + t19i64);
print("%d + %d = %d\n", t19qq, t19u64, t19qq + t19u64);
print("%d + %d = %d\n", t19qq, t19f32, t19qq + t19f32);
print("%d + %d = %d\n", t19qq, t19f64, t19qq + t19f64);
print("%d + %d = %d\n", t19qq, t19w,   t19qq + t19w);
print("%d + %d = %d\n", t19qq, t19f,   t19qq + t19f);
print("%d + %d = %d\n", t19qq, t19z,   t19qq + t19z);
print("%d + %d = %d\n", t19qq, t19x,   t19qq + t19x);
print("%d + %d = %d\n", t19qq, t19q,   t19qq + t19q);
print("%d + %d = %d\n", t19qq, t19r,   t19qq + t19r);
print("%d + %d = %d\n", t19qq, t19n,   t19qq + t19n);
print("%d + %d = %d\n", t19cc, -8,     t19cc + -8);
print("%d + %d = %d\n", t19cc,  8,     t19cc +  8);
print("%d + %d = %d\n", t19cc, 32.0,   t19cc + 32.0);
print("%d + %d = %d\n", t19cc, 0x800000000000000000000000000000000, t19cc + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19cc, 1/2,    t19cc + 1/2);
print("%d + %d = %d\n", t19cc, 0x800000000000000000000000000000000/3, t19cc + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19cc, 1.25L,  t19cc +  1.25L);
print("%d + %d = %d\n", t19cc, 1.25*I, t19cc +  1.25*I);
print("%d + %d = %d\n", t19cc, 1/2*I,  t19cc +  1/2*I);
print("%d + %d = %d\n", t19cc, 1.2L*I, t19cc +  1.2L+I);
print("%d + %d = %d\n", t19cc, t19i8,  t19cc + t19i8);
print("%d + %d = %d\n", t19cc, t19u8,  t19cc + t19u8);
print("%d + %d = %d\n", t19cc, t19i16, t19cc + t19i16);
print("%d + %d = %d\n", t19cc, t19u16, t19cc + t19u16);
print("%d + %d = %d\n", t19cc, t19i32, t19cc + t19i32);
print("%d + %d = %d\n", t19cc, t19u32, t19cc + t19u32);
print("%d + %d = %d\n", t19cc, t19i64, t19cc + t19i64);
print("%d + %d = %d\n", t19cc, t19u64, t19cc + t19u64);
print("%d + %d = %d\n", t19cc, t19f32, t19cc + t19f32);
print("%d + %d = %d\n", t19cc, t19f64, t19cc + t19f64);
print("%d + %d = %d\n", t19cc, t19w,   t19cc + t19w);
print("%d + %d = %d\n", t19cc, t19f,   t19cc + t19f);
print("%d + %d = %d\n", t19cc, t19z,   t19cc + t19z);
print("%d + %d = %d\n", t19cc, t19x,   t19cc + t19x);
print("%d + %d = %d\n", t19cc, t19q,   t19cc + t19q);
print("%d + %d = %d\n", t19cc, t19r,   t19cc + t19r);
print("%d + %d = %d\n", t19cc, t19n,   t19cc + t19n);
print("%d + %d = %d\n", t19n, -8,     t19n + -8);
print("%d + %d = %d\n", t19n,  8,     t19n +  8);
print("%d + %d = %d\n", t19n, 32.0,   t19n + 32.0);
print("%d + %d = %d\n", t19n, 0x800000000000000000000000000000000, t19n + 0x800000000000000000000000000000000);
print("%d + %d = %d\n", t19n, 1/2,    t19n + 1/2);
print("%d + %d = %d\n", t19n, 0x800000000000000000000000000000000/3, t19n + 0x800000000000000000000000000000000/3);
print("%d + %d = %d\n", t19n, 1.25L,  t19n +  1.25L);
print("%d + %d = %d\n", t19n, 1.25*I, t19n +  1.25*I);
print("%d + %d = %d\n", t19n, 1/2*I,  t19n +  1/2*I);
print("%d + %d = %d\n", t19n, 1.2L*I, t19n +  1.2L+I);
print("%d + %d = %d\n", t19n, t19i8,  t19n + t19i8);
print("%d + %d = %d\n", t19n, t19u8,  t19n + t19u8);
print("%d + %d = %d\n", t19n, t19i16, t19n + t19i16);
print("%d + %d = %d\n", t19n, t19u16, t19n + t19u16);
print("%d + %d = %d\n", t19n, t19i32, t19n + t19i32);
print("%d + %d = %d\n", t19n, t19u32, t19n + t19u32);
print("%d + %d = %d\n", t19n, t19i64, t19n + t19i64);
print("%d + %d = %d\n", t19n, t19u64, t19n + t19u64);
print("%d + %d = %d\n", t19n, t19f32, t19n + t19f32);
print("%d + %d = %d\n", t19n, t19f64, t19n + t19f64);
print("%d + %d = %d\n", t19n, t19w,   t19n + t19w);
print("%d + %d = %d\n", t19n, t19f,   t19n + t19f);
print("%d + %d = %d\n", t19n, t19z,   t19n + t19z);
print("%d + %d = %d\n", t19n, t19x,   t19n + t19x);
print("%d + %d = %d\n", t19n, t19q,   t19n + t19q);
print("%d + %d = %d\n", t19n, t19r,   t19n + t19r);
print("%d + %d = %d\n", t19n, t19n,   t19n + t19n);
print("%d - %d = %d\n", t19i8, -8,     t19i8 - -8);
print("%d - %d = %d\n", t19i8,  8,     t19i8 -  8);
print("%d - %d = %d\n", t19i8, 32.0,   t19i8 - 32.0);
print("%d - %d = %d\n", t19i8, 0x800000000000000000000000000000000, t19i8 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19i8, 1/2,    t19i8 - 1/2);
print("%d - %d = %d\n", t19i8, 0x800000000000000000000000000000000/3, t19i8 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19i8, 1.25L,  t19i8 -  1.25L);
print("%d - %d = %d\n", t19i8, 1.25*I, t19i8 -  1.25*I);
print("%d - %d = %d\n", t19i8, 1/2*I,  t19i8 -  1/2*I);
print("%d - %d = %d\n", t19i8, 1.2L*I, t19i8 -  1.2L+I);
print("%d - %d = %d\n", t19i8, t19i8,  t19i8 - t19i8);
print("%d - %d = %d\n", t19i8, t19u8,  t19i8 - t19u8);
print("%d - %d = %d\n", t19i8, t19i16, t19i8 - t19i16);
print("%d - %d = %d\n", t19i8, t19u16, t19i8 - t19u16);
print("%d - %d = %d\n", t19i8, t19i32, t19i8 - t19i32);
print("%d - %d = %d\n", t19i8, t19u32, t19i8 - t19u32);
print("%d - %d = %d\n", t19i8, t19i64, t19i8 - t19i64);
print("%d - %d = %d\n", t19i8, t19u64, t19i8 - t19u64);
print("%d - %d = %d\n", t19i8, t19f32, t19i8 - t19f32);
print("%d - %d = %d\n", t19i8, t19f64, t19i8 - t19f64);
print("%d - %d = %d\n", t19i8, t19w,   t19i8 - t19w);
print("%d - %d = %d\n", t19i8, t19f,   t19i8 - t19f);
print("%d - %d = %d\n", t19i8, t19z,   t19i8 - t19z);
print("%d - %d = %d\n", t19i8, t19x,   t19i8 - t19x);
print("%d - %d = %d\n", t19i8, t19q,   t19i8 - t19q);
print("%d - %d = %d\n", t19i8, t19r,   t19i8 - t19r);
print("%d - %d = %d\n", t19i8, t19n,   t19i8 - t19n);
print("%d - %d = %d\n", t19u8, -8,     t19u8 - -8);
print("%d - %d = %d\n", t19u8,  8,     t19u8 -  8);
print("%d - %d = %d\n", t19u8, 32.0,   t19u8 - 32.0);
print("%d - %d = %d\n", t19u8, 0x800000000000000000000000000000000, t19u8 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19u8, 1/2,    t19u8 - 1/2);
print("%d - %d = %d\n", t19u8, 0x800000000000000000000000000000000/3, t19u8 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19u8, 1.25L,  t19u8 -  1.25L);
print("%d - %d = %d\n", t19u8, 1.25*I, t19u8 -  1.25*I);
print("%d - %d = %d\n", t19u8, 1/2*I,  t19u8 -  1/2*I);
print("%d - %d = %d\n", t19u8, 1.2L*I, t19u8 -  1.2L+I);
print("%d - %d = %d\n", t19u8, t19i8,  t19u8 - t19i8);
print("%d - %d = %d\n", t19u8, t19u8,  t19u8 - t19u8);
print("%d - %d = %d\n", t19u8, t19i16, t19u8 - t19i16);
print("%d - %d = %d\n", t19u8, t19u16, t19u8 - t19u16);
print("%d - %d = %d\n", t19u8, t19i32, t19u8 - t19i32);
print("%d - %d = %d\n", t19u8, t19u32, t19u8 - t19u32);
print("%d - %d = %d\n", t19u8, t19i64, t19u8 - t19i64);
print("%d - %d = %d\n", t19u8, t19u64, t19u8 - t19u64);
print("%d - %d = %d\n", t19u8, t19f32, t19u8 - t19f32);
print("%d - %d = %d\n", t19u8, t19f64, t19u8 - t19f64);
print("%d - %d = %d\n", t19u8, t19w,   t19u8 - t19w);
print("%d - %d = %d\n", t19u8, t19f,   t19u8 - t19f);
print("%d - %d = %d\n", t19u8, t19z,   t19u8 - t19z);
print("%d - %d = %d\n", t19u8, t19x,   t19u8 - t19x);
print("%d - %d = %d\n", t19u8, t19q,   t19u8 - t19q);
print("%d - %d = %d\n", t19u8, t19r,   t19u8 - t19r);
print("%d - %d = %d\n", t19u8, t19n,   t19u8 - t19n);
print("%d - %d = %d\n", t19i16, -8,     t19i16 - -8);
print("%d - %d = %d\n", t19i16,  8,     t19i16 -  8);
print("%d - %d = %d\n", t19i16, 32.0,   t19i16 - 32.0);
print("%d - %d = %d\n", t19i16, 0x800000000000000000000000000000000, t19i16 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19i16, 1/2,    t19i16 - 1/2);
print("%d - %d = %d\n", t19i16, 0x800000000000000000000000000000000/3, t19i16 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19i16, 1.25L,  t19i16 -  1.25L);
print("%d - %d = %d\n", t19i16, 1.25*I, t19i16 -  1.25*I);
print("%d - %d = %d\n", t19i16, 1/2*I,  t19i16 -  1/2*I);
print("%d - %d = %d\n", t19i16, 1.2L*I, t19i16 -  1.2L+I);
print("%d - %d = %d\n", t19i16, t19i8,  t19i16 - t19i8);
print("%d - %d = %d\n", t19i16, t19u8,  t19i16 - t19u8);
print("%d - %d = %d\n", t19i16, t19i16, t19i16 - t19i16);
print("%d - %d = %d\n", t19i16, t19u16, t19i16 - t19u16);
print("%d - %d = %d\n", t19i16, t19i32, t19i16 - t19i32);
print("%d - %d = %d\n", t19i16, t19u32, t19i16 - t19u32);
print("%d - %d = %d\n", t19i16, t19i64, t19i16 - t19i64);
print("%d - %d = %d\n", t19i16, t19u64, t19i16 - t19u64);
print("%d - %d = %d\n", t19i16, t19f32, t19i16 - t19f32);
print("%d - %d = %d\n", t19i16, t19f64, t19i16 - t19f64);
print("%d - %d = %d\n", t19i16, t19w,   t19i16 - t19w);
print("%d - %d = %d\n", t19i16, t19f,   t19i16 - t19f);
print("%d - %d = %d\n", t19i16, t19z,   t19i16 - t19z);
print("%d - %d = %d\n", t19i16, t19x,   t19i16 - t19x);
print("%d - %d = %d\n", t19i16, t19q,   t19i16 - t19q);
print("%d - %d = %d\n", t19i16, t19r,   t19i16 - t19r);
print("%d - %d = %d\n", t19i16, t19n,   t19i16 - t19n);
print("%d - %d = %d\n", t19u16, -8,     t19u16 - -8);
print("%d - %d = %d\n", t19u16,  8,     t19u16 -  8);
print("%d - %d = %d\n", t19u16, 32.0,   t19u16 - 32.0);
print("%d - %d = %d\n", t19u16, 0x800000000000000000000000000000000, t19u16 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19u16, 1/2,    t19u16 - 1/2);
print("%d - %d = %d\n", t19u16, 0x800000000000000000000000000000000/3, t19u16 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19u16, 1.25L,  t19u16 -  1.25L);
print("%d - %d = %d\n", t19u16, 1.25*I, t19u16 -  1.25*I);
print("%d - %d = %d\n", t19u16, 1/2*I,  t19u16 -  1/2*I);
print("%d - %d = %d\n", t19u16, 1.2L*I, t19u16 -  1.2L+I);
print("%d - %d = %d\n", t19u16, t19i8,  t19u16 - t19i8);
print("%d - %d = %d\n", t19u16, t19u8,  t19u16 - t19u8);
print("%d - %d = %d\n", t19u16, t19i16, t19u16 - t19i16);
print("%d - %d = %d\n", t19u16, t19u16, t19u16 - t19u16);
print("%d - %d = %d\n", t19u16, t19i32, t19u16 - t19i32);
print("%d - %d = %d\n", t19u16, t19u32, t19u16 - t19u32);
print("%d - %d = %d\n", t19u16, t19i64, t19u16 - t19i64);
print("%d - %d = %d\n", t19u16, t19u64, t19u16 - t19u64);
print("%d - %d = %d\n", t19u16, t19f32, t19u16 - t19f32);
print("%d - %d = %d\n", t19u16, t19f64, t19u16 - t19f64);
print("%d - %d = %d\n", t19u16, t19w,   t19u16 - t19w);
print("%d - %d = %d\n", t19u16, t19f,   t19u16 - t19f);
print("%d - %d = %d\n", t19u16, t19z,   t19u16 - t19z);
print("%d - %d = %d\n", t19u16, t19x,   t19u16 - t19x);
print("%d - %d = %d\n", t19u16, t19q,   t19u16 - t19q);
print("%d - %d = %d\n", t19u16, t19r,   t19u16 - t19r);
print("%d - %d = %d\n", t19u16, t19n,   t19u16 - t19n);
print("%d - %d = %d\n", t19i32, -8,     t19i32 - -8);
print("%d - %d = %d\n", t19i32,  8,     t19i32 -  8);
print("%d - %d = %d\n", t19i32, 32.0,   t19i32 - 32.0);
print("%d - %d = %d\n", t19i32, 0x800000000000000000000000000000000, t19i32 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19i32, 1/2,    t19i32 - 1/2);
print("%d - %d = %d\n", t19i32, 0x800000000000000000000000000000000/3, t19i32 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19i32, 1.25L,  t19i32 -  1.25L);
print("%d - %d = %d\n", t19i32, 1.25*I, t19i32 -  1.25*I);
print("%d - %d = %d\n", t19i32, 1/2*I,  t19i32 -  1/2*I);
print("%d - %d = %d\n", t19i32, 1.2L*I, t19i32 -  1.2L+I);
print("%d - %d = %d\n", t19i32, t19i8,  t19i32 - t19i8);
print("%d - %d = %d\n", t19i32, t19u8,  t19i32 - t19u8);
print("%d - %d = %d\n", t19i32, t19i16, t19i32 - t19i16);
print("%d - %d = %d\n", t19i32, t19u16, t19i32 - t19u16);
print("%d - %d = %d\n", t19i32, t19i32, t19i32 - t19i32);
print("%d - %d = %d\n", t19i32, t19u32, t19i32 - t19u32);
print("%d - %d = %d\n", t19i32, t19i64, t19i32 - t19i64);
print("%d - %d = %d\n", t19i32, t19u64, t19i32 - t19u64);
print("%d - %d = %d\n", t19i32, t19f32, t19i32 - t19f32);
print("%d - %d = %d\n", t19i32, t19f64, t19i32 - t19f64);
print("%d - %d = %d\n", t19i32, t19w,   t19i32 - t19w);
print("%d - %d = %d\n", t19i32, t19f,   t19i32 - t19f);
print("%d - %d = %d\n", t19i32, t19z,   t19i32 - t19z);
print("%d - %d = %d\n", t19i32, t19x,   t19i32 - t19x);
print("%d - %d = %d\n", t19i32, t19q,   t19i32 - t19q);
print("%d - %d = %d\n", t19i32, t19r,   t19i32 - t19r);
print("%d - %d = %d\n", t19i32, t19n,   t19i32 - t19n);
print("%d - %d = %d\n", t19u32, -8,     t19u32 - -8);
print("%d - %d = %d\n", t19u32,  8,     t19u32 -  8);
print("%d - %d = %d\n", t19u32, 32.0,   t19u32 - 32.0);
print("%d - %d = %d\n", t19u32, 0x800000000000000000000000000000000, t19u32 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19u32, 1/2,    t19u32 - 1/2);
print("%d - %d = %d\n", t19u32, 0x800000000000000000000000000000000/3, t19u32 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19u32, 1.25L,  t19u32 -  1.25L);
print("%d - %d = %d\n", t19u32, 1.25*I, t19u32 -  1.25*I);
print("%d - %d = %d\n", t19u32, 1/2*I,  t19u32 -  1/2*I);
print("%d - %d = %d\n", t19u32, 1.2L*I, t19u32 -  1.2L+I);
print("%d - %d = %d\n", t19u32, t19i8,  t19u32 - t19i8);
print("%d - %d = %d\n", t19u32, t19u8,  t19u32 - t19u8);
print("%d - %d = %d\n", t19u32, t19i16, t19u32 - t19i16);
print("%d - %d = %d\n", t19u32, t19u16, t19u32 - t19u16);
print("%d - %d = %d\n", t19u32, t19i32, t19u32 - t19i32);
print("%d - %d = %d\n", t19u32, t19u32, t19u32 - t19u32);
print("%d - %d = %d\n", t19u32, t19i64, t19u32 - t19i64);
print("%d - %d = %d\n", t19u32, t19u64, t19u32 - t19u64);
print("%d - %d = %d\n", t19u32, t19f32, t19u32 - t19f32);
print("%d - %d = %d\n", t19u32, t19f64, t19u32 - t19f64);
print("%d - %d = %d\n", t19u32, t19w,   t19u32 - t19w);
print("%d - %d = %d\n", t19u32, t19f,   t19u32 - t19f);
print("%d - %d = %d\n", t19u32, t19z,   t19u32 - t19z);
print("%d - %d = %d\n", t19u32, t19x,   t19u32 - t19x);
print("%d - %d = %d\n", t19u32, t19q,   t19u32 - t19q);
print("%d - %d = %d\n", t19u32, t19r,   t19u32 - t19r);
print("%d - %d = %d\n", t19u32, t19n,   t19u32 - t19n);
print("%d - %d = %d\n", t19i64, -8,     t19i64 - -8);
print("%d - %d = %d\n", t19i64,  8,     t19i64 -  8);
print("%d - %d = %d\n", t19i64, 32.0,   t19i64 - 32.0);
print("%d - %d = %d\n", t19i64, 0x800000000000000000000000000000000, t19i64 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19i64, 1/2,    t19i64 - 1/2);
print("%d - %d = %d\n", t19i64, 0x800000000000000000000000000000000/3, t19i64 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19i64, 1.25L,  t19i64 -  1.25L);
print("%d - %d = %d\n", t19i64, 1.25*I, t19i64 -  1.25*I);
print("%d - %d = %d\n", t19i64, 1/2*I,  t19i64 -  1/2*I);
print("%d - %d = %d\n", t19i64, 1.2L*I, t19i64 -  1.2L+I);
print("%d - %d = %d\n", t19i64, t19i8,  t19i64 - t19i8);
print("%d - %d = %d\n", t19i64, t19u8,  t19i64 - t19u8);
print("%d - %d = %d\n", t19i64, t19i16, t19i64 - t19i16);
print("%d - %d = %d\n", t19i64, t19u16, t19i64 - t19u16);
print("%d - %d = %d\n", t19i64, t19i32, t19i64 - t19i32);
print("%d - %d = %d\n", t19i64, t19u32, t19i64 - t19u32);
print("%d - %d = %d\n", t19i64, t19i64, t19i64 - t19i64);
print("%d - %d = %d\n", t19i64, t19u64, t19i64 - t19u64);
print("%d - %d = %d\n", t19i64, t19f32, t19i64 - t19f32);
print("%d - %d = %d\n", t19i64, t19f64, t19i64 - t19f64);
print("%d - %d = %d\n", t19i64, t19w,   t19i64 - t19w);
print("%d - %d = %d\n", t19i64, t19f,   t19i64 - t19f);
print("%d - %d = %d\n", t19i64, t19z,   t19i64 - t19z);
print("%d - %d = %d\n", t19i64, t19x,   t19i64 - t19x);
print("%d - %d = %d\n", t19i64, t19q,   t19i64 - t19q);
print("%d - %d = %d\n", t19i64, t19r,   t19i64 - t19r);
print("%d - %d = %d\n", t19i64, t19n,   t19i64 - t19n);
print("%d - %d = %d\n", t19u64, -8,     t19u64 - -8);
print("%d - %d = %d\n", t19u64,  8,     t19u64 -  8);
print("%d - %d = %d\n", t19u64, 32.0,   t19u64 - 32.0);
print("%d - %d = %d\n", t19u64, 0x800000000000000000000000000000000, t19u64 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19u64, 1/2,    t19u64 - 1/2);
print("%d - %d = %d\n", t19u64, 0x800000000000000000000000000000000/3, t19u64 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19u64, 1.25L,  t19u64 -  1.25L);
print("%d - %d = %d\n", t19u64, 1.25*I, t19u64 -  1.25*I);
print("%d - %d = %d\n", t19u64, 1/2*I,  t19u64 -  1/2*I);
print("%d - %d = %d\n", t19u64, 1.2L*I, t19u64 -  1.2L+I);
print("%d - %d = %d\n", t19u64, t19i8,  t19u64 - t19i8);
print("%d - %d = %d\n", t19u64, t19u8,  t19u64 - t19u8);
print("%d - %d = %d\n", t19u64, t19i16, t19u64 - t19i16);
print("%d - %d = %d\n", t19u64, t19u16, t19u64 - t19u16);
print("%d - %d = %d\n", t19u64, t19i32, t19u64 - t19i32);
print("%d - %d = %d\n", t19u64, t19u32, t19u64 - t19u32);
print("%d - %d = %d\n", t19u64, t19i64, t19u64 - t19i64);
print("%d - %d = %d\n", t19u64, t19u64, t19u64 - t19u64);
print("%d - %d = %d\n", t19u64, t19f32, t19u64 - t19f32);
print("%d - %d = %d\n", t19u64, t19f64, t19u64 - t19f64);
print("%d - %d = %d\n", t19u64, t19w,   t19u64 - t19w);
print("%d - %d = %d\n", t19u64, t19f,   t19u64 - t19f);
print("%d - %d = %d\n", t19u64, t19z,   t19u64 - t19z);
print("%d - %d = %d\n", t19u64, t19x,   t19u64 - t19x);
print("%d - %d = %d\n", t19u64, t19q,   t19u64 - t19q);
print("%d - %d = %d\n", t19u64, t19r,   t19u64 - t19r);
print("%d - %d = %d\n", t19u64, t19n,   t19u64 - t19n);
print("%d - %d = %d\n", t19f32, -8,     t19f32 - -8);
print("%d - %d = %d\n", t19f32,  8,     t19f32 -  8);
print("%d - %d = %d\n", t19f32, 32.0,   t19f32 - 32.0);
print("%d - %d = %d\n", t19f32, 0x800000000000000000000000000000000, t19f32 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19f32, 1/2,    t19f32 - 1/2);
print("%d - %d = %d\n", t19f32, 0x800000000000000000000000000000000/3, t19f32 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19f32, 1.25L,  t19f32 -  1.25L);
print("%d - %d = %d\n", t19f32, 1.25*I, t19f32 -  1.25*I);
print("%d - %d = %d\n", t19f32, 1/2*I,  t19f32 -  1/2*I);
print("%d - %d = %d\n", t19f32, 1.2L*I, t19f32 -  1.2L+I);
print("%d - %d = %d\n", t19f32, t19i8,  t19f32 - t19i8);
print("%d - %d = %d\n", t19f32, t19u8,  t19f32 - t19u8);
print("%d - %d = %d\n", t19f32, t19i16, t19f32 - t19i16);
print("%d - %d = %d\n", t19f32, t19u16, t19f32 - t19u16);
print("%d - %d = %d\n", t19f32, t19i32, t19f32 - t19i32);
print("%d - %d = %d\n", t19f32, t19u32, t19f32 - t19u32);
print("%d - %d = %d\n", t19f32, t19i64, t19f32 - t19i64);
print("%d - %d = %d\n", t19f32, t19u64, t19f32 - t19u64);
print("%d - %d = %d\n", t19f32, t19f32, t19f32 - t19f32);
print("%d - %d = %d\n", t19f32, t19f64, t19f32 - t19f64);
print("%d - %d = %d\n", t19f32, t19w,   t19f32 - t19w);
print("%d - %d = %d\n", t19f32, t19f,   t19f32 - t19f);
print("%d - %d = %d\n", t19f32, t19z,   t19f32 - t19z);
print("%d - %d = %d\n", t19f32, t19x,   t19f32 - t19x);
print("%d - %d = %d\n", t19f32, t19q,   t19f32 - t19q);
print("%d - %d = %d\n", t19f32, t19r,   t19f32 - t19r);
print("%d - %d = %d\n", t19f32, t19n,   t19f32 - t19n);
print("%d - %d = %d\n", t19f64, -8,     t19f64 - -8);
print("%d - %d = %d\n", t19f64,  8,     t19f64 -  8);
print("%d - %d = %d\n", t19f64, 32.0,   t19f64 - 32.0);
print("%d - %d = %d\n", t19f64, 0x800000000000000000000000000000000, t19f64 - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19f64, 1/2,    t19f64 - 1/2);
print("%d - %d = %d\n", t19f64, 0x800000000000000000000000000000000/3, t19f64 - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19f64, 1.25L,  t19f64 -  1.25L);
print("%d - %d = %d\n", t19f64, 1.25*I, t19f64 -  1.25*I);
print("%d - %d = %d\n", t19f64, 1/2*I,  t19f64 -  1/2*I);
print("%d - %d = %d\n", t19f64, 1.2L*I, t19f64 -  1.2L+I);
print("%d - %d = %d\n", t19f64, t19i8,  t19f64 - t19i8);
print("%d - %d = %d\n", t19f64, t19u8,  t19f64 - t19u8);
print("%d - %d = %d\n", t19f64, t19i16, t19f64 - t19i16);
print("%d - %d = %d\n", t19f64, t19u16, t19f64 - t19u16);
print("%d - %d = %d\n", t19f64, t19i32, t19f64 - t19i32);
print("%d - %d = %d\n", t19f64, t19u32, t19f64 - t19u32);
print("%d - %d = %d\n", t19f64, t19i64, t19f64 - t19i64);
print("%d - %d = %d\n", t19f64, t19u64, t19f64 - t19u64);
print("%d - %d = %d\n", t19f64, t19f32, t19f64 - t19f32);
print("%d - %d = %d\n", t19f64, t19f64, t19f64 - t19f64);
print("%d - %d = %d\n", t19f64, t19w,   t19f64 - t19w);
print("%d - %d = %d\n", t19f64, t19f,   t19f64 - t19f);
print("%d - %d = %d\n", t19f64, t19z,   t19f64 - t19z);
print("%d - %d = %d\n", t19f64, t19x,   t19f64 - t19x);
print("%d - %d = %d\n", t19f64, t19q,   t19f64 - t19q);
print("%d - %d = %d\n", t19f64, t19r,   t19f64 - t19r);
print("%d - %d = %d\n", t19f64, t19n,   t19f64 - t19n);
print("%d - %d = %d\n", t19w, -8,     t19w - -8);
print("%d - %d = %d\n", t19w,  8,     t19w -  8);
print("%d - %d = %d\n", t19w, 32.0,   t19w - 32.0);
print("%d - %d = %d\n", t19w, 0x800000000000000000000000000000000, t19w - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19w, 1/2,    t19w - 1/2);
print("%d - %d = %d\n", t19w, 0x800000000000000000000000000000000/3, t19w - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19w, 1.25L,  t19w -  1.25L);
print("%d - %d = %d\n", t19w, 1.25*I, t19w -  1.25*I);
print("%d - %d = %d\n", t19w, 1/2*I,  t19w -  1/2*I);
print("%d - %d = %d\n", t19w, 1.2L*I, t19w -  1.2L+I);
print("%d - %d = %d\n", t19w, t19i8,  t19w - t19i8);
print("%d - %d = %d\n", t19w, t19u8,  t19w - t19u8);
print("%d - %d = %d\n", t19w, t19i16, t19w - t19i16);
print("%d - %d = %d\n", t19w, t19u16, t19w - t19u16);
print("%d - %d = %d\n", t19w, t19i32, t19w - t19i32);
print("%d - %d = %d\n", t19w, t19u32, t19w - t19u32);
print("%d - %d = %d\n", t19w, t19i64, t19w - t19i64);
print("%d - %d = %d\n", t19w, t19u64, t19w - t19u64);
print("%d - %d = %d\n", t19w, t19f32, t19w - t19f32);
print("%d - %d = %d\n", t19w, t19f64, t19w - t19f64);
print("%d - %d = %d\n", t19w, t19w,   t19w - t19w);
print("%d - %d = %d\n", t19w, t19f,   t19w - t19f);
print("%d - %d = %d\n", t19w, t19z,   t19w - t19z);
print("%d - %d = %d\n", t19w, t19x,   t19w - t19x);
print("%d - %d = %d\n", t19w, t19q,   t19w - t19q);
print("%d - %d = %d\n", t19w, t19r,   t19w - t19r);
print("%d - %d = %d\n", t19w, t19n,   t19w - t19n);
print("%d - %d = %d\n", t19f, -8,     t19f - -8);
print("%d - %d = %d\n", t19f,  8,     t19f -  8);
print("%d - %d = %d\n", t19f, 32.0,   t19f - 32.0);
print("%d - %d = %d\n", t19f, 0x800000000000000000000000000000000, t19f - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19f, 1/2,    t19f - 1/2);
print("%d - %d = %d\n", t19f, 0x800000000000000000000000000000000/3, t19f - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19f, 1.25L,  t19f -  1.25L);
print("%d - %d = %d\n", t19f, 1.25*I, t19f -  1.25*I);
print("%d - %d = %d\n", t19f, 1/2*I,  t19f -  1/2*I);
print("%d - %d = %d\n", t19f, 1.2L*I, t19f -  1.2L+I);
print("%d - %d = %d\n", t19f, t19i8,  t19f - t19i8);
print("%d - %d = %d\n", t19f, t19u8,  t19f - t19u8);
print("%d - %d = %d\n", t19f, t19i16, t19f - t19i16);
print("%d - %d = %d\n", t19f, t19u16, t19f - t19u16);
print("%d - %d = %d\n", t19f, t19i32, t19f - t19i32);
print("%d - %d = %d\n", t19f, t19u32, t19f - t19u32);
print("%d - %d = %d\n", t19f, t19i64, t19f - t19i64);
print("%d - %d = %d\n", t19f, t19u64, t19f - t19u64);
print("%d - %d = %d\n", t19f, t19f32, t19f - t19f32);
print("%d - %d = %d\n", t19f, t19f64, t19f - t19f64);
print("%d - %d = %d\n", t19f, t19w,   t19f - t19w);
print("%d - %d = %d\n", t19f, t19f,   t19f - t19f);
print("%d - %d = %d\n", t19f, t19z,   t19f - t19z);
print("%d - %d = %d\n", t19f, t19x,   t19f - t19x);
print("%d - %d = %d\n", t19f, t19q,   t19f - t19q);
print("%d - %d = %d\n", t19f, t19r,   t19f - t19r);
print("%d - %d = %d\n", t19f, t19n,   t19f - t19n);
print("%d - %d = %d\n", t19z, -8,     t19z - -8);
print("%d - %d = %d\n", t19z,  8,     t19z -  8);
print("%d - %d = %d\n", t19z, 32.0,   t19z - 32.0);
print("%d - %d = %d\n", t19z, 0x800000000000000000000000000000000, t19z - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19z, 1/2,    t19z - 1/2);
print("%d - %d = %d\n", t19z, 0x800000000000000000000000000000000/3, t19z - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19z, 1.25L,  t19z -  1.25L);
print("%d - %d = %d\n", t19z, 1.25*I, t19z -  1.25*I);
print("%d - %d = %d\n", t19z, 1/2*I,  t19z -  1/2*I);
print("%d - %d = %d\n", t19z, 1.2L*I, t19z -  1.2L+I);
print("%d - %d = %d\n", t19z, t19i8,  t19z - t19i8);
print("%d - %d = %d\n", t19z, t19u8,  t19z - t19u8);
print("%d - %d = %d\n", t19z, t19i16, t19z - t19i16);
print("%d - %d = %d\n", t19z, t19u16, t19z - t19u16);
print("%d - %d = %d\n", t19z, t19i32, t19z - t19i32);
print("%d - %d = %d\n", t19z, t19u32, t19z - t19u32);
print("%d - %d = %d\n", t19z, t19i64, t19z - t19i64);
print("%d - %d = %d\n", t19z, t19u64, t19z - t19u64);
print("%d - %d = %d\n", t19z, t19f32, t19z - t19f32);
print("%d - %d = %d\n", t19z, t19f64, t19z - t19f64);
print("%d - %d = %d\n", t19z, t19w,   t19z - t19w);
print("%d - %d = %d\n", t19z, t19f,   t19z - t19f);
print("%d - %d = %d\n", t19z, t19z,   t19z - t19z);
print("%d - %d = %d\n", t19z, t19x,   t19z - t19x);
print("%d - %d = %d\n", t19z, t19q,   t19z - t19q);
print("%d - %d = %d\n", t19z, t19r,   t19z - t19r);
print("%d - %d = %d\n", t19z, t19n,   t19z - t19n);
print("%d - %d = %d\n", t19x, -8,     t19x - -8);
print("%d - %d = %d\n", t19x,  8,     t19x -  8);
print("%d - %d = %d\n", t19x, 32.0,   t19x - 32.0);
print("%d - %d = %d\n", t19x, 0x800000000000000000000000000000000, t19x - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19x, 1/2,    t19x - 1/2);
print("%d - %d = %d\n", t19x, 0x800000000000000000000000000000000/3, t19x - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19x, 1.25L,  t19x -  1.25L);
print("%d - %d = %d\n", t19x, 1.25*I, t19x -  1.25*I);
print("%d - %d = %d\n", t19x, 1/2*I,  t19x -  1/2*I);
print("%d - %d = %d\n", t19x, 1.2L*I, t19x -  1.2L+I);
print("%d - %d = %d\n", t19x, t19i8,  t19x - t19i8);
print("%d - %d = %d\n", t19x, t19u8,  t19x - t19u8);
print("%d - %d = %d\n", t19x, t19i16, t19x - t19i16);
print("%d - %d = %d\n", t19x, t19u16, t19x - t19u16);
print("%d - %d = %d\n", t19x, t19i32, t19x - t19i32);
print("%d - %d = %d\n", t19x, t19u32, t19x - t19u32);
print("%d - %d = %d\n", t19x, t19i64, t19x - t19i64);
print("%d - %d = %d\n", t19x, t19u64, t19x - t19u64);
print("%d - %d = %d\n", t19x, t19f32, t19x - t19f32);
print("%d - %d = %d\n", t19x, t19f64, t19x - t19f64);
print("%d - %d = %d\n", t19x, t19w,   t19x - t19w);
print("%d - %d = %d\n", t19x, t19f,   t19x - t19f);
print("%d - %d = %d\n", t19x, t19z,   t19x - t19z);
print("%d - %d = %d\n", t19x, t19x,   t19x - t19x);
print("%d - %d = %d\n", t19x, t19q,   t19x - t19q);
print("%d - %d = %d\n", t19x, t19r,   t19x - t19r);
print("%d - %d = %d\n", t19x, t19n,   t19x - t19n);
print("%d - %d = %d\n", t19q, -8,     t19q - -8);
print("%d - %d = %d\n", t19q,  8,     t19q -  8);
print("%d - %d = %d\n", t19q, 32.0,   t19q - 32.0);
print("%d - %d = %d\n", t19q, 0x800000000000000000000000000000000, t19q - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19q, 1/2,    t19q - 1/2);
print("%d - %d = %d\n", t19q, 0x800000000000000000000000000000000/3, t19q - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19q, 1.25L,  t19q -  1.25L);
print("%d - %d = %d\n", t19q, 1.25*I, t19q -  1.25*I);
print("%d - %d = %d\n", t19q, 1/2*I,  t19q -  1/2*I);
print("%d - %d = %d\n", t19q, 1.2L*I, t19q -  1.2L+I);
print("%d - %d = %d\n", t19q, t19i8,  t19q - t19i8);
print("%d - %d = %d\n", t19q, t19u8,  t19q - t19u8);
print("%d - %d = %d\n", t19q, t19i16, t19q - t19i16);
print("%d - %d = %d\n", t19q, t19u16, t19q - t19u16);
print("%d - %d = %d\n", t19q, t19i32, t19q - t19i32);
print("%d - %d = %d\n", t19q, t19u32, t19q - t19u32);
print("%d - %d = %d\n", t19q, t19i64, t19q - t19i64);
print("%d - %d = %d\n", t19q, t19u64, t19q - t19u64);
print("%d - %d = %d\n", t19q, t19f32, t19q - t19f32);
print("%d - %d = %d\n", t19q, t19f64, t19q - t19f64);
print("%d - %d = %d\n", t19q, t19w,   t19q - t19w);
print("%d - %d = %d\n", t19q, t19f,   t19q - t19f);
print("%d - %d = %d\n", t19q, t19z,   t19q - t19z);
print("%d - %d = %d\n", t19q, t19x,   t19q - t19x);
print("%d - %d = %d\n", t19q, t19q,   t19q - t19q);
print("%d - %d = %d\n", t19q, t19r,   t19q - t19r);
print("%d - %d = %d\n", t19q, t19n,   t19q - t19n);
print("%d - %d = %d\n", t19r, -8,     t19r - -8);
print("%d - %d = %d\n", t19r,  8,     t19r -  8);
print("%d - %d = %d\n", t19r, 32.0,   t19r - 32.0);
print("%d - %d = %d\n", t19r, 0x800000000000000000000000000000000, t19r - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19r, 1/2,    t19r - 1/2);
print("%d - %d = %d\n", t19r, 0x800000000000000000000000000000000/3, t19r - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19r, 1.25L,  t19r -  1.25L);
print("%d - %d = %d\n", t19r, 1.25*I, t19r -  1.25*I);
print("%d - %d = %d\n", t19r, 1/2*I,  t19r -  1/2*I);
print("%d - %d = %d\n", t19r, 1.2L*I, t19r -  1.2L+I);
print("%d - %d = %d\n", t19r, t19i8,  t19r - t19i8);
print("%d - %d = %d\n", t19r, t19u8,  t19r - t19u8);
print("%d - %d = %d\n", t19r, t19i16, t19r - t19i16);
print("%d - %d = %d\n", t19r, t19u16, t19r - t19u16);
print("%d - %d = %d\n", t19r, t19i32, t19r - t19i32);
print("%d - %d = %d\n", t19r, t19u32, t19r - t19u32);
print("%d - %d = %d\n", t19r, t19i64, t19r - t19i64);
print("%d - %d = %d\n", t19r, t19u64, t19r - t19u64);
print("%d - %d = %d\n", t19r, t19f32, t19r - t19f32);
print("%d - %d = %d\n", t19r, t19f64, t19r - t19f64);
print("%d - %d = %d\n", t19r, t19w,   t19r - t19w);
print("%d - %d = %d\n", t19r, t19f,   t19r - t19f);
print("%d - %d = %d\n", t19r, t19z,   t19r - t19z);
print("%d - %d = %d\n", t19r, t19x,   t19r - t19x);
print("%d - %d = %d\n", t19r, t19q,   t19r - t19q);
print("%d - %d = %d\n", t19r, t19r,   t19r - t19r);
print("%d - %d = %d\n", t19r, t19n,   t19r - t19n);
print("%d - %d = %d\n", t19dd, -8,     t19dd - -8);
print("%d - %d = %d\n", t19dd,  8,     t19dd -  8);
print("%d - %d = %d\n", t19dd, 32.0,   t19dd - 32.0);
print("%d - %d = %d\n", t19dd, 0x800000000000000000000000000000000, t19dd - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19dd, 1/2,    t19dd - 1/2);
print("%d - %d = %d\n", t19dd, 0x800000000000000000000000000000000/3, t19dd - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19dd, 1.25L,  t19dd -  1.25L);
print("%d - %d = %d\n", t19dd, 1.25*I, t19dd -  1.25*I);
print("%d - %d = %d\n", t19dd, 1/2*I,  t19dd -  1/2*I);
print("%d - %d = %d\n", t19dd, 1.2L*I, t19dd -  1.2L+I);
print("%d - %d = %d\n", t19dd, t19i8,  t19dd - t19i8);
print("%d - %d = %d\n", t19dd, t19u8,  t19dd - t19u8);
print("%d - %d = %d\n", t19dd, t19i16, t19dd - t19i16);
print("%d - %d = %d\n", t19dd, t19u16, t19dd - t19u16);
print("%d - %d = %d\n", t19dd, t19i32, t19dd - t19i32);
print("%d - %d = %d\n", t19dd, t19u32, t19dd - t19u32);
print("%d - %d = %d\n", t19dd, t19i64, t19dd - t19i64);
print("%d - %d = %d\n", t19dd, t19u64, t19dd - t19u64);
print("%d - %d = %d\n", t19dd, t19f32, t19dd - t19f32);
print("%d - %d = %d\n", t19dd, t19f64, t19dd - t19f64);
print("%d - %d = %d\n", t19dd, t19w,   t19dd - t19w);
print("%d - %d = %d\n", t19dd, t19f,   t19dd - t19f);
print("%d - %d = %d\n", t19dd, t19z,   t19dd - t19z);
print("%d - %d = %d\n", t19dd, t19x,   t19dd - t19x);
print("%d - %d = %d\n", t19dd, t19q,   t19dd - t19q);
print("%d - %d = %d\n", t19dd, t19r,   t19dd - t19r);
print("%d - %d = %d\n", t19dd, t19n,   t19dd - t19n);
print("%d - %d = %d\n", t19qq, -8,     t19qq - -8);
print("%d - %d = %d\n", t19qq,  8,     t19qq -  8);
print("%d - %d = %d\n", t19qq, 32.0,   t19qq - 32.0);
print("%d - %d = %d\n", t19qq, 0x800000000000000000000000000000000, t19qq - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19qq, 1/2,    t19qq - 1/2);
print("%d - %d = %d\n", t19qq, 0x800000000000000000000000000000000/3, t19qq - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19qq, 1.25L,  t19qq -  1.25L);
print("%d - %d = %d\n", t19qq, 1.25*I, t19qq -  1.25*I);
print("%d - %d = %d\n", t19qq, 1/2*I,  t19qq -  1/2*I);
print("%d - %d = %d\n", t19qq, 1.2L*I, t19qq -  1.2L+I);
print("%d - %d = %d\n", t19qq, t19i8,  t19qq - t19i8);
print("%d - %d = %d\n", t19qq, t19u8,  t19qq - t19u8);
print("%d - %d = %d\n", t19qq, t19i16, t19qq - t19i16);
print("%d - %d = %d\n", t19qq, t19u16, t19qq - t19u16);
print("%d - %d = %d\n", t19qq, t19i32, t19qq - t19i32);
print("%d - %d = %d\n", t19qq, t19u32, t19qq - t19u32);
print("%d - %d = %d\n", t19qq, t19i64, t19qq - t19i64);
print("%d - %d = %d\n", t19qq, t19u64, t19qq - t19u64);
print("%d - %d = %d\n", t19qq, t19f32, t19qq - t19f32);
print("%d - %d = %d\n", t19qq, t19f64, t19qq - t19f64);
print("%d - %d = %d\n", t19qq, t19w,   t19qq - t19w);
print("%d - %d = %d\n", t19qq, t19f,   t19qq - t19f);
print("%d - %d = %d\n", t19qq, t19z,   t19qq - t19z);
print("%d - %d = %d\n", t19qq, t19x,   t19qq - t19x);
print("%d - %d = %d\n", t19qq, t19q,   t19qq - t19q);
print("%d - %d = %d\n", t19qq, t19r,   t19qq - t19r);
print("%d - %d = %d\n", t19qq, t19n,   t19qq - t19n);
print("%d - %d = %d\n", t19cc, -8,     t19cc - -8);
print("%d - %d = %d\n", t19cc,  8,     t19cc -  8);
print("%d - %d = %d\n", t19cc, 32.0,   t19cc - 32.0);
print("%d - %d = %d\n", t19cc, 0x800000000000000000000000000000000, t19cc - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19cc, 1/2,    t19cc - 1/2);
print("%d - %d = %d\n", t19cc, 0x800000000000000000000000000000000/3, t19cc - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19cc, 1.25L,  t19cc -  1.25L);
print("%d - %d = %d\n", t19cc, 1.25*I, t19cc -  1.25*I);
print("%d - %d = %d\n", t19cc, 1/2*I,  t19cc -  1/2*I);
print("%d - %d = %d\n", t19cc, 1.2L*I, t19cc -  1.2L+I);
print("%d - %d = %d\n", t19cc, t19i8,  t19cc - t19i8);
print("%d - %d = %d\n", t19cc, t19u8,  t19cc - t19u8);
print("%d - %d = %d\n", t19cc, t19i16, t19cc - t19i16);
print("%d - %d = %d\n", t19cc, t19u16, t19cc - t19u16);
print("%d - %d = %d\n", t19cc, t19i32, t19cc - t19i32);
print("%d - %d = %d\n", t19cc, t19u32, t19cc - t19u32);
print("%d - %d = %d\n", t19cc, t19i64, t19cc - t19i64);
print("%d - %d = %d\n", t19cc, t19u64, t19cc - t19u64);
print("%d - %d = %d\n", t19cc, t19f32, t19cc - t19f32);
print("%d - %d = %d\n", t19cc, t19f64, t19cc - t19f64);
print("%d - %d = %d\n", t19cc, t19w,   t19cc - t19w);
print("%d - %d = %d\n", t19cc, t19f,   t19cc - t19f);
print("%d - %d = %d\n", t19cc, t19z,   t19cc - t19z);
print("%d - %d = %d\n", t19cc, t19x,   t19cc - t19x);
print("%d - %d = %d\n", t19cc, t19q,   t19cc - t19q);
print("%d - %d = %d\n", t19cc, t19r,   t19cc - t19r);
print("%d - %d = %d\n", t19cc, t19n,   t19cc - t19n);
print("%d - %d = %d\n", t19n, -8,     t19n - -8);
print("%d - %d = %d\n", t19n,  8,     t19n -  8);
print("%d - %d = %d\n", t19n, 32.0,   t19n - 32.0);
print("%d - %d = %d\n", t19n, 0x800000000000000000000000000000000, t19n - 0x800000000000000000000000000000000);
print("%d - %d = %d\n", t19n, 1/2,    t19n - 1/2);
print("%d - %d = %d\n", t19n, 0x800000000000000000000000000000000/3, t19n - 0x800000000000000000000000000000000/3);
print("%d - %d = %d\n", t19n, 1.25L,  t19n -  1.25L);
print("%d - %d = %d\n", t19n, 1.25*I, t19n -  1.25*I);
print("%d - %d = %d\n", t19n, 1/2*I,  t19n -  1/2*I);
print("%d - %d = %d\n", t19n, 1.2L*I, t19n -  1.2L+I);
print("%d - %d = %d\n", t19n, t19i8,  t19n - t19i8);
print("%d - %d = %d\n", t19n, t19u8,  t19n - t19u8);
print("%d - %d = %d\n", t19n, t19i16, t19n - t19i16);
print("%d - %d = %d\n", t19n, t19u16, t19n - t19u16);
print("%d - %d = %d\n", t19n, t19i32, t19n - t19i32);
print("%d - %d = %d\n", t19n, t19u32, t19n - t19u32);
print("%d - %d = %d\n", t19n, t19i64, t19n - t19i64);
print("%d - %d = %d\n", t19n, t19u64, t19n - t19u64);
print("%d - %d = %d\n", t19n, t19f32, t19n - t19f32);
print("%d - %d = %d\n", t19n, t19f64, t19n - t19f64);
print("%d - %d = %d\n", t19n, t19w,   t19n - t19w);
print("%d - %d = %d\n", t19n, t19f,   t19n - t19f);
print("%d - %d = %d\n", t19n, t19z,   t19n - t19z);
print("%d - %d = %d\n", t19n, t19x,   t19n - t19x);
print("%d - %d = %d\n", t19n, t19q,   t19n - t19q);
print("%d - %d = %d\n", t19n, t19r,   t19n - t19r);
print("%d - %d = %d\n", t19n, t19n,   t19n - t19n);

int8_t		t20i8  = -8;
uint8_t		t20u8  =  8;
int16_t		t20i16 = -16;
uint16_t	t20u16 =  16;
int32_t		t20i32 = -32;
uint32_t	t20u32 =  32;
int64_t		t20i64 = -64;
uint64_t	t20u64 =  64;
float32_t	t20f32 = -32.0;
float64_t	t20f64 =  64.0;
auto		t20w   =  42;
auto		t20f   = -42.25;
auto		t20z   =  0x800000000000000000000000000000000;
auto		t20x   =  1/2;
auto		t20q   =  0x800000000000000000000000000000000/3;
auto		t20r   = -1.25L;
auto		t20dd  =  1.25+I;
auto		t20qq  =  4/3+I;
auto		t20cc  = -1.25L+I;
auto		t20n   =  null;
print("%d * %d = %d\n", t20i8, -8,     t20i8 * -8);
print("%d * %d = %d\n", t20i8,  8,     t20i8 *  8);
print("%d * %d = %d\n", t20i8, 32.0,   t20i8 * 32.0);
print("%d * %d = %d\n", t20i8, 0x800000000000000000000000000000000, t20i8 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20i8, 1/2,    t20i8 * 1/2);
print("%d * %d = %d\n", t20i8, 0x800000000000000000000000000000000/3, t20i8 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20i8, 1.25L,  t20i8 *  1.25L);
print("%d * %d = %d\n", t20i8, 1.25*I, t20i8 *  1.25*I);
print("%d * %d = %d\n", t20i8, 1/2*I,  t20i8 *  1/2*I);
print("%d * %d = %d\n", t20i8, 1.2L*I, t20i8 *  1.2L+I);
print("%d * %d = %d\n", t20i8, t20i8,  t20i8 * t20i8);
print("%d * %d = %d\n", t20i8, t20u8,  t20i8 * t20u8);
print("%d * %d = %d\n", t20i8, t20i16, t20i8 * t20i16);
print("%d * %d = %d\n", t20i8, t20u16, t20i8 * t20u16);
print("%d * %d = %d\n", t20i8, t20i32, t20i8 * t20i32);
print("%d * %d = %d\n", t20i8, t20u32, t20i8 * t20u32);
print("%d * %d = %d\n", t20i8, t20i64, t20i8 * t20i64);
print("%d * %d = %d\n", t20i8, t20u64, t20i8 * t20u64);
print("%d * %d = %d\n", t20i8, t20f32, t20i8 * t20f32);
print("%d * %d = %d\n", t20i8, t20f64, t20i8 * t20f64);
print("%d * %d = %d\n", t20i8, t20w,   t20i8 * t20w);
print("%d * %d = %d\n", t20i8, t20f,   t20i8 * t20f);
print("%d * %d = %d\n", t20i8, t20z,   t20i8 * t20z);
print("%d * %d = %d\n", t20i8, t20x,   t20i8 * t20x);
print("%d * %d = %d\n", t20i8, t20q,   t20i8 * t20q);
print("%d * %d = %d\n", t20i8, t20r,   t20i8 * t20r);
print("%d * %d = %d\n", t20i8, t20n,   t20i8 * t20n);
print("%d * %d = %d\n", t20u8, -8,     t20u8 * -8);
print("%d * %d = %d\n", t20u8,  8,     t20u8 *  8);
print("%d * %d = %d\n", t20u8, 32.0,   t20u8 * 32.0);
print("%d * %d = %d\n", t20u8, 0x800000000000000000000000000000000, t20u8 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20u8, 1/2,    t20u8 * 1/2);
print("%d * %d = %d\n", t20u8, 0x800000000000000000000000000000000/3, t20u8 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20u8, 1.25L,  t20u8 *  1.25L);
print("%d * %d = %d\n", t20u8, 1.25*I, t20u8 *  1.25*I);
print("%d * %d = %d\n", t20u8, 1/2*I,  t20u8 *  1/2*I);
print("%d * %d = %d\n", t20u8, 1.2L*I, t20u8 *  1.2L+I);
print("%d * %d = %d\n", t20u8, t20i8,  t20u8 * t20i8);
print("%d * %d = %d\n", t20u8, t20u8,  t20u8 * t20u8);
print("%d * %d = %d\n", t20u8, t20i16, t20u8 * t20i16);
print("%d * %d = %d\n", t20u8, t20u16, t20u8 * t20u16);
print("%d * %d = %d\n", t20u8, t20i32, t20u8 * t20i32);
print("%d * %d = %d\n", t20u8, t20u32, t20u8 * t20u32);
print("%d * %d = %d\n", t20u8, t20i64, t20u8 * t20i64);
print("%d * %d = %d\n", t20u8, t20u64, t20u8 * t20u64);
print("%d * %d = %d\n", t20u8, t20f32, t20u8 * t20f32);
print("%d * %d = %d\n", t20u8, t20f64, t20u8 * t20f64);
print("%d * %d = %d\n", t20u8, t20w,   t20u8 * t20w);
print("%d * %d = %d\n", t20u8, t20f,   t20u8 * t20f);
print("%d * %d = %d\n", t20u8, t20z,   t20u8 * t20z);
print("%d * %d = %d\n", t20u8, t20x,   t20u8 * t20x);
print("%d * %d = %d\n", t20u8, t20q,   t20u8 * t20q);
print("%d * %d = %d\n", t20u8, t20r,   t20u8 * t20r);
print("%d * %d = %d\n", t20u8, t20n,   t20u8 * t20n);
print("%d * %d = %d\n", t20i16, -8,     t20i16 * -8);
print("%d * %d = %d\n", t20i16,  8,     t20i16 *  8);
print("%d * %d = %d\n", t20i16, 32.0,   t20i16 * 32.0);
print("%d * %d = %d\n", t20i16, 0x800000000000000000000000000000000, t20i16 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20i16, 1/2,    t20i16 * 1/2);
print("%d * %d = %d\n", t20i16, 0x800000000000000000000000000000000/3, t20i16 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20i16, 1.25L,  t20i16 *  1.25L);
print("%d * %d = %d\n", t20i16, 1.25*I, t20i16 *  1.25*I);
print("%d * %d = %d\n", t20i16, 1/2*I,  t20i16 *  1/2*I);
print("%d * %d = %d\n", t20i16, 1.2L*I, t20i16 *  1.2L+I);
print("%d * %d = %d\n", t20i16, t20i8,  t20i16 * t20i8);
print("%d * %d = %d\n", t20i16, t20u8,  t20i16 * t20u8);
print("%d * %d = %d\n", t20i16, t20i16, t20i16 * t20i16);
print("%d * %d = %d\n", t20i16, t20u16, t20i16 * t20u16);
print("%d * %d = %d\n", t20i16, t20i32, t20i16 * t20i32);
print("%d * %d = %d\n", t20i16, t20u32, t20i16 * t20u32);
print("%d * %d = %d\n", t20i16, t20i64, t20i16 * t20i64);
print("%d * %d = %d\n", t20i16, t20u64, t20i16 * t20u64);
print("%d * %d = %d\n", t20i16, t20f32, t20i16 * t20f32);
print("%d * %d = %d\n", t20i16, t20f64, t20i16 * t20f64);
print("%d * %d = %d\n", t20i16, t20w,   t20i16 * t20w);
print("%d * %d = %d\n", t20i16, t20f,   t20i16 * t20f);
print("%d * %d = %d\n", t20i16, t20z,   t20i16 * t20z);
print("%d * %d = %d\n", t20i16, t20x,   t20i16 * t20x);
print("%d * %d = %d\n", t20i16, t20q,   t20i16 * t20q);
print("%d * %d = %d\n", t20i16, t20r,   t20i16 * t20r);
print("%d * %d = %d\n", t20i16, t20n,   t20i16 * t20n);
print("%d * %d = %d\n", t20u16, -8,     t20u16 * -8);
print("%d * %d = %d\n", t20u16,  8,     t20u16 *  8);
print("%d * %d = %d\n", t20u16, 32.0,   t20u16 * 32.0);
print("%d * %d = %d\n", t20u16, 0x800000000000000000000000000000000, t20u16 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20u16, 1/2,    t20u16 * 1/2);
print("%d * %d = %d\n", t20u16, 0x800000000000000000000000000000000/3, t20u16 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20u16, 1.25L,  t20u16 *  1.25L);
print("%d * %d = %d\n", t20u16, 1.25*I, t20u16 *  1.25*I);
print("%d * %d = %d\n", t20u16, 1/2*I,  t20u16 *  1/2*I);
print("%d * %d = %d\n", t20u16, 1.2L*I, t20u16 *  1.2L+I);
print("%d * %d = %d\n", t20u16, t20i8,  t20u16 * t20i8);
print("%d * %d = %d\n", t20u16, t20u8,  t20u16 * t20u8);
print("%d * %d = %d\n", t20u16, t20i16, t20u16 * t20i16);
print("%d * %d = %d\n", t20u16, t20u16, t20u16 * t20u16);
print("%d * %d = %d\n", t20u16, t20i32, t20u16 * t20i32);
print("%d * %d = %d\n", t20u16, t20u32, t20u16 * t20u32);
print("%d * %d = %d\n", t20u16, t20i64, t20u16 * t20i64);
print("%d * %d = %d\n", t20u16, t20u64, t20u16 * t20u64);
print("%d * %d = %d\n", t20u16, t20f32, t20u16 * t20f32);
print("%d * %d = %d\n", t20u16, t20f64, t20u16 * t20f64);
print("%d * %d = %d\n", t20u16, t20w,   t20u16 * t20w);
print("%d * %d = %d\n", t20u16, t20f,   t20u16 * t20f);
print("%d * %d = %d\n", t20u16, t20z,   t20u16 * t20z);
print("%d * %d = %d\n", t20u16, t20x,   t20u16 * t20x);
print("%d * %d = %d\n", t20u16, t20q,   t20u16 * t20q);
print("%d * %d = %d\n", t20u16, t20r,   t20u16 * t20r);
print("%d * %d = %d\n", t20u16, t20n,   t20u16 * t20n);
print("%d * %d = %d\n", t20i32, -8,     t20i32 * -8);
print("%d * %d = %d\n", t20i32,  8,     t20i32 *  8);
print("%d * %d = %d\n", t20i32, 32.0,   t20i32 * 32.0);
print("%d * %d = %d\n", t20i32, 0x800000000000000000000000000000000, t20i32 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20i32, 1/2,    t20i32 * 1/2);
print("%d * %d = %d\n", t20i32, 0x800000000000000000000000000000000/3, t20i32 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20i32, 1.25L,  t20i32 *  1.25L);
print("%d * %d = %d\n", t20i32, 1.25*I, t20i32 *  1.25*I);
print("%d * %d = %d\n", t20i32, 1/2*I,  t20i32 *  1/2*I);
print("%d * %d = %d\n", t20i32, 1.2L*I, t20i32 *  1.2L+I);
print("%d * %d = %d\n", t20i32, t20i8,  t20i32 * t20i8);
print("%d * %d = %d\n", t20i32, t20u8,  t20i32 * t20u8);
print("%d * %d = %d\n", t20i32, t20i16, t20i32 * t20i16);
print("%d * %d = %d\n", t20i32, t20u16, t20i32 * t20u16);
print("%d * %d = %d\n", t20i32, t20i32, t20i32 * t20i32);
print("%d * %d = %d\n", t20i32, t20u32, t20i32 * t20u32);
print("%d * %d = %d\n", t20i32, t20i64, t20i32 * t20i64);
print("%d * %d = %d\n", t20i32, t20u64, t20i32 * t20u64);
print("%d * %d = %d\n", t20i32, t20f32, t20i32 * t20f32);
print("%d * %d = %d\n", t20i32, t20f64, t20i32 * t20f64);
print("%d * %d = %d\n", t20i32, t20w,   t20i32 * t20w);
print("%d * %d = %d\n", t20i32, t20f,   t20i32 * t20f);
print("%d * %d = %d\n", t20i32, t20z,   t20i32 * t20z);
print("%d * %d = %d\n", t20i32, t20x,   t20i32 * t20x);
print("%d * %d = %d\n", t20i32, t20q,   t20i32 * t20q);
print("%d * %d = %d\n", t20i32, t20r,   t20i32 * t20r);
print("%d * %d = %d\n", t20i32, t20n,   t20i32 * t20n);
print("%d * %d = %d\n", t20u32, -8,     t20u32 * -8);
print("%d * %d = %d\n", t20u32,  8,     t20u32 *  8);
print("%d * %d = %d\n", t20u32, 32.0,   t20u32 * 32.0);
print("%d * %d = %d\n", t20u32, 0x800000000000000000000000000000000, t20u32 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20u32, 1/2,    t20u32 * 1/2);
print("%d * %d = %d\n", t20u32, 0x800000000000000000000000000000000/3, t20u32 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20u32, 1.25L,  t20u32 *  1.25L);
print("%d * %d = %d\n", t20u32, 1.25*I, t20u32 *  1.25*I);
print("%d * %d = %d\n", t20u32, 1/2*I,  t20u32 *  1/2*I);
print("%d * %d = %d\n", t20u32, 1.2L*I, t20u32 *  1.2L+I);
print("%d * %d = %d\n", t20u32, t20i8,  t20u32 * t20i8);
print("%d * %d = %d\n", t20u32, t20u8,  t20u32 * t20u8);
print("%d * %d = %d\n", t20u32, t20i16, t20u32 * t20i16);
print("%d * %d = %d\n", t20u32, t20u16, t20u32 * t20u16);
print("%d * %d = %d\n", t20u32, t20i32, t20u32 * t20i32);
print("%d * %d = %d\n", t20u32, t20u32, t20u32 * t20u32);
print("%d * %d = %d\n", t20u32, t20i64, t20u32 * t20i64);
print("%d * %d = %d\n", t20u32, t20u64, t20u32 * t20u64);
print("%d * %d = %d\n", t20u32, t20f32, t20u32 * t20f32);
print("%d * %d = %d\n", t20u32, t20f64, t20u32 * t20f64);
print("%d * %d = %d\n", t20u32, t20w,   t20u32 * t20w);
print("%d * %d = %d\n", t20u32, t20f,   t20u32 * t20f);
print("%d * %d = %d\n", t20u32, t20z,   t20u32 * t20z);
print("%d * %d = %d\n", t20u32, t20x,   t20u32 * t20x);
print("%d * %d = %d\n", t20u32, t20q,   t20u32 * t20q);
print("%d * %d = %d\n", t20u32, t20r,   t20u32 * t20r);
print("%d * %d = %d\n", t20u32, t20n,   t20u32 * t20n);
print("%d * %d = %d\n", t20i64, -8,     t20i64 * -8);
print("%d * %d = %d\n", t20i64,  8,     t20i64 *  8);
print("%d * %d = %d\n", t20i64, 32.0,   t20i64 * 32.0);
print("%d * %d = %d\n", t20i64, 0x800000000000000000000000000000000, t20i64 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20i64, 1/2,    t20i64 * 1/2);
print("%d * %d = %d\n", t20i64, 0x800000000000000000000000000000000/3, t20i64 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20i64, 1.25L,  t20i64 *  1.25L);
print("%d * %d = %d\n", t20i64, 1.25*I, t20i64 *  1.25*I);
print("%d * %d = %d\n", t20i64, 1/2*I,  t20i64 *  1/2*I);
print("%d * %d = %d\n", t20i64, 1.2L*I, t20i64 *  1.2L+I);
print("%d * %d = %d\n", t20i64, t20i8,  t20i64 * t20i8);
print("%d * %d = %d\n", t20i64, t20u8,  t20i64 * t20u8);
print("%d * %d = %d\n", t20i64, t20i16, t20i64 * t20i16);
print("%d * %d = %d\n", t20i64, t20u16, t20i64 * t20u16);
print("%d * %d = %d\n", t20i64, t20i32, t20i64 * t20i32);
print("%d * %d = %d\n", t20i64, t20u32, t20i64 * t20u32);
print("%d * %d = %d\n", t20i64, t20i64, t20i64 * t20i64);
print("%d * %d = %d\n", t20i64, t20u64, t20i64 * t20u64);
print("%d * %d = %d\n", t20i64, t20f32, t20i64 * t20f32);
print("%d * %d = %d\n", t20i64, t20f64, t20i64 * t20f64);
print("%d * %d = %d\n", t20i64, t20w,   t20i64 * t20w);
print("%d * %d = %d\n", t20i64, t20f,   t20i64 * t20f);
print("%d * %d = %d\n", t20i64, t20z,   t20i64 * t20z);
print("%d * %d = %d\n", t20i64, t20x,   t20i64 * t20x);
print("%d * %d = %d\n", t20i64, t20q,   t20i64 * t20q);
print("%d * %d = %d\n", t20i64, t20r,   t20i64 * t20r);
print("%d * %d = %d\n", t20i64, t20n,   t20i64 * t20n);
print("%d * %d = %d\n", t20u64, -8,     t20u64 * -8);
print("%d * %d = %d\n", t20u64,  8,     t20u64 *  8);
print("%d * %d = %d\n", t20u64, 32.0,   t20u64 * 32.0);
print("%d * %d = %d\n", t20u64, 0x800000000000000000000000000000000, t20u64 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20u64, 1/2,    t20u64 * 1/2);
print("%d * %d = %d\n", t20u64, 0x800000000000000000000000000000000/3, t20u64 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20u64, 1.25L,  t20u64 *  1.25L);
print("%d * %d = %d\n", t20u64, 1.25*I, t20u64 *  1.25*I);
print("%d * %d = %d\n", t20u64, 1/2*I,  t20u64 *  1/2*I);
print("%d * %d = %d\n", t20u64, 1.2L*I, t20u64 *  1.2L+I);
print("%d * %d = %d\n", t20u64, t20i8,  t20u64 * t20i8);
print("%d * %d = %d\n", t20u64, t20u8,  t20u64 * t20u8);
print("%d * %d = %d\n", t20u64, t20i16, t20u64 * t20i16);
print("%d * %d = %d\n", t20u64, t20u16, t20u64 * t20u16);
print("%d * %d = %d\n", t20u64, t20i32, t20u64 * t20i32);
print("%d * %d = %d\n", t20u64, t20u32, t20u64 * t20u32);
print("%d * %d = %d\n", t20u64, t20i64, t20u64 * t20i64);
print("%d * %d = %d\n", t20u64, t20u64, t20u64 * t20u64);
print("%d * %d = %d\n", t20u64, t20f32, t20u64 * t20f32);
print("%d * %d = %d\n", t20u64, t20f64, t20u64 * t20f64);
print("%d * %d = %d\n", t20u64, t20w,   t20u64 * t20w);
print("%d * %d = %d\n", t20u64, t20f,   t20u64 * t20f);
print("%d * %d = %d\n", t20u64, t20z,   t20u64 * t20z);
print("%d * %d = %d\n", t20u64, t20x,   t20u64 * t20x);
print("%d * %d = %d\n", t20u64, t20q,   t20u64 * t20q);
print("%d * %d = %d\n", t20u64, t20r,   t20u64 * t20r);
print("%d * %d = %d\n", t20u64, t20n,   t20u64 * t20n);
print("%d * %d = %d\n", t20f32, -8,     t20f32 * -8);
print("%d * %d = %d\n", t20f32,  8,     t20f32 *  8);
print("%d * %d = %d\n", t20f32, 32.0,   t20f32 * 32.0);
print("%d * %d = %d\n", t20f32, 0x800000000000000000000000000000000, t20f32 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20f32, 1/2,    t20f32 * 1/2);
print("%d * %d = %d\n", t20f32, 0x800000000000000000000000000000000/3, t20f32 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20f32, 1.25L,  t20f32 *  1.25L);
print("%d * %d = %d\n", t20f32, 1.25*I, t20f32 *  1.25*I);
print("%d * %d = %d\n", t20f32, 1/2*I,  t20f32 *  1/2*I);
print("%d * %d = %d\n", t20f32, 1.2L*I, t20f32 *  1.2L+I);
print("%d * %d = %d\n", t20f32, t20i8,  t20f32 * t20i8);
print("%d * %d = %d\n", t20f32, t20u8,  t20f32 * t20u8);
print("%d * %d = %d\n", t20f32, t20i16, t20f32 * t20i16);
print("%d * %d = %d\n", t20f32, t20u16, t20f32 * t20u16);
print("%d * %d = %d\n", t20f32, t20i32, t20f32 * t20i32);
print("%d * %d = %d\n", t20f32, t20u32, t20f32 * t20u32);
print("%d * %d = %d\n", t20f32, t20i64, t20f32 * t20i64);
print("%d * %d = %d\n", t20f32, t20u64, t20f32 * t20u64);
print("%d * %d = %d\n", t20f32, t20f32, t20f32 * t20f32);
print("%d * %d = %d\n", t20f32, t20f64, t20f32 * t20f64);
print("%d * %d = %d\n", t20f32, t20w,   t20f32 * t20w);
print("%d * %d = %d\n", t20f32, t20f,   t20f32 * t20f);
print("%d * %d = %d\n", t20f32, t20z,   t20f32 * t20z);
print("%d * %d = %d\n", t20f32, t20x,   t20f32 * t20x);
print("%d * %d = %d\n", t20f32, t20q,   t20f32 * t20q);
print("%d * %d = %d\n", t20f32, t20r,   t20f32 * t20r);
print("%d * %d = %d\n", t20f32, t20n,   t20f32 * t20n);
print("%d * %d = %d\n", t20f64, -8,     t20f64 * -8);
print("%d * %d = %d\n", t20f64,  8,     t20f64 *  8);
print("%d * %d = %d\n", t20f64, 32.0,   t20f64 * 32.0);
print("%d * %d = %d\n", t20f64, 0x800000000000000000000000000000000, t20f64 * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20f64, 1/2,    t20f64 * 1/2);
print("%d * %d = %d\n", t20f64, 0x800000000000000000000000000000000/3, t20f64 * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20f64, 1.25L,  t20f64 *  1.25L);
print("%d * %d = %d\n", t20f64, 1.25*I, t20f64 *  1.25*I);
print("%d * %d = %d\n", t20f64, 1/2*I,  t20f64 *  1/2*I);
print("%d * %d = %d\n", t20f64, 1.2L*I, t20f64 *  1.2L+I);
print("%d * %d = %d\n", t20f64, t20i8,  t20f64 * t20i8);
print("%d * %d = %d\n", t20f64, t20u8,  t20f64 * t20u8);
print("%d * %d = %d\n", t20f64, t20i16, t20f64 * t20i16);
print("%d * %d = %d\n", t20f64, t20u16, t20f64 * t20u16);
print("%d * %d = %d\n", t20f64, t20i32, t20f64 * t20i32);
print("%d * %d = %d\n", t20f64, t20u32, t20f64 * t20u32);
print("%d * %d = %d\n", t20f64, t20i64, t20f64 * t20i64);
print("%d * %d = %d\n", t20f64, t20u64, t20f64 * t20u64);
print("%d * %d = %d\n", t20f64, t20f32, t20f64 * t20f32);
print("%d * %d = %d\n", t20f64, t20f64, t20f64 * t20f64);
print("%d * %d = %d\n", t20f64, t20w,   t20f64 * t20w);
print("%d * %d = %d\n", t20f64, t20f,   t20f64 * t20f);
print("%d * %d = %d\n", t20f64, t20z,   t20f64 * t20z);
print("%d * %d = %d\n", t20f64, t20x,   t20f64 * t20x);
print("%d * %d = %d\n", t20f64, t20q,   t20f64 * t20q);
print("%d * %d = %d\n", t20f64, t20r,   t20f64 * t20r);
print("%d * %d = %d\n", t20f64, t20n,   t20f64 * t20n);
print("%d * %d = %d\n", t20w, -8,     t20w * -8);
print("%d * %d = %d\n", t20w,  8,     t20w *  8);
print("%d * %d = %d\n", t20w, 32.0,   t20w * 32.0);
print("%d * %d = %d\n", t20w, 0x800000000000000000000000000000000, t20w * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20w, 1/2,    t20w * 1/2);
print("%d * %d = %d\n", t20w, 0x800000000000000000000000000000000/3, t20w * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20w, 1.25L,  t20w *  1.25L);
print("%d * %d = %d\n", t20w, 1.25*I, t20w *  1.25*I);
print("%d * %d = %d\n", t20w, 1/2*I,  t20w *  1/2*I);
print("%d * %d = %d\n", t20w, 1.2L*I, t20w *  1.2L+I);
print("%d * %d = %d\n", t20w, t20i8,  t20w * t20i8);
print("%d * %d = %d\n", t20w, t20u8,  t20w * t20u8);
print("%d * %d = %d\n", t20w, t20i16, t20w * t20i16);
print("%d * %d = %d\n", t20w, t20u16, t20w * t20u16);
print("%d * %d = %d\n", t20w, t20i32, t20w * t20i32);
print("%d * %d = %d\n", t20w, t20u32, t20w * t20u32);
print("%d * %d = %d\n", t20w, t20i64, t20w * t20i64);
print("%d * %d = %d\n", t20w, t20u64, t20w * t20u64);
print("%d * %d = %d\n", t20w, t20f32, t20w * t20f32);
print("%d * %d = %d\n", t20w, t20f64, t20w * t20f64);
print("%d * %d = %d\n", t20w, t20w,   t20w * t20w);
print("%d * %d = %d\n", t20w, t20f,   t20w * t20f);
print("%d * %d = %d\n", t20w, t20z,   t20w * t20z);
print("%d * %d = %d\n", t20w, t20x,   t20w * t20x);
print("%d * %d = %d\n", t20w, t20q,   t20w * t20q);
print("%d * %d = %d\n", t20w, t20r,   t20w * t20r);
print("%d * %d = %d\n", t20w, t20n,   t20w * t20n);
print("%d * %d = %d\n", t20f, -8,     t20f * -8);
print("%d * %d = %d\n", t20f,  8,     t20f *  8);
print("%d * %d = %d\n", t20f, 32.0,   t20f * 32.0);
print("%d * %d = %d\n", t20f, 0x800000000000000000000000000000000, t20f * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20f, 1/2,    t20f * 1/2);
print("%d * %d = %d\n", t20f, 0x800000000000000000000000000000000/3, t20f * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20f, 1.25L,  t20f *  1.25L);
print("%d * %d = %d\n", t20f, 1.25*I, t20f *  1.25*I);
print("%d * %d = %d\n", t20f, 1/2*I,  t20f *  1/2*I);
print("%d * %d = %d\n", t20f, 1.2L*I, t20f *  1.2L+I);
print("%d * %d = %d\n", t20f, t20i8,  t20f * t20i8);
print("%d * %d = %d\n", t20f, t20u8,  t20f * t20u8);
print("%d * %d = %d\n", t20f, t20i16, t20f * t20i16);
print("%d * %d = %d\n", t20f, t20u16, t20f * t20u16);
print("%d * %d = %d\n", t20f, t20i32, t20f * t20i32);
print("%d * %d = %d\n", t20f, t20u32, t20f * t20u32);
print("%d * %d = %d\n", t20f, t20i64, t20f * t20i64);
print("%d * %d = %d\n", t20f, t20u64, t20f * t20u64);
print("%d * %d = %d\n", t20f, t20f32, t20f * t20f32);
print("%d * %d = %d\n", t20f, t20f64, t20f * t20f64);
print("%d * %d = %d\n", t20f, t20w,   t20f * t20w);
print("%d * %d = %d\n", t20f, t20f,   t20f * t20f);
print("%d * %d = %d\n", t20f, t20z,   t20f * t20z);
print("%d * %d = %d\n", t20f, t20x,   t20f * t20x);
print("%d * %d = %d\n", t20f, t20q,   t20f * t20q);
print("%d * %d = %d\n", t20f, t20r,   t20f * t20r);
print("%d * %d = %d\n", t20f, t20n,   t20f * t20n);
print("%d * %d = %d\n", t20z, -8,     t20z * -8);
print("%d * %d = %d\n", t20z,  8,     t20z *  8);
print("%d * %d = %d\n", t20z, 32.0,   t20z * 32.0);
print("%d * %d = %d\n", t20z, 0x800000000000000000000000000000000, t20z * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20z, 1/2,    t20z * 1/2);
print("%d * %d = %d\n", t20z, 0x800000000000000000000000000000000/3, t20z * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20z, 1.25L,  t20z *  1.25L);
print("%d * %d = %d\n", t20z, 1.25*I, t20z *  1.25*I);
print("%d * %d = %d\n", t20z, 1/2*I,  t20z *  1/2*I);
print("%d * %d = %d\n", t20z, 1.2L*I, t20z *  1.2L+I);
print("%d * %d = %d\n", t20z, t20i8,  t20z * t20i8);
print("%d * %d = %d\n", t20z, t20u8,  t20z * t20u8);
print("%d * %d = %d\n", t20z, t20i16, t20z * t20i16);
print("%d * %d = %d\n", t20z, t20u16, t20z * t20u16);
print("%d * %d = %d\n", t20z, t20i32, t20z * t20i32);
print("%d * %d = %d\n", t20z, t20u32, t20z * t20u32);
print("%d * %d = %d\n", t20z, t20i64, t20z * t20i64);
print("%d * %d = %d\n", t20z, t20u64, t20z * t20u64);
print("%d * %d = %d\n", t20z, t20f32, t20z * t20f32);
print("%d * %d = %d\n", t20z, t20f64, t20z * t20f64);
print("%d * %d = %d\n", t20z, t20w,   t20z * t20w);
print("%d * %d = %d\n", t20z, t20f,   t20z * t20f);
print("%d * %d = %d\n", t20z, t20z,   t20z * t20z);
print("%d * %d = %d\n", t20z, t20x,   t20z * t20x);
print("%d * %d = %d\n", t20z, t20q,   t20z * t20q);
print("%d * %d = %d\n", t20z, t20r,   t20z * t20r);
print("%d * %d = %d\n", t20z, t20n,   t20z * t20n);
print("%d * %d = %d\n", t20x, -8,     t20x * -8);
print("%d * %d = %d\n", t20x,  8,     t20x *  8);
print("%d * %d = %d\n", t20x, 32.0,   t20x * 32.0);
print("%d * %d = %d\n", t20x, 0x800000000000000000000000000000000, t20x * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20x, 1/2,    t20x * 1/2);
print("%d * %d = %d\n", t20x, 0x800000000000000000000000000000000/3, t20x * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20x, 1.25L,  t20x *  1.25L);
print("%d * %d = %d\n", t20x, 1.25*I, t20x *  1.25*I);
print("%d * %d = %d\n", t20x, 1/2*I,  t20x *  1/2*I);
print("%d * %d = %d\n", t20x, 1.2L*I, t20x *  1.2L+I);
print("%d * %d = %d\n", t20x, t20i8,  t20x * t20i8);
print("%d * %d = %d\n", t20x, t20u8,  t20x * t20u8);
print("%d * %d = %d\n", t20x, t20i16, t20x * t20i16);
print("%d * %d = %d\n", t20x, t20u16, t20x * t20u16);
print("%d * %d = %d\n", t20x, t20i32, t20x * t20i32);
print("%d * %d = %d\n", t20x, t20u32, t20x * t20u32);
print("%d * %d = %d\n", t20x, t20i64, t20x * t20i64);
print("%d * %d = %d\n", t20x, t20u64, t20x * t20u64);
print("%d * %d = %d\n", t20x, t20f32, t20x * t20f32);
print("%d * %d = %d\n", t20x, t20f64, t20x * t20f64);
print("%d * %d = %d\n", t20x, t20w,   t20x * t20w);
print("%d * %d = %d\n", t20x, t20f,   t20x * t20f);
print("%d * %d = %d\n", t20x, t20z,   t20x * t20z);
print("%d * %d = %d\n", t20x, t20x,   t20x * t20x);
print("%d * %d = %d\n", t20x, t20q,   t20x * t20q);
print("%d * %d = %d\n", t20x, t20r,   t20x * t20r);
print("%d * %d = %d\n", t20x, t20n,   t20x * t20n);
print("%d * %d = %d\n", t20q, -8,     t20q * -8);
print("%d * %d = %d\n", t20q,  8,     t20q *  8);
print("%d * %d = %d\n", t20q, 32.0,   t20q * 32.0);
print("%d * %d = %d\n", t20q, 0x800000000000000000000000000000000, t20q * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20q, 1/2,    t20q * 1/2);
print("%d * %d = %d\n", t20q, 0x800000000000000000000000000000000/3, t20q * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20q, 1.25L,  t20q *  1.25L);
print("%d * %d = %d\n", t20q, 1.25*I, t20q *  1.25*I);
print("%d * %d = %d\n", t20q, 1/2*I,  t20q *  1/2*I);
print("%d * %d = %d\n", t20q, 1.2L*I, t20q *  1.2L+I);
print("%d * %d = %d\n", t20q, t20i8,  t20q * t20i8);
print("%d * %d = %d\n", t20q, t20u8,  t20q * t20u8);
print("%d * %d = %d\n", t20q, t20i16, t20q * t20i16);
print("%d * %d = %d\n", t20q, t20u16, t20q * t20u16);
print("%d * %d = %d\n", t20q, t20i32, t20q * t20i32);
print("%d * %d = %d\n", t20q, t20u32, t20q * t20u32);
print("%d * %d = %d\n", t20q, t20i64, t20q * t20i64);
print("%d * %d = %d\n", t20q, t20u64, t20q * t20u64);
print("%d * %d = %d\n", t20q, t20f32, t20q * t20f32);
print("%d * %d = %d\n", t20q, t20f64, t20q * t20f64);
print("%d * %d = %d\n", t20q, t20w,   t20q * t20w);
print("%d * %d = %d\n", t20q, t20f,   t20q * t20f);
print("%d * %d = %d\n", t20q, t20z,   t20q * t20z);
print("%d * %d = %d\n", t20q, t20x,   t20q * t20x);
print("%d * %d = %d\n", t20q, t20q,   t20q * t20q);
print("%d * %d = %d\n", t20q, t20r,   t20q * t20r);
print("%d * %d = %d\n", t20q, t20n,   t20q * t20n);
print("%d * %d = %d\n", t20r, -8,     t20r * -8);
print("%d * %d = %d\n", t20r,  8,     t20r *  8);
print("%d * %d = %d\n", t20r, 32.0,   t20r * 32.0);
print("%d * %d = %d\n", t20r, 0x800000000000000000000000000000000, t20r * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20r, 1/2,    t20r * 1/2);
print("%d * %d = %d\n", t20r, 0x800000000000000000000000000000000/3, t20r * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20r, 1.25L,  t20r *  1.25L);
print("%d * %d = %d\n", t20r, 1.25*I, t20r *  1.25*I);
print("%d * %d = %d\n", t20r, 1/2*I,  t20r *  1/2*I);
print("%d * %d = %d\n", t20r, 1.2L*I, t20r *  1.2L+I);
print("%d * %d = %d\n", t20r, t20i8,  t20r * t20i8);
print("%d * %d = %d\n", t20r, t20u8,  t20r * t20u8);
print("%d * %d = %d\n", t20r, t20i16, t20r * t20i16);
print("%d * %d = %d\n", t20r, t20u16, t20r * t20u16);
print("%d * %d = %d\n", t20r, t20i32, t20r * t20i32);
print("%d * %d = %d\n", t20r, t20u32, t20r * t20u32);
print("%d * %d = %d\n", t20r, t20i64, t20r * t20i64);
print("%d * %d = %d\n", t20r, t20u64, t20r * t20u64);
print("%d * %d = %d\n", t20r, t20f32, t20r * t20f32);
print("%d * %d = %d\n", t20r, t20f64, t20r * t20f64);
print("%d * %d = %d\n", t20r, t20w,   t20r * t20w);
print("%d * %d = %d\n", t20r, t20f,   t20r * t20f);
print("%d * %d = %d\n", t20r, t20z,   t20r * t20z);
print("%d * %d = %d\n", t20r, t20x,   t20r * t20x);
print("%d * %d = %d\n", t20r, t20q,   t20r * t20q);
print("%d * %d = %d\n", t20r, t20r,   t20r * t20r);
print("%d * %d = %d\n", t20r, t20n,   t20r * t20n);
print("%d * %d = %d\n", t20dd, -8,     t20dd * -8);
print("%d * %d = %d\n", t20dd,  8,     t20dd *  8);
print("%d * %d = %d\n", t20dd, 32.0,   t20dd * 32.0);
print("%d * %d = %d\n", t20dd, 0x800000000000000000000000000000000, t20dd * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20dd, 1/2,    t20dd * 1/2);
print("%d * %d = %d\n", t20dd, 0x800000000000000000000000000000000/3, t20dd * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20dd, 1.25L,  t20dd *  1.25L);
print("%d * %d = %d\n", t20dd, 1.25*I, t20dd *  1.25*I);
print("%d * %d = %d\n", t20dd, 1/2*I,  t20dd *  1/2*I);
print("%d * %d = %d\n", t20dd, 1.2L*I, t20dd *  1.2L+I);
print("%d * %d = %d\n", t20dd, t20i8,  t20dd * t20i8);
print("%d * %d = %d\n", t20dd, t20u8,  t20dd * t20u8);
print("%d * %d = %d\n", t20dd, t20i16, t20dd * t20i16);
print("%d * %d = %d\n", t20dd, t20u16, t20dd * t20u16);
print("%d * %d = %d\n", t20dd, t20i32, t20dd * t20i32);
print("%d * %d = %d\n", t20dd, t20u32, t20dd * t20u32);
print("%d * %d = %d\n", t20dd, t20i64, t20dd * t20i64);
print("%d * %d = %d\n", t20dd, t20u64, t20dd * t20u64);
print("%d * %d = %d\n", t20dd, t20f32, t20dd * t20f32);
print("%d * %d = %d\n", t20dd, t20f64, t20dd * t20f64);
print("%d * %d = %d\n", t20dd, t20w,   t20dd * t20w);
print("%d * %d = %d\n", t20dd, t20f,   t20dd * t20f);
print("%d * %d = %d\n", t20dd, t20z,   t20dd * t20z);
print("%d * %d = %d\n", t20dd, t20x,   t20dd * t20x);
print("%d * %d = %d\n", t20dd, t20q,   t20dd * t20q);
print("%d * %d = %d\n", t20dd, t20r,   t20dd * t20r);
print("%d * %d = %d\n", t20dd, t20n,   t20dd * t20n);
print("%d * %d = %d\n", t20qq, -8,     t20qq * -8);
print("%d * %d = %d\n", t20qq,  8,     t20qq *  8);
print("%d * %d = %d\n", t20qq, 32.0,   t20qq * 32.0);
print("%d * %d = %d\n", t20qq, 0x800000000000000000000000000000000, t20qq * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20qq, 1/2,    t20qq * 1/2);
print("%d * %d = %d\n", t20qq, 0x800000000000000000000000000000000/3, t20qq * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20qq, 1.25L,  t20qq *  1.25L);
print("%d * %d = %d\n", t20qq, 1.25*I, t20qq *  1.25*I);
print("%d * %d = %d\n", t20qq, 1/2*I,  t20qq *  1/2*I);
print("%d * %d = %d\n", t20qq, 1.2L*I, t20qq *  1.2L+I);
print("%d * %d = %d\n", t20qq, t20i8,  t20qq * t20i8);
print("%d * %d = %d\n", t20qq, t20u8,  t20qq * t20u8);
print("%d * %d = %d\n", t20qq, t20i16, t20qq * t20i16);
print("%d * %d = %d\n", t20qq, t20u16, t20qq * t20u16);
print("%d * %d = %d\n", t20qq, t20i32, t20qq * t20i32);
print("%d * %d = %d\n", t20qq, t20u32, t20qq * t20u32);
print("%d * %d = %d\n", t20qq, t20i64, t20qq * t20i64);
print("%d * %d = %d\n", t20qq, t20u64, t20qq * t20u64);
print("%d * %d = %d\n", t20qq, t20f32, t20qq * t20f32);
print("%d * %d = %d\n", t20qq, t20f64, t20qq * t20f64);
print("%d * %d = %d\n", t20qq, t20w,   t20qq * t20w);
print("%d * %d = %d\n", t20qq, t20f,   t20qq * t20f);
print("%d * %d = %d\n", t20qq, t20z,   t20qq * t20z);
print("%d * %d = %d\n", t20qq, t20x,   t20qq * t20x);
print("%d * %d = %d\n", t20qq, t20q,   t20qq * t20q);
print("%d * %d = %d\n", t20qq, t20r,   t20qq * t20r);
print("%d * %d = %d\n", t20qq, t20n,   t20qq * t20n);
print("%d * %d = %d\n", t20cc, -8,     t20cc * -8);
print("%d * %d = %d\n", t20cc,  8,     t20cc *  8);
print("%d * %d = %d\n", t20cc, 32.0,   t20cc * 32.0);
print("%d * %d = %d\n", t20cc, 0x800000000000000000000000000000000, t20cc * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20cc, 1/2,    t20cc * 1/2);
print("%d * %d = %d\n", t20cc, 0x800000000000000000000000000000000/3, t20cc * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20cc, 1.25L,  t20cc *  1.25L);
print("%d * %d = %d\n", t20cc, 1.25*I, t20cc *  1.25*I);
print("%d * %d = %d\n", t20cc, 1/2*I,  t20cc *  1/2*I);
print("%d * %d = %d\n", t20cc, 1.2L*I, t20cc *  1.2L+I);
print("%d * %d = %d\n", t20cc, t20i8,  t20cc * t20i8);
print("%d * %d = %d\n", t20cc, t20u8,  t20cc * t20u8);
print("%d * %d = %d\n", t20cc, t20i16, t20cc * t20i16);
print("%d * %d = %d\n", t20cc, t20u16, t20cc * t20u16);
print("%d * %d = %d\n", t20cc, t20i32, t20cc * t20i32);
print("%d * %d = %d\n", t20cc, t20u32, t20cc * t20u32);
print("%d * %d = %d\n", t20cc, t20i64, t20cc * t20i64);
print("%d * %d = %d\n", t20cc, t20u64, t20cc * t20u64);
print("%d * %d = %d\n", t20cc, t20f32, t20cc * t20f32);
print("%d * %d = %d\n", t20cc, t20f64, t20cc * t20f64);
print("%d * %d = %d\n", t20cc, t20w,   t20cc * t20w);
print("%d * %d = %d\n", t20cc, t20f,   t20cc * t20f);
print("%d * %d = %d\n", t20cc, t20z,   t20cc * t20z);
print("%d * %d = %d\n", t20cc, t20x,   t20cc * t20x);
print("%d * %d = %d\n", t20cc, t20q,   t20cc * t20q);
print("%d * %d = %d\n", t20cc, t20r,   t20cc * t20r);
print("%d * %d = %d\n", t20cc, t20n,   t20cc * t20n);
print("%d * %d = %d\n", t20n, -8,     t20n * -8);
print("%d * %d = %d\n", t20n,  8,     t20n *  8);
print("%d * %d = %d\n", t20n, 32.0,   t20n * 32.0);
print("%d * %d = %d\n", t20n, 0x800000000000000000000000000000000, t20n * 0x800000000000000000000000000000000);
print("%d * %d = %d\n", t20n, 1/2,    t20n * 1/2);
print("%d * %d = %d\n", t20n, 0x800000000000000000000000000000000/3, t20n * 0x800000000000000000000000000000000/3);
print("%d * %d = %d\n", t20n, 1.25L,  t20n *  1.25L);
print("%d * %d = %d\n", t20n, 1.25*I, t20n *  1.25*I);
print("%d * %d = %d\n", t20n, 1/2*I,  t20n *  1/2*I);
print("%d * %d = %d\n", t20n, 1.2L*I, t20n *  1.2L+I);
print("%d * %d = %d\n", t20n, t20i8,  t20n * t20i8);
print("%d * %d = %d\n", t20n, t20u8,  t20n * t20u8);
print("%d * %d = %d\n", t20n, t20i16, t20n * t20i16);
print("%d * %d = %d\n", t20n, t20u16, t20n * t20u16);
print("%d * %d = %d\n", t20n, t20i32, t20n * t20i32);
print("%d * %d = %d\n", t20n, t20u32, t20n * t20u32);
print("%d * %d = %d\n", t20n, t20i64, t20n * t20i64);
print("%d * %d = %d\n", t20n, t20u64, t20n * t20u64);
print("%d * %d = %d\n", t20n, t20f32, t20n * t20f32);
print("%d * %d = %d\n", t20n, t20f64, t20n * t20f64);
print("%d * %d = %d\n", t20n, t20w,   t20n * t20w);
print("%d * %d = %d\n", t20n, t20f,   t20n * t20f);
print("%d * %d = %d\n", t20n, t20z,   t20n * t20z);
print("%d * %d = %d\n", t20n, t20x,   t20n * t20x);
print("%d * %d = %d\n", t20n, t20q,   t20n * t20q);
print("%d * %d = %d\n", t20n, t20r,   t20n * t20r);
print("%d * %d = %d\n", t20n, t20n,   t20n * t20n);
print("%d / %d = %d\n", t20i8, -8,     t20i8 / -8);
print("%d / %d = %d\n", t20i8,  8,     t20i8 /  8);
print("%d / %d = %d\n", t20i8, 32.0,   t20i8 / 32.0);
print("%d / %d = %d\n", t20i8, 0x800000000000000000000000000000000, t20i8 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20i8, 1/2,    t20i8 / 1/2);
print("%d / %d = %d\n", t20i8, 0x800000000000000000000000000000000/3, t20i8 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20i8, 1.25L,  t20i8 /  1.25L);
print("%d / %d = %d\n", t20i8, 1.25*I, t20i8 /  1.25*I);
print("%d / %d = %d\n", t20i8, 1/2*I,  t20i8 /  1/2*I);
print("%d / %d = %d\n", t20i8, 1.2L*I, t20i8 /  1.2L+I);
print("%d / %d = %d\n", t20i8, t20i8,  t20i8 / t20i8);
print("%d / %d = %d\n", t20i8, t20u8,  t20i8 / t20u8);
print("%d / %d = %d\n", t20i8, t20i16, t20i8 / t20i16);
print("%d / %d = %d\n", t20i8, t20u16, t20i8 / t20u16);
print("%d / %d = %d\n", t20i8, t20i32, t20i8 / t20i32);
print("%d / %d = %d\n", t20i8, t20u32, t20i8 / t20u32);
print("%d / %d = %d\n", t20i8, t20i64, t20i8 / t20i64);
print("%d / %d = %d\n", t20i8, t20u64, t20i8 / t20u64);
print("%d / %d = %d\n", t20i8, t20f32, t20i8 / t20f32);
print("%d / %d = %d\n", t20i8, t20f64, t20i8 / t20f64);
print("%d / %d = %d\n", t20i8, t20w,   t20i8 / t20w);
print("%d / %d = %d\n", t20i8, t20f,   t20i8 / t20f);
print("%d / %d = %d\n", t20i8, t20z,   t20i8 / t20z);
print("%d / %d = %d\n", t20i8, t20x,   t20i8 / t20x);
print("%d / %d = %d\n", t20i8, t20q,   t20i8 / t20q);
print("%d / %d = %d\n", t20i8, t20r,   t20i8 / t20r);
print("%d / %d = %d\n", t20u8, -8,     t20u8 / -8);
print("%d / %d = %d\n", t20u8,  8,     t20u8 /  8);
print("%d / %d = %d\n", t20u8, 32.0,   t20u8 / 32.0);
print("%d / %d = %d\n", t20u8, 0x800000000000000000000000000000000, t20u8 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20u8, 1/2,    t20u8 / 1/2);
print("%d / %d = %d\n", t20u8, 0x800000000000000000000000000000000/3, t20u8 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20u8, 1.25L,  t20u8 /  1.25L);
print("%d / %d = %d\n", t20u8, 1.25*I, t20u8 /  1.25*I);
print("%d / %d = %d\n", t20u8, 1/2*I,  t20u8 /  1/2*I);
print("%d / %d = %d\n", t20u8, 1.2L*I, t20u8 /  1.2L+I);
print("%d / %d = %d\n", t20u8, t20i8,  t20u8 / t20i8);
print("%d / %d = %d\n", t20u8, t20u8,  t20u8 / t20u8);
print("%d / %d = %d\n", t20u8, t20i16, t20u8 / t20i16);
print("%d / %d = %d\n", t20u8, t20u16, t20u8 / t20u16);
print("%d / %d = %d\n", t20u8, t20i32, t20u8 / t20i32);
print("%d / %d = %d\n", t20u8, t20u32, t20u8 / t20u32);
print("%d / %d = %d\n", t20u8, t20i64, t20u8 / t20i64);
print("%d / %d = %d\n", t20u8, t20u64, t20u8 / t20u64);
print("%d / %d = %d\n", t20u8, t20f32, t20u8 / t20f32);
print("%d / %d = %d\n", t20u8, t20f64, t20u8 / t20f64);
print("%d / %d = %d\n", t20u8, t20w,   t20u8 / t20w);
print("%d / %d = %d\n", t20u8, t20f,   t20u8 / t20f);
print("%d / %d = %d\n", t20u8, t20z,   t20u8 / t20z);
print("%d / %d = %d\n", t20u8, t20x,   t20u8 / t20x);
print("%d / %d = %d\n", t20u8, t20q,   t20u8 / t20q);
print("%d / %d = %d\n", t20u8, t20r,   t20u8 / t20r);
print("%d / %d = %d\n", t20i16, -8,     t20i16 / -8);
print("%d / %d = %d\n", t20i16,  8,     t20i16 /  8);
print("%d / %d = %d\n", t20i16, 32.0,   t20i16 / 32.0);
print("%d / %d = %d\n", t20i16, 0x800000000000000000000000000000000, t20i16 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20i16, 1/2,    t20i16 / 1/2);
print("%d / %d = %d\n", t20i16, 0x800000000000000000000000000000000/3, t20i16 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20i16, 1.25L,  t20i16 /  1.25L);
print("%d / %d = %d\n", t20i16, 1.25*I, t20i16 /  1.25*I);
print("%d / %d = %d\n", t20i16, 1/2*I,  t20i16 /  1/2*I);
print("%d / %d = %d\n", t20i16, 1.2L*I, t20i16 /  1.2L+I);
print("%d / %d = %d\n", t20i16, t20i8,  t20i16 / t20i8);
print("%d / %d = %d\n", t20i16, t20u8,  t20i16 / t20u8);
print("%d / %d = %d\n", t20i16, t20i16, t20i16 / t20i16);
print("%d / %d = %d\n", t20i16, t20u16, t20i16 / t20u16);
print("%d / %d = %d\n", t20i16, t20i32, t20i16 / t20i32);
print("%d / %d = %d\n", t20i16, t20u32, t20i16 / t20u32);
print("%d / %d = %d\n", t20i16, t20i64, t20i16 / t20i64);
print("%d / %d = %d\n", t20i16, t20u64, t20i16 / t20u64);
print("%d / %d = %d\n", t20i16, t20f32, t20i16 / t20f32);
print("%d / %d = %d\n", t20i16, t20f64, t20i16 / t20f64);
print("%d / %d = %d\n", t20i16, t20w,   t20i16 / t20w);
print("%d / %d = %d\n", t20i16, t20f,   t20i16 / t20f);
print("%d / %d = %d\n", t20i16, t20z,   t20i16 / t20z);
print("%d / %d = %d\n", t20i16, t20x,   t20i16 / t20x);
print("%d / %d = %d\n", t20i16, t20q,   t20i16 / t20q);
print("%d / %d = %d\n", t20i16, t20r,   t20i16 / t20r);
print("%d / %d = %d\n", t20u16, -8,     t20u16 / -8);
print("%d / %d = %d\n", t20u16,  8,     t20u16 /  8);
print("%d / %d = %d\n", t20u16, 32.0,   t20u16 / 32.0);
print("%d / %d = %d\n", t20u16, 0x800000000000000000000000000000000, t20u16 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20u16, 1/2,    t20u16 / 1/2);
print("%d / %d = %d\n", t20u16, 0x800000000000000000000000000000000/3, t20u16 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20u16, 1.25L,  t20u16 /  1.25L);
print("%d / %d = %d\n", t20u16, 1.25*I, t20u16 /  1.25*I);
print("%d / %d = %d\n", t20u16, 1/2*I,  t20u16 /  1/2*I);
print("%d / %d = %d\n", t20u16, 1.2L*I, t20u16 /  1.2L+I);
print("%d / %d = %d\n", t20u16, t20i8,  t20u16 / t20i8);
print("%d / %d = %d\n", t20u16, t20u8,  t20u16 / t20u8);
print("%d / %d = %d\n", t20u16, t20i16, t20u16 / t20i16);
print("%d / %d = %d\n", t20u16, t20u16, t20u16 / t20u16);
print("%d / %d = %d\n", t20u16, t20i32, t20u16 / t20i32);
print("%d / %d = %d\n", t20u16, t20u32, t20u16 / t20u32);
print("%d / %d = %d\n", t20u16, t20i64, t20u16 / t20i64);
print("%d / %d = %d\n", t20u16, t20u64, t20u16 / t20u64);
print("%d / %d = %d\n", t20u16, t20f32, t20u16 / t20f32);
print("%d / %d = %d\n", t20u16, t20f64, t20u16 / t20f64);
print("%d / %d = %d\n", t20u16, t20w,   t20u16 / t20w);
print("%d / %d = %d\n", t20u16, t20f,   t20u16 / t20f);
print("%d / %d = %d\n", t20u16, t20z,   t20u16 / t20z);
print("%d / %d = %d\n", t20u16, t20x,   t20u16 / t20x);
print("%d / %d = %d\n", t20u16, t20q,   t20u16 / t20q);
print("%d / %d = %d\n", t20u16, t20r,   t20u16 / t20r);
print("%d / %d = %d\n", t20i32, -8,     t20i32 / -8);
print("%d / %d = %d\n", t20i32,  8,     t20i32 /  8);
print("%d / %d = %d\n", t20i32, 32.0,   t20i32 / 32.0);
print("%d / %d = %d\n", t20i32, 0x800000000000000000000000000000000, t20i32 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20i32, 1/2,    t20i32 / 1/2);
print("%d / %d = %d\n", t20i32, 0x800000000000000000000000000000000/3, t20i32 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20i32, 1.25L,  t20i32 /  1.25L);
print("%d / %d = %d\n", t20i32, 1.25*I, t20i32 /  1.25*I);
print("%d / %d = %d\n", t20i32, 1/2*I,  t20i32 /  1/2*I);
print("%d / %d = %d\n", t20i32, 1.2L*I, t20i32 /  1.2L+I);
print("%d / %d = %d\n", t20i32, t20i8,  t20i32 / t20i8);
print("%d / %d = %d\n", t20i32, t20u8,  t20i32 / t20u8);
print("%d / %d = %d\n", t20i32, t20i16, t20i32 / t20i16);
print("%d / %d = %d\n", t20i32, t20u16, t20i32 / t20u16);
print("%d / %d = %d\n", t20i32, t20i32, t20i32 / t20i32);
print("%d / %d = %d\n", t20i32, t20u32, t20i32 / t20u32);
print("%d / %d = %d\n", t20i32, t20i64, t20i32 / t20i64);
print("%d / %d = %d\n", t20i32, t20u64, t20i32 / t20u64);
print("%d / %d = %d\n", t20i32, t20f32, t20i32 / t20f32);
print("%d / %d = %d\n", t20i32, t20f64, t20i32 / t20f64);
print("%d / %d = %d\n", t20i32, t20w,   t20i32 / t20w);
print("%d / %d = %d\n", t20i32, t20f,   t20i32 / t20f);
print("%d / %d = %d\n", t20i32, t20z,   t20i32 / t20z);
print("%d / %d = %d\n", t20i32, t20x,   t20i32 / t20x);
print("%d / %d = %d\n", t20i32, t20q,   t20i32 / t20q);
print("%d / %d = %d\n", t20i32, t20r,   t20i32 / t20r);
print("%d / %d = %d\n", t20u32, -8,     t20u32 / -8);
print("%d / %d = %d\n", t20u32,  8,     t20u32 /  8);
print("%d / %d = %d\n", t20u32, 32.0,   t20u32 / 32.0);
print("%d / %d = %d\n", t20u32, 0x800000000000000000000000000000000, t20u32 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20u32, 1/2,    t20u32 / 1/2);
print("%d / %d = %d\n", t20u32, 0x800000000000000000000000000000000/3, t20u32 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20u32, 1.25L,  t20u32 /  1.25L);
print("%d / %d = %d\n", t20u32, 1.25*I, t20u32 /  1.25*I);
print("%d / %d = %d\n", t20u32, 1/2*I,  t20u32 /  1/2*I);
print("%d / %d = %d\n", t20u32, 1.2L*I, t20u32 /  1.2L+I);
print("%d / %d = %d\n", t20u32, t20i8,  t20u32 / t20i8);
print("%d / %d = %d\n", t20u32, t20u8,  t20u32 / t20u8);
print("%d / %d = %d\n", t20u32, t20i16, t20u32 / t20i16);
print("%d / %d = %d\n", t20u32, t20u16, t20u32 / t20u16);
print("%d / %d = %d\n", t20u32, t20i32, t20u32 / t20i32);
print("%d / %d = %d\n", t20u32, t20u32, t20u32 / t20u32);
print("%d / %d = %d\n", t20u32, t20i64, t20u32 / t20i64);
print("%d / %d = %d\n", t20u32, t20u64, t20u32 / t20u64);
print("%d / %d = %d\n", t20u32, t20f32, t20u32 / t20f32);
print("%d / %d = %d\n", t20u32, t20f64, t20u32 / t20f64);
print("%d / %d = %d\n", t20u32, t20w,   t20u32 / t20w);
print("%d / %d = %d\n", t20u32, t20f,   t20u32 / t20f);
print("%d / %d = %d\n", t20u32, t20z,   t20u32 / t20z);
print("%d / %d = %d\n", t20u32, t20x,   t20u32 / t20x);
print("%d / %d = %d\n", t20u32, t20q,   t20u32 / t20q);
print("%d / %d = %d\n", t20u32, t20r,   t20u32 / t20r);
print("%d / %d = %d\n", t20i64, -8,     t20i64 / -8);
print("%d / %d = %d\n", t20i64,  8,     t20i64 /  8);
print("%d / %d = %d\n", t20i64, 32.0,   t20i64 / 32.0);
print("%d / %d = %d\n", t20i64, 0x800000000000000000000000000000000, t20i64 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20i64, 1/2,    t20i64 / 1/2);
print("%d / %d = %d\n", t20i64, 0x800000000000000000000000000000000/3, t20i64 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20i64, 1.25L,  t20i64 /  1.25L);
print("%d / %d = %d\n", t20i64, 1.25*I, t20i64 /  1.25*I);
print("%d / %d = %d\n", t20i64, 1/2*I,  t20i64 /  1/2*I);
print("%d / %d = %d\n", t20i64, 1.2L*I, t20i64 /  1.2L+I);
print("%d / %d = %d\n", t20i64, t20i8,  t20i64 / t20i8);
print("%d / %d = %d\n", t20i64, t20u8,  t20i64 / t20u8);
print("%d / %d = %d\n", t20i64, t20i16, t20i64 / t20i16);
print("%d / %d = %d\n", t20i64, t20u16, t20i64 / t20u16);
print("%d / %d = %d\n", t20i64, t20i32, t20i64 / t20i32);
print("%d / %d = %d\n", t20i64, t20u32, t20i64 / t20u32);
print("%d / %d = %d\n", t20i64, t20i64, t20i64 / t20i64);
print("%d / %d = %d\n", t20i64, t20u64, t20i64 / t20u64);
print("%d / %d = %d\n", t20i64, t20f32, t20i64 / t20f32);
print("%d / %d = %d\n", t20i64, t20f64, t20i64 / t20f64);
print("%d / %d = %d\n", t20i64, t20w,   t20i64 / t20w);
print("%d / %d = %d\n", t20i64, t20f,   t20i64 / t20f);
print("%d / %d = %d\n", t20i64, t20z,   t20i64 / t20z);
print("%d / %d = %d\n", t20i64, t20x,   t20i64 / t20x);
print("%d / %d = %d\n", t20i64, t20q,   t20i64 / t20q);
print("%d / %d = %d\n", t20i64, t20r,   t20i64 / t20r);
print("%d / %d = %d\n", t20u64, -8,     t20u64 / -8);
print("%d / %d = %d\n", t20u64,  8,     t20u64 /  8);
print("%d / %d = %d\n", t20u64, 32.0,   t20u64 / 32.0);
print("%d / %d = %d\n", t20u64, 0x800000000000000000000000000000000, t20u64 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20u64, 1/2,    t20u64 / 1/2);
print("%d / %d = %d\n", t20u64, 0x800000000000000000000000000000000/3, t20u64 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20u64, 1.25L,  t20u64 /  1.25L);
print("%d / %d = %d\n", t20u64, 1.25*I, t20u64 /  1.25*I);
print("%d / %d = %d\n", t20u64, 1/2*I,  t20u64 /  1/2*I);
print("%d / %d = %d\n", t20u64, 1.2L*I, t20u64 /  1.2L+I);
print("%d / %d = %d\n", t20u64, t20i8,  t20u64 / t20i8);
print("%d / %d = %d\n", t20u64, t20u8,  t20u64 / t20u8);
print("%d / %d = %d\n", t20u64, t20i16, t20u64 / t20i16);
print("%d / %d = %d\n", t20u64, t20u16, t20u64 / t20u16);
print("%d / %d = %d\n", t20u64, t20i32, t20u64 / t20i32);
print("%d / %d = %d\n", t20u64, t20u32, t20u64 / t20u32);
print("%d / %d = %d\n", t20u64, t20i64, t20u64 / t20i64);
print("%d / %d = %d\n", t20u64, t20u64, t20u64 / t20u64);
print("%d / %d = %d\n", t20u64, t20f32, t20u64 / t20f32);
print("%d / %d = %d\n", t20u64, t20f64, t20u64 / t20f64);
print("%d / %d = %d\n", t20u64, t20w,   t20u64 / t20w);
print("%d / %d = %d\n", t20u64, t20f,   t20u64 / t20f);
print("%d / %d = %d\n", t20u64, t20z,   t20u64 / t20z);
print("%d / %d = %d\n", t20u64, t20x,   t20u64 / t20x);
print("%d / %d = %d\n", t20u64, t20q,   t20u64 / t20q);
print("%d / %d = %d\n", t20u64, t20r,   t20u64 / t20r);
print("%d / %d = %d\n", t20f32, -8,     t20f32 / -8);
print("%d / %d = %d\n", t20f32,  8,     t20f32 /  8);
print("%d / %d = %d\n", t20f32, 32.0,   t20f32 / 32.0);
print("%d / %d = %d\n", t20f32, 0x800000000000000000000000000000000, t20f32 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20f32, 1/2,    t20f32 / 1/2);
print("%d / %d = %d\n", t20f32, 0x800000000000000000000000000000000/3, t20f32 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20f32, 1.25L,  t20f32 /  1.25L);
print("%d / %d = %d\n", t20f32, 1.25*I, t20f32 /  1.25*I);
print("%d / %d = %d\n", t20f32, 1/2*I,  t20f32 /  1/2*I);
print("%d / %d = %d\n", t20f32, 1.2L*I, t20f32 /  1.2L+I);
print("%d / %d = %d\n", t20f32, t20i8,  t20f32 / t20i8);
print("%d / %d = %d\n", t20f32, t20u8,  t20f32 / t20u8);
print("%d / %d = %d\n", t20f32, t20i16, t20f32 / t20i16);
print("%d / %d = %d\n", t20f32, t20u16, t20f32 / t20u16);
print("%d / %d = %d\n", t20f32, t20i32, t20f32 / t20i32);
print("%d / %d = %d\n", t20f32, t20u32, t20f32 / t20u32);
print("%d / %d = %d\n", t20f32, t20i64, t20f32 / t20i64);
print("%d / %d = %d\n", t20f32, t20u64, t20f32 / t20u64);
print("%d / %d = %d\n", t20f32, t20f32, t20f32 / t20f32);
print("%d / %d = %d\n", t20f32, t20f64, t20f32 / t20f64);
print("%d / %d = %d\n", t20f32, t20w,   t20f32 / t20w);
print("%d / %d = %d\n", t20f32, t20f,   t20f32 / t20f);
print("%d / %d = %d\n", t20f32, t20z,   t20f32 / t20z);
print("%d / %d = %d\n", t20f32, t20x,   t20f32 / t20x);
print("%d / %d = %d\n", t20f32, t20q,   t20f32 / t20q);
print("%d / %d = %d\n", t20f32, t20r,   t20f32 / t20r);
print("%d / %d = %d\n", t20f32, t20n,   t20f32 / t20n);
print("%d / %d = %d\n", t20f64, -8,     t20f64 / -8);
print("%d / %d = %d\n", t20f64,  8,     t20f64 /  8);
print("%d / %d = %d\n", t20f64, 32.0,   t20f64 / 32.0);
print("%d / %d = %d\n", t20f64, 0x800000000000000000000000000000000, t20f64 / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20f64, 1/2,    t20f64 / 1/2);
print("%d / %d = %d\n", t20f64, 0x800000000000000000000000000000000/3, t20f64 / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20f64, 1.25L,  t20f64 /  1.25L);
print("%d / %d = %d\n", t20f64, 1.25*I, t20f64 /  1.25*I);
print("%d / %d = %d\n", t20f64, 1/2*I,  t20f64 /  1/2*I);
print("%d / %d = %d\n", t20f64, 1.2L*I, t20f64 /  1.2L+I);
print("%d / %d = %d\n", t20f64, t20i8,  t20f64 / t20i8);
print("%d / %d = %d\n", t20f64, t20u8,  t20f64 / t20u8);
print("%d / %d = %d\n", t20f64, t20i16, t20f64 / t20i16);
print("%d / %d = %d\n", t20f64, t20u16, t20f64 / t20u16);
print("%d / %d = %d\n", t20f64, t20i32, t20f64 / t20i32);
print("%d / %d = %d\n", t20f64, t20u32, t20f64 / t20u32);
print("%d / %d = %d\n", t20f64, t20i64, t20f64 / t20i64);
print("%d / %d = %d\n", t20f64, t20u64, t20f64 / t20u64);
print("%d / %d = %d\n", t20f64, t20f32, t20f64 / t20f32);
print("%d / %d = %d\n", t20f64, t20f64, t20f64 / t20f64);
print("%d / %d = %d\n", t20f64, t20w,   t20f64 / t20w);
print("%d / %d = %d\n", t20f64, t20f,   t20f64 / t20f);
print("%d / %d = %d\n", t20f64, t20z,   t20f64 / t20z);
print("%d / %d = %d\n", t20f64, t20x,   t20f64 / t20x);
print("%d / %d = %d\n", t20f64, t20q,   t20f64 / t20q);
print("%d / %d = %d\n", t20f64, t20r,   t20f64 / t20r);
print("%d / %d = %d\n", t20f64, t20n,   t20f64 / t20n);
print("%d / %d = %d\n", t20w, -8,     t20w / -8);
print("%d / %d = %d\n", t20w,  8,     t20w /  8);
print("%d / %d = %d\n", t20w, 32.0,   t20w / 32.0);
print("%d / %d = %d\n", t20w, 0x800000000000000000000000000000000, t20w / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20w, 1/2,    t20w / 1/2);
print("%d / %d = %d\n", t20w, 0x800000000000000000000000000000000/3, t20w / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20w, 1.25L,  t20w /  1.25L);
print("%d / %d = %d\n", t20w, 1.25*I, t20w /  1.25*I);
print("%d / %d = %d\n", t20w, 1/2*I,  t20w /  1/2*I);
print("%d / %d = %d\n", t20w, 1.2L*I, t20w /  1.2L+I);
print("%d / %d = %d\n", t20w, t20i8,  t20w / t20i8);
print("%d / %d = %d\n", t20w, t20u8,  t20w / t20u8);
print("%d / %d = %d\n", t20w, t20i16, t20w / t20i16);
print("%d / %d = %d\n", t20w, t20u16, t20w / t20u16);
print("%d / %d = %d\n", t20w, t20i32, t20w / t20i32);
print("%d / %d = %d\n", t20w, t20u32, t20w / t20u32);
print("%d / %d = %d\n", t20w, t20i64, t20w / t20i64);
print("%d / %d = %d\n", t20w, t20u64, t20w / t20u64);
print("%d / %d = %d\n", t20w, t20f32, t20w / t20f32);
print("%d / %d = %d\n", t20w, t20f64, t20w / t20f64);
print("%d / %d = %d\n", t20w, t20w,   t20w / t20w);
print("%d / %d = %d\n", t20w, t20f,   t20w / t20f);
print("%d / %d = %d\n", t20w, t20z,   t20w / t20z);
print("%d / %d = %d\n", t20w, t20x,   t20w / t20x);
print("%d / %d = %d\n", t20w, t20q,   t20w / t20q);
print("%d / %d = %d\n", t20w, t20r,   t20w / t20r);
print("%d / %d = %d\n", t20f, -8,     t20f / -8);
print("%d / %d = %d\n", t20f,  8,     t20f /  8);
print("%d / %d = %d\n", t20f, 32.0,   t20f / 32.0);
print("%d / %d = %d\n", t20f, 0x800000000000000000000000000000000, t20f / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20f, 1/2,    t20f / 1/2);
print("%d / %d = %d\n", t20f, 0x800000000000000000000000000000000/3, t20f / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20f, 1.25L,  t20f /  1.25L);
print("%d / %d = %d\n", t20f, 1.25*I, t20f /  1.25*I);
print("%d / %d = %d\n", t20f, 1/2*I,  t20f /  1/2*I);
print("%d / %d = %d\n", t20f, 1.2L*I, t20f /  1.2L+I);
print("%d / %d = %d\n", t20f, t20i8,  t20f / t20i8);
print("%d / %d = %d\n", t20f, t20u8,  t20f / t20u8);
print("%d / %d = %d\n", t20f, t20i16, t20f / t20i16);
print("%d / %d = %d\n", t20f, t20u16, t20f / t20u16);
print("%d / %d = %d\n", t20f, t20i32, t20f / t20i32);
print("%d / %d = %d\n", t20f, t20u32, t20f / t20u32);
print("%d / %d = %d\n", t20f, t20i64, t20f / t20i64);
print("%d / %d = %d\n", t20f, t20u64, t20f / t20u64);
print("%d / %d = %d\n", t20f, t20f32, t20f / t20f32);
print("%d / %d = %d\n", t20f, t20f64, t20f / t20f64);
print("%d / %d = %d\n", t20f, t20w,   t20f / t20w);
print("%d / %d = %d\n", t20f, t20f,   t20f / t20f);
print("%d / %d = %d\n", t20f, t20z,   t20f / t20z);
print("%d / %d = %d\n", t20f, t20x,   t20f / t20x);
print("%d / %d = %d\n", t20f, t20q,   t20f / t20q);
print("%d / %d = %d\n", t20f, t20r,   t20f / t20r);
print("%d / %d = %d\n", t20f, t20n,   t20f / t20n);
print("%d / %d = %d\n", t20z, -8,     t20z / -8);
print("%d / %d = %d\n", t20z,  8,     t20z /  8);
print("%d / %d = %d\n", t20z, 32.0,   t20z / 32.0);
print("%d / %d = %d\n", t20z, 0x800000000000000000000000000000000, t20z / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20z, 1/2,    t20z / 1/2);
print("%d / %d = %d\n", t20z, 0x800000000000000000000000000000000/3, t20z / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20z, 1.25L,  t20z /  1.25L);
print("%d / %d = %d\n", t20z, 1.25*I, t20z /  1.25*I);
print("%d / %d = %d\n", t20z, 1/2*I,  t20z /  1/2*I);
print("%d / %d = %d\n", t20z, 1.2L*I, t20z /  1.2L+I);
print("%d / %d = %d\n", t20z, t20i8,  t20z / t20i8);
print("%d / %d = %d\n", t20z, t20u8,  t20z / t20u8);
print("%d / %d = %d\n", t20z, t20i16, t20z / t20i16);
print("%d / %d = %d\n", t20z, t20u16, t20z / t20u16);
print("%d / %d = %d\n", t20z, t20i32, t20z / t20i32);
print("%d / %d = %d\n", t20z, t20u32, t20z / t20u32);
print("%d / %d = %d\n", t20z, t20i64, t20z / t20i64);
print("%d / %d = %d\n", t20z, t20u64, t20z / t20u64);
print("%d / %d = %d\n", t20z, t20f32, t20z / t20f32);
print("%d / %d = %d\n", t20z, t20f64, t20z / t20f64);
print("%d / %d = %d\n", t20z, t20w,   t20z / t20w);
print("%d / %d = %d\n", t20z, t20f,   t20z / t20f);
print("%d / %d = %d\n", t20z, t20z,   t20z / t20z);
print("%d / %d = %d\n", t20z, t20x,   t20z / t20x);
print("%d / %d = %d\n", t20z, t20q,   t20z / t20q);
print("%d / %d = %d\n", t20z, t20r,   t20z / t20r);
print("%d / %d = %d\n", t20x, -8,     t20x / -8);
print("%d / %d = %d\n", t20x,  8,     t20x /  8);
print("%d / %d = %d\n", t20x, 32.0,   t20x / 32.0);
print("%d / %d = %d\n", t20x, 0x800000000000000000000000000000000, t20x / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20x, 1/2,    t20x / 1/2);
print("%d / %d = %d\n", t20x, 0x800000000000000000000000000000000/3, t20x / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20x, 1.25L,  t20x /  1.25L);
print("%d / %d = %d\n", t20x, 1.25*I, t20x /  1.25*I);
print("%d / %d = %d\n", t20x, 1/2*I,  t20x /  1/2*I);
print("%d / %d = %d\n", t20x, 1.2L*I, t20x /  1.2L+I);
print("%d / %d = %d\n", t20x, t20i8,  t20x / t20i8);
print("%d / %d = %d\n", t20x, t20u8,  t20x / t20u8);
print("%d / %d = %d\n", t20x, t20i16, t20x / t20i16);
print("%d / %d = %d\n", t20x, t20u16, t20x / t20u16);
print("%d / %d = %d\n", t20x, t20i32, t20x / t20i32);
print("%d / %d = %d\n", t20x, t20u32, t20x / t20u32);
print("%d / %d = %d\n", t20x, t20i64, t20x / t20i64);
print("%d / %d = %d\n", t20x, t20u64, t20x / t20u64);
print("%d / %d = %d\n", t20x, t20f32, t20x / t20f32);
print("%d / %d = %d\n", t20x, t20f64, t20x / t20f64);
print("%d / %d = %d\n", t20x, t20w,   t20x / t20w);
print("%d / %d = %d\n", t20x, t20f,   t20x / t20f);
print("%d / %d = %d\n", t20x, t20z,   t20x / t20z);
print("%d / %d = %d\n", t20x, t20x,   t20x / t20x);
print("%d / %d = %d\n", t20x, t20q,   t20x / t20q);
print("%d / %d = %d\n", t20x, t20r,   t20x / t20r);
print("%d / %d = %d\n", t20q, -8,     t20q / -8);
print("%d / %d = %d\n", t20q,  8,     t20q /  8);
print("%d / %d = %d\n", t20q, 32.0,   t20q / 32.0);
print("%d / %d = %d\n", t20q, 0x800000000000000000000000000000000, t20q / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20q, 1/2,    t20q / 1/2);
print("%d / %d = %d\n", t20q, 0x800000000000000000000000000000000/3, t20q / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20q, 1.25L,  t20q /  1.25L);
print("%d / %d = %d\n", t20q, 1.25*I, t20q /  1.25*I);
print("%d / %d = %d\n", t20q, 1/2*I,  t20q /  1/2*I);
print("%d / %d = %d\n", t20q, 1.2L*I, t20q /  1.2L+I);
print("%d / %d = %d\n", t20q, t20i8,  t20q / t20i8);
print("%d / %d = %d\n", t20q, t20u8,  t20q / t20u8);
print("%d / %d = %d\n", t20q, t20i16, t20q / t20i16);
print("%d / %d = %d\n", t20q, t20u16, t20q / t20u16);
print("%d / %d = %d\n", t20q, t20i32, t20q / t20i32);
print("%d / %d = %d\n", t20q, t20u32, t20q / t20u32);
print("%d / %d = %d\n", t20q, t20i64, t20q / t20i64);
print("%d / %d = %d\n", t20q, t20u64, t20q / t20u64);
print("%d / %d = %d\n", t20q, t20f32, t20q / t20f32);
print("%d / %d = %d\n", t20q, t20f64, t20q / t20f64);
print("%d / %d = %d\n", t20q, t20w,   t20q / t20w);
print("%d / %d = %d\n", t20q, t20f,   t20q / t20f);
print("%d / %d = %d\n", t20q, t20z,   t20q / t20z);
print("%d / %d = %d\n", t20q, t20x,   t20q / t20x);
print("%d / %d = %d\n", t20q, t20q,   t20q / t20q);
print("%d / %d = %d\n", t20q, t20r,   t20q / t20r);
print("%d / %d = %d\n", t20r, -8,     t20r / -8);
print("%d / %d = %d\n", t20r,  8,     t20r /  8);
print("%d / %d = %d\n", t20r, 32.0,   t20r / 32.0);
print("%d / %d = %d\n", t20r, 0x800000000000000000000000000000000, t20r / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20r, 1/2,    t20r / 1/2);
print("%d / %d = %d\n", t20r, 0x800000000000000000000000000000000/3, t20r / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20r, 1.25L,  t20r /  1.25L);
print("%d / %d = %d\n", t20r, 1.25*I, t20r /  1.25*I);
print("%d / %d = %d\n", t20r, 1/2*I,  t20r /  1/2*I);
print("%d / %d = %d\n", t20r, 1.2L*I, t20r /  1.2L+I);
print("%d / %d = %d\n", t20r, t20i8,  t20r / t20i8);
print("%d / %d = %d\n", t20r, t20u8,  t20r / t20u8);
print("%d / %d = %d\n", t20r, t20i16, t20r / t20i16);
print("%d / %d = %d\n", t20r, t20u16, t20r / t20u16);
print("%d / %d = %d\n", t20r, t20i32, t20r / t20i32);
print("%d / %d = %d\n", t20r, t20u32, t20r / t20u32);
print("%d / %d = %d\n", t20r, t20i64, t20r / t20i64);
print("%d / %d = %d\n", t20r, t20u64, t20r / t20u64);
print("%d / %d = %d\n", t20r, t20f32, t20r / t20f32);
print("%d / %d = %d\n", t20r, t20f64, t20r / t20f64);
print("%d / %d = %d\n", t20r, t20w,   t20r / t20w);
print("%d / %d = %d\n", t20r, t20f,   t20r / t20f);
print("%d / %d = %d\n", t20r, t20z,   t20r / t20z);
print("%d / %d = %d\n", t20r, t20x,   t20r / t20x);
print("%d / %d = %d\n", t20r, t20q,   t20r / t20q);
print("%d / %d = %d\n", t20r, t20r,   t20r / t20r);
print("%d / %d = %d\n", t20r, t20n,   t20r / t20n);
print("%d / %d = %d\n", t20dd, -8,     t20dd / -8);
print("%d / %d = %d\n", t20dd,  8,     t20dd /  8);
print("%d / %d = %d\n", t20dd, 32.0,   t20dd / 32.0);
print("%d / %d = %d\n", t20dd, 0x800000000000000000000000000000000, t20dd / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20dd, 1/2,    t20dd / 1/2);
print("%d / %d = %d\n", t20dd, 0x800000000000000000000000000000000/3, t20dd / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20dd, 1.25L,  t20dd /  1.25L);
print("%d / %d = %d\n", t20dd, 1.25*I, t20dd /  1.25*I);
print("%d / %d = %d\n", t20dd, 1/2*I,  t20dd /  1/2*I);
print("%d / %d = %d\n", t20dd, 1.2L*I, t20dd /  1.2L+I);
print("%d / %d = %d\n", t20dd, t20i8,  t20dd / t20i8);
print("%d / %d = %d\n", t20dd, t20u8,  t20dd / t20u8);
print("%d / %d = %d\n", t20dd, t20i16, t20dd / t20i16);
print("%d / %d = %d\n", t20dd, t20u16, t20dd / t20u16);
print("%d / %d = %d\n", t20dd, t20i32, t20dd / t20i32);
print("%d / %d = %d\n", t20dd, t20u32, t20dd / t20u32);
print("%d / %d = %d\n", t20dd, t20i64, t20dd / t20i64);
print("%d / %d = %d\n", t20dd, t20u64, t20dd / t20u64);
print("%d / %d = %d\n", t20dd, t20f32, t20dd / t20f32);
print("%d / %d = %d\n", t20dd, t20f64, t20dd / t20f64);
print("%d / %d = %d\n", t20dd, t20w,   t20dd / t20w);
print("%d / %d = %d\n", t20dd, t20f,   t20dd / t20f);
print("%d / %d = %d\n", t20dd, t20z,   t20dd / t20z);
print("%d / %d = %d\n", t20dd, t20x,   t20dd / t20x);
print("%d / %d = %d\n", t20dd, t20q,   t20dd / t20q);
print("%d / %d = %d\n", t20dd, t20r,   t20dd / t20r);
print("%d / %d = %d\n", t20dd, t20n,   t20dd / t20n);
print("%d / %d = %d\n", t20qq, -8,     t20qq / -8);
print("%d / %d = %d\n", t20qq,  8,     t20qq /  8);
print("%d / %d = %d\n", t20qq, 32.0,   t20qq / 32.0);
print("%d / %d = %d\n", t20qq, 0x800000000000000000000000000000000, t20qq / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20qq, 1/2,    t20qq / 1/2);
print("%d / %d = %d\n", t20qq, 0x800000000000000000000000000000000/3, t20qq / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20qq, 1.25L,  t20qq /  1.25L);
print("%d / %d = %d\n", t20qq, 1.25*I, t20qq /  1.25*I);
print("%d / %d = %d\n", t20qq, 1/2*I,  t20qq /  1/2*I);
print("%d / %d = %d\n", t20qq, 1.2L*I, t20qq /  1.2L+I);
print("%d / %d = %d\n", t20qq, t20i8,  t20qq / t20i8);
print("%d / %d = %d\n", t20qq, t20u8,  t20qq / t20u8);
print("%d / %d = %d\n", t20qq, t20i16, t20qq / t20i16);
print("%d / %d = %d\n", t20qq, t20u16, t20qq / t20u16);
print("%d / %d = %d\n", t20qq, t20i32, t20qq / t20i32);
print("%d / %d = %d\n", t20qq, t20u32, t20qq / t20u32);
print("%d / %d = %d\n", t20qq, t20i64, t20qq / t20i64);
print("%d / %d = %d\n", t20qq, t20u64, t20qq / t20u64);
print("%d / %d = %d\n", t20qq, t20f32, t20qq / t20f32);
print("%d / %d = %d\n", t20qq, t20f64, t20qq / t20f64);
print("%d / %d = %d\n", t20qq, t20w,   t20qq / t20w);
print("%d / %d = %d\n", t20qq, t20f,   t20qq / t20f);
print("%d / %d = %d\n", t20qq, t20z,   t20qq / t20z);
print("%d / %d = %d\n", t20qq, t20x,   t20qq / t20x);
print("%d / %d = %d\n", t20qq, t20q,   t20qq / t20q);
print("%d / %d = %d\n", t20qq, t20r,   t20qq / t20r);
print("%d / %d = %d\n", t20cc, -8,     t20cc / -8);
print("%d / %d = %d\n", t20cc,  8,     t20cc /  8);
print("%d / %d = %d\n", t20cc, 32.0,   t20cc / 32.0);
print("%d / %d = %d\n", t20cc, 0x800000000000000000000000000000000, t20cc / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20cc, 1/2,    t20cc / 1/2);
print("%d / %d = %d\n", t20cc, 0x800000000000000000000000000000000/3, t20cc / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20cc, 1.25L,  t20cc /  1.25L);
print("%d / %d = %d\n", t20cc, 1.25*I, t20cc /  1.25*I);
print("%d / %d = %d\n", t20cc, 1/2*I,  t20cc /  1/2*I);
print("%d / %d = %d\n", t20cc, 1.2L*I, t20cc /  1.2L+I);
print("%d / %d = %d\n", t20cc, t20i8,  t20cc / t20i8);
print("%d / %d = %d\n", t20cc, t20u8,  t20cc / t20u8);
print("%d / %d = %d\n", t20cc, t20i16, t20cc / t20i16);
print("%d / %d = %d\n", t20cc, t20u16, t20cc / t20u16);
print("%d / %d = %d\n", t20cc, t20i32, t20cc / t20i32);
print("%d / %d = %d\n", t20cc, t20u32, t20cc / t20u32);
print("%d / %d = %d\n", t20cc, t20i64, t20cc / t20i64);
print("%d / %d = %d\n", t20cc, t20u64, t20cc / t20u64);
print("%d / %d = %d\n", t20cc, t20f32, t20cc / t20f32);
print("%d / %d = %d\n", t20cc, t20f64, t20cc / t20f64);
print("%d / %d = %d\n", t20cc, t20w,   t20cc / t20w);
print("%d / %d = %d\n", t20cc, t20f,   t20cc / t20f);
print("%d / %d = %d\n", t20cc, t20z,   t20cc / t20z);
print("%d / %d = %d\n", t20cc, t20x,   t20cc / t20x);
print("%d / %d = %d\n", t20cc, t20q,   t20cc / t20q);
print("%d / %d = %d\n", t20cc, t20r,   t20cc / t20r);
print("%d / %d = %d\n", t20cc, t20n,   t20cc / t20n);
print("%d / %d = %d\n", t20n, -8,     t20n / -8);
print("%d / %d = %d\n", t20n,  8,     t20n /  8);
print("%d / %d = %d\n", t20n, 32.0,   t20n / 32.0);
print("%d / %d = %d\n", t20n, 0x800000000000000000000000000000000, t20n / 0x800000000000000000000000000000000);
print("%d / %d = %d\n", t20n, 1/2,    t20n / 1/2);
print("%d / %d = %d\n", t20n, 0x800000000000000000000000000000000/3, t20n / 0x800000000000000000000000000000000/3);
print("%d / %d = %d\n", t20n, 1.25L,  t20n /  1.25L);
print("%d / %d = %d\n", t20n, 1.25*I, t20n /  1.25*I);
print("%d / %d = %d\n", t20n, 1/2*I,  t20n /  1/2*I);
print("%d / %d = %d\n", t20n, 1.2L*I, t20n /  1.2L+I);
print("%d / %d = %d\n", t20n, t20i8,  t20n / t20i8);
print("%d / %d = %d\n", t20n, t20u8,  t20n / t20u8);
print("%d / %d = %d\n", t20n, t20i16, t20n / t20i16);
print("%d / %d = %d\n", t20n, t20u16, t20n / t20u16);
print("%d / %d = %d\n", t20n, t20i32, t20n / t20i32);
print("%d / %d = %d\n", t20n, t20u32, t20n / t20u32);
print("%d / %d = %d\n", t20n, t20i64, t20n / t20i64);
print("%d / %d = %d\n", t20n, t20u64, t20n / t20u64);
print("%d / %d = %d\n", t20n, t20f32, t20n / t20f32);
print("%d / %d = %d\n", t20n, t20f64, t20n / t20f64);
print("%d / %d = %d\n", t20n, t20w,   t20n / t20w);
print("%d / %d = %d\n", t20n, t20f,   t20n / t20f);
print("%d / %d = %d\n", t20n, t20z,   t20n / t20z);
print("%d / %d = %d\n", t20n, t20x,   t20n / t20x);
print("%d / %d = %d\n", t20n, t20q,   t20n / t20q);
print("%d / %d = %d\n", t20n, t20r,   t20n / t20r);

int8_t		t21i8  = -8;
uint8_t		t21u8  =  8;
int16_t		t21i16 = -16;
uint16_t	t21u16 =  16;
int32_t		t21i32 = -32;
uint32_t	t21u32 =  32;
int64_t		t21i64 = -64;
uint64_t	t21u64 =  64;
float32_t	t21f32 = -32.0;
float64_t	t21f64 =  64.0;
auto		t21w   =  42;
auto		t21f   = -42.25;
auto		t21z   =  0x800000000000000000000000000000000;
auto		t21x   =  1/2;
auto		t21q   =  0x800000000000000000000000000000000/3;
auto		t21r   = -1.25L;
auto		t21n   =  null;
print("%d \\ %d = %d\n", t21i8, -8,     t21i8 \ -8);
print("%d \\ %d = %d\n", t21i8,  8,     t21i8 \  8);
print("%d \\ %d = %d\n", t21i8, 32.0,   t21i8 \ 32.0);
print("%d \\ %d = %d\n", t21i8, 0x800000000000000000000000000000000, t21i8 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21i8, 1/2,    t21i8 \ 1/2);
print("%d \\ %d = %d\n", t21i8, 0x800000000000000000000000000000000/3, t21i8 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21i8, 1.25L,  t21i8 \  1.25L);
print("%d \\ %d = %d\n", t21i8, t21i8,  t21i8 \ t21i8);
print("%d \\ %d = %d\n", t21i8, t21u8,  t21i8 \ t21u8);
print("%d \\ %d = %d\n", t21i8, t21i16, t21i8 \ t21i16);
print("%d \\ %d = %d\n", t21i8, t21u16, t21i8 \ t21u16);
print("%d \\ %d = %d\n", t21i8, t21i32, t21i8 \ t21i32);
print("%d \\ %d = %d\n", t21i8, t21u32, t21i8 \ t21u32);
print("%d \\ %d = %d\n", t21i8, t21i64, t21i8 \ t21i64);
print("%d \\ %d = %d\n", t21i8, t21u64, t21i8 \ t21u64);
print("%d \\ %d = %d\n", t21i8, t21f32, t21i8 \ t21f32);
print("%d \\ %d = %d\n", t21i8, t21f64, t21i8 \ t21f64);
print("%d \\ %d = %d\n", t21i8, t21w,   t21i8 \ t21w);
print("%d \\ %d = %d\n", t21i8, t21f,   t21i8 \ t21f);
print("%d \\ %d = %d\n", t21i8, t21z,   t21i8 \ t21z);
print("%d \\ %d = %d\n", t21i8, t21x,   t21i8 \ t21x);
print("%d \\ %d = %d\n", t21i8, t21q,   t21i8 \ t21q);
print("%d \\ %d = %d\n", t21i8, t21r,   t21i8 \ t21r);
print("%d \\ %d = %d\n", t21u8, -8,     t21u8 \ -8);
print("%d \\ %d = %d\n", t21u8,  8,     t21u8 \  8);
print("%d \\ %d = %d\n", t21u8, 32.0,   t21u8 \ 32.0);
print("%d \\ %d = %d\n", t21u8, 0x800000000000000000000000000000000, t21u8 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21u8, 1/2,    t21u8 \ 1/2);
print("%d \\ %d = %d\n", t21u8, 0x800000000000000000000000000000000/3, t21u8 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21u8, 1.25L,  t21u8 \  1.25L);
print("%d \\ %d = %d\n", t21u8, t21i8,  t21u8 \ t21i8);
print("%d \\ %d = %d\n", t21u8, t21u8,  t21u8 \ t21u8);
print("%d \\ %d = %d\n", t21u8, t21i16, t21u8 \ t21i16);
print("%d \\ %d = %d\n", t21u8, t21u16, t21u8 \ t21u16);
print("%d \\ %d = %d\n", t21u8, t21i32, t21u8 \ t21i32);
print("%d \\ %d = %d\n", t21u8, t21u32, t21u8 \ t21u32);
print("%d \\ %d = %d\n", t21u8, t21i64, t21u8 \ t21i64);
print("%d \\ %d = %d\n", t21u8, t21u64, t21u8 \ t21u64);
print("%d \\ %d = %d\n", t21u8, t21f32, t21u8 \ t21f32);
print("%d \\ %d = %d\n", t21u8, t21f64, t21u8 \ t21f64);
print("%d \\ %d = %d\n", t21u8, t21w,   t21u8 \ t21w);
print("%d \\ %d = %d\n", t21u8, t21f,   t21u8 \ t21f);
print("%d \\ %d = %d\n", t21u8, t21z,   t21u8 \ t21z);
print("%d \\ %d = %d\n", t21u8, t21x,   t21u8 \ t21x);
print("%d \\ %d = %d\n", t21u8, t21q,   t21u8 \ t21q);
print("%d \\ %d = %d\n", t21u8, t21r,   t21u8 \ t21r);
print("%d \\ %d = %d\n", t21i16, -8,     t21i16 \ -8);
print("%d \\ %d = %d\n", t21i16,  8,     t21i16 \  8);
print("%d \\ %d = %d\n", t21i16, 32.0,   t21i16 \ 32.0);
print("%d \\ %d = %d\n", t21i16, 0x800000000000000000000000000000000, t21i16 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21i16, 1/2,    t21i16 \ 1/2);
print("%d \\ %d = %d\n", t21i16, 0x800000000000000000000000000000000/3, t21i16 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21i16, 1.25L,  t21i16 \  1.25L);
print("%d \\ %d = %d\n", t21i16, t21i8,  t21i16 \ t21i8);
print("%d \\ %d = %d\n", t21i16, t21u8,  t21i16 \ t21u8);
print("%d \\ %d = %d\n", t21i16, t21i16, t21i16 \ t21i16);
print("%d \\ %d = %d\n", t21i16, t21u16, t21i16 \ t21u16);
print("%d \\ %d = %d\n", t21i16, t21i32, t21i16 \ t21i32);
print("%d \\ %d = %d\n", t21i16, t21u32, t21i16 \ t21u32);
print("%d \\ %d = %d\n", t21i16, t21i64, t21i16 \ t21i64);
print("%d \\ %d = %d\n", t21i16, t21u64, t21i16 \ t21u64);
print("%d \\ %d = %d\n", t21i16, t21f32, t21i16 \ t21f32);
print("%d \\ %d = %d\n", t21i16, t21f64, t21i16 \ t21f64);
print("%d \\ %d = %d\n", t21i16, t21w,   t21i16 \ t21w);
print("%d \\ %d = %d\n", t21i16, t21f,   t21i16 \ t21f);
print("%d \\ %d = %d\n", t21i16, t21z,   t21i16 \ t21z);
print("%d \\ %d = %d\n", t21i16, t21x,   t21i16 \ t21x);
print("%d \\ %d = %d\n", t21i16, t21q,   t21i16 \ t21q);
print("%d \\ %d = %d\n", t21i16, t21r,   t21i16 \ t21r);
print("%d \\ %d = %d\n", t21u16, -8,     t21u16 \ -8);
print("%d \\ %d = %d\n", t21u16,  8,     t21u16 \  8);
print("%d \\ %d = %d\n", t21u16, 32.0,   t21u16 \ 32.0);
print("%d \\ %d = %d\n", t21u16, 0x800000000000000000000000000000000, t21u16 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21u16, 1/2,    t21u16 \ 1/2);
print("%d \\ %d = %d\n", t21u16, 0x800000000000000000000000000000000/3, t21u16 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21u16, 1.25L,  t21u16 \  1.25L);
print("%d \\ %d = %d\n", t21u16, t21i8,  t21u16 \ t21i8);
print("%d \\ %d = %d\n", t21u16, t21u8,  t21u16 \ t21u8);
print("%d \\ %d = %d\n", t21u16, t21i16, t21u16 \ t21i16);
print("%d \\ %d = %d\n", t21u16, t21u16, t21u16 \ t21u16);
print("%d \\ %d = %d\n", t21u16, t21i32, t21u16 \ t21i32);
print("%d \\ %d = %d\n", t21u16, t21u32, t21u16 \ t21u32);
print("%d \\ %d = %d\n", t21u16, t21i64, t21u16 \ t21i64);
print("%d \\ %d = %d\n", t21u16, t21u64, t21u16 \ t21u64);
print("%d \\ %d = %d\n", t21u16, t21f32, t21u16 \ t21f32);
print("%d \\ %d = %d\n", t21u16, t21f64, t21u16 \ t21f64);
print("%d \\ %d = %d\n", t21u16, t21w,   t21u16 \ t21w);
print("%d \\ %d = %d\n", t21u16, t21f,   t21u16 \ t21f);
print("%d \\ %d = %d\n", t21u16, t21z,   t21u16 \ t21z);
print("%d \\ %d = %d\n", t21u16, t21x,   t21u16 \ t21x);
print("%d \\ %d = %d\n", t21u16, t21q,   t21u16 \ t21q);
print("%d \\ %d = %d\n", t21u16, t21r,   t21u16 \ t21r);
print("%d \\ %d = %d\n", t21i32, -8,     t21i32 \ -8);
print("%d \\ %d = %d\n", t21i32,  8,     t21i32 \  8);
print("%d \\ %d = %d\n", t21i32, 32.0,   t21i32 \ 32.0);
print("%d \\ %d = %d\n", t21i32, 0x800000000000000000000000000000000, t21i32 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21i32, 1/2,    t21i32 \ 1/2);
print("%d \\ %d = %d\n", t21i32, 0x800000000000000000000000000000000/3, t21i32 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21i32, 1.25L,  t21i32 \  1.25L);
print("%d \\ %d = %d\n", t21i32, t21i8,  t21i32 \ t21i8);
print("%d \\ %d = %d\n", t21i32, t21u8,  t21i32 \ t21u8);
print("%d \\ %d = %d\n", t21i32, t21i16, t21i32 \ t21i16);
print("%d \\ %d = %d\n", t21i32, t21u16, t21i32 \ t21u16);
print("%d \\ %d = %d\n", t21i32, t21i32, t21i32 \ t21i32);
print("%d \\ %d = %d\n", t21i32, t21u32, t21i32 \ t21u32);
print("%d \\ %d = %d\n", t21i32, t21i64, t21i32 \ t21i64);
print("%d \\ %d = %d\n", t21i32, t21u64, t21i32 \ t21u64);
print("%d \\ %d = %d\n", t21i32, t21f32, t21i32 \ t21f32);
print("%d \\ %d = %d\n", t21i32, t21f64, t21i32 \ t21f64);
print("%d \\ %d = %d\n", t21i32, t21w,   t21i32 \ t21w);
print("%d \\ %d = %d\n", t21i32, t21f,   t21i32 \ t21f);
print("%d \\ %d = %d\n", t21i32, t21z,   t21i32 \ t21z);
print("%d \\ %d = %d\n", t21i32, t21x,   t21i32 \ t21x);
print("%d \\ %d = %d\n", t21i32, t21q,   t21i32 \ t21q);
print("%d \\ %d = %d\n", t21i32, t21r,   t21i32 \ t21r);
print("%d \\ %d = %d\n", t21u32, -8,     t21u32 \ -8);
print("%d \\ %d = %d\n", t21u32,  8,     t21u32 \  8);
print("%d \\ %d = %d\n", t21u32, 32.0,   t21u32 \ 32.0);
print("%d \\ %d = %d\n", t21u32, 0x800000000000000000000000000000000, t21u32 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21u32, 1/2,    t21u32 \ 1/2);
print("%d \\ %d = %d\n", t21u32, 0x800000000000000000000000000000000/3, t21u32 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21u32, 1.25L,  t21u32 \  1.25L);
print("%d \\ %d = %d\n", t21u32, t21i8,  t21u32 \ t21i8);
print("%d \\ %d = %d\n", t21u32, t21u8,  t21u32 \ t21u8);
print("%d \\ %d = %d\n", t21u32, t21i16, t21u32 \ t21i16);
print("%d \\ %d = %d\n", t21u32, t21u16, t21u32 \ t21u16);
print("%d \\ %d = %d\n", t21u32, t21i32, t21u32 \ t21i32);
print("%d \\ %d = %d\n", t21u32, t21u32, t21u32 \ t21u32);
print("%d \\ %d = %d\n", t21u32, t21i64, t21u32 \ t21i64);
print("%d \\ %d = %d\n", t21u32, t21u64, t21u32 \ t21u64);
print("%d \\ %d = %d\n", t21u32, t21f32, t21u32 \ t21f32);
print("%d \\ %d = %d\n", t21u32, t21f64, t21u32 \ t21f64);
print("%d \\ %d = %d\n", t21u32, t21w,   t21u32 \ t21w);
print("%d \\ %d = %d\n", t21u32, t21f,   t21u32 \ t21f);
print("%d \\ %d = %d\n", t21u32, t21z,   t21u32 \ t21z);
print("%d \\ %d = %d\n", t21u32, t21x,   t21u32 \ t21x);
print("%d \\ %d = %d\n", t21u32, t21q,   t21u32 \ t21q);
print("%d \\ %d = %d\n", t21u32, t21r,   t21u32 \ t21r);
print("%d \\ %d = %d\n", t21i64, -8,     t21i64 \ -8);
print("%d \\ %d = %d\n", t21i64,  8,     t21i64 \  8);
print("%d \\ %d = %d\n", t21i64, 32.0,   t21i64 \ 32.0);
print("%d \\ %d = %d\n", t21i64, 0x800000000000000000000000000000000, t21i64 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21i64, 1/2,    t21i64 \ 1/2);
print("%d \\ %d = %d\n", t21i64, 0x800000000000000000000000000000000/3, t21i64 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21i64, 1.25L,  t21i64 \  1.25L);
print("%d \\ %d = %d\n", t21i64, t21i8,  t21i64 \ t21i8);
print("%d \\ %d = %d\n", t21i64, t21u8,  t21i64 \ t21u8);
print("%d \\ %d = %d\n", t21i64, t21i16, t21i64 \ t21i16);
print("%d \\ %d = %d\n", t21i64, t21u16, t21i64 \ t21u16);
print("%d \\ %d = %d\n", t21i64, t21i32, t21i64 \ t21i32);
print("%d \\ %d = %d\n", t21i64, t21u32, t21i64 \ t21u32);
print("%d \\ %d = %d\n", t21i64, t21i64, t21i64 \ t21i64);
print("%d \\ %d = %d\n", t21i64, t21u64, t21i64 \ t21u64);
print("%d \\ %d = %d\n", t21i64, t21f32, t21i64 \ t21f32);
print("%d \\ %d = %d\n", t21i64, t21f64, t21i64 \ t21f64);
print("%d \\ %d = %d\n", t21i64, t21w,   t21i64 \ t21w);
print("%d \\ %d = %d\n", t21i64, t21f,   t21i64 \ t21f);
print("%d \\ %d = %d\n", t21i64, t21z,   t21i64 \ t21z);
print("%d \\ %d = %d\n", t21i64, t21x,   t21i64 \ t21x);
print("%d \\ %d = %d\n", t21i64, t21q,   t21i64 \ t21q);
print("%d \\ %d = %d\n", t21i64, t21r,   t21i64 \ t21r);
print("%d \\ %d = %d\n", t21u64, -8,     t21u64 \ -8);
print("%d \\ %d = %d\n", t21u64,  8,     t21u64 \  8);
print("%d \\ %d = %d\n", t21u64, 32.0,   t21u64 \ 32.0);
print("%d \\ %d = %d\n", t21u64, 0x800000000000000000000000000000000, t21u64 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21u64, 1/2,    t21u64 \ 1/2);
print("%d \\ %d = %d\n", t21u64, 0x800000000000000000000000000000000/3, t21u64 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21u64, 1.25L,  t21u64 \  1.25L);
print("%d \\ %d = %d\n", t21u64, t21i8,  t21u64 \ t21i8);
print("%d \\ %d = %d\n", t21u64, t21u8,  t21u64 \ t21u8);
print("%d \\ %d = %d\n", t21u64, t21i16, t21u64 \ t21i16);
print("%d \\ %d = %d\n", t21u64, t21u16, t21u64 \ t21u16);
print("%d \\ %d = %d\n", t21u64, t21i32, t21u64 \ t21i32);
print("%d \\ %d = %d\n", t21u64, t21u32, t21u64 \ t21u32);
print("%d \\ %d = %d\n", t21u64, t21i64, t21u64 \ t21i64);
print("%d \\ %d = %d\n", t21u64, t21u64, t21u64 \ t21u64);
print("%d \\ %d = %d\n", t21u64, t21f32, t21u64 \ t21f32);
print("%d \\ %d = %d\n", t21u64, t21f64, t21u64 \ t21f64);
print("%d \\ %d = %d\n", t21u64, t21w,   t21u64 \ t21w);
print("%d \\ %d = %d\n", t21u64, t21f,   t21u64 \ t21f);
print("%d \\ %d = %d\n", t21u64, t21z,   t21u64 \ t21z);
print("%d \\ %d = %d\n", t21u64, t21x,   t21u64 \ t21x);
print("%d \\ %d = %d\n", t21u64, t21q,   t21u64 \ t21q);
print("%d \\ %d = %d\n", t21u64, t21r,   t21u64 \ t21r);
print("%d \\ %d = %d\n", t21f32, -8,     t21f32 \ -8);
print("%d \\ %d = %d\n", t21f32,  8,     t21f32 \  8);
print("%d \\ %d = %d\n", t21f32, 32.0,   t21f32 \ 32.0);
print("%d \\ %d = %d\n", t21f32, 0x800000000000000000000000000000000, t21f32 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21f32, 1/2,    t21f32 \ 1/2);
print("%d \\ %d = %d\n", t21f32, 0x800000000000000000000000000000000/3, t21f32 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21f32, 1.25L,  t21f32 \  1.25L);
print("%d \\ %d = %d\n", t21f32, t21i8,  t21f32 \ t21i8);
print("%d \\ %d = %d\n", t21f32, t21u8,  t21f32 \ t21u8);
print("%d \\ %d = %d\n", t21f32, t21i16, t21f32 \ t21i16);
print("%d \\ %d = %d\n", t21f32, t21u16, t21f32 \ t21u16);
print("%d \\ %d = %d\n", t21f32, t21i32, t21f32 \ t21i32);
print("%d \\ %d = %d\n", t21f32, t21u32, t21f32 \ t21u32);
print("%d \\ %d = %d\n", t21f32, t21i64, t21f32 \ t21i64);
print("%d \\ %d = %d\n", t21f32, t21u64, t21f32 \ t21u64);
print("%d \\ %d = %d\n", t21f32, t21f32, t21f32 \ t21f32);
print("%d \\ %d = %d\n", t21f32, t21f64, t21f32 \ t21f64);
print("%d \\ %d = %d\n", t21f32, t21w,   t21f32 \ t21w);
print("%d \\ %d = %d\n", t21f32, t21f,   t21f32 \ t21f);
print("%d \\ %d = %d\n", t21f32, t21z,   t21f32 \ t21z);
print("%d \\ %d = %d\n", t21f32, t21x,   t21f32 \ t21x);
print("%d \\ %d = %d\n", t21f32, t21q,   t21f32 \ t21q);
print("%d \\ %d = %d\n", t21f32, t21r,   t21f32 \ t21r);
print("%d \\ %d = %d\n", t21f64, -8,     t21f64 \ -8);
print("%d \\ %d = %d\n", t21f64,  8,     t21f64 \  8);
print("%d \\ %d = %d\n", t21f64, 32.0,   t21f64 \ 32.0);
print("%d \\ %d = %d\n", t21f64, 0x800000000000000000000000000000000, t21f64 \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21f64, 1/2,    t21f64 \ 1/2);
print("%d \\ %d = %d\n", t21f64, 0x800000000000000000000000000000000/3, t21f64 \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21f64, 1.25L,  t21f64 \  1.25L);
print("%d \\ %d = %d\n", t21f64, t21i8,  t21f64 \ t21i8);
print("%d \\ %d = %d\n", t21f64, t21u8,  t21f64 \ t21u8);
print("%d \\ %d = %d\n", t21f64, t21i16, t21f64 \ t21i16);
print("%d \\ %d = %d\n", t21f64, t21u16, t21f64 \ t21u16);
print("%d \\ %d = %d\n", t21f64, t21i32, t21f64 \ t21i32);
print("%d \\ %d = %d\n", t21f64, t21u32, t21f64 \ t21u32);
print("%d \\ %d = %d\n", t21f64, t21i64, t21f64 \ t21i64);
print("%d \\ %d = %d\n", t21f64, t21u64, t21f64 \ t21u64);
print("%d \\ %d = %d\n", t21f64, t21f32, t21f64 \ t21f32);
print("%d \\ %d = %d\n", t21f64, t21f64, t21f64 \ t21f64);
print("%d \\ %d = %d\n", t21f64, t21w,   t21f64 \ t21w);
print("%d \\ %d = %d\n", t21f64, t21f,   t21f64 \ t21f);
print("%d \\ %d = %d\n", t21f64, t21z,   t21f64 \ t21z);
print("%d \\ %d = %d\n", t21f64, t21x,   t21f64 \ t21x);
print("%d \\ %d = %d\n", t21f64, t21q,   t21f64 \ t21q);
print("%d \\ %d = %d\n", t21f64, t21r,   t21f64 \ t21r);
print("%d \\ %d = %d\n", t21w, -8,     t21w \ -8);
print("%d \\ %d = %d\n", t21w,  8,     t21w \  8);
print("%d \\ %d = %d\n", t21w, 32.0,   t21w \ 32.0);
print("%d \\ %d = %d\n", t21w, 0x800000000000000000000000000000000, t21w \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21w, 1/2,    t21w \ 1/2);
print("%d \\ %d = %d\n", t21w, 0x800000000000000000000000000000000/3, t21w \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21w, 1.25L,  t21w \  1.25L);
print("%d \\ %d = %d\n", t21w, t21i8,  t21w \ t21i8);
print("%d \\ %d = %d\n", t21w, t21u8,  t21w \ t21u8);
print("%d \\ %d = %d\n", t21w, t21i16, t21w \ t21i16);
print("%d \\ %d = %d\n", t21w, t21u16, t21w \ t21u16);
print("%d \\ %d = %d\n", t21w, t21i32, t21w \ t21i32);
print("%d \\ %d = %d\n", t21w, t21u32, t21w \ t21u32);
print("%d \\ %d = %d\n", t21w, t21i64, t21w \ t21i64);
print("%d \\ %d = %d\n", t21w, t21u64, t21w \ t21u64);
print("%d \\ %d = %d\n", t21w, t21f32, t21w \ t21f32);
print("%d \\ %d = %d\n", t21w, t21f64, t21w \ t21f64);
print("%d \\ %d = %d\n", t21w, t21w,   t21w \ t21w);
print("%d \\ %d = %d\n", t21w, t21f,   t21w \ t21f);
print("%d \\ %d = %d\n", t21w, t21z,   t21w \ t21z);
print("%d \\ %d = %d\n", t21w, t21x,   t21w \ t21x);
print("%d \\ %d = %d\n", t21w, t21q,   t21w \ t21q);
print("%d \\ %d = %d\n", t21w, t21r,   t21w \ t21r);
print("%d \\ %d = %d\n", t21f, -8,     t21f \ -8);
print("%d \\ %d = %d\n", t21f,  8,     t21f \  8);
print("%d \\ %d = %d\n", t21f, 32.0,   t21f \ 32.0);
print("%d \\ %d = %d\n", t21f, 0x800000000000000000000000000000000, t21f \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21f, 1/2,    t21f \ 1/2);
print("%d \\ %d = %d\n", t21f, 0x800000000000000000000000000000000/3, t21f \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21f, 1.25L,  t21f \  1.25L);
print("%d \\ %d = %d\n", t21f, t21i8,  t21f \ t21i8);
print("%d \\ %d = %d\n", t21f, t21u8,  t21f \ t21u8);
print("%d \\ %d = %d\n", t21f, t21i16, t21f \ t21i16);
print("%d \\ %d = %d\n", t21f, t21u16, t21f \ t21u16);
print("%d \\ %d = %d\n", t21f, t21i32, t21f \ t21i32);
print("%d \\ %d = %d\n", t21f, t21u32, t21f \ t21u32);
print("%d \\ %d = %d\n", t21f, t21i64, t21f \ t21i64);
print("%d \\ %d = %d\n", t21f, t21u64, t21f \ t21u64);
print("%d \\ %d = %d\n", t21f, t21f32, t21f \ t21f32);
print("%d \\ %d = %d\n", t21f, t21f64, t21f \ t21f64);
print("%d \\ %d = %d\n", t21f, t21w,   t21f \ t21w);
print("%d \\ %d = %d\n", t21f, t21f,   t21f \ t21f);
print("%d \\ %d = %d\n", t21f, t21z,   t21f \ t21z);
print("%d \\ %d = %d\n", t21f, t21x,   t21f \ t21x);
print("%d \\ %d = %d\n", t21f, t21q,   t21f \ t21q);
print("%d \\ %d = %d\n", t21f, t21r,   t21f \ t21r);
print("%d \\ %d = %d\n", t21z, -8,     t21z \ -8);
print("%d \\ %d = %d\n", t21z,  8,     t21z \  8);
print("%d \\ %d = %d\n", t21z, 32.0,   t21z \ 32.0);
print("%d \\ %d = %d\n", t21z, 0x800000000000000000000000000000000, t21z \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21z, 1/2,    t21z \ (1/2));
print("%d \\ %d = %d\n", t21z, 0x800000000000000000000000000000000/3, t21z \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21z, 1.25L,  t21z \  1.25L);
print("%d \\ %d = %d\n", t21z, t21i8,  t21z \ t21i8);
print("%d \\ %d = %d\n", t21z, t21u8,  t21z \ t21u8);
print("%d \\ %d = %d\n", t21z, t21i16, t21z \ t21i16);
print("%d \\ %d = %d\n", t21z, t21u16, t21z \ t21u16);
print("%d \\ %d = %d\n", t21z, t21i32, t21z \ t21i32);
print("%d \\ %d = %d\n", t21z, t21u32, t21z \ t21u32);
print("%d \\ %d = %d\n", t21z, t21i64, t21z \ t21i64);
print("%d \\ %d = %d\n", t21z, t21u64, t21z \ t21u64);
print("%d \\ %d = %d\n", t21z, t21f32, t21z \ t21f32);
print("%d \\ %d = %d\n", t21z, t21f64, t21z \ t21f64);
print("%d \\ %d = %d\n", t21z, t21w,   t21z \ t21w);
print("%d \\ %d = %d\n", t21z, t21f,   t21z \ t21f);
print("%d \\ %d = %d\n", t21z, t21z,   t21z \ t21z);
print("%d \\ %d = %d\n", t21z, t21x,   t21z \ t21x);
print("%d \\ %d = %d\n", t21z, t21q,   t21z \ t21q);
print("%d \\ %d = %d\n", t21z, t21r,   t21z \ t21r);
print("%d \\ %d = %d\n", t21x, -8,     t21x \ -8);
print("%d \\ %d = %d\n", t21x,  8,     t21x \  8);
print("%d \\ %d = %d\n", t21x, 32.0,   t21x \ 32.0);
print("%d \\ %d = %d\n", t21x, 0x800000000000000000000000000000000, t21x \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21x, 1/2,    t21x \ (1/2));
print("%d \\ %d = %d\n", t21x, 0x800000000000000000000000000000000/3, t21x \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21x, 1.25L,  t21x \  1.25L);
print("%d \\ %d = %d\n", t21x, t21i8,  t21x \ t21i8);
print("%d \\ %d = %d\n", t21x, t21u8,  t21x \ t21u8);
print("%d \\ %d = %d\n", t21x, t21i16, t21x \ t21i16);
print("%d \\ %d = %d\n", t21x, t21u16, t21x \ t21u16);
print("%d \\ %d = %d\n", t21x, t21i32, t21x \ t21i32);
print("%d \\ %d = %d\n", t21x, t21u32, t21x \ t21u32);
print("%d \\ %d = %d\n", t21x, t21i64, t21x \ t21i64);
print("%d \\ %d = %d\n", t21x, t21u64, t21x \ t21u64);
print("%d \\ %d = %d\n", t21x, t21f32, t21x \ t21f32);
print("%d \\ %d = %d\n", t21x, t21f64, t21x \ t21f64);
print("%d \\ %d = %d\n", t21x, t21w,   t21x \ t21w);
print("%d \\ %d = %d\n", t21x, t21f,   t21x \ t21f);
print("%d \\ %d = %d\n", t21x, t21z,   t21x \ t21z);
print("%d \\ %d = %d\n", t21x, t21x,   t21x \ t21x);
print("%d \\ %d = %d\n", t21x, t21q,   t21x \ t21q);
print("%d \\ %d = %d\n", t21x, t21r,   t21x \ t21r);
print("%d \\ %d = %d\n", t21q, -8,     t21q \ -8);
print("%d \\ %d = %d\n", t21q,  8,     t21q \  8);
print("%d \\ %d = %d\n", t21q, 32.0,   t21q \ 32.0);
print("%d \\ %d = %d\n", t21q, 0x800000000000000000000000000000000, t21q \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21q, 1/2,    t21q \ (1/2));
print("%d \\ %d = %d\n", t21q, 0x800000000000000000000000000000000/3, t21q \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21q, 1.25L,  t21q \  1.25L);
print("%d \\ %d = %d\n", t21q, t21i8,  t21q \ t21i8);
print("%d \\ %d = %d\n", t21q, t21u8,  t21q \ t21u8);
print("%d \\ %d = %d\n", t21q, t21i16, t21q \ t21i16);
print("%d \\ %d = %d\n", t21q, t21u16, t21q \ t21u16);
print("%d \\ %d = %d\n", t21q, t21i32, t21q \ t21i32);
print("%d \\ %d = %d\n", t21q, t21u32, t21q \ t21u32);
print("%d \\ %d = %d\n", t21q, t21i64, t21q \ t21i64);
print("%d \\ %d = %d\n", t21q, t21u64, t21q \ t21u64);
print("%d \\ %d = %d\n", t21q, t21f32, t21q \ t21f32);
print("%d \\ %d = %d\n", t21q, t21f64, t21q \ t21f64);
print("%d \\ %d = %d\n", t21q, t21w,   t21q \ t21w);
print("%d \\ %d = %d\n", t21q, t21f,   t21q \ t21f);
print("%d \\ %d = %d\n", t21q, t21z,   t21q \ t21z);
print("%d \\ %d = %d\n", t21q, t21x,   t21q \ t21x);
print("%d \\ %d = %d\n", t21q, t21q,   t21q \ t21q);
print("%d \\ %d = %d\n", t21q, t21r,   t21q \ t21r);
print("%d \\ %d = %d\n", t21r, -8,     t21r \ -8);
print("%d \\ %d = %d\n", t21r,  8,     t21r \  8);
print("%d \\ %d = %d\n", t21r, 32.0,   t21r \ 32.0);
print("%d \\ %d = %d\n", t21r, 0x800000000000000000000000000000000, t21r \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21r, 1/2,    t21r \ (1/2));
print("%d \\ %d = %d\n", t21r, 0x800000000000000000000000000000000/3, t21r \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21r, 1.25L,  t21r \  1.25L);
print("%d \\ %d = %d\n", t21r, t21i8,  t21r \ t21i8);
print("%d \\ %d = %d\n", t21r, t21u8,  t21r \ t21u8);
print("%d \\ %d = %d\n", t21r, t21i16, t21r \ t21i16);
print("%d \\ %d = %d\n", t21r, t21u16, t21r \ t21u16);
print("%d \\ %d = %d\n", t21r, t21i32, t21r \ t21i32);
print("%d \\ %d = %d\n", t21r, t21u32, t21r \ t21u32);
print("%d \\ %d = %d\n", t21r, t21i64, t21r \ t21i64);
print("%d \\ %d = %d\n", t21r, t21u64, t21r \ t21u64);
print("%d \\ %d = %d\n", t21r, t21f32, t21r \ t21f32);
print("%d \\ %d = %d\n", t21r, t21f64, t21r \ t21f64);
print("%d \\ %d = %d\n", t21r, t21w,   t21r \ t21w);
print("%d \\ %d = %d\n", t21r, t21f,   t21r \ t21f);
print("%d \\ %d = %d\n", t21r, t21z,   t21r \ t21z);
print("%d \\ %d = %d\n", t21r, t21x,   t21r \ t21x);
print("%d \\ %d = %d\n", t21r, t21q,   t21r \ t21q);
print("%d \\ %d = %d\n", t21r, t21r,   t21r \ t21r);
print("%d \\ %d = %d\n", t21n, -8,     t21n \ -8);
print("%d \\ %d = %d\n", t21n,  8,     t21n \  8);
print("%d \\ %d = %d\n", t21n, 32.0,   t21n \ 32.0);
print("%d \\ %d = %d\n", t21n, 0x800000000000000000000000000000000, t21n \ 0x800000000000000000000000000000000);
print("%d \\ %d = %d\n", t21n, 1/2,    t21n \ (1/2));
print("%d \\ %d = %d\n", t21n, 0x800000000000000000000000000000000/3, t21n \ 0x800000000000000000000000000000000/3);
print("%d \\ %d = %d\n", t21n, 1.25L,  t21n \  1.25L);
print("%d \\ %d = %d\n", t21n, t21i8,  t21n \ t21i8);
print("%d \\ %d = %d\n", t21n, t21u8,  t21n \ t21u8);
print("%d \\ %d = %d\n", t21n, t21i16, t21n \ t21i16);
print("%d \\ %d = %d\n", t21n, t21u16, t21n \ t21u16);
print("%d \\ %d = %d\n", t21n, t21i32, t21n \ t21i32);
print("%d \\ %d = %d\n", t21n, t21u32, t21n \ t21u32);
print("%d \\ %d = %d\n", t21n, t21i64, t21n \ t21i64);
print("%d \\ %d = %d\n", t21n, t21u64, t21n \ t21u64);
print("%d \\ %d = %d\n", t21n, t21f32, t21n \ t21f32);
print("%d \\ %d = %d\n", t21n, t21f64, t21n \ t21f64);
print("%d \\ %d = %d\n", t21n, t21w,   t21n \ t21w);
print("%d \\ %d = %d\n", t21n, t21f,   t21n \ t21f);
print("%d \\ %d = %d\n", t21n, t21z,   t21n \ t21z);
print("%d \\ %d = %d\n", t21n, t21x,   t21n \ t21x);
print("%d \\ %d = %d\n", t21n, t21q,   t21n \ t21q);
print("%d \\ %d = %d\n", t21n, t21r,   t21n \ t21r);

int8_t		t22i8  = -4;
uint8_t		t22u8  =  12;
int16_t		t22i16 = -12;
uint16_t	t22u16 =  20;
int32_t		t22i32 = -28;
uint32_t	t22u32 =  36;
int64_t		t22i64 = -60;
uint64_t	t22u64 =  68;
float32_t	t22f32 = -28.0;
float64_t	t22f64 =  68.0;
auto		t22w   =  46;
auto		t22f   = -38.25;
auto		t22z   =  0x800000000000000000000000000000002;
auto		t22x   =  3/2;
auto		t22q   =  0x800000000000000000000000000000000/5;
auto		t22r   = -1.75L;
auto		t22n   =  null;
print("%d <<<   0 = %d\n", t22i8, t22i8 <<<   0);
print("%d <<<   2 = %d\n", t22i8, t22i8 <<<   2);
print("%d <<<   4 = %d\n", t22i8, t22i8 <<<   4);
print("%d <<<   8 = %d\n", t22i8, t22i8 <<<   8);
print("%d <<<  16 = %d\n", t22i8, t22i8 <<<  16);
print("%d <<<  32 = %d\n", t22i8, t22i8 <<<  32);
print("%d <<<  64 = %d\n", t22i8, t22i8 <<<  64);
print("%d <<< 128 = %d\n", t22i8, t22i8 <<< 128);
print("%d >>>   0 = %d\n", t22i8, t22i8 >>>   0);
print("%d >>>   2 = %d\n", t22i8, t22i8 >>>   2);
print("%d >>>   4 = %d\n", t22i8, t22i8 >>>   4);
print("%d >>>   8 = %d\n", t22i8, t22i8 >>>   8);
print("%d >>>  16 = %d\n", t22i8, t22i8 >>>  16);
print("%d >>>  32 = %d\n", t22i8, t22i8 >>>  32);
print("%d >>>  64 = %d\n", t22i8, t22i8 >>>  64);
print("%d >>> 128 = %d\n", t22i8, t22i8 >>> 128);
print("%d <<<   0 = %d\n", t22u8, t22u8 <<<   0);
print("%d <<<   2 = %d\n", t22u8, t22u8 <<<   2);
print("%d <<<   4 = %d\n", t22u8, t22u8 <<<   4);
print("%d <<<   8 = %d\n", t22u8, t22u8 <<<   8);
print("%d <<<  16 = %d\n", t22u8, t22u8 <<<  16);
print("%d <<<  32 = %d\n", t22u8, t22u8 <<<  32);
print("%d <<<  64 = %d\n", t22u8, t22u8 <<<  64);
print("%d <<< 128 = %d\n", t22u8, t22u8 <<< 128);
print("%d >>>   0 = %d\n", t22u8, t22u8 >>>   0);
print("%d >>>   2 = %d\n", t22u8, t22u8 >>>   2);
print("%d >>>   4 = %d\n", t22u8, t22u8 >>>   4);
print("%d >>>   8 = %d\n", t22u8, t22u8 >>>   8);
print("%d >>>  16 = %d\n", t22u8, t22u8 >>>  16);
print("%d >>>  32 = %d\n", t22u8, t22u8 >>>  32);
print("%d >>>  64 = %d\n", t22u8, t22u8 >>>  64);
print("%d >>> 128 = %d\n", t22u8, t22u8 >>> 128);
print("%d <<<   0 = %d\n", t22i16, t22i16 <<<   0);
print("%d <<<   2 = %d\n", t22i16, t22i16 <<<   2);
print("%d <<<   4 = %d\n", t22i16, t22i16 <<<   4);
print("%d <<<   8 = %d\n", t22i16, t22i16 <<<   8);
print("%d <<<  16 = %d\n", t22i16, t22i16 <<<  16);
print("%d <<<  32 = %d\n", t22i16, t22i16 <<<  32);
print("%d <<<  64 = %d\n", t22i16, t22i16 <<<  64);
print("%d <<< 128 = %d\n", t22i16, t22i16 <<< 128);
print("%d >>>   0 = %d\n", t22i16, t22i16 >>>   0);
print("%d >>>   2 = %d\n", t22i16, t22i16 >>>   2);
print("%d >>>   4 = %d\n", t22i16, t22i16 >>>   4);
print("%d >>>   8 = %d\n", t22i16, t22i16 >>>   8);
print("%d >>>  16 = %d\n", t22i16, t22i16 >>>  16);
print("%d >>>  32 = %d\n", t22i16, t22i16 >>>  32);
print("%d >>>  64 = %d\n", t22i16, t22i16 >>>  64);
print("%d >>> 128 = %d\n", t22i16, t22i16 >>> 128);
print("%d <<<   0 = %d\n", t22u16, t22u16 <<<   0);
print("%d <<<   2 = %d\n", t22u16, t22u16 <<<   2);
print("%d <<<   4 = %d\n", t22u16, t22u16 <<<   4);
print("%d <<<   8 = %d\n", t22u16, t22u16 <<<   8);
print("%d <<<  16 = %d\n", t22u16, t22u16 <<<  16);
print("%d <<<  32 = %d\n", t22u16, t22u16 <<<  32);
print("%d <<<  64 = %d\n", t22u16, t22u16 <<<  64);
print("%d <<< 128 = %d\n", t22u16, t22u16 <<< 128);
print("%d >>>   0 = %d\n", t22u16, t22u16 >>>   0);
print("%d >>>   2 = %d\n", t22u16, t22u16 >>>   2);
print("%d >>>   4 = %d\n", t22u16, t22u16 >>>   4);
print("%d >>>   8 = %d\n", t22u16, t22u16 >>>   8);
print("%d >>>  16 = %d\n", t22u16, t22u16 >>>  16);
print("%d >>>  32 = %d\n", t22u16, t22u16 >>>  32);
print("%d >>>  64 = %d\n", t22u16, t22u16 >>>  64);
print("%d >>> 128 = %d\n", t22u16, t22u16 >>> 128);
print("%d <<<   0 = %d\n", t22i32, t22i32 <<<   0);
print("%d <<<   2 = %d\n", t22i32, t22i32 <<<   2);
print("%d <<<   4 = %d\n", t22i32, t22i32 <<<   4);
print("%d <<<   8 = %d\n", t22i32, t22i32 <<<   8);
print("%d <<<  16 = %d\n", t22i32, t22i32 <<<  16);
print("%d <<<  32 = %d\n", t22i32, t22i32 <<<  32);
print("%d <<<  64 = %d\n", t22i32, t22i32 <<<  64);
print("%d <<< 128 = %d\n", t22i32, t22i32 <<< 128);
print("%d >>>   0 = %d\n", t22i32, t22i32 >>>   0);
print("%d >>>   2 = %d\n", t22i32, t22i32 >>>   2);
print("%d >>>   4 = %d\n", t22i32, t22i32 >>>   4);
print("%d >>>   8 = %d\n", t22i32, t22i32 >>>   8);
print("%d >>>  16 = %d\n", t22i32, t22i32 >>>  16);
print("%d >>>  32 = %d\n", t22i32, t22i32 >>>  32);
print("%d >>>  64 = %d\n", t22i32, t22i32 >>>  64);
print("%d >>> 128 = %d\n", t22i32, t22i32 >>> 128);
print("%d <<<   0 = %d\n", t22u32, t22u32 <<<   0);
print("%d <<<   2 = %d\n", t22u32, t22u32 <<<   2);
print("%d <<<   4 = %d\n", t22u32, t22u32 <<<   4);
print("%d <<<   8 = %d\n", t22u32, t22u32 <<<   8);
print("%d <<<  16 = %d\n", t22u32, t22u32 <<<  16);
print("%d <<<  32 = %d\n", t22u32, t22u32 <<<  32);
print("%d <<<  64 = %d\n", t22u32, t22u32 <<<  64);
print("%d <<< 128 = %d\n", t22u32, t22u32 <<< 128);
print("%d >>>   0 = %d\n", t22u32, t22u32 >>>   0);
print("%d >>>   2 = %d\n", t22u32, t22u32 >>>   2);
print("%d >>>   4 = %d\n", t22u32, t22u32 >>>   4);
print("%d >>>   8 = %d\n", t22u32, t22u32 >>>   8);
print("%d >>>  16 = %d\n", t22u32, t22u32 >>>  16);
print("%d >>>  32 = %d\n", t22u32, t22u32 >>>  32);
print("%d >>>  64 = %d\n", t22u32, t22u32 >>>  64);
print("%d >>> 128 = %d\n", t22u32, t22u32 >>> 128);
print("%d <<<   0 = %d\n", t22i64, t22i64 <<<   0);
print("%d <<<   2 = %d\n", t22i64, t22i64 <<<   2);
print("%d <<<   4 = %d\n", t22i64, t22i64 <<<   4);
print("%d <<<   8 = %d\n", t22i64, t22i64 <<<   8);
print("%d <<<  16 = %d\n", t22i64, t22i64 <<<  16);
print("%d <<<  32 = %d\n", t22i64, t22i64 <<<  32);
print("%d <<<  64 = %d\n", t22i64, t22i64 <<<  64);
print("%d <<< 128 = %d\n", t22i64, t22i64 <<< 128);
print("%d >>>   0 = %d\n", t22i64, t22i64 >>>   0);
print("%d >>>   2 = %d\n", t22i64, t22i64 >>>   2);
print("%d >>>   4 = %d\n", t22i64, t22i64 >>>   4);
print("%d >>>   8 = %d\n", t22i64, t22i64 >>>   8);
print("%d >>>  16 = %d\n", t22i64, t22i64 >>>  16);
print("%d >>>  32 = %d\n", t22i64, t22i64 >>>  32);
print("%d >>>  64 = %d\n", t22i64, t22i64 >>>  64);
print("%d >>> 128 = %d\n", t22i64, t22i64 >>> 128);
print("%d <<<   0 = %d\n", t22u64, t22u64 <<<   0);
print("%d <<<   2 = %d\n", t22u64, t22u64 <<<   2);
print("%d <<<   4 = %d\n", t22u64, t22u64 <<<   4);
print("%d <<<   8 = %d\n", t22u64, t22u64 <<<   8);
print("%d <<<  16 = %d\n", t22u64, t22u64 <<<  16);
print("%d <<<  32 = %d\n", t22u64, t22u64 <<<  32);
print("%d <<<  64 = %d\n", t22u64, t22u64 <<<  64);
print("%d <<< 128 = %d\n", t22u64, t22u64 <<< 128);
print("%d >>>   0 = %d\n", t22u64, t22u64 >>>   0);
print("%d >>>   2 = %d\n", t22u64, t22u64 >>>   2);
print("%d >>>   4 = %d\n", t22u64, t22u64 >>>   4);
print("%d >>>   8 = %d\n", t22u64, t22u64 >>>   8);
print("%d >>>  16 = %d\n", t22u64, t22u64 >>>  16);
print("%d >>>  32 = %d\n", t22u64, t22u64 >>>  32);
print("%d >>>  64 = %d\n", t22u64, t22u64 >>>  64);
print("%d >>> 128 = %d\n", t22u64, t22u64 >>> 128);
print("%d <<<   0 = %d\n", t22f32, t22f32 <<<   0);
print("%d <<<   2 = %d\n", t22f32, t22f32 <<<   2);
print("%d <<<   4 = %d\n", t22f32, t22f32 <<<   4);
print("%d <<<   8 = %d\n", t22f32, t22f32 <<<   8);
print("%d <<<  16 = %d\n", t22f32, t22f32 <<<  16);
print("%d <<<  32 = %d\n", t22f32, t22f32 <<<  32);
print("%d <<<  64 = %d\n", t22f32, t22f32 <<<  64);
print("%d <<< 128 = %d\n", t22f32, t22f32 <<< 128);
print("%d >>>   0 = %d\n", t22f32, t22f32 >>>   0);
print("%d >>>   2 = %d\n", t22f32, t22f32 >>>   2);
print("%d >>>   4 = %d\n", t22f32, t22f32 >>>   4);
print("%d >>>   8 = %d\n", t22f32, t22f32 >>>   8);
print("%d >>>  16 = %d\n", t22f32, t22f32 >>>  16);
print("%d >>>  32 = %d\n", t22f32, t22f32 >>>  32);
print("%d >>>  64 = %d\n", t22f32, t22f32 >>>  64);
print("%d >>> 128 = %d\n", t22f32, t22f32 >>> 128);
print("%d <<<   0 = %d\n", t22f64, t22f64 <<<   0);
print("%d <<<   2 = %d\n", t22f64, t22f64 <<<   2);
print("%d <<<   4 = %d\n", t22f64, t22f64 <<<   4);
print("%d <<<   8 = %d\n", t22f64, t22f64 <<<   8);
print("%d <<<  16 = %d\n", t22f64, t22f64 <<<  16);
print("%d <<<  32 = %d\n", t22f64, t22f64 <<<  32);
print("%d <<<  64 = %d\n", t22f64, t22f64 <<<  64);
print("%d <<< 128 = %d\n", t22f64, t22f64 <<< 128);
print("%d >>>   0 = %d\n", t22f64, t22f64 >>>   0);
print("%d >>>   2 = %d\n", t22f64, t22f64 >>>   2);
print("%d >>>   4 = %d\n", t22f64, t22f64 >>>   4);
print("%d >>>   8 = %d\n", t22f64, t22f64 >>>   8);
print("%d >>>  16 = %d\n", t22f64, t22f64 >>>  16);
print("%d >>>  32 = %d\n", t22f64, t22f64 >>>  32);
print("%d >>>  64 = %d\n", t22f64, t22f64 >>>  64);
print("%d >>> 128 = %d\n", t22f64, t22f64 >>> 128);
print("%d <<<   0 = %d\n", t22w, t22w <<<   0);
print("%d <<<   2 = %d\n", t22w, t22w <<<   2);
print("%d <<<   4 = %d\n", t22w, t22w <<<   4);
print("%d <<<   8 = %d\n", t22w, t22w <<<   8);
print("%d <<<  16 = %d\n", t22w, t22w <<<  16);
print("%d <<<  32 = %d\n", t22w, t22w <<<  32);
print("%d <<<  64 = %d\n", t22w, t22w <<<  64);
print("%d <<< 128 = %d\n", t22w, t22w <<< 128);
print("%d >>>   0 = %d\n", t22w, t22w >>>   0);
print("%d >>>   2 = %d\n", t22w, t22w >>>   2);
print("%d >>>   4 = %d\n", t22w, t22w >>>   4);
print("%d >>>   8 = %d\n", t22w, t22w >>>   8);
print("%d >>>  16 = %d\n", t22w, t22w >>>  16);
print("%d >>>  32 = %d\n", t22w, t22w >>>  32);
print("%d >>>  64 = %d\n", t22w, t22w >>>  64);
print("%d >>> 128 = %d\n", t22w, t22w >>> 128);
print("%d <<<   0 = %d\n", t22f, t22f <<<   0);
print("%d <<<   2 = %d\n", t22f, t22f <<<   2);
print("%d <<<   4 = %d\n", t22f, t22f <<<   4);
print("%d <<<   8 = %d\n", t22f, t22f <<<   8);
print("%d <<<  16 = %d\n", t22f, t22f <<<  16);
print("%d <<<  32 = %d\n", t22f, t22f <<<  32);
print("%d <<<  64 = %d\n", t22f, t22f <<<  64);
print("%d <<< 128 = %d\n", t22f, t22f <<< 128);
print("%d >>>   0 = %d\n", t22f, t22f >>>   0);
print("%d >>>   2 = %d\n", t22f, t22f >>>   2);
print("%d >>>   4 = %d\n", t22f, t22f >>>   4);
print("%d >>>   8 = %d\n", t22f, t22f >>>   8);
print("%d >>>  16 = %d\n", t22f, t22f >>>  16);
print("%d >>>  32 = %d\n", t22f, t22f >>>  32);
print("%d >>>  64 = %d\n", t22f, t22f >>>  64);
print("%d >>> 128 = %d\n", t22f, t22f >>> 128);
print("%d <<<   0 = %d\n", t22z, t22z <<<   0);
print("%d <<<   2 = %d\n", t22z, t22z <<<   2);
print("%d <<<   4 = %d\n", t22z, t22z <<<   4);
print("%d <<<   8 = %d\n", t22z, t22z <<<   8);
print("%d <<<  16 = %d\n", t22z, t22z <<<  16);
print("%d <<<  32 = %d\n", t22z, t22z <<<  32);
print("%d <<<  64 = %d\n", t22z, t22z <<<  64);
print("%d <<< 128 = %d\n", t22z, t22z <<< 128);
print("%d >>>   0 = %d\n", t22z, t22z >>>   0);
print("%d >>>   2 = %d\n", t22z, t22z >>>   2);
print("%d >>>   4 = %d\n", t22z, t22z >>>   4);
print("%d >>>   8 = %d\n", t22z, t22z >>>   8);
print("%d >>>  16 = %d\n", t22z, t22z >>>  16);
print("%d >>>  32 = %d\n", t22z, t22z >>>  32);
print("%d >>>  64 = %d\n", t22z, t22z >>>  64);
print("%d >>> 128 = %d\n", t22z, t22z >>> 128);
print("%d <<<   0 = %d\n", t22x, t22x <<<   0);
print("%d <<<   2 = %d\n", t22x, t22x <<<   2);
print("%d <<<   4 = %d\n", t22x, t22x <<<   4);
print("%d <<<   8 = %d\n", t22x, t22x <<<   8);
print("%d <<<  16 = %d\n", t22x, t22x <<<  16);
print("%d <<<  32 = %d\n", t22x, t22x <<<  32);
print("%d <<<  64 = %d\n", t22x, t22x <<<  64);
print("%d <<< 128 = %d\n", t22x, t22x <<< 128);
print("%d >>>   0 = %d\n", t22x, t22x >>>   0);
print("%d >>>   2 = %d\n", t22x, t22x >>>   2);
print("%d >>>   4 = %d\n", t22x, t22x >>>   4);
print("%d >>>   8 = %d\n", t22x, t22x >>>   8);
print("%d >>>  16 = %d\n", t22x, t22x >>>  16);
print("%d >>>  32 = %d\n", t22x, t22x >>>  32);
print("%d >>>  64 = %d\n", t22x, t22x >>>  64);
print("%d >>> 128 = %d\n", t22x, t22x >>> 128);
print("%d <<<   0 = %d\n", t22q, t22q <<<   0);
print("%d <<<   2 = %d\n", t22q, t22q <<<   2);
print("%d <<<   4 = %d\n", t22q, t22q <<<   4);
print("%d <<<   8 = %d\n", t22q, t22q <<<   8);
print("%d <<<  16 = %d\n", t22q, t22q <<<  16);
print("%d <<<  32 = %d\n", t22q, t22q <<<  32);
print("%d <<<  64 = %d\n", t22q, t22q <<<  64);
print("%d <<< 128 = %d\n", t22q, t22q <<< 128);
print("%d >>>   0 = %d\n", t22q, t22q >>>   0);
print("%d >>>   2 = %d\n", t22q, t22q >>>   2);
print("%d >>>   4 = %d\n", t22q, t22q >>>   4);
print("%d >>>   8 = %d\n", t22q, t22q >>>   8);
print("%d >>>  16 = %d\n", t22q, t22q >>>  16);
print("%d >>>  32 = %d\n", t22q, t22q >>>  32);
print("%d >>>  64 = %d\n", t22q, t22q >>>  64);
print("%d >>> 128 = %d\n", t22q, t22q >>> 128);
print("%d <<<   0 = %d\n", t22r, t22r <<<   0);
print("%d <<<   2 = %d\n", t22r, t22r <<<   2);
print("%d <<<   4 = %d\n", t22r, t22r <<<   4);
print("%d <<<   8 = %d\n", t22r, t22r <<<   8);
print("%d <<<  16 = %d\n", t22r, t22r <<<  16);
print("%d <<<  32 = %d\n", t22r, t22r <<<  32);
print("%d <<<  64 = %d\n", t22r, t22r <<<  64);
print("%d <<< 128 = %d\n", t22r, t22r <<< 128);
print("%d >>>   0 = %d\n", t22r, t22r >>>   0);
print("%d >>>   2 = %d\n", t22r, t22r >>>   2);
print("%d >>>   4 = %d\n", t22r, t22r >>>   4);
print("%d >>>   8 = %d\n", t22r, t22r >>>   8);
print("%d >>>  16 = %d\n", t22r, t22r >>>  16);
print("%d >>>  32 = %d\n", t22r, t22r >>>  32);
print("%d >>>  64 = %d\n", t22r, t22r >>>  64);
print("%d >>> 128 = %d\n", t22r, t22r >>> 128);
print("%d <<<   0 = %d\n", t22n, t22n <<<   0);
print("%d <<<   2 = %d\n", t22n, t22n <<<   2);
print("%d <<<   4 = %d\n", t22n, t22n <<<   4);
print("%d <<<   8 = %d\n", t22n, t22n <<<   8);
print("%d <<<  16 = %d\n", t22n, t22n <<<  16);
print("%d <<<  32 = %d\n", t22n, t22n <<<  32);
print("%d <<<  64 = %d\n", t22n, t22n <<<  64);
print("%d <<< 128 = %d\n", t22n, t22n <<< 128);
print("%d >>>   0 = %d\n", t22n, t22n >>>   0);
print("%d >>>   2 = %d\n", t22n, t22n >>>   2);
print("%d >>>   4 = %d\n", t22n, t22n >>>   4);
print("%d >>>   8 = %d\n", t22n, t22n >>>   8);
print("%d >>>  16 = %d\n", t22n, t22n >>>  16);
print("%d >>>  32 = %d\n", t22n, t22n >>>  32);
print("%d >>>  64 = %d\n", t22n, t22n >>>  64);
print("%d >>> 128 = %d\n", t22n, t22n >>> 128);
int16_t		t22s0   = 0;
int16_t		t22s2   = 2;
int16_t		t22s4   = 4;
int16_t		t22s8   = 8;
int16_t		t22s16  = 16;
int16_t		t22s32  = 32;
int16_t		t22s64  = 64;
int16_t		t22s128 = 128;
print("%d <<<   0 = %d\n", t22i8, t22i8 <<<   t22s0);
print("%d <<<   2 = %d\n", t22i8, t22i8 <<<   t22s2);
print("%d <<<   4 = %d\n", t22i8, t22i8 <<<   t22s4);
print("%d <<<   8 = %d\n", t22i8, t22i8 <<<   t22s8);
print("%d <<<  16 = %d\n", t22i8, t22i8 <<<  t22s16);
print("%d <<<  32 = %d\n", t22i8, t22i8 <<<  t22s32);
print("%d <<<  64 = %d\n", t22i8, t22i8 <<<  t22s64);
print("%d <<< 128 = %d\n", t22i8, t22i8 <<< t22s128);
print("%d >>>   0 = %d\n", t22i8, t22i8 >>>   t22s0);
print("%d >>>   2 = %d\n", t22i8, t22i8 >>>   t22s2);
print("%d >>>   4 = %d\n", t22i8, t22i8 >>>   t22s4);
print("%d >>>   8 = %d\n", t22i8, t22i8 >>>   t22s8);
print("%d >>>  16 = %d\n", t22i8, t22i8 >>>  t22s16);
print("%d >>>  32 = %d\n", t22i8, t22i8 >>>  t22s32);
print("%d >>>  64 = %d\n", t22i8, t22i8 >>>  t22s64);
print("%d >>> 128 = %d\n", t22i8, t22i8 >>> t22s128);
print("%d <<<   0 = %d\n", t22u8, t22u8 <<<   t22s0);
print("%d <<<   2 = %d\n", t22u8, t22u8 <<<   t22s2);
print("%d <<<   4 = %d\n", t22u8, t22u8 <<<   t22s4);
print("%d <<<   8 = %d\n", t22u8, t22u8 <<<   t22s8);
print("%d <<<  16 = %d\n", t22u8, t22u8 <<<  t22s16);
print("%d <<<  32 = %d\n", t22u8, t22u8 <<<  t22s32);
print("%d <<<  64 = %d\n", t22u8, t22u8 <<<  t22s64);
print("%d <<< 128 = %d\n", t22u8, t22u8 <<< t22s128);
print("%d >>>   0 = %d\n", t22u8, t22u8 >>>   t22s0);
print("%d >>>   2 = %d\n", t22u8, t22u8 >>>   t22s2);
print("%d >>>   4 = %d\n", t22u8, t22u8 >>>   t22s4);
print("%d >>>   8 = %d\n", t22u8, t22u8 >>>   t22s8);
print("%d >>>  16 = %d\n", t22u8, t22u8 >>>  t22s16);
print("%d >>>  32 = %d\n", t22u8, t22u8 >>>  t22s32);
print("%d >>>  64 = %d\n", t22u8, t22u8 >>>  t22s64);
print("%d >>> 128 = %d\n", t22u8, t22u8 >>> t22s128);
print("%d <<<   0 = %d\n", t22i16, t22i16 <<<   t22s0);
print("%d <<<   2 = %d\n", t22i16, t22i16 <<<   t22s2);
print("%d <<<   4 = %d\n", t22i16, t22i16 <<<   t22s4);
print("%d <<<   8 = %d\n", t22i16, t22i16 <<<   t22s8);
print("%d <<<  16 = %d\n", t22i16, t22i16 <<<  t22s16);
print("%d <<<  32 = %d\n", t22i16, t22i16 <<<  t22s32);
print("%d <<<  64 = %d\n", t22i16, t22i16 <<<  t22s64);
print("%d <<< 128 = %d\n", t22i16, t22i16 <<< t22s128);
print("%d >>>   0 = %d\n", t22i16, t22i16 >>>   t22s0);
print("%d >>>   2 = %d\n", t22i16, t22i16 >>>   t22s2);
print("%d >>>   4 = %d\n", t22i16, t22i16 >>>   t22s4);
print("%d >>>   8 = %d\n", t22i16, t22i16 >>>   t22s8);
print("%d >>>  16 = %d\n", t22i16, t22i16 >>>  t22s16);
print("%d >>>  32 = %d\n", t22i16, t22i16 >>>  t22s32);
print("%d >>>  64 = %d\n", t22i16, t22i16 >>>  t22s64);
print("%d >>> 128 = %d\n", t22i16, t22i16 >>> t22s128);
print("%d <<<   0 = %d\n", t22u16, t22u16 <<<   t22s0);
print("%d <<<   2 = %d\n", t22u16, t22u16 <<<   t22s2);
print("%d <<<   4 = %d\n", t22u16, t22u16 <<<   t22s4);
print("%d <<<   8 = %d\n", t22u16, t22u16 <<<   t22s8);
print("%d <<<  16 = %d\n", t22u16, t22u16 <<<  t22s16);
print("%d <<<  32 = %d\n", t22u16, t22u16 <<<  t22s32);
print("%d <<<  64 = %d\n", t22u16, t22u16 <<<  t22s64);
print("%d <<< 128 = %d\n", t22u16, t22u16 <<< t22s128);
print("%d >>>   0 = %d\n", t22u16, t22u16 >>>   t22s0);
print("%d >>>   2 = %d\n", t22u16, t22u16 >>>   t22s2);
print("%d >>>   4 = %d\n", t22u16, t22u16 >>>   t22s4);
print("%d >>>   8 = %d\n", t22u16, t22u16 >>>   t22s8);
print("%d >>>  16 = %d\n", t22u16, t22u16 >>>  t22s16);
print("%d >>>  32 = %d\n", t22u16, t22u16 >>>  t22s32);
print("%d >>>  64 = %d\n", t22u16, t22u16 >>>  t22s64);
print("%d >>> 128 = %d\n", t22u16, t22u16 >>> t22s128);
print("%d <<<   0 = %d\n", t22i32, t22i32 <<<   t22s0);
print("%d <<<   2 = %d\n", t22i32, t22i32 <<<   t22s2);
print("%d <<<   4 = %d\n", t22i32, t22i32 <<<   t22s4);
print("%d <<<   8 = %d\n", t22i32, t22i32 <<<   t22s8);
print("%d <<<  16 = %d\n", t22i32, t22i32 <<<  t22s16);
print("%d <<<  32 = %d\n", t22i32, t22i32 <<<  t22s32);
print("%d <<<  64 = %d\n", t22i32, t22i32 <<<  t22s64);
print("%d <<< 128 = %d\n", t22i32, t22i32 <<< t22s128);
print("%d >>>   0 = %d\n", t22i32, t22i32 >>>   t22s0);
print("%d >>>   2 = %d\n", t22i32, t22i32 >>>   t22s2);
print("%d >>>   4 = %d\n", t22i32, t22i32 >>>   t22s4);
print("%d >>>   8 = %d\n", t22i32, t22i32 >>>   t22s8);
print("%d >>>  16 = %d\n", t22i32, t22i32 >>>  t22s16);
print("%d >>>  32 = %d\n", t22i32, t22i32 >>>  t22s32);
print("%d >>>  64 = %d\n", t22i32, t22i32 >>>  t22s64);
print("%d >>> 128 = %d\n", t22i32, t22i32 >>> t22s128);
print("%d <<<   0 = %d\n", t22u32, t22u32 <<<   t22s0);
print("%d <<<   2 = %d\n", t22u32, t22u32 <<<   t22s2);
print("%d <<<   4 = %d\n", t22u32, t22u32 <<<   t22s4);
print("%d <<<   8 = %d\n", t22u32, t22u32 <<<   t22s8);
print("%d <<<  16 = %d\n", t22u32, t22u32 <<<  t22s16);
print("%d <<<  32 = %d\n", t22u32, t22u32 <<<  t22s32);
print("%d <<<  64 = %d\n", t22u32, t22u32 <<<  t22s64);
print("%d <<< 128 = %d\n", t22u32, t22u32 <<< t22s128);
print("%d >>>   0 = %d\n", t22u32, t22u32 >>>   t22s0);
print("%d >>>   2 = %d\n", t22u32, t22u32 >>>   t22s2);
print("%d >>>   4 = %d\n", t22u32, t22u32 >>>   t22s4);
print("%d >>>   8 = %d\n", t22u32, t22u32 >>>   t22s8);
print("%d >>>  16 = %d\n", t22u32, t22u32 >>>  t22s16);
print("%d >>>  32 = %d\n", t22u32, t22u32 >>>  t22s32);
print("%d >>>  64 = %d\n", t22u32, t22u32 >>>  t22s64);
print("%d >>> 128 = %d\n", t22u32, t22u32 >>> t22s128);
print("%d <<<   0 = %d\n", t22i64, t22i64 <<<   t22s0);
print("%d <<<   2 = %d\n", t22i64, t22i64 <<<   t22s2);
print("%d <<<   4 = %d\n", t22i64, t22i64 <<<   t22s4);
print("%d <<<   8 = %d\n", t22i64, t22i64 <<<   t22s8);
print("%d <<<  16 = %d\n", t22i64, t22i64 <<<  t22s16);
print("%d <<<  32 = %d\n", t22i64, t22i64 <<<  t22s32);
print("%d <<<  64 = %d\n", t22i64, t22i64 <<<  t22s64);
print("%d <<< 128 = %d\n", t22i64, t22i64 <<< t22s128);
print("%d >>>   0 = %d\n", t22i64, t22i64 >>>   t22s0);
print("%d >>>   2 = %d\n", t22i64, t22i64 >>>   t22s2);
print("%d >>>   4 = %d\n", t22i64, t22i64 >>>   t22s4);
print("%d >>>   8 = %d\n", t22i64, t22i64 >>>   t22s8);
print("%d >>>  16 = %d\n", t22i64, t22i64 >>>  t22s16);
print("%d >>>  32 = %d\n", t22i64, t22i64 >>>  t22s32);
print("%d >>>  64 = %d\n", t22i64, t22i64 >>>  t22s64);
print("%d >>> 128 = %d\n", t22i64, t22i64 >>> t22s128);
print("%d <<<   0 = %d\n", t22u64, t22u64 <<<   t22s0);
print("%d <<<   2 = %d\n", t22u64, t22u64 <<<   t22s2);
print("%d <<<   4 = %d\n", t22u64, t22u64 <<<   t22s4);
print("%d <<<   8 = %d\n", t22u64, t22u64 <<<   t22s8);
print("%d <<<  16 = %d\n", t22u64, t22u64 <<<  t22s16);
print("%d <<<  32 = %d\n", t22u64, t22u64 <<<  t22s32);
print("%d <<<  64 = %d\n", t22u64, t22u64 <<<  t22s64);
print("%d <<< 128 = %d\n", t22u64, t22u64 <<< t22s128);
print("%d >>>   0 = %d\n", t22u64, t22u64 >>>   t22s0);
print("%d >>>   2 = %d\n", t22u64, t22u64 >>>   t22s2);
print("%d >>>   4 = %d\n", t22u64, t22u64 >>>   t22s4);
print("%d >>>   8 = %d\n", t22u64, t22u64 >>>   t22s8);
print("%d >>>  16 = %d\n", t22u64, t22u64 >>>  t22s16);
print("%d >>>  32 = %d\n", t22u64, t22u64 >>>  t22s32);
print("%d >>>  64 = %d\n", t22u64, t22u64 >>>  t22s64);
print("%d >>> 128 = %d\n", t22u64, t22u64 >>> t22s128);
print("%d <<<   0 = %d\n", t22f32, t22f32 <<<   t22s0);
print("%d <<<   2 = %d\n", t22f32, t22f32 <<<   t22s2);
print("%d <<<   4 = %d\n", t22f32, t22f32 <<<   t22s4);
print("%d <<<   8 = %d\n", t22f32, t22f32 <<<   t22s8);
print("%d <<<  16 = %d\n", t22f32, t22f32 <<<  t22s16);
print("%d <<<  32 = %d\n", t22f32, t22f32 <<<  t22s32);
print("%d <<<  64 = %d\n", t22f32, t22f32 <<<  t22s64);
print("%d <<< 128 = %d\n", t22f32, t22f32 <<< t22s128);
print("%d >>>   0 = %d\n", t22f32, t22f32 >>>   t22s0);
print("%d >>>   2 = %d\n", t22f32, t22f32 >>>   t22s2);
print("%d >>>   4 = %d\n", t22f32, t22f32 >>>   t22s4);
print("%d >>>   8 = %d\n", t22f32, t22f32 >>>   t22s8);
print("%d >>>  16 = %d\n", t22f32, t22f32 >>>  t22s16);
print("%d >>>  32 = %d\n", t22f32, t22f32 >>>  t22s32);
print("%d >>>  64 = %d\n", t22f32, t22f32 >>>  t22s64);
print("%d >>> 128 = %d\n", t22f32, t22f32 >>> t22s128);
print("%d <<<   0 = %d\n", t22f64, t22f64 <<<   t22s0);
print("%d <<<   2 = %d\n", t22f64, t22f64 <<<   t22s2);
print("%d <<<   4 = %d\n", t22f64, t22f64 <<<   t22s4);
print("%d <<<   8 = %d\n", t22f64, t22f64 <<<   t22s8);
print("%d <<<  16 = %d\n", t22f64, t22f64 <<<  t22s16);
print("%d <<<  32 = %d\n", t22f64, t22f64 <<<  t22s32);
print("%d <<<  64 = %d\n", t22f64, t22f64 <<<  t22s64);
print("%d <<< 128 = %d\n", t22f64, t22f64 <<< t22s128);
print("%d >>>   0 = %d\n", t22f64, t22f64 >>>   t22s0);
print("%d >>>   2 = %d\n", t22f64, t22f64 >>>   t22s2);
print("%d >>>   4 = %d\n", t22f64, t22f64 >>>   t22s4);
print("%d >>>   8 = %d\n", t22f64, t22f64 >>>   t22s8);
print("%d >>>  16 = %d\n", t22f64, t22f64 >>>  t22s16);
print("%d >>>  32 = %d\n", t22f64, t22f64 >>>  t22s32);
print("%d >>>  64 = %d\n", t22f64, t22f64 >>>  t22s64);
print("%d >>> 128 = %d\n", t22f64, t22f64 >>> t22s128);
print("%d <<<   0 = %d\n", t22w, t22w <<<   t22s0);
print("%d <<<   2 = %d\n", t22w, t22w <<<   t22s2);
print("%d <<<   4 = %d\n", t22w, t22w <<<   t22s4);
print("%d <<<   8 = %d\n", t22w, t22w <<<   t22s8);
print("%d <<<  16 = %d\n", t22w, t22w <<<  t22s16);
print("%d <<<  32 = %d\n", t22w, t22w <<<  t22s32);
print("%d <<<  64 = %d\n", t22w, t22w <<<  t22s64);
print("%d <<< 128 = %d\n", t22w, t22w <<< t22s128);
print("%d >>>   0 = %d\n", t22w, t22w >>>   t22s0);
print("%d >>>   2 = %d\n", t22w, t22w >>>   t22s2);
print("%d >>>   4 = %d\n", t22w, t22w >>>   t22s4);
print("%d >>>   8 = %d\n", t22w, t22w >>>   t22s8);
print("%d >>>  16 = %d\n", t22w, t22w >>>  t22s16);
print("%d >>>  32 = %d\n", t22w, t22w >>>  t22s32);
print("%d >>>  64 = %d\n", t22w, t22w >>>  t22s64);
print("%d >>> 128 = %d\n", t22w, t22w >>> t22s128);
print("%d <<<   0 = %d\n", t22f, t22f <<<   t22s0);
print("%d <<<   2 = %d\n", t22f, t22f <<<   t22s2);
print("%d <<<   4 = %d\n", t22f, t22f <<<   t22s4);
print("%d <<<   8 = %d\n", t22f, t22f <<<   t22s8);
print("%d <<<  16 = %d\n", t22f, t22f <<<  t22s16);
print("%d <<<  32 = %d\n", t22f, t22f <<<  t22s32);
print("%d <<<  64 = %d\n", t22f, t22f <<<  t22s64);
print("%d <<< 128 = %d\n", t22f, t22f <<< t22s128);
print("%d >>>   0 = %d\n", t22f, t22f >>>   t22s0);
print("%d >>>   2 = %d\n", t22f, t22f >>>   t22s2);
print("%d >>>   4 = %d\n", t22f, t22f >>>   t22s4);
print("%d >>>   8 = %d\n", t22f, t22f >>>   t22s8);
print("%d >>>  16 = %d\n", t22f, t22f >>>  t22s16);
print("%d >>>  32 = %d\n", t22f, t22f >>>  t22s32);
print("%d >>>  64 = %d\n", t22f, t22f >>>  t22s64);
print("%d >>> 128 = %d\n", t22f, t22f >>> t22s128);
print("%d <<<   0 = %d\n", t22z, t22z <<<   t22s0);
print("%d <<<   2 = %d\n", t22z, t22z <<<   t22s2);
print("%d <<<   4 = %d\n", t22z, t22z <<<   t22s4);
print("%d <<<   8 = %d\n", t22z, t22z <<<   t22s8);
print("%d <<<  16 = %d\n", t22z, t22z <<<  t22s16);
print("%d <<<  32 = %d\n", t22z, t22z <<<  t22s32);
print("%d <<<  64 = %d\n", t22z, t22z <<<  t22s64);
print("%d <<< 128 = %d\n", t22z, t22z <<< t22s128);
print("%d >>>   0 = %d\n", t22z, t22z >>>   t22s0);
print("%d >>>   2 = %d\n", t22z, t22z >>>   t22s2);
print("%d >>>   4 = %d\n", t22z, t22z >>>   t22s4);
print("%d >>>   8 = %d\n", t22z, t22z >>>   t22s8);
print("%d >>>  16 = %d\n", t22z, t22z >>>  t22s16);
print("%d >>>  32 = %d\n", t22z, t22z >>>  t22s32);
print("%d >>>  64 = %d\n", t22z, t22z >>>  t22s64);
print("%d >>> 128 = %d\n", t22z, t22z >>> t22s128);
print("%d <<<   0 = %d\n", t22x, t22x <<<   t22s0);
print("%d <<<   2 = %d\n", t22x, t22x <<<   t22s2);
print("%d <<<   4 = %d\n", t22x, t22x <<<   t22s4);
print("%d <<<   8 = %d\n", t22x, t22x <<<   t22s8);
print("%d <<<  16 = %d\n", t22x, t22x <<<  t22s16);
print("%d <<<  32 = %d\n", t22x, t22x <<<  t22s32);
print("%d <<<  64 = %d\n", t22x, t22x <<<  t22s64);
print("%d <<< 128 = %d\n", t22x, t22x <<< t22s128);
print("%d >>>   0 = %d\n", t22x, t22x >>>   t22s0);
print("%d >>>   2 = %d\n", t22x, t22x >>>   t22s2);
print("%d >>>   4 = %d\n", t22x, t22x >>>   t22s4);
print("%d >>>   8 = %d\n", t22x, t22x >>>   t22s8);
print("%d >>>  16 = %d\n", t22x, t22x >>>  t22s16);
print("%d >>>  32 = %d\n", t22x, t22x >>>  t22s32);
print("%d >>>  64 = %d\n", t22x, t22x >>>  t22s64);
print("%d >>> 128 = %d\n", t22x, t22x >>> t22s128);
print("%d <<<   0 = %d\n", t22q, t22q <<<   t22s0);
print("%d <<<   2 = %d\n", t22q, t22q <<<   t22s2);
print("%d <<<   4 = %d\n", t22q, t22q <<<   t22s4);
print("%d <<<   8 = %d\n", t22q, t22q <<<   t22s8);
print("%d <<<  16 = %d\n", t22q, t22q <<<  t22s16);
print("%d <<<  32 = %d\n", t22q, t22q <<<  t22s32);
print("%d <<<  64 = %d\n", t22q, t22q <<<  t22s64);
print("%d <<< 128 = %d\n", t22q, t22q <<< t22s128);
print("%d >>>   0 = %d\n", t22q, t22q >>>   t22s0);
print("%d >>>   2 = %d\n", t22q, t22q >>>   t22s2);
print("%d >>>   4 = %d\n", t22q, t22q >>>   t22s4);
print("%d >>>   8 = %d\n", t22q, t22q >>>   t22s8);
print("%d >>>  16 = %d\n", t22q, t22q >>>  t22s16);
print("%d >>>  32 = %d\n", t22q, t22q >>>  t22s32);
print("%d >>>  64 = %d\n", t22q, t22q >>>  t22s64);
print("%d >>> 128 = %d\n", t22q, t22q >>> t22s128);
print("%d <<<   0 = %d\n", t22r, t22r <<<   t22s0);
print("%d <<<   2 = %d\n", t22r, t22r <<<   t22s2);
print("%d <<<   4 = %d\n", t22r, t22r <<<   t22s4);
print("%d <<<   8 = %d\n", t22r, t22r <<<   t22s8);
print("%d <<<  16 = %d\n", t22r, t22r <<<  t22s16);
print("%d <<<  32 = %d\n", t22r, t22r <<<  t22s32);
print("%d <<<  64 = %d\n", t22r, t22r <<<  t22s64);
print("%d <<< 128 = %d\n", t22r, t22r <<< t22s128);
print("%d >>>   0 = %d\n", t22r, t22r >>>   t22s0);
print("%d >>>   2 = %d\n", t22r, t22r >>>   t22s2);
print("%d >>>   4 = %d\n", t22r, t22r >>>   t22s4);
print("%d >>>   8 = %d\n", t22r, t22r >>>   t22s8);
print("%d >>>  16 = %d\n", t22r, t22r >>>  t22s16);
print("%d >>>  32 = %d\n", t22r, t22r >>>  t22s32);
print("%d >>>  64 = %d\n", t22r, t22r >>>  t22s64);
print("%d >>> 128 = %d\n", t22r, t22r >>> t22s128);
print("%d <<<   0 = %d\n", t22n, t22n <<<   t22s0);
print("%d <<<   2 = %d\n", t22n, t22n <<<   t22s2);
print("%d <<<   4 = %d\n", t22n, t22n <<<   t22s4);
print("%d <<<   8 = %d\n", t22n, t22n <<<   t22s8);
print("%d <<<  16 = %d\n", t22n, t22n <<<  t22s16);
print("%d <<<  32 = %d\n", t22n, t22n <<<  t22s32);
print("%d <<<  64 = %d\n", t22n, t22n <<<  t22s64);
print("%d <<< 128 = %d\n", t22n, t22n <<< t22s128);
print("%d >>>   0 = %d\n", t22n, t22n >>>   t22s0);
print("%d >>>   2 = %d\n", t22n, t22n >>>   t22s2);
print("%d >>>   4 = %d\n", t22n, t22n >>>   t22s4);
print("%d >>>   8 = %d\n", t22n, t22n >>>   t22s8);
print("%d >>>  16 = %d\n", t22n, t22n >>>  t22s16);
print("%d >>>  32 = %d\n", t22n, t22n >>>  t22s32);
print("%d >>>  64 = %d\n", t22n, t22n >>>  t22s64);
print("%d >>> 128 = %d\n", t22n, t22n >>> t22s128);
float32_t		t22x0   = 0;
float32_t		t22x2   = 2;
float32_t		t22x4   = 4;
float32_t		t22x8   = 8;
float32_t		t22x16  = 16;
float32_t		t22x32  = 32;
float32_t		t22x64  = 64;
float32_t		t22x128 = 128;
print("%d <<<   0 = %d\n", t22i8, t22i8 <<<   t22x0);
print("%d <<<   2 = %d\n", t22i8, t22i8 <<<   t22x2);
print("%d <<<   4 = %d\n", t22i8, t22i8 <<<   t22x4);
print("%d <<<   8 = %d\n", t22i8, t22i8 <<<   t22x8);
print("%d <<<  16 = %d\n", t22i8, t22i8 <<<  t22x16);
print("%d <<<  32 = %d\n", t22i8, t22i8 <<<  t22x32);
print("%d <<<  64 = %d\n", t22i8, t22i8 <<<  t22x64);
print("%d <<< 128 = %d\n", t22i8, t22i8 <<< t22x128);
print("%d >>>   0 = %d\n", t22i8, t22i8 >>>   t22x0);
print("%d >>>   2 = %d\n", t22i8, t22i8 >>>   t22x2);
print("%d >>>   4 = %d\n", t22i8, t22i8 >>>   t22x4);
print("%d >>>   8 = %d\n", t22i8, t22i8 >>>   t22x8);
print("%d >>>  16 = %d\n", t22i8, t22i8 >>>  t22x16);
print("%d >>>  32 = %d\n", t22i8, t22i8 >>>  t22x32);
print("%d >>>  64 = %d\n", t22i8, t22i8 >>>  t22x64);
print("%d >>> 128 = %d\n", t22i8, t22i8 >>> t22x128);
print("%d <<<   0 = %d\n", t22u8, t22u8 <<<   t22x0);
print("%d <<<   2 = %d\n", t22u8, t22u8 <<<   t22x2);
print("%d <<<   4 = %d\n", t22u8, t22u8 <<<   t22x4);
print("%d <<<   8 = %d\n", t22u8, t22u8 <<<   t22x8);
print("%d <<<  16 = %d\n", t22u8, t22u8 <<<  t22x16);
print("%d <<<  32 = %d\n", t22u8, t22u8 <<<  t22x32);
print("%d <<<  64 = %d\n", t22u8, t22u8 <<<  t22x64);
print("%d <<< 128 = %d\n", t22u8, t22u8 <<< t22x128);
print("%d >>>   0 = %d\n", t22u8, t22u8 >>>   t22x0);
print("%d >>>   2 = %d\n", t22u8, t22u8 >>>   t22x2);
print("%d >>>   4 = %d\n", t22u8, t22u8 >>>   t22x4);
print("%d >>>   8 = %d\n", t22u8, t22u8 >>>   t22x8);
print("%d >>>  16 = %d\n", t22u8, t22u8 >>>  t22x16);
print("%d >>>  32 = %d\n", t22u8, t22u8 >>>  t22x32);
print("%d >>>  64 = %d\n", t22u8, t22u8 >>>  t22x64);
print("%d >>> 128 = %d\n", t22u8, t22u8 >>> t22x128);
print("%d <<<   0 = %d\n", t22i16, t22i16 <<<   t22x0);
print("%d <<<   2 = %d\n", t22i16, t22i16 <<<   t22x2);
print("%d <<<   4 = %d\n", t22i16, t22i16 <<<   t22x4);
print("%d <<<   8 = %d\n", t22i16, t22i16 <<<   t22x8);
print("%d <<<  16 = %d\n", t22i16, t22i16 <<<  t22x16);
print("%d <<<  32 = %d\n", t22i16, t22i16 <<<  t22x32);
print("%d <<<  64 = %d\n", t22i16, t22i16 <<<  t22x64);
print("%d <<< 128 = %d\n", t22i16, t22i16 <<< t22x128);
print("%d >>>   0 = %d\n", t22i16, t22i16 >>>   t22x0);
print("%d >>>   2 = %d\n", t22i16, t22i16 >>>   t22x2);
print("%d >>>   4 = %d\n", t22i16, t22i16 >>>   t22x4);
print("%d >>>   8 = %d\n", t22i16, t22i16 >>>   t22x8);
print("%d >>>  16 = %d\n", t22i16, t22i16 >>>  t22x16);
print("%d >>>  32 = %d\n", t22i16, t22i16 >>>  t22x32);
print("%d >>>  64 = %d\n", t22i16, t22i16 >>>  t22x64);
print("%d >>> 128 = %d\n", t22i16, t22i16 >>> t22x128);
print("%d <<<   0 = %d\n", t22u16, t22u16 <<<   t22x0);
print("%d <<<   2 = %d\n", t22u16, t22u16 <<<   t22x2);
print("%d <<<   4 = %d\n", t22u16, t22u16 <<<   t22x4);
print("%d <<<   8 = %d\n", t22u16, t22u16 <<<   t22x8);
print("%d <<<  16 = %d\n", t22u16, t22u16 <<<  t22x16);
print("%d <<<  32 = %d\n", t22u16, t22u16 <<<  t22x32);
print("%d <<<  64 = %d\n", t22u16, t22u16 <<<  t22x64);
print("%d <<< 128 = %d\n", t22u16, t22u16 <<< t22x128);
print("%d >>>   0 = %d\n", t22u16, t22u16 >>>   t22x0);
print("%d >>>   2 = %d\n", t22u16, t22u16 >>>   t22x2);
print("%d >>>   4 = %d\n", t22u16, t22u16 >>>   t22x4);
print("%d >>>   8 = %d\n", t22u16, t22u16 >>>   t22x8);
print("%d >>>  16 = %d\n", t22u16, t22u16 >>>  t22x16);
print("%d >>>  32 = %d\n", t22u16, t22u16 >>>  t22x32);
print("%d >>>  64 = %d\n", t22u16, t22u16 >>>  t22x64);
print("%d >>> 128 = %d\n", t22u16, t22u16 >>> t22x128);
print("%d <<<   0 = %d\n", t22i32, t22i32 <<<   t22x0);
print("%d <<<   2 = %d\n", t22i32, t22i32 <<<   t22x2);
print("%d <<<   4 = %d\n", t22i32, t22i32 <<<   t22x4);
print("%d <<<   8 = %d\n", t22i32, t22i32 <<<   t22x8);
print("%d <<<  16 = %d\n", t22i32, t22i32 <<<  t22x16);
print("%d <<<  32 = %d\n", t22i32, t22i32 <<<  t22x32);
print("%d <<<  64 = %d\n", t22i32, t22i32 <<<  t22x64);
print("%d <<< 128 = %d\n", t22i32, t22i32 <<< t22x128);
print("%d >>>   0 = %d\n", t22i32, t22i32 >>>   t22x0);
print("%d >>>   2 = %d\n", t22i32, t22i32 >>>   t22x2);
print("%d >>>   4 = %d\n", t22i32, t22i32 >>>   t22x4);
print("%d >>>   8 = %d\n", t22i32, t22i32 >>>   t22x8);
print("%d >>>  16 = %d\n", t22i32, t22i32 >>>  t22x16);
print("%d >>>  32 = %d\n", t22i32, t22i32 >>>  t22x32);
print("%d >>>  64 = %d\n", t22i32, t22i32 >>>  t22x64);
print("%d >>> 128 = %d\n", t22i32, t22i32 >>> t22x128);
print("%d <<<   0 = %d\n", t22u32, t22u32 <<<   t22x0);
print("%d <<<   2 = %d\n", t22u32, t22u32 <<<   t22x2);
print("%d <<<   4 = %d\n", t22u32, t22u32 <<<   t22x4);
print("%d <<<   8 = %d\n", t22u32, t22u32 <<<   t22x8);
print("%d <<<  16 = %d\n", t22u32, t22u32 <<<  t22x16);
print("%d <<<  32 = %d\n", t22u32, t22u32 <<<  t22x32);
print("%d <<<  64 = %d\n", t22u32, t22u32 <<<  t22x64);
print("%d <<< 128 = %d\n", t22u32, t22u32 <<< t22x128);
print("%d >>>   0 = %d\n", t22u32, t22u32 >>>   t22x0);
print("%d >>>   2 = %d\n", t22u32, t22u32 >>>   t22x2);
print("%d >>>   4 = %d\n", t22u32, t22u32 >>>   t22x4);
print("%d >>>   8 = %d\n", t22u32, t22u32 >>>   t22x8);
print("%d >>>  16 = %d\n", t22u32, t22u32 >>>  t22x16);
print("%d >>>  32 = %d\n", t22u32, t22u32 >>>  t22x32);
print("%d >>>  64 = %d\n", t22u32, t22u32 >>>  t22x64);
print("%d >>> 128 = %d\n", t22u32, t22u32 >>> t22x128);
print("%d <<<   0 = %d\n", t22i64, t22i64 <<<   t22x0);
print("%d <<<   2 = %d\n", t22i64, t22i64 <<<   t22x2);
print("%d <<<   4 = %d\n", t22i64, t22i64 <<<   t22x4);
print("%d <<<   8 = %d\n", t22i64, t22i64 <<<   t22x8);
print("%d <<<  16 = %d\n", t22i64, t22i64 <<<  t22x16);
print("%d <<<  32 = %d\n", t22i64, t22i64 <<<  t22x32);
print("%d <<<  64 = %d\n", t22i64, t22i64 <<<  t22x64);
print("%d <<< 128 = %d\n", t22i64, t22i64 <<< t22x128);
print("%d >>>   0 = %d\n", t22i64, t22i64 >>>   t22x0);
print("%d >>>   2 = %d\n", t22i64, t22i64 >>>   t22x2);
print("%d >>>   4 = %d\n", t22i64, t22i64 >>>   t22x4);
print("%d >>>   8 = %d\n", t22i64, t22i64 >>>   t22x8);
print("%d >>>  16 = %d\n", t22i64, t22i64 >>>  t22x16);
print("%d >>>  32 = %d\n", t22i64, t22i64 >>>  t22x32);
print("%d >>>  64 = %d\n", t22i64, t22i64 >>>  t22x64);
print("%d >>> 128 = %d\n", t22i64, t22i64 >>> t22x128);
print("%d <<<   0 = %d\n", t22u64, t22u64 <<<   t22x0);
print("%d <<<   2 = %d\n", t22u64, t22u64 <<<   t22x2);
print("%d <<<   4 = %d\n", t22u64, t22u64 <<<   t22x4);
print("%d <<<   8 = %d\n", t22u64, t22u64 <<<   t22x8);
print("%d <<<  16 = %d\n", t22u64, t22u64 <<<  t22x16);
print("%d <<<  32 = %d\n", t22u64, t22u64 <<<  t22x32);
print("%d <<<  64 = %d\n", t22u64, t22u64 <<<  t22x64);
print("%d <<< 128 = %d\n", t22u64, t22u64 <<< t22x128);
print("%d >>>   0 = %d\n", t22u64, t22u64 >>>   t22x0);
print("%d >>>   2 = %d\n", t22u64, t22u64 >>>   t22x2);
print("%d >>>   4 = %d\n", t22u64, t22u64 >>>   t22x4);
print("%d >>>   8 = %d\n", t22u64, t22u64 >>>   t22x8);
print("%d >>>  16 = %d\n", t22u64, t22u64 >>>  t22x16);
print("%d >>>  32 = %d\n", t22u64, t22u64 >>>  t22x32);
print("%d >>>  64 = %d\n", t22u64, t22u64 >>>  t22x64);
print("%d >>> 128 = %d\n", t22u64, t22u64 >>> t22x128);
print("%d <<<   0 = %d\n", t22f32, t22f32 <<<   t22x0);
print("%d <<<   2 = %d\n", t22f32, t22f32 <<<   t22x2);
print("%d <<<   4 = %d\n", t22f32, t22f32 <<<   t22x4);
print("%d <<<   8 = %d\n", t22f32, t22f32 <<<   t22x8);
print("%d <<<  16 = %d\n", t22f32, t22f32 <<<  t22x16);
print("%d <<<  32 = %d\n", t22f32, t22f32 <<<  t22x32);
print("%d <<<  64 = %d\n", t22f32, t22f32 <<<  t22x64);
print("%d <<< 128 = %d\n", t22f32, t22f32 <<< t22x128);
print("%d >>>   0 = %d\n", t22f32, t22f32 >>>   t22x0);
print("%d >>>   2 = %d\n", t22f32, t22f32 >>>   t22x2);
print("%d >>>   4 = %d\n", t22f32, t22f32 >>>   t22x4);
print("%d >>>   8 = %d\n", t22f32, t22f32 >>>   t22x8);
print("%d >>>  16 = %d\n", t22f32, t22f32 >>>  t22x16);
print("%d >>>  32 = %d\n", t22f32, t22f32 >>>  t22x32);
print("%d >>>  64 = %d\n", t22f32, t22f32 >>>  t22x64);
print("%d >>> 128 = %d\n", t22f32, t22f32 >>> t22x128);
print("%d <<<   0 = %d\n", t22f64, t22f64 <<<   t22x0);
print("%d <<<   2 = %d\n", t22f64, t22f64 <<<   t22x2);
print("%d <<<   4 = %d\n", t22f64, t22f64 <<<   t22x4);
print("%d <<<   8 = %d\n", t22f64, t22f64 <<<   t22x8);
print("%d <<<  16 = %d\n", t22f64, t22f64 <<<  t22x16);
print("%d <<<  32 = %d\n", t22f64, t22f64 <<<  t22x32);
print("%d <<<  64 = %d\n", t22f64, t22f64 <<<  t22x64);
print("%d <<< 128 = %d\n", t22f64, t22f64 <<< t22x128);
print("%d >>>   0 = %d\n", t22f64, t22f64 >>>   t22x0);
print("%d >>>   2 = %d\n", t22f64, t22f64 >>>   t22x2);
print("%d >>>   4 = %d\n", t22f64, t22f64 >>>   t22x4);
print("%d >>>   8 = %d\n", t22f64, t22f64 >>>   t22x8);
print("%d >>>  16 = %d\n", t22f64, t22f64 >>>  t22x16);
print("%d >>>  32 = %d\n", t22f64, t22f64 >>>  t22x32);
print("%d >>>  64 = %d\n", t22f64, t22f64 >>>  t22x64);
print("%d >>> 128 = %d\n", t22f64, t22f64 >>> t22x128);
print("%d <<<   0 = %d\n", t22w, t22w <<<   t22x0);
print("%d <<<   2 = %d\n", t22w, t22w <<<   t22x2);
print("%d <<<   4 = %d\n", t22w, t22w <<<   t22x4);
print("%d <<<   8 = %d\n", t22w, t22w <<<   t22x8);
print("%d <<<  16 = %d\n", t22w, t22w <<<  t22x16);
print("%d <<<  32 = %d\n", t22w, t22w <<<  t22x32);
print("%d <<<  64 = %d\n", t22w, t22w <<<  t22x64);
print("%d <<< 128 = %d\n", t22w, t22w <<< t22x128);
print("%d >>>   0 = %d\n", t22w, t22w >>>   t22x0);
print("%d >>>   2 = %d\n", t22w, t22w >>>   t22x2);
print("%d >>>   4 = %d\n", t22w, t22w >>>   t22x4);
print("%d >>>   8 = %d\n", t22w, t22w >>>   t22x8);
print("%d >>>  16 = %d\n", t22w, t22w >>>  t22x16);
print("%d >>>  32 = %d\n", t22w, t22w >>>  t22x32);
print("%d >>>  64 = %d\n", t22w, t22w >>>  t22x64);
print("%d >>> 128 = %d\n", t22w, t22w >>> t22x128);
print("%d <<<   0 = %d\n", t22f, t22f <<<   t22x0);
print("%d <<<   2 = %d\n", t22f, t22f <<<   t22x2);
print("%d <<<   4 = %d\n", t22f, t22f <<<   t22x4);
print("%d <<<   8 = %d\n", t22f, t22f <<<   t22x8);
print("%d <<<  16 = %d\n", t22f, t22f <<<  t22x16);
print("%d <<<  32 = %d\n", t22f, t22f <<<  t22x32);
print("%d <<<  64 = %d\n", t22f, t22f <<<  t22x64);
print("%d <<< 128 = %d\n", t22f, t22f <<< t22x128);
print("%d >>>   0 = %d\n", t22f, t22f >>>   t22x0);
print("%d >>>   2 = %d\n", t22f, t22f >>>   t22x2);
print("%d >>>   4 = %d\n", t22f, t22f >>>   t22x4);
print("%d >>>   8 = %d\n", t22f, t22f >>>   t22x8);
print("%d >>>  16 = %d\n", t22f, t22f >>>  t22x16);
print("%d >>>  32 = %d\n", t22f, t22f >>>  t22x32);
print("%d >>>  64 = %d\n", t22f, t22f >>>  t22x64);
print("%d >>> 128 = %d\n", t22f, t22f >>> t22x128);
print("%d <<<   0 = %d\n", t22z, t22z <<<   t22x0);
print("%d <<<   2 = %d\n", t22z, t22z <<<   t22x2);
print("%d <<<   4 = %d\n", t22z, t22z <<<   t22x4);
print("%d <<<   8 = %d\n", t22z, t22z <<<   t22x8);
print("%d <<<  16 = %d\n", t22z, t22z <<<  t22x16);
print("%d <<<  32 = %d\n", t22z, t22z <<<  t22x32);
print("%d <<<  64 = %d\n", t22z, t22z <<<  t22x64);
print("%d <<< 128 = %d\n", t22z, t22z <<< t22x128);
print("%d >>>   0 = %d\n", t22z, t22z >>>   t22x0);
print("%d >>>   2 = %d\n", t22z, t22z >>>   t22x2);
print("%d >>>   4 = %d\n", t22z, t22z >>>   t22x4);
print("%d >>>   8 = %d\n", t22z, t22z >>>   t22x8);
print("%d >>>  16 = %d\n", t22z, t22z >>>  t22x16);
print("%d >>>  32 = %d\n", t22z, t22z >>>  t22x32);
print("%d >>>  64 = %d\n", t22z, t22z >>>  t22x64);
print("%d >>> 128 = %d\n", t22z, t22z >>> t22x128);
print("%d <<<   0 = %d\n", t22x, t22x <<<   t22x0);
print("%d <<<   2 = %d\n", t22x, t22x <<<   t22x2);
print("%d <<<   4 = %d\n", t22x, t22x <<<   t22x4);
print("%d <<<   8 = %d\n", t22x, t22x <<<   t22x8);
print("%d <<<  16 = %d\n", t22x, t22x <<<  t22x16);
print("%d <<<  32 = %d\n", t22x, t22x <<<  t22x32);
print("%d <<<  64 = %d\n", t22x, t22x <<<  t22x64);
print("%d <<< 128 = %d\n", t22x, t22x <<< t22x128);
print("%d >>>   0 = %d\n", t22x, t22x >>>   t22x0);
print("%d >>>   2 = %d\n", t22x, t22x >>>   t22x2);
print("%d >>>   4 = %d\n", t22x, t22x >>>   t22x4);
print("%d >>>   8 = %d\n", t22x, t22x >>>   t22x8);
print("%d >>>  16 = %d\n", t22x, t22x >>>  t22x16);
print("%d >>>  32 = %d\n", t22x, t22x >>>  t22x32);
print("%d >>>  64 = %d\n", t22x, t22x >>>  t22x64);
print("%d >>> 128 = %d\n", t22x, t22x >>> t22x128);
print("%d <<<   0 = %d\n", t22q, t22q <<<   t22x0);
print("%d <<<   2 = %d\n", t22q, t22q <<<   t22x2);
print("%d <<<   4 = %d\n", t22q, t22q <<<   t22x4);
print("%d <<<   8 = %d\n", t22q, t22q <<<   t22x8);
print("%d <<<  16 = %d\n", t22q, t22q <<<  t22x16);
print("%d <<<  32 = %d\n", t22q, t22q <<<  t22x32);
print("%d <<<  64 = %d\n", t22q, t22q <<<  t22x64);
print("%d <<< 128 = %d\n", t22q, t22q <<< t22x128);
print("%d >>>   0 = %d\n", t22q, t22q >>>   t22x0);
print("%d >>>   2 = %d\n", t22q, t22q >>>   t22x2);
print("%d >>>   4 = %d\n", t22q, t22q >>>   t22x4);
print("%d >>>   8 = %d\n", t22q, t22q >>>   t22x8);
print("%d >>>  16 = %d\n", t22q, t22q >>>  t22x16);
print("%d >>>  32 = %d\n", t22q, t22q >>>  t22x32);
print("%d >>>  64 = %d\n", t22q, t22q >>>  t22x64);
print("%d >>> 128 = %d\n", t22q, t22q >>> t22x128);
print("%d <<<   0 = %d\n", t22r, t22r <<<   t22x0);
print("%d <<<   2 = %d\n", t22r, t22r <<<   t22x2);
print("%d <<<   4 = %d\n", t22r, t22r <<<   t22x4);
print("%d <<<   8 = %d\n", t22r, t22r <<<   t22x8);
print("%d <<<  16 = %d\n", t22r, t22r <<<  t22x16);
print("%d <<<  32 = %d\n", t22r, t22r <<<  t22x32);
print("%d <<<  64 = %d\n", t22r, t22r <<<  t22x64);
print("%d <<< 128 = %d\n", t22r, t22r <<< t22x128);
print("%d >>>   0 = %d\n", t22r, t22r >>>   t22x0);
print("%d >>>   2 = %d\n", t22r, t22r >>>   t22x2);
print("%d >>>   4 = %d\n", t22r, t22r >>>   t22x4);
print("%d >>>   8 = %d\n", t22r, t22r >>>   t22x8);
print("%d >>>  16 = %d\n", t22r, t22r >>>  t22x16);
print("%d >>>  32 = %d\n", t22r, t22r >>>  t22x32);
print("%d >>>  64 = %d\n", t22r, t22r >>>  t22x64);
print("%d >>> 128 = %d\n", t22r, t22r >>> t22x128);
print("%d <<<   0 = %d\n", t22n, t22n <<<   t22x0);
print("%d <<<   2 = %d\n", t22n, t22n <<<   t22x2);
print("%d <<<   4 = %d\n", t22n, t22n <<<   t22x4);
print("%d <<<   8 = %d\n", t22n, t22n <<<   t22x8);
print("%d <<<  16 = %d\n", t22n, t22n <<<  t22x16);
print("%d <<<  32 = %d\n", t22n, t22n <<<  t22x32);
print("%d <<<  64 = %d\n", t22n, t22n <<<  t22x64);
print("%d <<< 128 = %d\n", t22n, t22n <<< t22x128);
print("%d >>>   0 = %d\n", t22n, t22n >>>   t22x0);
print("%d >>>   2 = %d\n", t22n, t22n >>>   t22x2);
print("%d >>>   4 = %d\n", t22n, t22n >>>   t22x4);
print("%d >>>   8 = %d\n", t22n, t22n >>>   t22x8);
print("%d >>>  16 = %d\n", t22n, t22n >>>  t22x16);
print("%d >>>  32 = %d\n", t22n, t22n >>>  t22x32);
print("%d >>>  64 = %d\n", t22n, t22n >>>  t22x64);
print("%d >>> 128 = %d\n", t22n, t22n >>> t22x128);
float64_t		t22d0   = 0;
float64_t		t22d2   = 2;
float64_t		t22d4   = 4;
float64_t		t22d8   = 8;
float64_t		t22d16  = 16;
float64_t		t22d32  = 32;
float64_t		t22d64  = 64;
float64_t		t22d128 = 128;
print("%d <<<   0 = %d\n", t22i8, t22i8 <<<   t22d0);
print("%d <<<   2 = %d\n", t22i8, t22i8 <<<   t22d2);
print("%d <<<   4 = %d\n", t22i8, t22i8 <<<   t22d4);
print("%d <<<   8 = %d\n", t22i8, t22i8 <<<   t22d8);
print("%d <<<  16 = %d\n", t22i8, t22i8 <<<  t22d16);
print("%d <<<  32 = %d\n", t22i8, t22i8 <<<  t22d32);
print("%d <<<  64 = %d\n", t22i8, t22i8 <<<  t22d64);
print("%d <<< 128 = %d\n", t22i8, t22i8 <<< t22d128);
print("%d >>>   0 = %d\n", t22i8, t22i8 >>>   t22d0);
print("%d >>>   2 = %d\n", t22i8, t22i8 >>>   t22d2);
print("%d >>>   4 = %d\n", t22i8, t22i8 >>>   t22d4);
print("%d >>>   8 = %d\n", t22i8, t22i8 >>>   t22d8);
print("%d >>>  16 = %d\n", t22i8, t22i8 >>>  t22d16);
print("%d >>>  32 = %d\n", t22i8, t22i8 >>>  t22d32);
print("%d >>>  64 = %d\n", t22i8, t22i8 >>>  t22d64);
print("%d >>> 128 = %d\n", t22i8, t22i8 >>> t22d128);
print("%d <<<   0 = %d\n", t22u8, t22u8 <<<   t22d0);
print("%d <<<   2 = %d\n", t22u8, t22u8 <<<   t22d2);
print("%d <<<   4 = %d\n", t22u8, t22u8 <<<   t22d4);
print("%d <<<   8 = %d\n", t22u8, t22u8 <<<   t22d8);
print("%d <<<  16 = %d\n", t22u8, t22u8 <<<  t22d16);
print("%d <<<  32 = %d\n", t22u8, t22u8 <<<  t22d32);
print("%d <<<  64 = %d\n", t22u8, t22u8 <<<  t22d64);
print("%d <<< 128 = %d\n", t22u8, t22u8 <<< t22d128);
print("%d >>>   0 = %d\n", t22u8, t22u8 >>>   t22d0);
print("%d >>>   2 = %d\n", t22u8, t22u8 >>>   t22d2);
print("%d >>>   4 = %d\n", t22u8, t22u8 >>>   t22d4);
print("%d >>>   8 = %d\n", t22u8, t22u8 >>>   t22d8);
print("%d >>>  16 = %d\n", t22u8, t22u8 >>>  t22d16);
print("%d >>>  32 = %d\n", t22u8, t22u8 >>>  t22d32);
print("%d >>>  64 = %d\n", t22u8, t22u8 >>>  t22d64);
print("%d >>> 128 = %d\n", t22u8, t22u8 >>> t22d128);
print("%d <<<   0 = %d\n", t22i16, t22i16 <<<   t22d0);
print("%d <<<   2 = %d\n", t22i16, t22i16 <<<   t22d2);
print("%d <<<   4 = %d\n", t22i16, t22i16 <<<   t22d4);
print("%d <<<   8 = %d\n", t22i16, t22i16 <<<   t22d8);
print("%d <<<  16 = %d\n", t22i16, t22i16 <<<  t22d16);
print("%d <<<  32 = %d\n", t22i16, t22i16 <<<  t22d32);
print("%d <<<  64 = %d\n", t22i16, t22i16 <<<  t22d64);
print("%d <<< 128 = %d\n", t22i16, t22i16 <<< t22d128);
print("%d >>>   0 = %d\n", t22i16, t22i16 >>>   t22d0);
print("%d >>>   2 = %d\n", t22i16, t22i16 >>>   t22d2);
print("%d >>>   4 = %d\n", t22i16, t22i16 >>>   t22d4);
print("%d >>>   8 = %d\n", t22i16, t22i16 >>>   t22d8);
print("%d >>>  16 = %d\n", t22i16, t22i16 >>>  t22d16);
print("%d >>>  32 = %d\n", t22i16, t22i16 >>>  t22d32);
print("%d >>>  64 = %d\n", t22i16, t22i16 >>>  t22d64);
print("%d >>> 128 = %d\n", t22i16, t22i16 >>> t22d128);
print("%d <<<   0 = %d\n", t22u16, t22u16 <<<   t22d0);
print("%d <<<   2 = %d\n", t22u16, t22u16 <<<   t22d2);
print("%d <<<   4 = %d\n", t22u16, t22u16 <<<   t22d4);
print("%d <<<   8 = %d\n", t22u16, t22u16 <<<   t22d8);
print("%d <<<  16 = %d\n", t22u16, t22u16 <<<  t22d16);
print("%d <<<  32 = %d\n", t22u16, t22u16 <<<  t22d32);
print("%d <<<  64 = %d\n", t22u16, t22u16 <<<  t22d64);
print("%d <<< 128 = %d\n", t22u16, t22u16 <<< t22d128);
print("%d >>>   0 = %d\n", t22u16, t22u16 >>>   t22d0);
print("%d >>>   2 = %d\n", t22u16, t22u16 >>>   t22d2);
print("%d >>>   4 = %d\n", t22u16, t22u16 >>>   t22d4);
print("%d >>>   8 = %d\n", t22u16, t22u16 >>>   t22d8);
print("%d >>>  16 = %d\n", t22u16, t22u16 >>>  t22d16);
print("%d >>>  32 = %d\n", t22u16, t22u16 >>>  t22d32);
print("%d >>>  64 = %d\n", t22u16, t22u16 >>>  t22d64);
print("%d >>> 128 = %d\n", t22u16, t22u16 >>> t22d128);
print("%d <<<   0 = %d\n", t22i32, t22i32 <<<   t22d0);
print("%d <<<   2 = %d\n", t22i32, t22i32 <<<   t22d2);
print("%d <<<   4 = %d\n", t22i32, t22i32 <<<   t22d4);
print("%d <<<   8 = %d\n", t22i32, t22i32 <<<   t22d8);
print("%d <<<  16 = %d\n", t22i32, t22i32 <<<  t22d16);
print("%d <<<  32 = %d\n", t22i32, t22i32 <<<  t22d32);
print("%d <<<  64 = %d\n", t22i32, t22i32 <<<  t22d64);
print("%d <<< 128 = %d\n", t22i32, t22i32 <<< t22d128);
print("%d >>>   0 = %d\n", t22i32, t22i32 >>>   t22d0);
print("%d >>>   2 = %d\n", t22i32, t22i32 >>>   t22d2);
print("%d >>>   4 = %d\n", t22i32, t22i32 >>>   t22d4);
print("%d >>>   8 = %d\n", t22i32, t22i32 >>>   t22d8);
print("%d >>>  16 = %d\n", t22i32, t22i32 >>>  t22d16);
print("%d >>>  32 = %d\n", t22i32, t22i32 >>>  t22d32);
print("%d >>>  64 = %d\n", t22i32, t22i32 >>>  t22d64);
print("%d >>> 128 = %d\n", t22i32, t22i32 >>> t22d128);
print("%d <<<   0 = %d\n", t22u32, t22u32 <<<   t22d0);
print("%d <<<   2 = %d\n", t22u32, t22u32 <<<   t22d2);
print("%d <<<   4 = %d\n", t22u32, t22u32 <<<   t22d4);
print("%d <<<   8 = %d\n", t22u32, t22u32 <<<   t22d8);
print("%d <<<  16 = %d\n", t22u32, t22u32 <<<  t22d16);
print("%d <<<  32 = %d\n", t22u32, t22u32 <<<  t22d32);
print("%d <<<  64 = %d\n", t22u32, t22u32 <<<  t22d64);
print("%d <<< 128 = %d\n", t22u32, t22u32 <<< t22d128);
print("%d >>>   0 = %d\n", t22u32, t22u32 >>>   t22d0);
print("%d >>>   2 = %d\n", t22u32, t22u32 >>>   t22d2);
print("%d >>>   4 = %d\n", t22u32, t22u32 >>>   t22d4);
print("%d >>>   8 = %d\n", t22u32, t22u32 >>>   t22d8);
print("%d >>>  16 = %d\n", t22u32, t22u32 >>>  t22d16);
print("%d >>>  32 = %d\n", t22u32, t22u32 >>>  t22d32);
print("%d >>>  64 = %d\n", t22u32, t22u32 >>>  t22d64);
print("%d >>> 128 = %d\n", t22u32, t22u32 >>> t22d128);
print("%d <<<   0 = %d\n", t22i64, t22i64 <<<   t22d0);
print("%d <<<   2 = %d\n", t22i64, t22i64 <<<   t22d2);
print("%d <<<   4 = %d\n", t22i64, t22i64 <<<   t22d4);
print("%d <<<   8 = %d\n", t22i64, t22i64 <<<   t22d8);
print("%d <<<  16 = %d\n", t22i64, t22i64 <<<  t22d16);
print("%d <<<  32 = %d\n", t22i64, t22i64 <<<  t22d32);
print("%d <<<  64 = %d\n", t22i64, t22i64 <<<  t22d64);
print("%d <<< 128 = %d\n", t22i64, t22i64 <<< t22d128);
print("%d >>>   0 = %d\n", t22i64, t22i64 >>>   t22d0);
print("%d >>>   2 = %d\n", t22i64, t22i64 >>>   t22d2);
print("%d >>>   4 = %d\n", t22i64, t22i64 >>>   t22d4);
print("%d >>>   8 = %d\n", t22i64, t22i64 >>>   t22d8);
print("%d >>>  16 = %d\n", t22i64, t22i64 >>>  t22d16);
print("%d >>>  32 = %d\n", t22i64, t22i64 >>>  t22d32);
print("%d >>>  64 = %d\n", t22i64, t22i64 >>>  t22d64);
print("%d >>> 128 = %d\n", t22i64, t22i64 >>> t22d128);
print("%d <<<   0 = %d\n", t22u64, t22u64 <<<   t22d0);
print("%d <<<   2 = %d\n", t22u64, t22u64 <<<   t22d2);
print("%d <<<   4 = %d\n", t22u64, t22u64 <<<   t22d4);
print("%d <<<   8 = %d\n", t22u64, t22u64 <<<   t22d8);
print("%d <<<  16 = %d\n", t22u64, t22u64 <<<  t22d16);
print("%d <<<  32 = %d\n", t22u64, t22u64 <<<  t22d32);
print("%d <<<  64 = %d\n", t22u64, t22u64 <<<  t22d64);
print("%d <<< 128 = %d\n", t22u64, t22u64 <<< t22d128);
print("%d >>>   0 = %d\n", t22u64, t22u64 >>>   t22d0);
print("%d >>>   2 = %d\n", t22u64, t22u64 >>>   t22d2);
print("%d >>>   4 = %d\n", t22u64, t22u64 >>>   t22d4);
print("%d >>>   8 = %d\n", t22u64, t22u64 >>>   t22d8);
print("%d >>>  16 = %d\n", t22u64, t22u64 >>>  t22d16);
print("%d >>>  32 = %d\n", t22u64, t22u64 >>>  t22d32);
print("%d >>>  64 = %d\n", t22u64, t22u64 >>>  t22d64);
print("%d >>> 128 = %d\n", t22u64, t22u64 >>> t22d128);
print("%d <<<   0 = %d\n", t22d32, t22d32 <<<   t22d0);
print("%d <<<   2 = %d\n", t22d32, t22d32 <<<   t22d2);
print("%d <<<   4 = %d\n", t22d32, t22d32 <<<   t22d4);
print("%d <<<   8 = %d\n", t22d32, t22d32 <<<   t22d8);
print("%d <<<  16 = %d\n", t22d32, t22d32 <<<  t22d16);
print("%d <<<  32 = %d\n", t22d32, t22d32 <<<  t22d32);
print("%d <<<  64 = %d\n", t22d32, t22d32 <<<  t22d64);
print("%d <<< 128 = %d\n", t22d32, t22d32 <<< t22d128);
print("%d >>>   0 = %d\n", t22d32, t22d32 >>>   t22d0);
print("%d >>>   2 = %d\n", t22d32, t22d32 >>>   t22d2);
print("%d >>>   4 = %d\n", t22d32, t22d32 >>>   t22d4);
print("%d >>>   8 = %d\n", t22d32, t22d32 >>>   t22d8);
print("%d >>>  16 = %d\n", t22d32, t22d32 >>>  t22d16);
print("%d >>>  32 = %d\n", t22d32, t22d32 >>>  t22d32);
print("%d >>>  64 = %d\n", t22d32, t22d32 >>>  t22d64);
print("%d >>> 128 = %d\n", t22d32, t22d32 >>> t22d128);
print("%d <<<   0 = %d\n", t22d64, t22d64 <<<   t22d0);
print("%d <<<   2 = %d\n", t22d64, t22d64 <<<   t22d2);
print("%d <<<   4 = %d\n", t22d64, t22d64 <<<   t22d4);
print("%d <<<   8 = %d\n", t22d64, t22d64 <<<   t22d8);
print("%d <<<  16 = %d\n", t22d64, t22d64 <<<  t22d16);
print("%d <<<  32 = %d\n", t22d64, t22d64 <<<  t22d32);
print("%d <<<  64 = %d\n", t22d64, t22d64 <<<  t22d64);
print("%d <<< 128 = %d\n", t22d64, t22d64 <<< t22d128);
print("%d >>>   0 = %d\n", t22d64, t22d64 >>>   t22d0);
print("%d >>>   2 = %d\n", t22d64, t22d64 >>>   t22d2);
print("%d >>>   4 = %d\n", t22d64, t22d64 >>>   t22d4);
print("%d >>>   8 = %d\n", t22d64, t22d64 >>>   t22d8);
print("%d >>>  16 = %d\n", t22d64, t22d64 >>>  t22d16);
print("%d >>>  32 = %d\n", t22d64, t22d64 >>>  t22d32);
print("%d >>>  64 = %d\n", t22d64, t22d64 >>>  t22d64);
print("%d >>> 128 = %d\n", t22d64, t22d64 >>> t22d128);
print("%d <<<   0 = %d\n", t22w, t22w <<<   t22d0);
print("%d <<<   2 = %d\n", t22w, t22w <<<   t22d2);
print("%d <<<   4 = %d\n", t22w, t22w <<<   t22d4);
print("%d <<<   8 = %d\n", t22w, t22w <<<   t22d8);
print("%d <<<  16 = %d\n", t22w, t22w <<<  t22d16);
print("%d <<<  32 = %d\n", t22w, t22w <<<  t22d32);
print("%d <<<  64 = %d\n", t22w, t22w <<<  t22d64);
print("%d <<< 128 = %d\n", t22w, t22w <<< t22d128);
print("%d >>>   0 = %d\n", t22w, t22w >>>   t22d0);
print("%d >>>   2 = %d\n", t22w, t22w >>>   t22d2);
print("%d >>>   4 = %d\n", t22w, t22w >>>   t22d4);
print("%d >>>   8 = %d\n", t22w, t22w >>>   t22d8);
print("%d >>>  16 = %d\n", t22w, t22w >>>  t22d16);
print("%d >>>  32 = %d\n", t22w, t22w >>>  t22d32);
print("%d >>>  64 = %d\n", t22w, t22w >>>  t22d64);
print("%d >>> 128 = %d\n", t22w, t22w >>> t22d128);
print("%d <<<   0 = %d\n", t22f, t22f <<<   t22d0);
print("%d <<<   2 = %d\n", t22f, t22f <<<   t22d2);
print("%d <<<   4 = %d\n", t22f, t22f <<<   t22d4);
print("%d <<<   8 = %d\n", t22f, t22f <<<   t22d8);
print("%d <<<  16 = %d\n", t22f, t22f <<<  t22d16);
print("%d <<<  32 = %d\n", t22f, t22f <<<  t22d32);
print("%d <<<  64 = %d\n", t22f, t22f <<<  t22d64);
print("%d <<< 128 = %d\n", t22f, t22f <<< t22d128);
print("%d >>>   0 = %d\n", t22f, t22f >>>   t22d0);
print("%d >>>   2 = %d\n", t22f, t22f >>>   t22d2);
print("%d >>>   4 = %d\n", t22f, t22f >>>   t22d4);
print("%d >>>   8 = %d\n", t22f, t22f >>>   t22d8);
print("%d >>>  16 = %d\n", t22f, t22f >>>  t22d16);
print("%d >>>  32 = %d\n", t22f, t22f >>>  t22d32);
print("%d >>>  64 = %d\n", t22f, t22f >>>  t22d64);
print("%d >>> 128 = %d\n", t22f, t22f >>> t22d128);
print("%d <<<   0 = %d\n", t22z, t22z <<<   t22d0);
print("%d <<<   2 = %d\n", t22z, t22z <<<   t22d2);
print("%d <<<   4 = %d\n", t22z, t22z <<<   t22d4);
print("%d <<<   8 = %d\n", t22z, t22z <<<   t22d8);
print("%d <<<  16 = %d\n", t22z, t22z <<<  t22d16);
print("%d <<<  32 = %d\n", t22z, t22z <<<  t22d32);
print("%d <<<  64 = %d\n", t22z, t22z <<<  t22d64);
print("%d <<< 128 = %d\n", t22z, t22z <<< t22d128);
print("%d >>>   0 = %d\n", t22z, t22z >>>   t22d0);
print("%d >>>   2 = %d\n", t22z, t22z >>>   t22d2);
print("%d >>>   4 = %d\n", t22z, t22z >>>   t22d4);
print("%d >>>   8 = %d\n", t22z, t22z >>>   t22d8);
print("%d >>>  16 = %d\n", t22z, t22z >>>  t22d16);
print("%d >>>  32 = %d\n", t22z, t22z >>>  t22d32);
print("%d >>>  64 = %d\n", t22z, t22z >>>  t22d64);
print("%d >>> 128 = %d\n", t22z, t22z >>> t22d128);
print("%d <<<   0 = %d\n", t22x, t22x <<<   t22d0);
print("%d <<<   2 = %d\n", t22x, t22x <<<   t22d2);
print("%d <<<   4 = %d\n", t22x, t22x <<<   t22d4);
print("%d <<<   8 = %d\n", t22x, t22x <<<   t22d8);
print("%d <<<  16 = %d\n", t22x, t22x <<<  t22d16);
print("%d <<<  32 = %d\n", t22x, t22x <<<  t22d32);
print("%d <<<  64 = %d\n", t22x, t22x <<<  t22d64);
print("%d <<< 128 = %d\n", t22x, t22x <<< t22d128);
print("%d >>>   0 = %d\n", t22x, t22x >>>   t22d0);
print("%d >>>   2 = %d\n", t22x, t22x >>>   t22d2);
print("%d >>>   4 = %d\n", t22x, t22x >>>   t22d4);
print("%d >>>   8 = %d\n", t22x, t22x >>>   t22d8);
print("%d >>>  16 = %d\n", t22x, t22x >>>  t22d16);
print("%d >>>  32 = %d\n", t22x, t22x >>>  t22d32);
print("%d >>>  64 = %d\n", t22x, t22x >>>  t22d64);
print("%d >>> 128 = %d\n", t22x, t22x >>> t22d128);
print("%d <<<   0 = %d\n", t22q, t22q <<<   t22d0);
print("%d <<<   2 = %d\n", t22q, t22q <<<   t22d2);
print("%d <<<   4 = %d\n", t22q, t22q <<<   t22d4);
print("%d <<<   8 = %d\n", t22q, t22q <<<   t22d8);
print("%d <<<  16 = %d\n", t22q, t22q <<<  t22d16);
print("%d <<<  32 = %d\n", t22q, t22q <<<  t22d32);
print("%d <<<  64 = %d\n", t22q, t22q <<<  t22d64);
print("%d <<< 128 = %d\n", t22q, t22q <<< t22d128);
print("%d >>>   0 = %d\n", t22q, t22q >>>   t22d0);
print("%d >>>   2 = %d\n", t22q, t22q >>>   t22d2);
print("%d >>>   4 = %d\n", t22q, t22q >>>   t22d4);
print("%d >>>   8 = %d\n", t22q, t22q >>>   t22d8);
print("%d >>>  16 = %d\n", t22q, t22q >>>  t22d16);
print("%d >>>  32 = %d\n", t22q, t22q >>>  t22d32);
print("%d >>>  64 = %d\n", t22q, t22q >>>  t22d64);
print("%d >>> 128 = %d\n", t22q, t22q >>> t22d128);
print("%d <<<   0 = %d\n", t22r, t22r <<<   t22d0);
print("%d <<<   2 = %d\n", t22r, t22r <<<   t22d2);
print("%d <<<   4 = %d\n", t22r, t22r <<<   t22d4);
print("%d <<<   8 = %d\n", t22r, t22r <<<   t22d8);
print("%d <<<  16 = %d\n", t22r, t22r <<<  t22d16);
print("%d <<<  32 = %d\n", t22r, t22r <<<  t22d32);
print("%d <<<  64 = %d\n", t22r, t22r <<<  t22d64);
print("%d <<< 128 = %d\n", t22r, t22r <<< t22d128);
print("%d >>>   0 = %d\n", t22r, t22r >>>   t22d0);
print("%d >>>   2 = %d\n", t22r, t22r >>>   t22d2);
print("%d >>>   4 = %d\n", t22r, t22r >>>   t22d4);
print("%d >>>   8 = %d\n", t22r, t22r >>>   t22d8);
print("%d >>>  16 = %d\n", t22r, t22r >>>  t22d16);
print("%d >>>  32 = %d\n", t22r, t22r >>>  t22d32);
print("%d >>>  64 = %d\n", t22r, t22r >>>  t22d64);
print("%d >>> 128 = %d\n", t22r, t22r >>> t22d128);
print("%d <<<   0 = %d\n", t22n, t22n <<<   t22d0);
print("%d <<<   2 = %d\n", t22n, t22n <<<   t22d2);
print("%d <<<   4 = %d\n", t22n, t22n <<<   t22d4);
print("%d <<<   8 = %d\n", t22n, t22n <<<   t22d8);
print("%d <<<  16 = %d\n", t22n, t22n <<<  t22d16);
print("%d <<<  32 = %d\n", t22n, t22n <<<  t22d32);
print("%d <<<  64 = %d\n", t22n, t22n <<<  t22d64);
print("%d <<< 128 = %d\n", t22n, t22n <<< t22d128);
print("%d >>>   0 = %d\n", t22n, t22n >>>   t22d0);
print("%d >>>   2 = %d\n", t22n, t22n >>>   t22d2);
print("%d >>>   4 = %d\n", t22n, t22n >>>   t22d4);
print("%d >>>   8 = %d\n", t22n, t22n >>>   t22d8);
print("%d >>>  16 = %d\n", t22n, t22n >>>  t22d16);
print("%d >>>  32 = %d\n", t22n, t22n >>>  t22d32);
print("%d >>>  64 = %d\n", t22n, t22n >>>  t22d64);
print("%d >>> 128 = %d\n", t22n, t22n >>> t22d128);
auto		t22a0   = 0;
auto		t22a2   = 2;
auto		t22a4   = 4;
auto		t22a8   = 8;
auto		t22a16  = 16;
auto		t22a32  = 32;
auto		t22a64  = 64;
auto		t22a128 = 128;
print("%d <<<   0 = %d\n", t22i8, t22i8 <<<   t22a0);
print("%d <<<   2 = %d\n", t22i8, t22i8 <<<   t22a2);
print("%d <<<   4 = %d\n", t22i8, t22i8 <<<   t22a4);
print("%d <<<   8 = %d\n", t22i8, t22i8 <<<   t22a8);
print("%d <<<  16 = %d\n", t22i8, t22i8 <<<  t22a16);
print("%d <<<  32 = %d\n", t22i8, t22i8 <<<  t22a32);
print("%d <<<  64 = %d\n", t22i8, t22i8 <<<  t22a64);
print("%d <<< 128 = %d\n", t22i8, t22i8 <<< t22a128);
print("%d >>>   0 = %d\n", t22i8, t22i8 >>>   t22a0);
print("%d >>>   2 = %d\n", t22i8, t22i8 >>>   t22a2);
print("%d >>>   4 = %d\n", t22i8, t22i8 >>>   t22a4);
print("%d >>>   8 = %d\n", t22i8, t22i8 >>>   t22a8);
print("%d >>>  16 = %d\n", t22i8, t22i8 >>>  t22a16);
print("%d >>>  32 = %d\n", t22i8, t22i8 >>>  t22a32);
print("%d >>>  64 = %d\n", t22i8, t22i8 >>>  t22a64);
print("%d >>> 128 = %d\n", t22i8, t22i8 >>> t22a128);
print("%d <<<   0 = %d\n", t22u8, t22u8 <<<   t22a0);
print("%d <<<   2 = %d\n", t22u8, t22u8 <<<   t22a2);
print("%d <<<   4 = %d\n", t22u8, t22u8 <<<   t22a4);
print("%d <<<   8 = %d\n", t22u8, t22u8 <<<   t22a8);
print("%d <<<  16 = %d\n", t22u8, t22u8 <<<  t22a16);
print("%d <<<  32 = %d\n", t22u8, t22u8 <<<  t22a32);
print("%d <<<  64 = %d\n", t22u8, t22u8 <<<  t22a64);
print("%d <<< 128 = %d\n", t22u8, t22u8 <<< t22a128);
print("%d >>>   0 = %d\n", t22u8, t22u8 >>>   t22a0);
print("%d >>>   2 = %d\n", t22u8, t22u8 >>>   t22a2);
print("%d >>>   4 = %d\n", t22u8, t22u8 >>>   t22a4);
print("%d >>>   8 = %d\n", t22u8, t22u8 >>>   t22a8);
print("%d >>>  16 = %d\n", t22u8, t22u8 >>>  t22a16);
print("%d >>>  32 = %d\n", t22u8, t22u8 >>>  t22a32);
print("%d >>>  64 = %d\n", t22u8, t22u8 >>>  t22a64);
print("%d >>> 128 = %d\n", t22u8, t22u8 >>> t22a128);
print("%d <<<   0 = %d\n", t22i16, t22i16 <<<   t22a0);
print("%d <<<   2 = %d\n", t22i16, t22i16 <<<   t22a2);
print("%d <<<   4 = %d\n", t22i16, t22i16 <<<   t22a4);
print("%d <<<   8 = %d\n", t22i16, t22i16 <<<   t22a8);
print("%d <<<  16 = %d\n", t22i16, t22i16 <<<  t22a16);
print("%d <<<  32 = %d\n", t22i16, t22i16 <<<  t22a32);
print("%d <<<  64 = %d\n", t22i16, t22i16 <<<  t22a64);
print("%d <<< 128 = %d\n", t22i16, t22i16 <<< t22a128);
print("%d >>>   0 = %d\n", t22i16, t22i16 >>>   t22a0);
print("%d >>>   2 = %d\n", t22i16, t22i16 >>>   t22a2);
print("%d >>>   4 = %d\n", t22i16, t22i16 >>>   t22a4);
print("%d >>>   8 = %d\n", t22i16, t22i16 >>>   t22a8);
print("%d >>>  16 = %d\n", t22i16, t22i16 >>>  t22a16);
print("%d >>>  32 = %d\n", t22i16, t22i16 >>>  t22a32);
print("%d >>>  64 = %d\n", t22i16, t22i16 >>>  t22a64);
print("%d >>> 128 = %d\n", t22i16, t22i16 >>> t22a128);
print("%d <<<   0 = %d\n", t22u16, t22u16 <<<   t22a0);
print("%d <<<   2 = %d\n", t22u16, t22u16 <<<   t22a2);
print("%d <<<   4 = %d\n", t22u16, t22u16 <<<   t22a4);
print("%d <<<   8 = %d\n", t22u16, t22u16 <<<   t22a8);
print("%d <<<  16 = %d\n", t22u16, t22u16 <<<  t22a16);
print("%d <<<  32 = %d\n", t22u16, t22u16 <<<  t22a32);
print("%d <<<  64 = %d\n", t22u16, t22u16 <<<  t22a64);
print("%d <<< 128 = %d\n", t22u16, t22u16 <<< t22a128);
print("%d >>>   0 = %d\n", t22u16, t22u16 >>>   t22a0);
print("%d >>>   2 = %d\n", t22u16, t22u16 >>>   t22a2);
print("%d >>>   4 = %d\n", t22u16, t22u16 >>>   t22a4);
print("%d >>>   8 = %d\n", t22u16, t22u16 >>>   t22a8);
print("%d >>>  16 = %d\n", t22u16, t22u16 >>>  t22a16);
print("%d >>>  32 = %d\n", t22u16, t22u16 >>>  t22a32);
print("%d >>>  64 = %d\n", t22u16, t22u16 >>>  t22a64);
print("%d >>> 128 = %d\n", t22u16, t22u16 >>> t22a128);
print("%d <<<   0 = %d\n", t22i32, t22i32 <<<   t22a0);
print("%d <<<   2 = %d\n", t22i32, t22i32 <<<   t22a2);
print("%d <<<   4 = %d\n", t22i32, t22i32 <<<   t22a4);
print("%d <<<   8 = %d\n", t22i32, t22i32 <<<   t22a8);
print("%d <<<  16 = %d\n", t22i32, t22i32 <<<  t22a16);
print("%d <<<  32 = %d\n", t22i32, t22i32 <<<  t22a32);
print("%d <<<  64 = %d\n", t22i32, t22i32 <<<  t22a64);
print("%d <<< 128 = %d\n", t22i32, t22i32 <<< t22a128);
print("%d >>>   0 = %d\n", t22i32, t22i32 >>>   t22a0);
print("%d >>>   2 = %d\n", t22i32, t22i32 >>>   t22a2);
print("%d >>>   4 = %d\n", t22i32, t22i32 >>>   t22a4);
print("%d >>>   8 = %d\n", t22i32, t22i32 >>>   t22a8);
print("%d >>>  16 = %d\n", t22i32, t22i32 >>>  t22a16);
print("%d >>>  32 = %d\n", t22i32, t22i32 >>>  t22a32);
print("%d >>>  64 = %d\n", t22i32, t22i32 >>>  t22a64);
print("%d >>> 128 = %d\n", t22i32, t22i32 >>> t22a128);
print("%d <<<   0 = %d\n", t22u32, t22u32 <<<   t22a0);
print("%d <<<   2 = %d\n", t22u32, t22u32 <<<   t22a2);
print("%d <<<   4 = %d\n", t22u32, t22u32 <<<   t22a4);
print("%d <<<   8 = %d\n", t22u32, t22u32 <<<   t22a8);
print("%d <<<  16 = %d\n", t22u32, t22u32 <<<  t22a16);
print("%d <<<  32 = %d\n", t22u32, t22u32 <<<  t22a32);
print("%d <<<  64 = %d\n", t22u32, t22u32 <<<  t22a64);
print("%d <<< 128 = %d\n", t22u32, t22u32 <<< t22a128);
print("%d >>>   0 = %d\n", t22u32, t22u32 >>>   t22a0);
print("%d >>>   2 = %d\n", t22u32, t22u32 >>>   t22a2);
print("%d >>>   4 = %d\n", t22u32, t22u32 >>>   t22a4);
print("%d >>>   8 = %d\n", t22u32, t22u32 >>>   t22a8);
print("%d >>>  16 = %d\n", t22u32, t22u32 >>>  t22a16);
print("%d >>>  32 = %d\n", t22u32, t22u32 >>>  t22a32);
print("%d >>>  64 = %d\n", t22u32, t22u32 >>>  t22a64);
print("%d >>> 128 = %d\n", t22u32, t22u32 >>> t22a128);
print("%d <<<   0 = %d\n", t22i64, t22i64 <<<   t22a0);
print("%d <<<   2 = %d\n", t22i64, t22i64 <<<   t22a2);
print("%d <<<   4 = %d\n", t22i64, t22i64 <<<   t22a4);
print("%d <<<   8 = %d\n", t22i64, t22i64 <<<   t22a8);
print("%d <<<  16 = %d\n", t22i64, t22i64 <<<  t22a16);
print("%d <<<  32 = %d\n", t22i64, t22i64 <<<  t22a32);
print("%d <<<  64 = %d\n", t22i64, t22i64 <<<  t22a64);
print("%d <<< 128 = %d\n", t22i64, t22i64 <<< t22a128);
print("%d >>>   0 = %d\n", t22i64, t22i64 >>>   t22a0);
print("%d >>>   2 = %d\n", t22i64, t22i64 >>>   t22a2);
print("%d >>>   4 = %d\n", t22i64, t22i64 >>>   t22a4);
print("%d >>>   8 = %d\n", t22i64, t22i64 >>>   t22a8);
print("%d >>>  16 = %d\n", t22i64, t22i64 >>>  t22a16);
print("%d >>>  32 = %d\n", t22i64, t22i64 >>>  t22a32);
print("%d >>>  64 = %d\n", t22i64, t22i64 >>>  t22a64);
print("%d >>> 128 = %d\n", t22i64, t22i64 >>> t22a128);
print("%d <<<   0 = %d\n", t22u64, t22u64 <<<   t22a0);
print("%d <<<   2 = %d\n", t22u64, t22u64 <<<   t22a2);
print("%d <<<   4 = %d\n", t22u64, t22u64 <<<   t22a4);
print("%d <<<   8 = %d\n", t22u64, t22u64 <<<   t22a8);
print("%d <<<  16 = %d\n", t22u64, t22u64 <<<  t22a16);
print("%d <<<  32 = %d\n", t22u64, t22u64 <<<  t22a32);
print("%d <<<  64 = %d\n", t22u64, t22u64 <<<  t22a64);
print("%d <<< 128 = %d\n", t22u64, t22u64 <<< t22a128);
print("%d >>>   0 = %d\n", t22u64, t22u64 >>>   t22a0);
print("%d >>>   2 = %d\n", t22u64, t22u64 >>>   t22a2);
print("%d >>>   4 = %d\n", t22u64, t22u64 >>>   t22a4);
print("%d >>>   8 = %d\n", t22u64, t22u64 >>>   t22a8);
print("%d >>>  16 = %d\n", t22u64, t22u64 >>>  t22a16);
print("%d >>>  32 = %d\n", t22u64, t22u64 >>>  t22a32);
print("%d >>>  64 = %d\n", t22u64, t22u64 >>>  t22a64);
print("%d >>> 128 = %d\n", t22u64, t22u64 >>> t22a128);
print("%d <<<   0 = %d\n", t22a32, t22a32 <<<   t22a0);
print("%d <<<   2 = %d\n", t22a32, t22a32 <<<   t22a2);
print("%d <<<   4 = %d\n", t22a32, t22a32 <<<   t22a4);
print("%d <<<   8 = %d\n", t22a32, t22a32 <<<   t22a8);
print("%d <<<  16 = %d\n", t22a32, t22a32 <<<  t22a16);
print("%d <<<  32 = %d\n", t22a32, t22a32 <<<  t22a32);
print("%d <<<  64 = %d\n", t22a32, t22a32 <<<  t22a64);
print("%d <<< 128 = %d\n", t22a32, t22a32 <<< t22a128);
print("%d >>>   0 = %d\n", t22a32, t22a32 >>>   t22a0);
print("%d >>>   2 = %d\n", t22a32, t22a32 >>>   t22a2);
print("%d >>>   4 = %d\n", t22a32, t22a32 >>>   t22a4);
print("%d >>>   8 = %d\n", t22a32, t22a32 >>>   t22a8);
print("%d >>>  16 = %d\n", t22a32, t22a32 >>>  t22a16);
print("%d >>>  32 = %d\n", t22a32, t22a32 >>>  t22a32);
print("%d >>>  64 = %d\n", t22a32, t22a32 >>>  t22a64);
print("%d >>> 128 = %d\n", t22a32, t22a32 >>> t22a128);
print("%d <<<   0 = %d\n", t22a64, t22a64 <<<   t22a0);
print("%d <<<   2 = %d\n", t22a64, t22a64 <<<   t22a2);
print("%d <<<   4 = %d\n", t22a64, t22a64 <<<   t22a4);
print("%d <<<   8 = %d\n", t22a64, t22a64 <<<   t22a8);
print("%d <<<  16 = %d\n", t22a64, t22a64 <<<  t22a16);
print("%d <<<  32 = %d\n", t22a64, t22a64 <<<  t22a32);
print("%d <<<  64 = %d\n", t22a64, t22a64 <<<  t22a64);
print("%d <<< 128 = %d\n", t22a64, t22a64 <<< t22a128);
print("%d >>>   0 = %d\n", t22a64, t22a64 >>>   t22a0);
print("%d >>>   2 = %d\n", t22a64, t22a64 >>>   t22a2);
print("%d >>>   4 = %d\n", t22a64, t22a64 >>>   t22a4);
print("%d >>>   8 = %d\n", t22a64, t22a64 >>>   t22a8);
print("%d >>>  16 = %d\n", t22a64, t22a64 >>>  t22a16);
print("%d >>>  32 = %d\n", t22a64, t22a64 >>>  t22a32);
print("%d >>>  64 = %d\n", t22a64, t22a64 >>>  t22a64);
print("%d >>> 128 = %d\n", t22a64, t22a64 >>> t22a128);
print("%d <<<   0 = %d\n", t22w, t22w <<<   t22a0);
print("%d <<<   2 = %d\n", t22w, t22w <<<   t22a2);
print("%d <<<   4 = %d\n", t22w, t22w <<<   t22a4);
print("%d <<<   8 = %d\n", t22w, t22w <<<   t22a8);
print("%d <<<  16 = %d\n", t22w, t22w <<<  t22a16);
print("%d <<<  32 = %d\n", t22w, t22w <<<  t22a32);
print("%d <<<  64 = %d\n", t22w, t22w <<<  t22a64);
print("%d <<< 128 = %d\n", t22w, t22w <<< t22a128);
print("%d >>>   0 = %d\n", t22w, t22w >>>   t22a0);
print("%d >>>   2 = %d\n", t22w, t22w >>>   t22a2);
print("%d >>>   4 = %d\n", t22w, t22w >>>   t22a4);
print("%d >>>   8 = %d\n", t22w, t22w >>>   t22a8);
print("%d >>>  16 = %d\n", t22w, t22w >>>  t22a16);
print("%d >>>  32 = %d\n", t22w, t22w >>>  t22a32);
print("%d >>>  64 = %d\n", t22w, t22w >>>  t22a64);
print("%d >>> 128 = %d\n", t22w, t22w >>> t22a128);
print("%d <<<   0 = %d\n", t22f, t22f <<<   t22a0);
print("%d <<<   2 = %d\n", t22f, t22f <<<   t22a2);
print("%d <<<   4 = %d\n", t22f, t22f <<<   t22a4);
print("%d <<<   8 = %d\n", t22f, t22f <<<   t22a8);
print("%d <<<  16 = %d\n", t22f, t22f <<<  t22a16);
print("%d <<<  32 = %d\n", t22f, t22f <<<  t22a32);
print("%d <<<  64 = %d\n", t22f, t22f <<<  t22a64);
print("%d <<< 128 = %d\n", t22f, t22f <<< t22a128);
print("%d >>>   0 = %d\n", t22f, t22f >>>   t22a0);
print("%d >>>   2 = %d\n", t22f, t22f >>>   t22a2);
print("%d >>>   4 = %d\n", t22f, t22f >>>   t22a4);
print("%d >>>   8 = %d\n", t22f, t22f >>>   t22a8);
print("%d >>>  16 = %d\n", t22f, t22f >>>  t22a16);
print("%d >>>  32 = %d\n", t22f, t22f >>>  t22a32);
print("%d >>>  64 = %d\n", t22f, t22f >>>  t22a64);
print("%d >>> 128 = %d\n", t22f, t22f >>> t22a128);
print("%d <<<   0 = %d\n", t22z, t22z <<<   t22a0);
print("%d <<<   2 = %d\n", t22z, t22z <<<   t22a2);
print("%d <<<   4 = %d\n", t22z, t22z <<<   t22a4);
print("%d <<<   8 = %d\n", t22z, t22z <<<   t22a8);
print("%d <<<  16 = %d\n", t22z, t22z <<<  t22a16);
print("%d <<<  32 = %d\n", t22z, t22z <<<  t22a32);
print("%d <<<  64 = %d\n", t22z, t22z <<<  t22a64);
print("%d <<< 128 = %d\n", t22z, t22z <<< t22a128);
print("%d >>>   0 = %d\n", t22z, t22z >>>   t22a0);
print("%d >>>   2 = %d\n", t22z, t22z >>>   t22a2);
print("%d >>>   4 = %d\n", t22z, t22z >>>   t22a4);
print("%d >>>   8 = %d\n", t22z, t22z >>>   t22a8);
print("%d >>>  16 = %d\n", t22z, t22z >>>  t22a16);
print("%d >>>  32 = %d\n", t22z, t22z >>>  t22a32);
print("%d >>>  64 = %d\n", t22z, t22z >>>  t22a64);
print("%d >>> 128 = %d\n", t22z, t22z >>> t22a128);
print("%d <<<   0 = %d\n", t22x, t22x <<<   t22a0);
print("%d <<<   2 = %d\n", t22x, t22x <<<   t22a2);
print("%d <<<   4 = %d\n", t22x, t22x <<<   t22a4);
print("%d <<<   8 = %d\n", t22x, t22x <<<   t22a8);
print("%d <<<  16 = %d\n", t22x, t22x <<<  t22a16);
print("%d <<<  32 = %d\n", t22x, t22x <<<  t22a32);
print("%d <<<  64 = %d\n", t22x, t22x <<<  t22a64);
print("%d <<< 128 = %d\n", t22x, t22x <<< t22a128);
print("%d >>>   0 = %d\n", t22x, t22x >>>   t22a0);
print("%d >>>   2 = %d\n", t22x, t22x >>>   t22a2);
print("%d >>>   4 = %d\n", t22x, t22x >>>   t22a4);
print("%d >>>   8 = %d\n", t22x, t22x >>>   t22a8);
print("%d >>>  16 = %d\n", t22x, t22x >>>  t22a16);
print("%d >>>  32 = %d\n", t22x, t22x >>>  t22a32);
print("%d >>>  64 = %d\n", t22x, t22x >>>  t22a64);
print("%d >>> 128 = %d\n", t22x, t22x >>> t22a128);
print("%d <<<   0 = %d\n", t22q, t22q <<<   t22a0);
print("%d <<<   2 = %d\n", t22q, t22q <<<   t22a2);
print("%d <<<   4 = %d\n", t22q, t22q <<<   t22a4);
print("%d <<<   8 = %d\n", t22q, t22q <<<   t22a8);
print("%d <<<  16 = %d\n", t22q, t22q <<<  t22a16);
print("%d <<<  32 = %d\n", t22q, t22q <<<  t22a32);
print("%d <<<  64 = %d\n", t22q, t22q <<<  t22a64);
print("%d <<< 128 = %d\n", t22q, t22q <<< t22a128);
print("%d >>>   0 = %d\n", t22q, t22q >>>   t22a0);
print("%d >>>   2 = %d\n", t22q, t22q >>>   t22a2);
print("%d >>>   4 = %d\n", t22q, t22q >>>   t22a4);
print("%d >>>   8 = %d\n", t22q, t22q >>>   t22a8);
print("%d >>>  16 = %d\n", t22q, t22q >>>  t22a16);
print("%d >>>  32 = %d\n", t22q, t22q >>>  t22a32);
print("%d >>>  64 = %d\n", t22q, t22q >>>  t22a64);
print("%d >>> 128 = %d\n", t22q, t22q >>> t22a128);
print("%d <<<   0 = %d\n", t22r, t22r <<<   t22a0);
print("%d <<<   2 = %d\n", t22r, t22r <<<   t22a2);
print("%d <<<   4 = %d\n", t22r, t22r <<<   t22a4);
print("%d <<<   8 = %d\n", t22r, t22r <<<   t22a8);
print("%d <<<  16 = %d\n", t22r, t22r <<<  t22a16);
print("%d <<<  32 = %d\n", t22r, t22r <<<  t22a32);
print("%d <<<  64 = %d\n", t22r, t22r <<<  t22a64);
print("%d <<< 128 = %d\n", t22r, t22r <<< t22a128);
print("%d >>>   0 = %d\n", t22r, t22r >>>   t22a0);
print("%d >>>   2 = %d\n", t22r, t22r >>>   t22a2);
print("%d >>>   4 = %d\n", t22r, t22r >>>   t22a4);
print("%d >>>   8 = %d\n", t22r, t22r >>>   t22a8);
print("%d >>>  16 = %d\n", t22r, t22r >>>  t22a16);
print("%d >>>  32 = %d\n", t22r, t22r >>>  t22a32);
print("%d >>>  64 = %d\n", t22r, t22r >>>  t22a64);
print("%d >>> 128 = %d\n", t22r, t22r >>> t22a128);
print("%d <<<   0 = %d\n", t22n, t22n <<<   t22a0);
print("%d <<<   2 = %d\n", t22n, t22n <<<   t22a2);
print("%d <<<   4 = %d\n", t22n, t22n <<<   t22a4);
print("%d <<<   8 = %d\n", t22n, t22n <<<   t22a8);
print("%d <<<  16 = %d\n", t22n, t22n <<<  t22a16);
print("%d <<<  32 = %d\n", t22n, t22n <<<  t22a32);
print("%d <<<  64 = %d\n", t22n, t22n <<<  t22a64);
print("%d <<< 128 = %d\n", t22n, t22n <<< t22a128);
print("%d >>>   0 = %d\n", t22n, t22n >>>   t22a0);
print("%d >>>   2 = %d\n", t22n, t22n >>>   t22a2);
print("%d >>>   4 = %d\n", t22n, t22n >>>   t22a4);
print("%d >>>   8 = %d\n", t22n, t22n >>>   t22a8);
print("%d >>>  16 = %d\n", t22n, t22n >>>  t22a16);
print("%d >>>  32 = %d\n", t22n, t22n >>>  t22a32);
print("%d >>>  64 = %d\n", t22n, t22n >>>  t22a64);
print("%d >>> 128 = %d\n", t22n, t22n >>> t22a128);

int8_t		t23i8  = -8;
uint8_t		t23u8  =  8;
int16_t		t23i16 = -16;
uint16_t	t23u16 =  16;
int32_t		t23i32 = -32;
uint32_t	t23u32 =  32;
int64_t		t23i64 = -64;
uint64_t	t23u64 =  64;
float32_t	t23f32 = -32.0;
float64_t	t23f64 =  64.0;
auto		t23w   =  42;
auto		t23f   = -42.25;
auto		t23z   =  0x800000000000000000000000000000000;
auto		t23x   =  1/2;
auto		t23q   =  0x800000000000000000000000000000000/3;
auto		t23r   = -1.25L;
auto		t23n   =  null;
print("%d %% %d = %d\n", t23i8, -8,     t23i8 % -8);
print("%d %% %d = %d\n", t23i8,  8,     t23i8 %  8);
print("%d %% %d = %d\n", t23i8, 32.0,   t23i8 % 32.0);
print("%d %% %d = %d\n", t23i8, 0x800000000000000000000000000000000, t23i8 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23i8, 1/2,    t23i8 % 1/2);
print("%d %% %d = %d\n", t23i8, 0x800000000000000000000000000000000/3, t23i8 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23i8, 1.25L,  t23i8 %  1.25L);
print("%d %% %d = %d\n", t23i8, t23i8,  t23i8 % t23i8);
print("%d %% %d = %d\n", t23i8, t23u8,  t23i8 % t23u8);
print("%d %% %d = %d\n", t23i8, t23i16, t23i8 % t23i16);
print("%d %% %d = %d\n", t23i8, t23u16, t23i8 % t23u16);
print("%d %% %d = %d\n", t23i8, t23i32, t23i8 % t23i32);
print("%d %% %d = %d\n", t23i8, t23u32, t23i8 % t23u32);
print("%d %% %d = %d\n", t23i8, t23i64, t23i8 % t23i64);
print("%d %% %d = %d\n", t23i8, t23u64, t23i8 % t23u64);
print("%d %% %d = %d\n", t23i8, t23f32, t23i8 % t23f32);
print("%d %% %d = %d\n", t23i8, t23f64, t23i8 % t23f64);
print("%d %% %d = %d\n", t23i8, t23w,   t23i8 % t23w);
print("%d %% %d = %d\n", t23i8, t23f,   t23i8 % t23f);
print("%d %% %d = %d\n", t23i8, t23z,   t23i8 % t23z);
print("%d %% %d = %d\n", t23i8, t23x,   t23i8 % t23x);
print("%d %% %d = %d\n", t23i8, t23q,   t23i8 % t23q);
print("%d %% %d = %d\n", t23i8, t23r,   t23i8 % t23r);
print("%d %% %d = %d\n", t23u8, -8,     t23u8 % -8);
print("%d %% %d = %d\n", t23u8,  8,     t23u8 %  8);
print("%d %% %d = %d\n", t23u8, 32.0,   t23u8 % 32.0);
print("%d %% %d = %d\n", t23u8, 0x800000000000000000000000000000000, t23u8 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23u8, 1/2,    t23u8 % 1/2);
print("%d %% %d = %d\n", t23u8, 0x800000000000000000000000000000000/3, t23u8 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23u8, 1.25L,  t23u8 %  1.25L);
print("%d %% %d = %d\n", t23u8, t23i8,  t23u8 % t23i8);
print("%d %% %d = %d\n", t23u8, t23u8,  t23u8 % t23u8);
print("%d %% %d = %d\n", t23u8, t23i16, t23u8 % t23i16);
print("%d %% %d = %d\n", t23u8, t23u16, t23u8 % t23u16);
print("%d %% %d = %d\n", t23u8, t23i32, t23u8 % t23i32);
print("%d %% %d = %d\n", t23u8, t23u32, t23u8 % t23u32);
print("%d %% %d = %d\n", t23u8, t23i64, t23u8 % t23i64);
print("%d %% %d = %d\n", t23u8, t23u64, t23u8 % t23u64);
print("%d %% %d = %d\n", t23u8, t23f32, t23u8 % t23f32);
print("%d %% %d = %d\n", t23u8, t23f64, t23u8 % t23f64);
print("%d %% %d = %d\n", t23u8, t23w,   t23u8 % t23w);
print("%d %% %d = %d\n", t23u8, t23f,   t23u8 % t23f);
print("%d %% %d = %d\n", t23u8, t23z,   t23u8 % t23z);
print("%d %% %d = %d\n", t23u8, t23x,   t23u8 % t23x);
print("%d %% %d = %d\n", t23u8, t23q,   t23u8 % t23q);
print("%d %% %d = %d\n", t23u8, t23r,   t23u8 % t23r);
print("%d %% %d = %d\n", t23i16, -8,     t23i16 % -8);
print("%d %% %d = %d\n", t23i16,  8,     t23i16 %  8);
print("%d %% %d = %d\n", t23i16, 32.0,   t23i16 % 32.0);
print("%d %% %d = %d\n", t23i16, 0x800000000000000000000000000000000, t23i16 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23i16, 1/2,    t23i16 % 1/2);
print("%d %% %d = %d\n", t23i16, 0x800000000000000000000000000000000/3, t23i16 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23i16, 1.25L,  t23i16 %  1.25L);
print("%d %% %d = %d\n", t23i16, t23i8,  t23i16 % t23i8);
print("%d %% %d = %d\n", t23i16, t23u8,  t23i16 % t23u8);
print("%d %% %d = %d\n", t23i16, t23i16, t23i16 % t23i16);
print("%d %% %d = %d\n", t23i16, t23u16, t23i16 % t23u16);
print("%d %% %d = %d\n", t23i16, t23i32, t23i16 % t23i32);
print("%d %% %d = %d\n", t23i16, t23u32, t23i16 % t23u32);
print("%d %% %d = %d\n", t23i16, t23i64, t23i16 % t23i64);
print("%d %% %d = %d\n", t23i16, t23u64, t23i16 % t23u64);
print("%d %% %d = %d\n", t23i16, t23f32, t23i16 % t23f32);
print("%d %% %d = %d\n", t23i16, t23f64, t23i16 % t23f64);
print("%d %% %d = %d\n", t23i16, t23w,   t23i16 % t23w);
print("%d %% %d = %d\n", t23i16, t23f,   t23i16 % t23f);
print("%d %% %d = %d\n", t23i16, t23z,   t23i16 % t23z);
print("%d %% %d = %d\n", t23i16, t23x,   t23i16 % t23x);
print("%d %% %d = %d\n", t23i16, t23q,   t23i16 % t23q);
print("%d %% %d = %d\n", t23i16, t23r,   t23i16 % t23r);
print("%d %% %d = %d\n", t23u16, -8,     t23u16 % -8);
print("%d %% %d = %d\n", t23u16,  8,     t23u16 %  8);
print("%d %% %d = %d\n", t23u16, 32.0,   t23u16 % 32.0);
print("%d %% %d = %d\n", t23u16, 0x800000000000000000000000000000000, t23u16 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23u16, 1/2,    t23u16 % 1/2);
print("%d %% %d = %d\n", t23u16, 0x800000000000000000000000000000000/3, t23u16 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23u16, 1.25L,  t23u16 %  1.25L);
print("%d %% %d = %d\n", t23u16, t23i8,  t23u16 % t23i8);
print("%d %% %d = %d\n", t23u16, t23u8,  t23u16 % t23u8);
print("%d %% %d = %d\n", t23u16, t23i16, t23u16 % t23i16);
print("%d %% %d = %d\n", t23u16, t23u16, t23u16 % t23u16);
print("%d %% %d = %d\n", t23u16, t23i32, t23u16 % t23i32);
print("%d %% %d = %d\n", t23u16, t23u32, t23u16 % t23u32);
print("%d %% %d = %d\n", t23u16, t23i64, t23u16 % t23i64);
print("%d %% %d = %d\n", t23u16, t23u64, t23u16 % t23u64);
print("%d %% %d = %d\n", t23u16, t23f32, t23u16 % t23f32);
print("%d %% %d = %d\n", t23u16, t23f64, t23u16 % t23f64);
print("%d %% %d = %d\n", t23u16, t23w,   t23u16 % t23w);
print("%d %% %d = %d\n", t23u16, t23f,   t23u16 % t23f);
print("%d %% %d = %d\n", t23u16, t23z,   t23u16 % t23z);
print("%d %% %d = %d\n", t23u16, t23x,   t23u16 % t23x);
print("%d %% %d = %d\n", t23u16, t23q,   t23u16 % t23q);
print("%d %% %d = %d\n", t23u16, t23r,   t23u16 % t23r);
print("%d %% %d = %d\n", t23i32, -8,     t23i32 % -8);
print("%d %% %d = %d\n", t23i32,  8,     t23i32 %  8);
print("%d %% %d = %d\n", t23i32, 32.0,   t23i32 % 32.0);
print("%d %% %d = %d\n", t23i32, 0x800000000000000000000000000000000, t23i32 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23i32, 1/2,    t23i32 % 1/2);
print("%d %% %d = %d\n", t23i32, 0x800000000000000000000000000000000/3, t23i32 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23i32, 1.25L,  t23i32 %  1.25L);
print("%d %% %d = %d\n", t23i32, t23i8,  t23i32 % t23i8);
print("%d %% %d = %d\n", t23i32, t23u8,  t23i32 % t23u8);
print("%d %% %d = %d\n", t23i32, t23i16, t23i32 % t23i16);
print("%d %% %d = %d\n", t23i32, t23u16, t23i32 % t23u16);
print("%d %% %d = %d\n", t23i32, t23i32, t23i32 % t23i32);
print("%d %% %d = %d\n", t23i32, t23u32, t23i32 % t23u32);
print("%d %% %d = %d\n", t23i32, t23i64, t23i32 % t23i64);
print("%d %% %d = %d\n", t23i32, t23u64, t23i32 % t23u64);
print("%d %% %d = %d\n", t23i32, t23f32, t23i32 % t23f32);
print("%d %% %d = %d\n", t23i32, t23f64, t23i32 % t23f64);
print("%d %% %d = %d\n", t23i32, t23w,   t23i32 % t23w);
print("%d %% %d = %d\n", t23i32, t23f,   t23i32 % t23f);
print("%d %% %d = %d\n", t23i32, t23z,   t23i32 % t23z);
print("%d %% %d = %d\n", t23i32, t23x,   t23i32 % t23x);
print("%d %% %d = %d\n", t23i32, t23q,   t23i32 % t23q);
print("%d %% %d = %d\n", t23i32, t23r,   t23i32 % t23r);
print("%d %% %d = %d\n", t23u32, -8,     t23u32 % -8);
print("%d %% %d = %d\n", t23u32,  8,     t23u32 %  8);
print("%d %% %d = %d\n", t23u32, 32.0,   t23u32 % 32.0);
print("%d %% %d = %d\n", t23u32, 0x800000000000000000000000000000000, t23u32 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23u32, 1/2,    t23u32 % 1/2);
print("%d %% %d = %d\n", t23u32, 0x800000000000000000000000000000000/3, t23u32 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23u32, 1.25L,  t23u32 %  1.25L);
print("%d %% %d = %d\n", t23u32, t23i8,  t23u32 % t23i8);
print("%d %% %d = %d\n", t23u32, t23u8,  t23u32 % t23u8);
print("%d %% %d = %d\n", t23u32, t23i16, t23u32 % t23i16);
print("%d %% %d = %d\n", t23u32, t23u16, t23u32 % t23u16);
print("%d %% %d = %d\n", t23u32, t23i32, t23u32 % t23i32);
print("%d %% %d = %d\n", t23u32, t23u32, t23u32 % t23u32);
print("%d %% %d = %d\n", t23u32, t23i64, t23u32 % t23i64);
print("%d %% %d = %d\n", t23u32, t23u64, t23u32 % t23u64);
print("%d %% %d = %d\n", t23u32, t23f32, t23u32 % t23f32);
print("%d %% %d = %d\n", t23u32, t23f64, t23u32 % t23f64);
print("%d %% %d = %d\n", t23u32, t23w,   t23u32 % t23w);
print("%d %% %d = %d\n", t23u32, t23f,   t23u32 % t23f);
print("%d %% %d = %d\n", t23u32, t23z,   t23u32 % t23z);
print("%d %% %d = %d\n", t23u32, t23x,   t23u32 % t23x);
print("%d %% %d = %d\n", t23u32, t23q,   t23u32 % t23q);
print("%d %% %d = %d\n", t23u32, t23r,   t23u32 % t23r);
print("%d %% %d = %d\n", t23i64, -8,     t23i64 % -8);
print("%d %% %d = %d\n", t23i64,  8,     t23i64 %  8);
print("%d %% %d = %d\n", t23i64, 32.0,   t23i64 % 32.0);
print("%d %% %d = %d\n", t23i64, 0x800000000000000000000000000000000, t23i64 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23i64, 1/2,    t23i64 % 1/2);
print("%d %% %d = %d\n", t23i64, 0x800000000000000000000000000000000/3, t23i64 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23i64, 1.25L,  t23i64 %  1.25L);
print("%d %% %d = %d\n", t23i64, t23i8,  t23i64 % t23i8);
print("%d %% %d = %d\n", t23i64, t23u8,  t23i64 % t23u8);
print("%d %% %d = %d\n", t23i64, t23i16, t23i64 % t23i16);
print("%d %% %d = %d\n", t23i64, t23u16, t23i64 % t23u16);
print("%d %% %d = %d\n", t23i64, t23i32, t23i64 % t23i32);
print("%d %% %d = %d\n", t23i64, t23u32, t23i64 % t23u32);
print("%d %% %d = %d\n", t23i64, t23i64, t23i64 % t23i64);
print("%d %% %d = %d\n", t23i64, t23u64, t23i64 % t23u64);
print("%d %% %d = %d\n", t23i64, t23f32, t23i64 % t23f32);
print("%d %% %d = %d\n", t23i64, t23f64, t23i64 % t23f64);
print("%d %% %d = %d\n", t23i64, t23w,   t23i64 % t23w);
print("%d %% %d = %d\n", t23i64, t23f,   t23i64 % t23f);
print("%d %% %d = %d\n", t23i64, t23z,   t23i64 % t23z);
print("%d %% %d = %d\n", t23i64, t23x,   t23i64 % t23x);
print("%d %% %d = %d\n", t23i64, t23q,   t23i64 % t23q);
print("%d %% %d = %d\n", t23i64, t23r,   t23i64 % t23r);
print("%d %% %d = %d\n", t23u64, -8,     t23u64 % -8);
print("%d %% %d = %d\n", t23u64,  8,     t23u64 %  8);
print("%d %% %d = %d\n", t23u64, 32.0,   t23u64 % 32.0);
print("%d %% %d = %d\n", t23u64, 0x800000000000000000000000000000000, t23u64 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23u64, 1/2,    t23u64 % 1/2);
print("%d %% %d = %d\n", t23u64, 0x800000000000000000000000000000000/3, t23u64 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23u64, 1.25L,  t23u64 %  1.25L);
print("%d %% %d = %d\n", t23u64, t23i8,  t23u64 % t23i8);
print("%d %% %d = %d\n", t23u64, t23u8,  t23u64 % t23u8);
print("%d %% %d = %d\n", t23u64, t23i16, t23u64 % t23i16);
print("%d %% %d = %d\n", t23u64, t23u16, t23u64 % t23u16);
print("%d %% %d = %d\n", t23u64, t23i32, t23u64 % t23i32);
print("%d %% %d = %d\n", t23u64, t23u32, t23u64 % t23u32);
print("%d %% %d = %d\n", t23u64, t23i64, t23u64 % t23i64);
print("%d %% %d = %d\n", t23u64, t23u64, t23u64 % t23u64);
print("%d %% %d = %d\n", t23u64, t23f32, t23u64 % t23f32);
print("%d %% %d = %d\n", t23u64, t23f64, t23u64 % t23f64);
print("%d %% %d = %d\n", t23u64, t23w,   t23u64 % t23w);
print("%d %% %d = %d\n", t23u64, t23f,   t23u64 % t23f);
print("%d %% %d = %d\n", t23u64, t23z,   t23u64 % t23z);
print("%d %% %d = %d\n", t23u64, t23x,   t23u64 % t23x);
print("%d %% %d = %d\n", t23u64, t23q,   t23u64 % t23q);
print("%d %% %d = %d\n", t23u64, t23r,   t23u64 % t23r);
print("%d %% %d = %d\n", t23f32, -8,     t23f32 % -8);
print("%d %% %d = %d\n", t23f32,  8,     t23f32 %  8);
print("%d %% %d = %d\n", t23f32, 32.0,   t23f32 % 32.0);
print("%d %% %d = %d\n", t23f32, 0x800000000000000000000000000000000, t23f32 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23f32, 1/2,    t23f32 % 1/2);
print("%d %% %d = %d\n", t23f32, 0x800000000000000000000000000000000/3, t23f32 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23f32, 1.25L,  t23f32 %  1.25L);
print("%d %% %d = %d\n", t23f32, t23i8,  t23f32 % t23i8);
print("%d %% %d = %d\n", t23f32, t23u8,  t23f32 % t23u8);
print("%d %% %d = %d\n", t23f32, t23i16, t23f32 % t23i16);
print("%d %% %d = %d\n", t23f32, t23u16, t23f32 % t23u16);
print("%d %% %d = %d\n", t23f32, t23i32, t23f32 % t23i32);
print("%d %% %d = %d\n", t23f32, t23u32, t23f32 % t23u32);
print("%d %% %d = %d\n", t23f32, t23i64, t23f32 % t23i64);
print("%d %% %d = %d\n", t23f32, t23u64, t23f32 % t23u64);
print("%d %% %d = %d\n", t23f32, t23f32, t23f32 % t23f32);
print("%d %% %d = %d\n", t23f32, t23f64, t23f32 % t23f64);
print("%d %% %d = %d\n", t23f32, t23w,   t23f32 % t23w);
print("%d %% %d = %d\n", t23f32, t23f,   t23f32 % t23f);
print("%d %% %d = %d\n", t23f32, t23z,   t23f32 % t23z);
print("%d %% %d = %d\n", t23f32, t23x,   t23f32 % t23x);
print("%d %% %d = %d\n", t23f32, t23q,   t23f32 % t23q);
print("%d %% %d = %d\n", t23f32, t23r,   t23f32 % t23r);
print("%d %% %d = %d\n", t23f64, -8,     t23f64 % -8);
print("%d %% %d = %d\n", t23f64,  8,     t23f64 %  8);
print("%d %% %d = %d\n", t23f64, 32.0,   t23f64 % 32.0);
print("%d %% %d = %d\n", t23f64, 0x800000000000000000000000000000000, t23f64 % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23f64, 1/2,    t23f64 % 1/2);
print("%d %% %d = %d\n", t23f64, 0x800000000000000000000000000000000/3, t23f64 % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23f64, 1.25L,  t23f64 %  1.25L);
print("%d %% %d = %d\n", t23f64, t23i8,  t23f64 % t23i8);
print("%d %% %d = %d\n", t23f64, t23u8,  t23f64 % t23u8);
print("%d %% %d = %d\n", t23f64, t23i16, t23f64 % t23i16);
print("%d %% %d = %d\n", t23f64, t23u16, t23f64 % t23u16);
print("%d %% %d = %d\n", t23f64, t23i32, t23f64 % t23i32);
print("%d %% %d = %d\n", t23f64, t23u32, t23f64 % t23u32);
print("%d %% %d = %d\n", t23f64, t23i64, t23f64 % t23i64);
print("%d %% %d = %d\n", t23f64, t23u64, t23f64 % t23u64);
print("%d %% %d = %d\n", t23f64, t23f32, t23f64 % t23f32);
print("%d %% %d = %d\n", t23f64, t23f64, t23f64 % t23f64);
print("%d %% %d = %d\n", t23f64, t23w,   t23f64 % t23w);
print("%d %% %d = %d\n", t23f64, t23f,   t23f64 % t23f);
print("%d %% %d = %d\n", t23f64, t23z,   t23f64 % t23z);
print("%d %% %d = %d\n", t23f64, t23x,   t23f64 % t23x);
print("%d %% %d = %d\n", t23f64, t23q,   t23f64 % t23q);
print("%d %% %d = %d\n", t23f64, t23r,   t23f64 % t23r);
print("%d %% %d = %d\n", t23w, -8,     t23w % -8);
print("%d %% %d = %d\n", t23w,  8,     t23w %  8);
print("%d %% %d = %d\n", t23w, 32.0,   t23w % 32.0);
print("%d %% %d = %d\n", t23w, 0x800000000000000000000000000000000, t23w % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23w, 1/2,    t23w % 1/2);
print("%d %% %d = %d\n", t23w, 0x800000000000000000000000000000000/3, t23w % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23w, 1.25L,  t23w %  1.25L);
print("%d %% %d = %d\n", t23w, t23i8,  t23w % t23i8);
print("%d %% %d = %d\n", t23w, t23u8,  t23w % t23u8);
print("%d %% %d = %d\n", t23w, t23i16, t23w % t23i16);
print("%d %% %d = %d\n", t23w, t23u16, t23w % t23u16);
print("%d %% %d = %d\n", t23w, t23i32, t23w % t23i32);
print("%d %% %d = %d\n", t23w, t23u32, t23w % t23u32);
print("%d %% %d = %d\n", t23w, t23i64, t23w % t23i64);
print("%d %% %d = %d\n", t23w, t23u64, t23w % t23u64);
print("%d %% %d = %d\n", t23w, t23f32, t23w % t23f32);
print("%d %% %d = %d\n", t23w, t23f64, t23w % t23f64);
print("%d %% %d = %d\n", t23w, t23w,   t23w % t23w);
print("%d %% %d = %d\n", t23w, t23f,   t23w % t23f);
print("%d %% %d = %d\n", t23w, t23z,   t23w % t23z);
print("%d %% %d = %d\n", t23w, t23x,   t23w % t23x);
print("%d %% %d = %d\n", t23w, t23q,   t23w % t23q);
print("%d %% %d = %d\n", t23w, t23r,   t23w % t23r);
print("%d %% %d = %d\n", t23f, -8,     t23f % -8);
print("%d %% %d = %d\n", t23f,  8,     t23f %  8);
print("%d %% %d = %d\n", t23f, 32.0,   t23f % 32.0);
print("%d %% %d = %d\n", t23f, 0x800000000000000000000000000000000, t23f % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23f, 1/2,    t23f % 1/2);
print("%d %% %d = %d\n", t23f, 0x800000000000000000000000000000000/3, t23f % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23f, 1.25L,  t23f %  1.25L);
print("%d %% %d = %d\n", t23f, t23i8,  t23f % t23i8);
print("%d %% %d = %d\n", t23f, t23u8,  t23f % t23u8);
print("%d %% %d = %d\n", t23f, t23i16, t23f % t23i16);
print("%d %% %d = %d\n", t23f, t23u16, t23f % t23u16);
print("%d %% %d = %d\n", t23f, t23i32, t23f % t23i32);
print("%d %% %d = %d\n", t23f, t23u32, t23f % t23u32);
print("%d %% %d = %d\n", t23f, t23i64, t23f % t23i64);
print("%d %% %d = %d\n", t23f, t23u64, t23f % t23u64);
print("%d %% %d = %d\n", t23f, t23f32, t23f % t23f32);
print("%d %% %d = %d\n", t23f, t23f64, t23f % t23f64);
print("%d %% %d = %d\n", t23f, t23w,   t23f % t23w);
print("%d %% %d = %d\n", t23f, t23f,   t23f % t23f);
print("%d %% %d = %d\n", t23f, t23z,   t23f % t23z);
print("%d %% %d = %d\n", t23f, t23x,   t23f % t23x);
print("%d %% %d = %d\n", t23f, t23q,   t23f % t23q);
print("%d %% %d = %d\n", t23f, t23r,   t23f % t23r);
print("%d %% %d = %d\n", t23z, -8,     t23z % -8);
print("%d %% %d = %d\n", t23z,  8,     t23z %  8);
print("%d %% %d = %d\n", t23z, 32.0,   t23z % 32.0);
print("%d %% %d = %d\n", t23z, 0x800000000000000000000000000000000, t23z % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23z, 1/2,    t23z % (1/2));
print("%d %% %d = %d\n", t23z, 0x800000000000000000000000000000000/3, t23z % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23z, 1.25L,  t23z %  1.25L);
print("%d %% %d = %d\n", t23z, t23i8,  t23z % t23i8);
print("%d %% %d = %d\n", t23z, t23u8,  t23z % t23u8);
print("%d %% %d = %d\n", t23z, t23i16, t23z % t23i16);
print("%d %% %d = %d\n", t23z, t23u16, t23z % t23u16);
print("%d %% %d = %d\n", t23z, t23i32, t23z % t23i32);
print("%d %% %d = %d\n", t23z, t23u32, t23z % t23u32);
print("%d %% %d = %d\n", t23z, t23i64, t23z % t23i64);
print("%d %% %d = %d\n", t23z, t23u64, t23z % t23u64);
print("%d %% %d = %d\n", t23z, t23f32, t23z % t23f32);
print("%d %% %d = %d\n", t23z, t23f64, t23z % t23f64);
print("%d %% %d = %d\n", t23z, t23w,   t23z % t23w);
print("%d %% %d = %d\n", t23z, t23f,   t23z % t23f);
print("%d %% %d = %d\n", t23z, t23z,   t23z % t23z);
print("%d %% %d = %d\n", t23z, t23x,   t23z % t23x);
print("%d %% %d = %d\n", t23z, t23q,   t23z % t23q);
print("%d %% %d = %d\n", t23z, t23r,   t23z % t23r);
print("%d %% %d = %d\n", t23x, -8,     t23x % -8);
print("%d %% %d = %d\n", t23x,  8,     t23x %  8);
print("%d %% %d = %d\n", t23x, 32.0,   t23x % 32.0);
print("%d %% %d = %d\n", t23x, 0x800000000000000000000000000000000, t23x % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23x, 1/2,    t23x % (1/2));
print("%d %% %d = %d\n", t23x, 0x800000000000000000000000000000000/3, t23x % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23x, 1.25L,  t23x %  1.25L);
print("%d %% %d = %d\n", t23x, t23i8,  t23x % t23i8);
print("%d %% %d = %d\n", t23x, t23u8,  t23x % t23u8);
print("%d %% %d = %d\n", t23x, t23i16, t23x % t23i16);
print("%d %% %d = %d\n", t23x, t23u16, t23x % t23u16);
print("%d %% %d = %d\n", t23x, t23i32, t23x % t23i32);
print("%d %% %d = %d\n", t23x, t23u32, t23x % t23u32);
print("%d %% %d = %d\n", t23x, t23i64, t23x % t23i64);
print("%d %% %d = %d\n", t23x, t23u64, t23x % t23u64);
print("%d %% %d = %d\n", t23x, t23f32, t23x % t23f32);
print("%d %% %d = %d\n", t23x, t23f64, t23x % t23f64);
print("%d %% %d = %d\n", t23x, t23w,   t23x % t23w);
print("%d %% %d = %d\n", t23x, t23f,   t23x % t23f);
print("%d %% %d = %d\n", t23x, t23z,   t23x % t23z);
print("%d %% %d = %d\n", t23x, t23x,   t23x % t23x);
print("%d %% %d = %d\n", t23x, t23q,   t23x % t23q);
print("%d %% %d = %d\n", t23x, t23r,   t23x % t23r);
print("%d %% %d = %d\n", t23q, -8,     t23q % -8);
print("%d %% %d = %d\n", t23q,  8,     t23q %  8);
print("%d %% %d = %d\n", t23q, 32.0,   t23q % 32.0);
print("%d %% %d = %d\n", t23q, 0x800000000000000000000000000000000, t23q % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23q, 1/2,    t23q % (1/2));
print("%d %% %d = %d\n", t23q, 0x800000000000000000000000000000000/3, t23q % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23q, 1.25L,  t23q %  1.25L);
print("%d %% %d = %d\n", t23q, t23i8,  t23q % t23i8);
print("%d %% %d = %d\n", t23q, t23u8,  t23q % t23u8);
print("%d %% %d = %d\n", t23q, t23i16, t23q % t23i16);
print("%d %% %d = %d\n", t23q, t23u16, t23q % t23u16);
print("%d %% %d = %d\n", t23q, t23i32, t23q % t23i32);
print("%d %% %d = %d\n", t23q, t23u32, t23q % t23u32);
print("%d %% %d = %d\n", t23q, t23i64, t23q % t23i64);
print("%d %% %d = %d\n", t23q, t23u64, t23q % t23u64);
print("%d %% %d = %d\n", t23q, t23f32, t23q % t23f32);
print("%d %% %d = %d\n", t23q, t23f64, t23q % t23f64);
print("%d %% %d = %d\n", t23q, t23w,   t23q % t23w);
print("%d %% %d = %d\n", t23q, t23f,   t23q % t23f);
print("%d %% %d = %d\n", t23q, t23z,   t23q % t23z);
print("%d %% %d = %d\n", t23q, t23x,   t23q % t23x);
print("%d %% %d = %d\n", t23q, t23q,   t23q % t23q);
print("%d %% %d = %d\n", t23q, t23r,   t23q % t23r);
print("%d %% %d = %d\n", t23r, -8,     t23r % -8);
print("%d %% %d = %d\n", t23r,  8,     t23r %  8);
print("%d %% %d = %d\n", t23r, 32.0,   t23r % 32.0);
print("%d %% %d = %d\n", t23r, 0x800000000000000000000000000000000, t23r % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23r, 1/2,    t23r % (1/2));
print("%d %% %d = %d\n", t23r, 0x800000000000000000000000000000000/3, t23r % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23r, 1.25L,  t23r %  1.25L);
print("%d %% %d = %d\n", t23r, t23i8,  t23r % t23i8);
print("%d %% %d = %d\n", t23r, t23u8,  t23r % t23u8);
print("%d %% %d = %d\n", t23r, t23i16, t23r % t23i16);
print("%d %% %d = %d\n", t23r, t23u16, t23r % t23u16);
print("%d %% %d = %d\n", t23r, t23i32, t23r % t23i32);
print("%d %% %d = %d\n", t23r, t23u32, t23r % t23u32);
print("%d %% %d = %d\n", t23r, t23i64, t23r % t23i64);
print("%d %% %d = %d\n", t23r, t23u64, t23r % t23u64);
print("%d %% %d = %d\n", t23r, t23f32, t23r % t23f32);
print("%d %% %d = %d\n", t23r, t23f64, t23r % t23f64);
print("%d %% %d = %d\n", t23r, t23w,   t23r % t23w);
print("%d %% %d = %d\n", t23r, t23f,   t23r % t23f);
print("%d %% %d = %d\n", t23r, t23z,   t23r % t23z);
print("%d %% %d = %d\n", t23r, t23x,   t23r % t23x);
print("%d %% %d = %d\n", t23r, t23q,   t23r % t23q);
print("%d %% %d = %d\n", t23r, t23r,   t23r % t23r);
print("%d %% %d = %d\n", t23n, -8,     t23n % -8);
print("%d %% %d = %d\n", t23n,  8,     t23n %  8);
print("%d %% %d = %d\n", t23n, 32.0,   t23n % 32.0);
print("%d %% %d = %d\n", t23n, 0x800000000000000000000000000000000, t23n % 0x800000000000000000000000000000000);
print("%d %% %d = %d\n", t23n, 1/2,    t23n % (1/2));
print("%d %% %d = %d\n", t23n, 0x800000000000000000000000000000000/3, t23n % 0x800000000000000000000000000000000/3);
print("%d %% %d = %d\n", t23n, 1.25L,  t23n %  1.25L);
print("%d %% %d = %d\n", t23n, t23i8,  t23n % t23i8);
print("%d %% %d = %d\n", t23n, t23u8,  t23n % t23u8);
print("%d %% %d = %d\n", t23n, t23i16, t23n % t23i16);
print("%d %% %d = %d\n", t23n, t23u16, t23n % t23u16);
print("%d %% %d = %d\n", t23n, t23i32, t23n % t23i32);
print("%d %% %d = %d\n", t23n, t23u32, t23n % t23u32);
print("%d %% %d = %d\n", t23n, t23i64, t23n % t23i64);
print("%d %% %d = %d\n", t23n, t23u64, t23n % t23u64);
print("%d %% %d = %d\n", t23n, t23f32, t23n % t23f32);
print("%d %% %d = %d\n", t23n, t23f64, t23n % t23f64);
print("%d %% %d = %d\n", t23n, t23w,   t23n % t23w);
print("%d %% %d = %d\n", t23n, t23f,   t23n % t23f);
print("%d %% %d = %d\n", t23n, t23z,   t23n % t23z);
print("%d %% %d = %d\n", t23n, t23x,   t23n % t23x);
print("%d %% %d = %d\n", t23n, t23q,   t23n % t23q);
print("%d %% %d = %d\n", t23n, t23r,   t23n % t23r);

class t24c_t {
    int16_t	i16;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	a;
    int16_t	vi16[];
    uint64_t	vu64[];
    float32_t	vf32[];
    float64_t	vf64[];
    auto	va[];
};
void t24(int16_t i16, uint64_t u64, float32_t f32, float64_t f64, auto a,
	 int16_t o0, int16_t o2, int16_t o4)
{
    t24c_t	c = {
	i16,	u64,	f32,	f64,	a,
	{ i16 },
	{ 0, u64 },
	{ 0, 1, f32 },
	{ 0, 1, 2, f64 },
	{ 0, 1, 2, 3, a },
    };
    print("!%d = %d\n", c.i16,		!c.i16);
    print("!%d = %d\n", c.u64,		!c.u64);
    print("!%d = %d\n", c.f32,		!c.f32);
    print("!%d = %d\n", c.f64,		!c.f64);
    print("!%d = %d\n", c.a,		!c.a);
    print("!%d = %d\n", c.vi16[o0],	!c.vi16[o0]);
    print("!%d = %d\n", c.vu64[1],	!c.vu64[1]);
    print("!%d = %d\n", c.vf32[o2],	!c.vf32[o2]);
    print("!%d = %d\n", c.vf64[3],	!c.vf64[3]);
    print("!%d = %d\n", c.va[o4],	!c.va[o4]);
    print("~%d = %d\n", c.i16,		~c.i16);
    print("~%d = %d\n", c.u64,		~c.u64);
    print("~%d = %d\n", c.vi16[o0],	~c.vi16[o0]);
    print("~%d = %d\n", c.vu64[1],	~c.vu64[1]);
    print("-%d = %d\n", c.i16,		-c.i16);
    print("-%d = %d\n", c.u64,		-c.u64);
    print("-%d = %d\n", c.f32,		-c.f32);
    print("-%d = %d\n", c.f64,		-c.f64);
    print("-%d = %d\n", c.a,		-c.a);
    print("-%d = %d\n", c.vi16[o0],	-c.vi16[o0]);
    print("-%d = %d\n", c.vu64[1],	-c.vu64[1]);
    print("-%d = %d\n", c.vf32[o2],	-c.vf32[o2]);
    print("-%d = %d\n", c.vf64[3],	-c.vf64[3]);
    print("-%d = %d\n", c.va[o4],	-c.va[o4]);
    print("%d && %d = %d\n", c.i16, c.i16,	c.i16 && c.i16);
    print("%d && %d = %d\n", c.i16, c.u64,	c.i16 && c.u64);
    print("%d && %d = %d\n", c.i16, c.f32,	c.i16 && c.f32);
    print("%d && %d = %d\n", c.i16, c.f64,	c.i16 && c.f64);
    print("%d && %d = %d\n", c.i16, c.a,	c.i16 && c.a);
    print("%d && %d = %d\n", c.i16, c.vi16[o0],	c.i16 && c.vi16[o0]);
    print("%d && %d = %d\n", c.i16, c.vu64[1],  c.i16 && c.vu64[1]);
    print("%d && %d = %d\n", c.i16, c.vf32[o2],	c.i16 && c.vf32[o2]);
    print("%d && %d = %d\n", c.i16, c.vf64[3],	c.i16 && c.vf64[3]);
    print("%d && %d = %d\n", c.i16, c.va[o4],	c.i16 && c.va[o4]);
    print("%d && %d = %d\n", c.u64, c.i16,	c.u64 && c.i16);
    print("%d && %d = %d\n", c.u64, c.u64,	c.u64 && c.u64);
    print("%d && %d = %d\n", c.u64, c.f32,	c.u64 && c.f32);
    print("%d && %d = %d\n", c.u64, c.f64,	c.u64 && c.f64);
    print("%d && %d = %d\n", c.u64, c.a,	c.u64 && c.a);
    print("%d && %d = %d\n", c.u64, c.vi16[o0],	c.u64 && c.vi16[o0]);
    print("%d && %d = %d\n", c.u64, c.vu64[1],  c.u64 && c.vu64[1]);
    print("%d && %d = %d\n", c.u64, c.vf32[o2],	c.u64 && c.vf32[o2]);
    print("%d && %d = %d\n", c.u64, c.vf64[3],	c.u64 && c.vf64[3]);
    print("%d && %d = %d\n", c.u64, c.va[o4],	c.u64 && c.va[o4]);
    print("%d && %d = %d\n", c.f32, c.i16,	c.f32 && c.i16);
    print("%d && %d = %d\n", c.f32, c.u64,	c.f32 && c.u64);
    print("%d && %d = %d\n", c.f32, c.f32,	c.f32 && c.f32);
    print("%d && %d = %d\n", c.f32, c.f64,	c.f32 && c.f64);
    print("%d && %d = %d\n", c.f32, c.a,	c.f32 && c.a);
    print("%d && %d = %d\n", c.f32, c.vi16[o0],	c.f32 && c.vi16[o0]);
    print("%d && %d = %d\n", c.f32, c.vu64[1],  c.f32 && c.vu64[1]);
    print("%d && %d = %d\n", c.f32, c.vf32[o2],	c.f32 && c.vf32[o2]);
    print("%d && %d = %d\n", c.f32, c.vf64[3],	c.f32 && c.vf64[3]);
    print("%d && %d = %d\n", c.f32, c.va[o4],	c.f32 && c.va[o4]);
    print("%d && %d = %d\n", c.f64, c.i16,	c.f64 && c.i16);
    print("%d && %d = %d\n", c.f64, c.u64,	c.f64 && c.u64);
    print("%d && %d = %d\n", c.f64, c.f32,	c.f64 && c.f32);
    print("%d && %d = %d\n", c.f64, c.f64,	c.f64 && c.f64);
    print("%d && %d = %d\n", c.f64, c.a,	c.f64 && c.a);
    print("%d && %d = %d\n", c.f64, c.vi16[o0],	c.f64 && c.vi16[o0]);
    print("%d && %d = %d\n", c.f64, c.vu64[1],  c.f64 && c.vu64[1]);
    print("%d && %d = %d\n", c.f64, c.vf32[o2],	c.f64 && c.vf32[o2]);
    print("%d && %d = %d\n", c.f64, c.vf64[3],	c.f64 && c.vf64[3]);
    print("%d && %d = %d\n", c.f64, c.va[o4],	c.f64 && c.va[o4]);
    print("%d && %d = %d\n", c.a, c.i16,	c.a && c.i16);
    print("%d && %d = %d\n", c.a, c.u64,	c.a && c.u64);
    print("%d && %d = %d\n", c.a, c.f32,	c.a && c.f32);
    print("%d && %d = %d\n", c.a, c.f64,	c.a && c.f64);
    print("%d && %d = %d\n", c.a, c.a,		c.a && c.a);
    print("%d && %d = %d\n", c.a, c.vi16[o0],	c.a && c.vi16[o0]);
    print("%d && %d = %d\n", c.a, c.vu64[1],	c.a && c.vu64[1]);
    print("%d && %d = %d\n", c.a, c.vf32[o2],	c.a && c.vf32[o2]);
    print("%d && %d = %d\n", c.a, c.vf64[3],	c.a && c.vf64[3]);
    print("%d && %d = %d\n", c.a, c.va[o4],	c.a && c.va[o4]);
    print("%d || %d = %d\n", c.i16, c.i16,	c.i16 || c.i16);
    print("%d || %d = %d\n", c.i16, c.u64,	c.i16 || c.u64);
    print("%d || %d = %d\n", c.i16, c.f32,	c.i16 || c.f32);
    print("%d || %d = %d\n", c.i16, c.f64,	c.i16 || c.f64);
    print("%d || %d = %d\n", c.i16, c.a,	c.i16 || c.a);
    print("%d || %d = %d\n", c.i16, c.vi16[o0],	c.i16 || c.vi16[o0]);
    print("%d || %d = %d\n", c.i16, c.vu64[1],  c.i16 || c.vu64[1]);
    print("%d || %d = %d\n", c.i16, c.vf32[o2],	c.i16 || c.vf32[o2]);
    print("%d || %d = %d\n", c.i16, c.vf64[3],	c.i16 || c.vf64[3]);
    print("%d || %d = %d\n", c.i16, c.va[o4],	c.i16 || c.va[o4]);
    print("%d || %d = %d\n", c.u64, c.i16,	c.u64 || c.i16);
    print("%d || %d = %d\n", c.u64, c.u64,	c.u64 || c.u64);
    print("%d || %d = %d\n", c.u64, c.f32,	c.u64 || c.f32);
    print("%d || %d = %d\n", c.u64, c.f64,	c.u64 || c.f64);
    print("%d || %d = %d\n", c.u64, c.a,	c.u64 || c.a);
    print("%d || %d = %d\n", c.u64, c.vi16[o0],	c.u64 || c.vi16[o0]);
    print("%d || %d = %d\n", c.u64, c.vu64[1],  c.u64 || c.vu64[1]);
    print("%d || %d = %d\n", c.u64, c.vf32[o2],	c.u64 || c.vf32[o2]);
    print("%d || %d = %d\n", c.u64, c.vf64[3],	c.u64 || c.vf64[3]);
    print("%d || %d = %d\n", c.u64, c.va[o4],	c.u64 || c.va[o4]);
    print("%d || %d = %d\n", c.f32, c.i16,	c.f32 || c.i16);
    print("%d || %d = %d\n", c.f32, c.u64,	c.f32 || c.u64);
    print("%d || %d = %d\n", c.f32, c.f32,	c.f32 || c.f32);
    print("%d || %d = %d\n", c.f32, c.f64,	c.f32 || c.f64);
    print("%d || %d = %d\n", c.f32, c.a,	c.f32 || c.a);
    print("%d || %d = %d\n", c.f32, c.vi16[o0],	c.f32 || c.vi16[o0]);
    print("%d || %d = %d\n", c.f32, c.vu64[1],  c.f32 || c.vu64[1]);
    print("%d || %d = %d\n", c.f32, c.vf32[o2],	c.f32 || c.vf32[o2]);
    print("%d || %d = %d\n", c.f32, c.vf64[3],	c.f32 || c.vf64[3]);
    print("%d || %d = %d\n", c.f32, c.va[o4],	c.f32 || c.va[o4]);
    print("%d || %d = %d\n", c.f64, c.i16,	c.f64 || c.i16);
    print("%d || %d = %d\n", c.f64, c.u64,	c.f64 || c.u64);
    print("%d || %d = %d\n", c.f64, c.f32,	c.f64 || c.f32);
    print("%d || %d = %d\n", c.f64, c.f64,	c.f64 || c.f64);
    print("%d || %d = %d\n", c.f64, c.a,	c.f64 || c.a);
    print("%d || %d = %d\n", c.f64, c.vi16[o0],	c.f64 || c.vi16[o0]);
    print("%d || %d = %d\n", c.f64, c.vu64[1],  c.f64 || c.vu64[1]);
    print("%d || %d = %d\n", c.f64, c.vf32[o2],	c.f64 || c.vf32[o2]);
    print("%d || %d = %d\n", c.f64, c.vf64[3],	c.f64 || c.vf64[3]);
    print("%d || %d = %d\n", c.f64, c.va[o4],	c.f64 || c.va[o4]);
    print("%d || %d = %d\n", c.a, c.i16,	c.a || c.i16);
    print("%d || %d = %d\n", c.a, c.u64,	c.a || c.u64);
    print("%d || %d = %d\n", c.a, c.f32,	c.a || c.f32);
    print("%d || %d = %d\n", c.a, c.f64,	c.a || c.f64);
    print("%d || %d = %d\n", c.a, c.a,		c.a || c.a);
    print("%d || %d = %d\n", c.a, c.vi16[o0],	c.a || c.vi16[o0]);
    print("%d || %d = %d\n", c.a, c.vu64[1],	c.a || c.vu64[1]);
    print("%d || %d = %d\n", c.a, c.vf32[o2],	c.a || c.vf32[o2]);
    print("%d || %d = %d\n", c.a, c.vf64[3],	c.a || c.vf64[3]);
    print("%d || %d = %d\n", c.a, c.va[o4],	c.a || c.va[o4]);
    print("%d < %d = %d\n", c.i16, c.i16,	c.i16 < c.i16);
    print("%d < %d = %d\n", c.i16, c.u64,	c.i16 < c.u64);
    print("%d < %d = %d\n", c.i16, c.f32,	c.i16 < c.f32);
    print("%d < %d = %d\n", c.i16, c.f64,	c.i16 < c.f64);
    print("%d < %d = %d\n", c.i16, c.a,		c.i16 < c.a);
    print("%d < %d = %d\n", c.i16, c.vi16[o0],	c.i16 < c.vi16[o0]);
    print("%d < %d = %d\n", c.i16, c.vu64[1],	c.i16 < c.vu64[1]);
    print("%d < %d = %d\n", c.i16, c.vf32[o2],	c.i16 < c.vf32[o2]);
    print("%d < %d = %d\n", c.i16, c.vf64[3],	c.i16 < c.vf64[3]);
    print("%d < %d = %d\n", c.i16, c.va[o4],	c.i16 < c.va[o4]);
    print("%d < %d = %d\n", c.u64, c.i16,	c.u64 < c.i16);
    print("%d < %d = %d\n", c.u64, c.u64,	c.u64 < c.u64);
    print("%d < %d = %d\n", c.u64, c.f32,	c.u64 < c.f32);
    print("%d < %d = %d\n", c.u64, c.f64,	c.u64 < c.f64);
    print("%d < %d = %d\n", c.u64, c.a,		c.u64 < c.a);
    print("%d < %d = %d\n", c.u64, c.vi16[o0],	c.u64 < c.vi16[o0]);
    print("%d < %d = %d\n", c.u64, c.vu64[1],  c.u64 < c.vu64[1]);
    print("%d < %d = %d\n", c.u64, c.vf32[o2],	c.u64 < c.vf32[o2]);
    print("%d < %d = %d\n", c.u64, c.vf64[3],	c.u64 < c.vf64[3]);
    print("%d < %d = %d\n", c.u64, c.va[o4],	c.u64 < c.va[o4]);
    print("%d < %d = %d\n", c.f32, c.i16,	c.f32 < c.i16);
    print("%d < %d = %d\n", c.f32, c.u64,	c.f32 < c.u64);
    print("%d < %d = %d\n", c.f32, c.f32,	c.f32 < c.f32);
    print("%d < %d = %d\n", c.f32, c.f64,	c.f32 < c.f64);
    print("%d < %d = %d\n", c.f32, c.a,		c.f32 < c.a);
    print("%d < %d = %d\n", c.f32, c.vi16[o0],	c.f32 < c.vi16[o0]);
    print("%d < %d = %d\n", c.f32, c.vu64[1],	c.f32 < c.vu64[1]);
    print("%d < %d = %d\n", c.f32, c.vf32[o2],	c.f32 < c.vf32[o2]);
    print("%d < %d = %d\n", c.f32, c.vf64[3],	c.f32 < c.vf64[3]);
    print("%d < %d = %d\n", c.f32, c.va[o4],	c.f32 < c.va[o4]);
    print("%d < %d = %d\n", c.f64, c.i16,	c.f64 < c.i16);
    print("%d < %d = %d\n", c.f64, c.u64,	c.f64 < c.u64);
    print("%d < %d = %d\n", c.f64, c.f32,	c.f64 < c.f32);
    print("%d < %d = %d\n", c.f64, c.f64,	c.f64 < c.f64);
    print("%d < %d = %d\n", c.f64, c.a,		c.f64 < c.a);
    print("%d < %d = %d\n", c.f64, c.vi16[o0],	c.f64 < c.vi16[o0]);
    print("%d < %d = %d\n", c.f64, c.vu64[1],	c.f64 < c.vu64[1]);
    print("%d < %d = %d\n", c.f64, c.vf32[o2],	c.f64 < c.vf32[o2]);
    print("%d < %d = %d\n", c.f64, c.vf64[3],	c.f64 < c.vf64[3]);
    print("%d < %d = %d\n", c.f64, c.va[o4],	c.f64 < c.va[o4]);
    print("%d < %d = %d\n", c.a, c.i16,		c.a < c.i16);
    print("%d < %d = %d\n", c.a, c.u64,		c.a < c.u64);
    print("%d < %d = %d\n", c.a, c.f32,		c.a < c.f32);
    print("%d < %d = %d\n", c.a, c.f64,		c.a < c.f64);
    print("%d < %d = %d\n", c.a, c.a,		c.a < c.a);
    print("%d < %d = %d\n", c.a, c.vi16[o0],	c.a < c.vi16[o0]);
    print("%d < %d = %d\n", c.a, c.vu64[1],	c.a < c.vu64[1]);
    print("%d < %d = %d\n", c.a, c.vf32[o2],	c.a < c.vf32[o2]);
    print("%d < %d = %d\n", c.a, c.vf64[3],	c.a < c.vf64[3]);
    print("%d < %d = %d\n", c.a, c.va[o4],	c.a < c.va[o4]);
    print("%d <= %d = %d\n", c.i16, c.i16,	c.i16 <= c.i16);
    print("%d <= %d = %d\n", c.i16, c.u64,	c.i16 <= c.u64);
    print("%d <= %d = %d\n", c.i16, c.f32,	c.i16 <= c.f32);
    print("%d <= %d = %d\n", c.i16, c.f64,	c.i16 <= c.f64);
    print("%d <= %d = %d\n", c.i16, c.a,	c.i16 <= c.a);
    print("%d <= %d = %d\n", c.i16, c.vi16[o0],	c.i16 <= c.vi16[o0]);
    print("%d <= %d = %d\n", c.i16, c.vu64[1],  c.i16 <= c.vu64[1]);
    print("%d <= %d = %d\n", c.i16, c.vf32[o2],	c.i16 <= c.vf32[o2]);
    print("%d <= %d = %d\n", c.i16, c.vf64[3],	c.i16 <= c.vf64[3]);
    print("%d <= %d = %d\n", c.i16, c.va[o4],	c.i16 <= c.va[o4]);
    print("%d <= %d = %d\n", c.u64, c.i16,	c.u64 <= c.i16);
    print("%d <= %d = %d\n", c.u64, c.u64,	c.u64 <= c.u64);
    print("%d <= %d = %d\n", c.u64, c.f32,	c.u64 <= c.f32);
    print("%d <= %d = %d\n", c.u64, c.f64,	c.u64 <= c.f64);
    print("%d <= %d = %d\n", c.u64, c.a,	c.u64 <= c.a);
    print("%d <= %d = %d\n", c.u64, c.vi16[o0],	c.u64 <= c.vi16[o0]);
    print("%d <= %d = %d\n", c.u64, c.vu64[1],  c.u64 <= c.vu64[1]);
    print("%d <= %d = %d\n", c.u64, c.vf32[o2],	c.u64 <= c.vf32[o2]);
    print("%d <= %d = %d\n", c.u64, c.vf64[3],	c.u64 <= c.vf64[3]);
    print("%d <= %d = %d\n", c.u64, c.va[o4],	c.u64 <= c.va[o4]);
    print("%d <= %d = %d\n", c.f32, c.i16,	c.f32 <= c.i16);
    print("%d <= %d = %d\n", c.f32, c.u64,	c.f32 <= c.u64);
    print("%d <= %d = %d\n", c.f32, c.f32,	c.f32 <= c.f32);
    print("%d <= %d = %d\n", c.f32, c.f64,	c.f32 <= c.f64);
    print("%d <= %d = %d\n", c.f32, c.a,	c.f32 <= c.a);
    print("%d <= %d = %d\n", c.f32, c.vi16[o0],	c.f32 <= c.vi16[o0]);
    print("%d <= %d = %d\n", c.f32, c.vu64[1],  c.f32 <= c.vu64[1]);
    print("%d <= %d = %d\n", c.f32, c.vf32[o2],	c.f32 <= c.vf32[o2]);
    print("%d <= %d = %d\n", c.f32, c.vf64[3],	c.f32 <= c.vf64[3]);
    print("%d <= %d = %d\n", c.f32, c.va[o4],	c.f32 <= c.va[o4]);
    print("%d <= %d = %d\n", c.f64, c.i16,	c.f64 <= c.i16);
    print("%d <= %d = %d\n", c.f64, c.u64,	c.f64 <= c.u64);
    print("%d <= %d = %d\n", c.f64, c.f32,	c.f64 <= c.f32);
    print("%d <= %d = %d\n", c.f64, c.f64,	c.f64 <= c.f64);
    print("%d <= %d = %d\n", c.f64, c.a,	c.f64 <= c.a);
    print("%d <= %d = %d\n", c.f64, c.vi16[o0],	c.f64 <= c.vi16[o0]);
    print("%d <= %d = %d\n", c.f64, c.vu64[1],  c.f64 <= c.vu64[1]);
    print("%d <= %d = %d\n", c.f64, c.vf32[o2],	c.f64 <= c.vf32[o2]);
    print("%d <= %d = %d\n", c.f64, c.vf64[3],	c.f64 <= c.vf64[3]);
    print("%d <= %d = %d\n", c.f64, c.va[o4],	c.f64 <= c.va[o4]);
    print("%d <= %d = %d\n", c.a, c.i16,	c.a <= c.i16);
    print("%d <= %d = %d\n", c.a, c.u64,	c.a <= c.u64);
    print("%d <= %d = %d\n", c.a, c.f32,	c.a <= c.f32);
    print("%d <= %d = %d\n", c.a, c.f64,	c.a <= c.f64);
    print("%d <= %d = %d\n", c.a, c.a,		c.a <= c.a);
    print("%d <= %d = %d\n", c.a, c.vi16[o0],	c.a <= c.vi16[o0]);
    print("%d <= %d = %d\n", c.a, c.vu64[1],	c.a <= c.vu64[1]);
    print("%d <= %d = %d\n", c.a, c.vf32[o2],	c.a <= c.vf32[o2]);
    print("%d <= %d = %d\n", c.a, c.vf64[3],	c.a <= c.vf64[3]);
    print("%d <= %d = %d\n", c.a, c.va[o4],	c.a <= c.va[o4]);
    print("%d == %d = %d\n", c.i16, c.i16,	c.i16 == c.i16);
    print("%d == %d = %d\n", c.i16, c.u64,	c.i16 == c.u64);
    print("%d == %d = %d\n", c.i16, c.f32,	c.i16 == c.f32);
    print("%d == %d = %d\n", c.i16, c.f64,	c.i16 == c.f64);
    print("%d == %d = %d\n", c.i16, c.a,	c.i16 == c.a);
    print("%d == %d = %d\n", c.i16, c.vi16[o0],	c.i16 == c.vi16[o0]);
    print("%d == %d = %d\n", c.i16, c.vu64[1],  c.i16 == c.vu64[1]);
    print("%d == %d = %d\n", c.i16, c.vf32[o2],	c.i16 == c.vf32[o2]);
    print("%d == %d = %d\n", c.i16, c.vf64[3],	c.i16 == c.vf64[3]);
    print("%d == %d = %d\n", c.i16, c.va[o4],	c.i16 == c.va[o4]);
    print("%d == %d = %d\n", c.u64, c.i16,	c.u64 == c.i16);
    print("%d == %d = %d\n", c.u64, c.u64,	c.u64 == c.u64);
    print("%d == %d = %d\n", c.u64, c.f32,	c.u64 == c.f32);
    print("%d == %d = %d\n", c.u64, c.f64,	c.u64 == c.f64);
    print("%d == %d = %d\n", c.u64, c.a,	c.u64 == c.a);
    print("%d == %d = %d\n", c.u64, c.vi16[o0],	c.u64 == c.vi16[o0]);
    print("%d == %d = %d\n", c.u64, c.vu64[1],  c.u64 == c.vu64[1]);
    print("%d == %d = %d\n", c.u64, c.vf32[o2],	c.u64 == c.vf32[o2]);
    print("%d == %d = %d\n", c.u64, c.vf64[3],	c.u64 == c.vf64[3]);
    print("%d == %d = %d\n", c.u64, c.va[o4],	c.u64 == c.va[o4]);
    print("%d == %d = %d\n", c.f32, c.i16,	c.f32 == c.i16);
    print("%d == %d = %d\n", c.f32, c.u64,	c.f32 == c.u64);
    print("%d == %d = %d\n", c.f32, c.f32,	c.f32 == c.f32);
    print("%d == %d = %d\n", c.f32, c.f64,	c.f32 == c.f64);
    print("%d == %d = %d\n", c.f32, c.a,	c.f32 == c.a);
    print("%d == %d = %d\n", c.f32, c.vi16[o0],	c.f32 == c.vi16[o0]);
    print("%d == %d = %d\n", c.f32, c.vu64[1],  c.f32 == c.vu64[1]);
    print("%d == %d = %d\n", c.f32, c.vf32[o2],	c.f32 == c.vf32[o2]);
    print("%d == %d = %d\n", c.f32, c.vf64[3],	c.f32 == c.vf64[3]);
    print("%d == %d = %d\n", c.f32, c.va[o4],	c.f32 == c.va[o4]);
    print("%d == %d = %d\n", c.f64, c.i16,	c.f64 == c.i16);
    print("%d == %d = %d\n", c.f64, c.u64,	c.f64 == c.u64);
    print("%d == %d = %d\n", c.f64, c.f32,	c.f64 == c.f32);
    print("%d == %d = %d\n", c.f64, c.f64,	c.f64 == c.f64);
    print("%d == %d = %d\n", c.f64, c.a,	c.f64 == c.a);
    print("%d == %d = %d\n", c.f64, c.vi16[o0],	c.f64 == c.vi16[o0]);
    print("%d == %d = %d\n", c.f64, c.vu64[1],  c.f64 == c.vu64[1]);
    print("%d == %d = %d\n", c.f64, c.vf32[o2],	c.f64 == c.vf32[o2]);
    print("%d == %d = %d\n", c.f64, c.vf64[3],	c.f64 == c.vf64[3]);
    print("%d == %d = %d\n", c.f64, c.va[o4],	c.f64 == c.va[o4]);
    print("%d == %d = %d\n", c.a, c.i16,	c.a == c.i16);
    print("%d == %d = %d\n", c.a, c.u64,	c.a == c.u64);
    print("%d == %d = %d\n", c.a, c.f32,	c.a == c.f32);
    print("%d == %d = %d\n", c.a, c.f64,	c.a == c.f64);
    print("%d == %d = %d\n", c.a, c.a,		c.a == c.a);
    print("%d == %d = %d\n", c.a, c.vi16[o0],	c.a == c.vi16[o0]);
    print("%d == %d = %d\n", c.a, c.vu64[1],	c.a == c.vu64[1]);
    print("%d == %d = %d\n", c.a, c.vf32[o2],	c.a == c.vf32[o2]);
    print("%d == %d = %d\n", c.a, c.vf64[3],	c.a == c.vf64[3]);
    print("%d == %d = %d\n", c.a, c.va[o4],	c.a == c.va[o4]);
    print("%d >= %d = %d\n", c.i16, c.i16,	c.i16 >= c.i16);
    print("%d >= %d = %d\n", c.i16, c.u64,	c.i16 >= c.u64);
    print("%d >= %d = %d\n", c.i16, c.f32,	c.i16 >= c.f32);
    print("%d >= %d = %d\n", c.i16, c.f64,	c.i16 >= c.f64);
    print("%d >= %d = %d\n", c.i16, c.a,	c.i16 >= c.a);
    print("%d >= %d = %d\n", c.i16, c.vi16[o0],	c.i16 >= c.vi16[o0]);
    print("%d >= %d = %d\n", c.i16, c.vu64[1],  c.i16 >= c.vu64[1]);
    print("%d >= %d = %d\n", c.i16, c.vf32[o2],	c.i16 >= c.vf32[o2]);
    print("%d >= %d = %d\n", c.i16, c.vf64[3],	c.i16 >= c.vf64[3]);
    print("%d >= %d = %d\n", c.i16, c.va[o4],	c.i16 >= c.va[o4]);
    print("%d >= %d = %d\n", c.u64, c.i16,	c.u64 >= c.i16);
    print("%d >= %d = %d\n", c.u64, c.u64,	c.u64 >= c.u64);
    print("%d >= %d = %d\n", c.u64, c.f32,	c.u64 >= c.f32);
    print("%d >= %d = %d\n", c.u64, c.f64,	c.u64 >= c.f64);
    print("%d >= %d = %d\n", c.u64, c.a,	c.u64 >= c.a);
    print("%d >= %d = %d\n", c.u64, c.vi16[o0],	c.u64 >= c.vi16[o0]);
    print("%d >= %d = %d\n", c.u64, c.vu64[1],  c.u64 >= c.vu64[1]);
    print("%d >= %d = %d\n", c.u64, c.vf32[o2],	c.u64 >= c.vf32[o2]);
    print("%d >= %d = %d\n", c.u64, c.vf64[3],	c.u64 >= c.vf64[3]);
    print("%d >= %d = %d\n", c.u64, c.va[o4],	c.u64 >= c.va[o4]);
    print("%d >= %d = %d\n", c.f32, c.i16,	c.f32 >= c.i16);
    print("%d >= %d = %d\n", c.f32, c.u64,	c.f32 >= c.u64);
    print("%d >= %d = %d\n", c.f32, c.f32,	c.f32 >= c.f32);
    print("%d >= %d = %d\n", c.f32, c.f64,	c.f32 >= c.f64);
    print("%d >= %d = %d\n", c.f32, c.a,	c.f32 >= c.a);
    print("%d >= %d = %d\n", c.f32, c.vi16[o0],	c.f32 >= c.vi16[o0]);
    print("%d >= %d = %d\n", c.f32, c.vu64[1],  c.f32 >= c.vu64[1]);
    print("%d >= %d = %d\n", c.f32, c.vf32[o2],	c.f32 >= c.vf32[o2]);
    print("%d >= %d = %d\n", c.f32, c.vf64[3],	c.f32 >= c.vf64[3]);
    print("%d >= %d = %d\n", c.f32, c.va[o4],	c.f32 >= c.va[o4]);
    print("%d >= %d = %d\n", c.f64, c.i16,	c.f64 >= c.i16);
    print("%d >= %d = %d\n", c.f64, c.u64,	c.f64 >= c.u64);
    print("%d >= %d = %d\n", c.f64, c.f32,	c.f64 >= c.f32);
    print("%d >= %d = %d\n", c.f64, c.f64,	c.f64 >= c.f64);
    print("%d >= %d = %d\n", c.f64, c.a,	c.f64 >= c.a);
    print("%d >= %d = %d\n", c.f64, c.vi16[o0],	c.f64 >= c.vi16[o0]);
    print("%d >= %d = %d\n", c.f64, c.vu64[1],  c.f64 >= c.vu64[1]);
    print("%d >= %d = %d\n", c.f64, c.vf32[o2],	c.f64 >= c.vf32[o2]);
    print("%d >= %d = %d\n", c.f64, c.vf64[3],	c.f64 >= c.vf64[3]);
    print("%d >= %d = %d\n", c.f64, c.va[o4],	c.f64 >= c.va[o4]);
    print("%d >= %d = %d\n", c.a, c.i16,	c.a >= c.i16);
    print("%d >= %d = %d\n", c.a, c.u64,	c.a >= c.u64);
    print("%d >= %d = %d\n", c.a, c.f32,	c.a >= c.f32);
    print("%d >= %d = %d\n", c.a, c.f64,	c.a >= c.f64);
    print("%d >= %d = %d\n", c.a, c.a,		c.a >= c.a);
    print("%d >= %d = %d\n", c.a, c.vi16[o0],	c.a >= c.vi16[o0]);
    print("%d >= %d = %d\n", c.a, c.vu64[1],	c.a >= c.vu64[1]);
    print("%d >= %d = %d\n", c.a, c.vf32[o2],	c.a >= c.vf32[o2]);
    print("%d >= %d = %d\n", c.a, c.vf64[3],	c.a >= c.vf64[3]);
    print("%d >= %d = %d\n", c.a, c.va[o4],	c.a >= c.va[o4]);
    print("%d > %d = %d\n", c.i16, c.i16,	c.i16 > c.i16);
    print("%d > %d = %d\n", c.i16, c.u64,	c.i16 > c.u64);
    print("%d > %d = %d\n", c.i16, c.f32,	c.i16 > c.f32);
    print("%d > %d = %d\n", c.i16, c.f64,	c.i16 > c.f64);
    print("%d > %d = %d\n", c.i16, c.a,		c.i16 > c.a);
    print("%d > %d = %d\n", c.i16, c.vi16[o0],	c.i16 > c.vi16[o0]);
    print("%d > %d = %d\n", c.i16, c.vu64[1],	c.i16 > c.vu64[1]);
    print("%d > %d = %d\n", c.i16, c.vf32[o2],	c.i16 > c.vf32[o2]);
    print("%d > %d = %d\n", c.i16, c.vf64[3],	c.i16 > c.vf64[3]);
    print("%d > %d = %d\n", c.i16, c.va[o4],	c.i16 > c.va[o4]);
    print("%d > %d = %d\n", c.u64, c.i16,	c.u64 > c.i16);
    print("%d > %d = %d\n", c.u64, c.u64,	c.u64 > c.u64);
    print("%d > %d = %d\n", c.u64, c.f32,	c.u64 > c.f32);
    print("%d > %d = %d\n", c.u64, c.f64,	c.u64 > c.f64);
    print("%d > %d = %d\n", c.u64, c.a,		c.u64 > c.a);
    print("%d > %d = %d\n", c.u64, c.vi16[o0],	c.u64 > c.vi16[o0]);
    print("%d > %d = %d\n", c.u64, c.vu64[1],	c.u64 > c.vu64[1]);
    print("%d > %d = %d\n", c.u64, c.vf32[o2],	c.u64 > c.vf32[o2]);
    print("%d > %d = %d\n", c.u64, c.vf64[3],	c.u64 > c.vf64[3]);
    print("%d > %d = %d\n", c.u64, c.va[o4],	c.u64 > c.va[o4]);
    print("%d > %d = %d\n", c.f32, c.i16,	c.f32 > c.i16);
    print("%d > %d = %d\n", c.f32, c.u64,	c.f32 > c.u64);
    print("%d > %d = %d\n", c.f32, c.f32,	c.f32 > c.f32);
    print("%d > %d = %d\n", c.f32, c.f64,	c.f32 > c.f64);
    print("%d > %d = %d\n", c.f32, c.a,		c.f32 > c.a);
    print("%d > %d = %d\n", c.f32, c.vi16[o0],	c.f32 > c.vi16[o0]);
    print("%d > %d = %d\n", c.f32, c.vu64[1],	c.f32 > c.vu64[1]);
    print("%d > %d = %d\n", c.f32, c.vf32[o2],	c.f32 > c.vf32[o2]);
    print("%d > %d = %d\n", c.f32, c.vf64[3],	c.f32 > c.vf64[3]);
    print("%d > %d = %d\n", c.f32, c.va[o4],	c.f32 > c.va[o4]);
    print("%d > %d = %d\n", c.f64, c.i16,	c.f64 > c.i16);
    print("%d > %d = %d\n", c.f64, c.u64,	c.f64 > c.u64);
    print("%d > %d = %d\n", c.f64, c.f32,	c.f64 > c.f32);
    print("%d > %d = %d\n", c.f64, c.f64,	c.f64 > c.f64);
    print("%d > %d = %d\n", c.f64, c.a,		c.f64 > c.a);
    print("%d > %d = %d\n", c.f64, c.vi16[o0],	c.f64 > c.vi16[o0]);
    print("%d > %d = %d\n", c.f64, c.vu64[1],	c.f64 > c.vu64[1]);
    print("%d > %d = %d\n", c.f64, c.vf32[o2],	c.f64 > c.vf32[o2]);
    print("%d > %d = %d\n", c.f64, c.vf64[3],	c.f64 > c.vf64[3]);
    print("%d > %d = %d\n", c.f64, c.va[o4],	c.f64 > c.va[o4]);
    print("%d > %d = %d\n", c.a, c.i16,		c.a > c.i16);
    print("%d > %d = %d\n", c.a, c.u64,		c.a > c.u64);
    print("%d > %d = %d\n", c.a, c.f32,		c.a > c.f32);
    print("%d > %d = %d\n", c.a, c.f64,		c.a > c.f64);
    print("%d > %d = %d\n", c.a, c.a,		c.a > c.a);
    print("%d > %d = %d\n", c.a, c.vi16[o0],	c.a > c.vi16[o0]);
    print("%d > %d = %d\n", c.a, c.vu64[1],	c.a > c.vu64[1]);
    print("%d > %d = %d\n", c.a, c.vf32[o2],	c.a > c.vf32[o2]);
    print("%d > %d = %d\n", c.a, c.vf64[3],	c.a > c.vf64[3]);
    print("%d > %d = %d\n", c.a, c.va[o4],	c.a > c.va[o4]);
    print("%d != %d = %d\n", c.i16, c.i16,	c.i16 != c.i16);
    print("%d != %d = %d\n", c.i16, c.u64,	c.i16 != c.u64);
    print("%d != %d = %d\n", c.i16, c.f32,	c.i16 != c.f32);
    print("%d != %d = %d\n", c.i16, c.f64,	c.i16 != c.f64);
    print("%d != %d = %d\n", c.i16, c.a,	c.i16 != c.a);
    print("%d != %d = %d\n", c.i16, c.vi16[o0],	c.i16 != c.vi16[o0]);
    print("%d != %d = %d\n", c.i16, c.vu64[1],  c.i16 != c.vu64[1]);
    print("%d != %d = %d\n", c.i16, c.vf32[o2],	c.i16 != c.vf32[o2]);
    print("%d != %d = %d\n", c.i16, c.vf64[3],	c.i16 != c.vf64[3]);
    print("%d != %d = %d\n", c.i16, c.va[o4],	c.i16 != c.va[o4]);
    print("%d != %d = %d\n", c.u64, c.i16,	c.u64 != c.i16);
    print("%d != %d = %d\n", c.u64, c.u64,	c.u64 != c.u64);
    print("%d != %d = %d\n", c.u64, c.f32,	c.u64 != c.f32);
    print("%d != %d = %d\n", c.u64, c.f64,	c.u64 != c.f64);
    print("%d != %d = %d\n", c.u64, c.a,	c.u64 != c.a);
    print("%d != %d = %d\n", c.u64, c.vi16[o0],	c.u64 != c.vi16[o0]);
    print("%d != %d = %d\n", c.u64, c.vu64[1],  c.u64 != c.vu64[1]);
    print("%d != %d = %d\n", c.u64, c.vf32[o2],	c.u64 != c.vf32[o2]);
    print("%d != %d = %d\n", c.u64, c.vf64[3],	c.u64 != c.vf64[3]);
    print("%d != %d = %d\n", c.u64, c.va[o4],	c.u64 != c.va[o4]);
    print("%d != %d = %d\n", c.f32, c.i16,	c.f32 != c.i16);
    print("%d != %d = %d\n", c.f32, c.u64,	c.f32 != c.u64);
    print("%d != %d = %d\n", c.f32, c.f32,	c.f32 != c.f32);
    print("%d != %d = %d\n", c.f32, c.f64,	c.f32 != c.f64);
    print("%d != %d = %d\n", c.f32, c.a,	c.f32 != c.a);
    print("%d != %d = %d\n", c.f32, c.vi16[o0],	c.f32 != c.vi16[o0]);
    print("%d != %d = %d\n", c.f32, c.vu64[1],  c.f32 != c.vu64[1]);
    print("%d != %d = %d\n", c.f32, c.vf32[o2],	c.f32 != c.vf32[o2]);
    print("%d != %d = %d\n", c.f32, c.vf64[3],	c.f32 != c.vf64[3]);
    print("%d != %d = %d\n", c.f32, c.va[o4],	c.f32 != c.va[o4]);
    print("%d != %d = %d\n", c.f64, c.i16,	c.f64 != c.i16);
    print("%d != %d = %d\n", c.f64, c.u64,	c.f64 != c.u64);
    print("%d != %d = %d\n", c.f64, c.f32,	c.f64 != c.f32);
    print("%d != %d = %d\n", c.f64, c.f64,	c.f64 != c.f64);
    print("%d != %d = %d\n", c.f64, c.a,	c.f64 != c.a);
    print("%d != %d = %d\n", c.f64, c.vi16[o0],	c.f64 != c.vi16[o0]);
    print("%d != %d = %d\n", c.f64, c.vu64[1],  c.f64 != c.vu64[1]);
    print("%d != %d = %d\n", c.f64, c.vf32[o2],	c.f64 != c.vf32[o2]);
    print("%d != %d = %d\n", c.f64, c.vf64[3],	c.f64 != c.vf64[3]);
    print("%d != %d = %d\n", c.f64, c.va[o4],	c.f64 != c.va[o4]);
    print("%d != %d = %d\n", c.a, c.i16,	c.a != c.i16);
    print("%d != %d = %d\n", c.a, c.u64,	c.a != c.u64);
    print("%d != %d = %d\n", c.a, c.f32,	c.a != c.f32);
    print("%d != %d = %d\n", c.a, c.f64,	c.a != c.f64);
    print("%d != %d = %d\n", c.a, c.a,		c.a != c.a);
    print("%d != %d = %d\n", c.a, c.vi16[o0],	c.a != c.vi16[o0]);
    print("%d != %d = %d\n", c.a, c.vu64[1],	c.a != c.vu64[1]);
    print("%d != %d = %d\n", c.a, c.vf32[o2],	c.a != c.vf32[o2]);
    print("%d != %d = %d\n", c.a, c.vf64[3],	c.a != c.vf64[3]);
    print("%d != %d = %d\n", c.a, c.va[o4],	c.a != c.va[o4]);
    print("%d & %d = %d\n", c.i16, c.i16,	c.i16 & c.i16);
    print("%d & %d = %d\n", c.i16, c.u64,	c.i16 & c.u64);
    print("%d & %d = %d\n", c.i16, c.vi16[o0],	c.i16 & c.vi16[o0]);
    print("%d & %d = %d\n", c.i16, c.vu64[1],	c.i16 & c.vu64[1]);
    print("%d & %d = %d\n", c.u64, c.i16,	c.u64 & c.i16);
    print("%d & %d = %d\n", c.u64, c.u64,	c.u64 & c.u64);
    print("%d & %d = %d\n", c.u64, c.vi16[o0],	c.u64 & c.vi16[o0]);
    print("%d & %d = %d\n", c.u64, c.vu64[1],	c.u64 & c.vu64[1]);
    print("%d | %d = %d\n", c.i16, c.i16,	c.i16 | c.i16);
    print("%d | %d = %d\n", c.i16, c.u64,	c.i16 | c.u64);
    print("%d | %d = %d\n", c.i16, c.vi16[o0],	c.i16 | c.vi16[o0]);
    print("%d | %d = %d\n", c.i16, c.vu64[1],	c.i16 | c.vu64[1]);
    print("%d | %d = %d\n", c.u64, c.i16,	c.u64 | c.i16);
    print("%d | %d = %d\n", c.u64, c.u64,	c.u64 | c.u64);
    print("%d | %d = %d\n", c.u64, c.vi16[o0],	c.u64 | c.vi16[o0]);
    print("%d | %d = %d\n", c.u64, c.vu64[1],	c.u64 | c.vu64[1]);
    print("%d ^ %d = %d\n", c.i16, c.i16,	c.i16 ^ c.i16);
    print("%d ^ %d = %d\n", c.i16, c.u64,	c.i16 ^ c.u64);
    print("%d ^ %d = %d\n", c.i16, c.vi16[o0],	c.i16 ^ c.vi16[o0]);
    print("%d ^ %d = %d\n", c.i16, c.vu64[1],	c.i16 ^ c.vu64[1]);
    print("%d ^ %d = %d\n", c.u64, c.i16,	c.u64 ^ c.i16);
    print("%d ^ %d = %d\n", c.u64, c.u64,	c.u64 ^ c.u64);
    print("%d ^ %d = %d\n", c.u64, c.vi16[o0],	c.u64 ^ c.vi16[o0]);
    print("%d ^ %d = %d\n", c.u64, c.vu64[1],	c.u64 ^ c.vu64[1]);
    print("%d << %d = %d\n", c.i16, c.i16,	c.i16 << c.i16);
    print("%d << %d = %d\n", c.i16, c.u64,	c.i16 << c.u64);
    print("%d << %d = %d\n", c.i16, c.f32,	c.i16 << c.f32);
    print("%d << %d = %d\n", c.i16, c.f64,	c.i16 << c.f64);
    print("%d << %d = %d\n", c.i16, c.vi16[o0],	c.i16 << c.vi16[o0]);
    print("%d << %d = %d\n", c.i16, c.vu64[1],	c.i16 << c.vu64[1]);
    print("%d << %d = %d\n", c.i16, c.vf32[o2],	c.i16 << c.vf32[o2]);
    print("%d << %d = %d\n", c.i16, c.vf64[3],	c.i16 << c.vf64[3]);
    print("%d << %d = %d\n", c.u64, c.i16,	c.u64 << c.i16);
    print("%d << %d = %d\n", c.u64, c.u64,	c.u64 << c.u64);
    print("%d << %d = %d\n", c.u64, c.f32,	c.u64 << c.f32);
    print("%d << %d = %d\n", c.u64, c.f64,	c.u64 << c.f64);
    print("%d << %d = %d\n", c.u64, c.vi16[o0],	c.u64 << c.vi16[o0]);
    print("%d << %d = %d\n", c.u64, c.vu64[1],  c.u64 << c.vu64[1]);
    print("%d << %d = %d\n", c.u64, c.vf32[o2],	c.u64 << c.vf32[o2]);
    print("%d << %d = %d\n", c.u64, c.vf64[3],	c.u64 << c.vf64[3]);
    print("%d << %d = %d\n", c.f32, c.i16,	c.f32 << c.i16);
    print("%d << %d = %d\n", c.f32, c.u64,	c.f32 << c.u64);
    print("%d << %d = %d\n", c.f32, c.f32,	c.f32 << c.f32);
    print("%d << %d = %d\n", c.f32, c.f64,	c.f32 << c.f64);
    print("%d << %d = %d\n", c.f32, c.vi16[o0],	c.f32 << c.vi16[o0]);
    print("%d << %d = %d\n", c.f32, c.vu64[1],	c.f32 << c.vu64[1]);
    print("%d << %d = %d\n", c.f32, c.vf32[o2],	c.f32 << c.vf32[o2]);
    print("%d << %d = %d\n", c.f32, c.vf64[3],	c.f32 << c.vf64[3]);
    print("%d << %d = %d\n", c.f64, c.i16,	c.f64 << c.i16);
    print("%d << %d = %d\n", c.f64, c.u64,	c.f64 << c.u64);
    print("%d << %d = %d\n", c.f64, c.f32,	c.f64 << c.f32);
    print("%d << %d = %d\n", c.f64, c.f64,	c.f64 << c.f64);
    print("%d << %d = %d\n", c.f64, c.vi16[o0],	c.f64 << c.vi16[o0]);
    print("%d << %d = %d\n", c.f64, c.vu64[1],	c.f64 << c.vu64[1]);
    print("%d << %d = %d\n", c.f64, c.vf32[o2],	c.f64 << c.vf32[o2]);
    print("%d << %d = %d\n", c.f64, c.vf64[3],	c.f64 << c.vf64[3]);
    print("%d << %d = %d\n", c.a, c.i16,	c.a << c.i16);
    print("%d << %d = %d\n", c.a, c.u64,	c.a << c.u64);
    print("%d << %d = %d\n", c.a, c.f32,	c.a << c.f32);
    print("%d << %d = %d\n", c.a, c.f64,	c.a << c.f64);
    print("%d << %d = %d\n", c.a, c.vi16[o0],	c.a << c.vi16[o0]);
    print("%d << %d = %d\n", c.a, c.vu64[1],	c.a << c.vu64[1]);
    print("%d << %d = %d\n", c.a, c.vf32[o2],	c.a << c.vf32[o2]);
    print("%d << %d = %d\n", c.a, c.vf64[3],	c.a << c.vf64[3]);
    print("%d >> %d = %d\n", c.i16, c.i16,	c.i16 >> c.i16);
    print("%d >> %d = %d\n", c.i16, c.u64,	c.i16 >> c.u64);
    print("%d >> %d = %d\n", c.i16, c.f32,	c.i16 >> c.f32);
    print("%d >> %d = %d\n", c.i16, c.f64,	c.i16 >> c.f64);
    print("%d >> %d = %d\n", c.i16, c.vi16[o0],	c.i16 >> c.vi16[o0]);
    print("%d >> %d = %d\n", c.i16, c.vu64[1],	c.i16 >> c.vu64[1]);
    print("%d >> %d = %d\n", c.i16, c.vf32[o2],	c.i16 >> c.vf32[o2]);
    print("%d >> %d = %d\n", c.i16, c.vf64[3],	c.i16 >> c.vf64[3]);
    print("%d >> %d = %d\n", c.u64, c.i16,	c.u64 >> c.i16);
    print("%d >> %d = %d\n", c.u64, c.u64,	c.u64 >> c.u64);
    print("%d >> %d = %d\n", c.u64, c.f32,	c.u64 >> c.f32);
    print("%d >> %d = %d\n", c.u64, c.f64,	c.u64 >> c.f64);
    print("%d >> %d = %d\n", c.u64, c.vi16[o0],	c.u64 >> c.vi16[o0]);
    print("%d >> %d = %d\n", c.u64, c.vu64[1],  c.u64 >> c.vu64[1]);
    print("%d >> %d = %d\n", c.u64, c.vf32[o2],	c.u64 >> c.vf32[o2]);
    print("%d >> %d = %d\n", c.u64, c.vf64[3],	c.u64 >> c.vf64[3]);
    print("%d >> %d = %d\n", c.f32, c.i16,	c.f32 >> c.i16);
    print("%d >> %d = %d\n", c.f32, c.u64,	c.f32 >> c.u64);
    print("%d >> %d = %d\n", c.f32, c.f32,	c.f32 >> c.f32);
    print("%d >> %d = %d\n", c.f32, c.f64,	c.f32 >> c.f64);
    print("%d >> %d = %d\n", c.f32, c.vi16[o0],	c.f32 >> c.vi16[o0]);
    print("%d >> %d = %d\n", c.f32, c.vu64[1],	c.f32 >> c.vu64[1]);
    print("%d >> %d = %d\n", c.f32, c.vf32[o2],	c.f32 >> c.vf32[o2]);
    print("%d >> %d = %d\n", c.f32, c.vf64[3],	c.f32 >> c.vf64[3]);
    print("%d >> %d = %d\n", c.f64, c.i16,	c.f64 >> c.i16);
    print("%d >> %d = %d\n", c.f64, c.u64,	c.f64 >> c.u64);
    print("%d >> %d = %d\n", c.f64, c.f32,	c.f64 >> c.f32);
    print("%d >> %d = %d\n", c.f64, c.f64,	c.f64 >> c.f64);
    print("%d >> %d = %d\n", c.f64, c.vi16[o0],	c.f64 >> c.vi16[o0]);
    print("%d >> %d = %d\n", c.f64, c.vu64[1],	c.f64 >> c.vu64[1]);
    print("%d >> %d = %d\n", c.f64, c.vf32[o2],	c.f64 >> c.vf32[o2]);
    print("%d >> %d = %d\n", c.f64, c.vf64[3],	c.f64 >> c.vf64[3]);
    print("%d >> %d = %d\n", c.a, c.i16,	c.a >> c.i16);
    print("%d >> %d = %d\n", c.a, c.u64,	c.a >> c.u64);
    print("%d >> %d = %d\n", c.a, c.f32,	c.a >> c.f32);
    print("%d >> %d = %d\n", c.a, c.f64,	c.a >> c.f64);
    print("%d >> %d = %d\n", c.a, c.vi16[o0],	c.a >> c.vi16[o0]);
    print("%d >> %d = %d\n", c.a, c.vu64[1],	c.a >> c.vu64[1]);
    print("%d >> %d = %d\n", c.a, c.vf32[o2],	c.a >> c.vf32[o2]);
    print("%d >> %d = %d\n", c.a, c.vf64[3],	c.a >> c.vf64[3]);
    print("%d <<< %d = %d\n", c.i16, c.i16,	c.i16 <<< c.i16);
    print("%d <<< %d = %d\n", c.i16, c.u64,	c.i16 <<< c.u64);
    print("%d <<< %d = %d\n", c.i16, c.f32,	c.i16 <<< c.f32);
    print("%d <<< %d = %d\n", c.i16, c.f64,	c.i16 <<< c.f64);
    print("%d <<< %d = %d\n", c.i16, c.vi16[o0],c.i16 <<< c.vi16[o0]);
    print("%d <<< %d = %d\n", c.i16, c.vu64[1],	c.i16 <<< c.vu64[1]);
    print("%d <<< %d = %d\n", c.i16, c.vf32[o2],c.i16 <<< c.vf32[o2]);
    print("%d <<< %d = %d\n", c.i16, c.vf64[3],	c.i16 <<< c.vf64[3]);
    print("%d <<< %d = %d\n", c.u64, c.i16,	c.u64 <<< c.i16);
    print("%d <<< %d = %d\n", c.u64, c.u64,	c.u64 <<< c.u64);
    print("%d <<< %d = %d\n", c.u64, c.f32,	c.u64 <<< c.f32);
    print("%d <<< %d = %d\n", c.u64, c.f64,	c.u64 <<< c.f64);
    print("%d <<< %d = %d\n", c.u64, c.vi16[o0],c.u64 <<< c.vi16[o0]);
    print("%d <<< %d = %d\n", c.u64, c.vu64[1],	c.u64 <<< c.vu64[1]);
    print("%d <<< %d = %d\n", c.u64, c.vf32[o2],c.u64 <<< c.vf32[o2]);
    print("%d <<< %d = %d\n", c.u64, c.vf64[3],	c.u64 <<< c.vf64[3]);
    print("%d <<< %d = %d\n", c.f32, c.i16,	c.f32 <<< c.i16);
    print("%d <<< %d = %d\n", c.f32, c.u64,	c.f32 <<< c.u64);
    print("%d <<< %d = %d\n", c.f32, c.f32,	c.f32 <<< c.f32);
    print("%d <<< %d = %d\n", c.f32, c.f64,	c.f32 <<< c.f64);
    print("%d <<< %d = %d\n", c.f32, c.vi16[o0],c.f32 <<< c.vi16[o0]);
    print("%d <<< %d = %d\n", c.f32, c.vu64[1],	c.f32 <<< c.vu64[1]);
    print("%d <<< %d = %d\n", c.f32, c.vf32[o2],c.f32 <<< c.vf32[o2]);
    print("%d <<< %d = %d\n", c.f32, c.vf64[3],	c.f32 <<< c.vf64[3]);
    print("%d <<< %d = %d\n", c.f64, c.i16,	c.f64 <<< c.i16);
    print("%d <<< %d = %d\n", c.f64, c.u64,	c.f64 <<< c.u64);
    print("%d <<< %d = %d\n", c.f64, c.f32,	c.f64 <<< c.f32);
    print("%d <<< %d = %d\n", c.f64, c.f64,	c.f64 <<< c.f64);
    print("%d <<< %d = %d\n", c.f64, c.vi16[o0],c.f64 <<< c.vi16[o0]);
    print("%d <<< %d = %d\n", c.f64, c.vu64[1],	c.f64 <<< c.vu64[1]);
    print("%d <<< %d = %d\n", c.f64, c.vf32[o2],c.f64 <<< c.vf32[o2]);
    print("%d <<< %d = %d\n", c.f64, c.vf64[3],	c.f64 <<< c.vf64[3]);
    print("%d <<< %d = %d\n", c.a, c.i16,	c.a <<< c.i16);
    print("%d <<< %d = %d\n", c.a, c.u64,	c.a <<< c.u64);
    print("%d <<< %d = %d\n", c.a, c.f32,	c.a <<< c.f32);
    print("%d <<< %d = %d\n", c.a, c.f64,	c.a <<< c.f64);
    print("%d <<< %d = %d\n", c.a, c.vi16[o0],	c.a <<< c.vi16[o0]);
    print("%d <<< %d = %d\n", c.a, c.vu64[1],	c.a <<< c.vu64[1]);
    print("%d <<< %d = %d\n", c.a, c.vf32[o2],	c.a <<< c.vf32[o2]);
    print("%d <<< %d = %d\n", c.a, c.vf64[3],	c.a <<< c.vf64[3]);
    print("%d >>> %d = %d\n", c.i16, c.i16,	c.i16 >>> c.i16);
    print("%d >>> %d = %d\n", c.i16, c.u64,	c.i16 >>> c.u64);
    print("%d >>> %d = %d\n", c.i16, c.f32,	c.i16 >>> c.f32);
    print("%d >>> %d = %d\n", c.i16, c.f64,	c.i16 >>> c.f64);
    print("%d >>> %d = %d\n", c.i16, c.vi16[o0],c.i16 >>> c.vi16[o0]);
    print("%d >>> %d = %d\n", c.i16, c.vu64[1],	c.i16 >>> c.vu64[1]);
    print("%d >>> %d = %d\n", c.i16, c.vf32[o2],c.i16 >>> c.vf32[o2]);
    print("%d >>> %d = %d\n", c.i16, c.vf64[3],	c.i16 >>> c.vf64[3]);
    print("%d >>> %d = %d\n", c.u64, c.i16,	c.u64 >>> c.i16);
    print("%d >>> %d = %d\n", c.u64, c.u64,	c.u64 >>> c.u64);
    print("%d >>> %d = %d\n", c.u64, c.f32,	c.u64 >>> c.f32);
    print("%d >>> %d = %d\n", c.u64, c.f64,	c.u64 >>> c.f64);
    print("%d >>> %d = %d\n", c.u64, c.vi16[o0],c.u64 >>> c.vi16[o0]);
    print("%d >>> %d = %d\n", c.u64, c.vu64[1],  c.u64 >>> c.vu64[1]);
    print("%d >>> %d = %d\n", c.u64, c.vf32[o2],c.u64 >>> c.vf32[o2]);
    print("%d >>> %d = %d\n", c.u64, c.vf64[3],	c.u64 >>> c.vf64[3]);
    print("%d >>> %d = %d\n", c.f32, c.i16,	c.f32 >>> c.i16);
    print("%d >>> %d = %d\n", c.f32, c.u64,	c.f32 >>> c.u64);
    print("%d >>> %d = %d\n", c.f32, c.f32,	c.f32 >>> c.f32);
    print("%d >>> %d = %d\n", c.f32, c.f64,	c.f32 >>> c.f64);
    print("%d >>> %d = %d\n", c.f32, c.vi16[o0],c.f32 >>> c.vi16[o0]);
    print("%d >>> %d = %d\n", c.f32, c.vu64[1],	c.f32 >>> c.vu64[1]);
    print("%d >>> %d = %d\n", c.f32, c.vf32[o2],c.f32 >>> c.vf32[o2]);
    print("%d >>> %d = %d\n", c.f32, c.vf64[3],	c.f32 >>> c.vf64[3]);
    print("%d >>> %d = %d\n", c.f64, c.i16,	c.f64 >>> c.i16);
    print("%d >>> %d = %d\n", c.f64, c.u64,	c.f64 >>> c.u64);
    print("%d >>> %d = %d\n", c.f64, c.f32,	c.f64 >>> c.f32);
    print("%d >>> %d = %d\n", c.f64, c.f64,	c.f64 >>> c.f64);
    print("%d >>> %d = %d\n", c.f64, c.vi16[o0],c.f64 >>> c.vi16[o0]);
    print("%d >>> %d = %d\n", c.f64, c.vu64[1],	c.f64 >>> c.vu64[1]);
    print("%d >>> %d = %d\n", c.f64, c.vf32[o2],c.f64 >>> c.vf32[o2]);
    print("%d >>> %d = %d\n", c.f64, c.vf64[3],	c.f64 >>> c.vf64[3]);
    print("%d >>> %d = %d\n", c.a, c.i16,	c.a >>> c.i16);
    print("%d >>> %d = %d\n", c.a, c.u64,	c.a >>> c.u64);
    print("%d >>> %d = %d\n", c.a, c.f32,	c.a >>> c.f32);
    print("%d >>> %d = %d\n", c.a, c.f64,	c.a >>> c.f64);
    print("%d >>> %d = %d\n", c.a, c.vi16[o0],	c.a >>> c.vi16[o0]);
    print("%d >>> %d = %d\n", c.a, c.vu64[1],	c.a >>> c.vu64[1]);
    print("%d >>> %d = %d\n", c.a, c.vf32[o2],	c.a >>> c.vf32[o2]);
    print("%d >>> %d = %d\n", c.a, c.vf64[3],	c.a >>> c.vf64[3]);
    print("%d + %d = %d\n", c.i16, c.i16,	c.i16 + c.i16);
    print("%d + %d = %d\n", c.i16, c.u64,	c.i16 + c.u64);
    print("%d + %d = %d\n", c.i16, c.f32,	c.i16 + c.f32);
    print("%d + %d = %d\n", c.i16, c.f64,	c.i16 + c.f64);
    print("%d + %d = %d\n", c.i16, c.a,		c.i16 + c.a);
    print("%d + %d = %d\n", c.i16, c.vi16[o0],	c.i16 + c.vi16[o0]);
    print("%d + %d = %d\n", c.i16, c.vu64[1],	c.i16 + c.vu64[1]);
    print("%d + %d = %d\n", c.i16, c.vf32[o2],	c.i16 + c.vf32[o2]);
    print("%d + %d = %d\n", c.i16, c.vf64[3],	c.i16 + c.vf64[3]);
    print("%d + %d = %d\n", c.i16, c.va[o4],	c.i16 + c.va[o4]);
    print("%d + %d = %d\n", c.u64, c.i16,	c.u64 + c.i16);
    print("%d + %d = %d\n", c.u64, c.u64,	c.u64 + c.u64);
    print("%d + %d = %d\n", c.u64, c.f32,	c.u64 + c.f32);
    print("%d + %d = %d\n", c.u64, c.f64,	c.u64 + c.f64);
    print("%d + %d = %d\n", c.u64, c.a,		c.u64 + c.a);
    print("%d + %d = %d\n", c.u64, c.vi16[o0],	c.u64 + c.vi16[o0]);
    print("%d + %d = %d\n", c.u64, c.vu64[1],  c.u64 + c.vu64[1]);
    print("%d + %d = %d\n", c.u64, c.vf32[o2],	c.u64 + c.vf32[o2]);
    print("%d + %d = %d\n", c.u64, c.vf64[3],	c.u64 + c.vf64[3]);
    print("%d + %d = %d\n", c.u64, c.va[o4],	c.u64 + c.va[o4]);
    print("%d + %d = %d\n", c.f32, c.i16,	c.f32 + c.i16);
    print("%d + %d = %d\n", c.f32, c.u64,	c.f32 + c.u64);
    print("%d + %d = %d\n", c.f32, c.f32,	c.f32 + c.f32);
    print("%d + %d = %d\n", c.f32, c.f64,	c.f32 + c.f64);
    print("%d + %d = %d\n", c.f32, c.a,		c.f32 + c.a);
    print("%d + %d = %d\n", c.f32, c.vi16[o0],	c.f32 + c.vi16[o0]);
    print("%d + %d = %d\n", c.f32, c.vu64[1],	c.f32 + c.vu64[1]);
    print("%d + %d = %d\n", c.f32, c.vf32[o2],	c.f32 + c.vf32[o2]);
    print("%d + %d = %d\n", c.f32, c.vf64[3],	c.f32 + c.vf64[3]);
    print("%d + %d = %d\n", c.f32, c.va[o4],	c.f32 + c.va[o4]);
    print("%d + %d = %d\n", c.f64, c.i16,	c.f64 + c.i16);
    print("%d + %d = %d\n", c.f64, c.u64,	c.f64 + c.u64);
    print("%d + %d = %d\n", c.f64, c.f32,	c.f64 + c.f32);
    print("%d + %d = %d\n", c.f64, c.f64,	c.f64 + c.f64);
    print("%d + %d = %d\n", c.f64, c.a,		c.f64 + c.a);
    print("%d + %d = %d\n", c.f64, c.vi16[o0],	c.f64 + c.vi16[o0]);
    print("%d + %d = %d\n", c.f64, c.vu64[1],	c.f64 + c.vu64[1]);
    print("%d + %d = %d\n", c.f64, c.vf32[o2],	c.f64 + c.vf32[o2]);
    print("%d + %d = %d\n", c.f64, c.vf64[3],	c.f64 + c.vf64[3]);
    print("%d + %d = %d\n", c.f64, c.va[o4],	c.f64 + c.va[o4]);
    print("%d + %d = %d\n", c.a, c.i16,		c.a + c.i16);
    print("%d + %d = %d\n", c.a, c.u64,		c.a + c.u64);
    print("%d + %d = %d\n", c.a, c.f32,		c.a + c.f32);
    print("%d + %d = %d\n", c.a, c.f64,		c.a + c.f64);
    print("%d + %d = %d\n", c.a, c.a,		c.a + c.a);
    print("%d + %d = %d\n", c.a, c.vi16[o0],	c.a + c.vi16[o0]);
    print("%d + %d = %d\n", c.a, c.vu64[1],	c.a + c.vu64[1]);
    print("%d + %d = %d\n", c.a, c.vf32[o2],	c.a + c.vf32[o2]);
    print("%d + %d = %d\n", c.a, c.vf64[3],	c.a + c.vf64[3]);
    print("%d + %d = %d\n", c.a, c.va[o4],	c.a + c.va[o4]);
    print("%d - %d = %d\n", c.i16, c.i16,	c.i16 - c.i16);
    print("%d - %d = %d\n", c.i16, c.u64,	c.i16 - c.u64);
    print("%d - %d = %d\n", c.i16, c.f32,	c.i16 - c.f32);
    print("%d - %d = %d\n", c.i16, c.f64,	c.i16 - c.f64);
    print("%d - %d = %d\n", c.i16, c.a,		c.i16 - c.a);
    print("%d - %d = %d\n", c.i16, c.vi16[o0],	c.i16 - c.vi16[o0]);
    print("%d - %d = %d\n", c.i16, c.vu64[1],	c.i16 - c.vu64[1]);
    print("%d - %d = %d\n", c.i16, c.vf32[o2],	c.i16 - c.vf32[o2]);
    print("%d - %d = %d\n", c.i16, c.vf64[3],	c.i16 - c.vf64[3]);
    print("%d - %d = %d\n", c.i16, c.va[o4],	c.i16 - c.va[o4]);
    print("%d - %d = %d\n", c.u64, c.i16,	c.u64 - c.i16);
    print("%d - %d = %d\n", c.u64, c.u64,	c.u64 - c.u64);
    print("%d - %d = %d\n", c.u64, c.f32,	c.u64 - c.f32);
    print("%d - %d = %d\n", c.u64, c.f64,	c.u64 - c.f64);
    print("%d - %d = %d\n", c.u64, c.a,		c.u64 - c.a);
    print("%d - %d = %d\n", c.u64, c.vi16[o0],	c.u64 - c.vi16[o0]);
    print("%d - %d = %d\n", c.u64, c.vu64[1],  c.u64 - c.vu64[1]);
    print("%d - %d = %d\n", c.u64, c.vf32[o2],	c.u64 - c.vf32[o2]);
    print("%d - %d = %d\n", c.u64, c.vf64[3],	c.u64 - c.vf64[3]);
    print("%d - %d = %d\n", c.u64, c.va[o4],	c.u64 - c.va[o4]);
    print("%d - %d = %d\n", c.f32, c.i16,	c.f32 - c.i16);
    print("%d - %d = %d\n", c.f32, c.u64,	c.f32 - c.u64);
    print("%d - %d = %d\n", c.f32, c.f32,	c.f32 - c.f32);
    print("%d - %d = %d\n", c.f32, c.f64,	c.f32 - c.f64);
    print("%d - %d = %d\n", c.f32, c.a,		c.f32 - c.a);
    print("%d - %d = %d\n", c.f32, c.vi16[o0],	c.f32 - c.vi16[o0]);
    print("%d - %d = %d\n", c.f32, c.vu64[1],	c.f32 - c.vu64[1]);
    print("%d - %d = %d\n", c.f32, c.vf32[o2],	c.f32 - c.vf32[o2]);
    print("%d - %d = %d\n", c.f32, c.vf64[3],	c.f32 - c.vf64[3]);
    print("%d - %d = %d\n", c.f32, c.va[o4],	c.f32 - c.va[o4]);
    print("%d - %d = %d\n", c.f64, c.i16,	c.f64 - c.i16);
    print("%d - %d = %d\n", c.f64, c.u64,	c.f64 - c.u64);
    print("%d - %d = %d\n", c.f64, c.f32,	c.f64 - c.f32);
    print("%d - %d = %d\n", c.f64, c.f64,	c.f64 - c.f64);
    print("%d - %d = %d\n", c.f64, c.a,		c.f64 - c.a);
    print("%d - %d = %d\n", c.f64, c.vi16[o0],	c.f64 - c.vi16[o0]);
    print("%d - %d = %d\n", c.f64, c.vu64[1],	c.f64 - c.vu64[1]);
    print("%d - %d = %d\n", c.f64, c.vf32[o2],	c.f64 - c.vf32[o2]);
    print("%d - %d = %d\n", c.f64, c.vf64[3],	c.f64 - c.vf64[3]);
    print("%d - %d = %d\n", c.f64, c.va[o4],	c.f64 - c.va[o4]);
    print("%d - %d = %d\n", c.a, c.i16,		c.a - c.i16);
    print("%d - %d = %d\n", c.a, c.u64,		c.a - c.u64);
    print("%d - %d = %d\n", c.a, c.f32,		c.a - c.f32);
    print("%d - %d = %d\n", c.a, c.f64,		c.a - c.f64);
    print("%d - %d = %d\n", c.a, c.a,		c.a - c.a);
    print("%d - %d = %d\n", c.a, c.vi16[o0],	c.a - c.vi16[o0]);
    print("%d - %d = %d\n", c.a, c.vu64[1],	c.a - c.vu64[1]);
    print("%d - %d = %d\n", c.a, c.vf32[o2],	c.a - c.vf32[o2]);
    print("%d - %d = %d\n", c.a, c.vf64[3],	c.a - c.vf64[3]);
    print("%d - %d = %d\n", c.a, c.va[o4],	c.a - c.va[o4]);
    print("%d * %d = %d\n", c.i16, c.i16,	c.i16 * c.i16);
    print("%d * %d = %d\n", c.i16, c.u64,	c.i16 * c.u64);
    print("%d * %d = %d\n", c.i16, c.f32,	c.i16 * c.f32);
    print("%d * %d = %d\n", c.i16, c.f64,	c.i16 * c.f64);
    print("%d * %d = %d\n", c.i16, c.a,		c.i16 * c.a);
    print("%d * %d = %d\n", c.i16, c.vi16[o0],	c.i16 * c.vi16[o0]);
    print("%d * %d = %d\n", c.i16, c.vu64[1],	c.i16 * c.vu64[1]);
    print("%d * %d = %d\n", c.i16, c.vf32[o2],	c.i16 * c.vf32[o2]);
    print("%d * %d = %d\n", c.i16, c.vf64[3],	c.i16 * c.vf64[3]);
    print("%d * %d = %d\n", c.i16, c.va[o4],	c.i16 * c.va[o4]);
    print("%d * %d = %d\n", c.u64, c.i16,	c.u64 * c.i16);
    print("%d * %d = %d\n", c.u64, c.u64,	c.u64 * c.u64);
    print("%d * %d = %d\n", c.u64, c.f32,	c.u64 * c.f32);
    print("%d * %d = %d\n", c.u64, c.f64,	c.u64 * c.f64);
    print("%d * %d = %d\n", c.u64, c.a,		c.u64 * c.a);
    print("%d * %d = %d\n", c.u64, c.vi16[o0],	c.u64 * c.vi16[o0]);
    print("%d * %d = %d\n", c.u64, c.vu64[1],  c.u64 * c.vu64[1]);
    print("%d * %d = %d\n", c.u64, c.vf32[o2],	c.u64 * c.vf32[o2]);
    print("%d * %d = %d\n", c.u64, c.vf64[3],	c.u64 * c.vf64[3]);
    print("%d * %d = %d\n", c.u64, c.va[o4],	c.u64 * c.va[o4]);
    print("%d * %d = %d\n", c.f32, c.i16,	c.f32 * c.i16);
    print("%d * %d = %d\n", c.f32, c.u64,	c.f32 * c.u64);
    print("%d * %d = %d\n", c.f32, c.f32,	c.f32 * c.f32);
    print("%d * %d = %d\n", c.f32, c.f64,	c.f32 * c.f64);
    print("%d * %d = %d\n", c.f32, c.a,		c.f32 * c.a);
    print("%d * %d = %d\n", c.f32, c.vi16[o0],	c.f32 * c.vi16[o0]);
    print("%d * %d = %d\n", c.f32, c.vu64[1],	c.f32 * c.vu64[1]);
    print("%d * %d = %d\n", c.f32, c.vf32[o2],	c.f32 * c.vf32[o2]);
    print("%d * %d = %d\n", c.f32, c.vf64[3],	c.f32 * c.vf64[3]);
    print("%d * %d = %d\n", c.f32, c.va[o4],	c.f32 * c.va[o4]);
    print("%d * %d = %d\n", c.f64, c.i16,	c.f64 * c.i16);
    print("%d * %d = %d\n", c.f64, c.u64,	c.f64 * c.u64);
    print("%d * %d = %d\n", c.f64, c.f32,	c.f64 * c.f32);
    print("%d * %d = %d\n", c.f64, c.f64,	c.f64 * c.f64);
    print("%d * %d = %d\n", c.f64, c.a,		c.f64 * c.a);
    print("%d * %d = %d\n", c.f64, c.vi16[o0],	c.f64 * c.vi16[o0]);
    print("%d * %d = %d\n", c.f64, c.vu64[1],	c.f64 * c.vu64[1]);
    print("%d * %d = %d\n", c.f64, c.vf32[o2],	c.f64 * c.vf32[o2]);
    print("%d * %d = %d\n", c.f64, c.vf64[3],	c.f64 * c.vf64[3]);
    print("%d * %d = %d\n", c.f64, c.va[o4],	c.f64 * c.va[o4]);
    print("%d * %d = %d\n", c.a, c.i16,		c.a * c.i16);
    print("%d * %d = %d\n", c.a, c.u64,		c.a * c.u64);
    print("%d * %d = %d\n", c.a, c.f32,		c.a * c.f32);
    print("%d * %d = %d\n", c.a, c.f64,		c.a * c.f64);
    print("%d * %d = %d\n", c.a, c.a,		c.a * c.a);
    print("%d * %d = %d\n", c.a, c.vi16[o0],	c.a * c.vi16[o0]);
    print("%d * %d = %d\n", c.a, c.vu64[1],	c.a * c.vu64[1]);
    print("%d * %d = %d\n", c.a, c.vf32[o2],	c.a * c.vf32[o2]);
    print("%d * %d = %d\n", c.a, c.vf64[3],	c.a * c.vf64[3]);
    print("%d * %d = %d\n", c.a, c.va[o4],	c.a * c.va[o4]);
    print("%d / %d = %d\n", c.i16, c.u64,	c.i16 / c.u64);
    print("%d / %d = %d\n", c.i16, c.f32,	c.i16 / c.f32);
    print("%d / %d = %d\n", c.i16, c.f64,	c.i16 / c.f64);
    print("%d / %d = %d\n", c.i16, c.a,		c.i16 / c.a);
    print("%d / %d = %d\n", c.i16, c.vu64[1],	c.i16 / c.vu64[1]);
    print("%d / %d = %d\n", c.i16, c.vf32[o2],	c.i16 / c.vf32[o2]);
    print("%d / %d = %d\n", c.i16, c.vf64[3],	c.i16 / c.vf64[3]);
    print("%d / %d = %d\n", c.i16, c.va[o4],	c.i16 / c.va[o4]);
    print("%d / %d = %d\n", c.u64, c.u64,	c.u64 / c.u64);
    print("%d / %d = %d\n", c.u64, c.f32,	c.u64 / c.f32);
    print("%d / %d = %d\n", c.u64, c.f64,	c.u64 / c.f64);
    print("%d / %d = %d\n", c.u64, c.a,		c.u64 / c.a);
    print("%d / %d = %d\n", c.u64, c.vu64[1],  c.u64 / c.vu64[1]);
    print("%d / %d = %d\n", c.u64, c.vf32[o2],	c.u64 / c.vf32[o2]);
    print("%d / %d = %d\n", c.u64, c.vf64[3],	c.u64 / c.vf64[3]);
    print("%d / %d = %d\n", c.u64, c.va[o4],	c.u64 / c.va[o4]);
    print("%d / %d = %d\n", c.f32, c.i16,	c.f32 / c.i16);
    print("%d / %d = %d\n", c.f32, c.u64,	c.f32 / c.u64);
    print("%d / %d = %d\n", c.f32, c.f32,	c.f32 / c.f32);
    print("%d / %d = %d\n", c.f32, c.f64,	c.f32 / c.f64);
    print("%d / %d = %d\n", c.f32, c.a,		c.f32 / c.a);
    print("%d / %d = %d\n", c.f32, c.vi16[o0],	c.f32 / c.vi16[o0]);
    print("%d / %d = %d\n", c.f32, c.vu64[1],	c.f32 / c.vu64[1]);
    print("%d / %d = %d\n", c.f32, c.vf32[o2],	c.f32 / c.vf32[o2]);
    print("%d / %d = %d\n", c.f32, c.vf64[3],	c.f32 / c.vf64[3]);
    print("%d / %d = %d\n", c.f32, c.va[o4],	c.f32 / c.va[o4]);
    print("%d / %d = %d\n", c.f64, c.i16,	c.f64 / c.i16);
    print("%d / %d = %d\n", c.f64, c.u64,	c.f64 / c.u64);
    print("%d / %d = %d\n", c.f64, c.f32,	c.f64 / c.f32);
    print("%d / %d = %d\n", c.f64, c.f64,	c.f64 / c.f64);
    print("%d / %d = %d\n", c.f64, c.a,		c.f64 / c.a);
    print("%d / %d = %d\n", c.f64, c.vi16[o0],	c.f64 / c.vi16[o0]);
    print("%d / %d = %d\n", c.f64, c.vu64[1],	c.f64 / c.vu64[1]);
    print("%d / %d = %d\n", c.f64, c.vf32[o2],	c.f64 / c.vf32[o2]);
    print("%d / %d = %d\n", c.f64, c.vf64[3],	c.f64 / c.vf64[3]);
    print("%d / %d = %d\n", c.f64, c.va[o4],	c.f64 / c.va[o4]);
    print("%d / %d = %d\n", c.a, c.u64,		c.a / c.u64);
    print("%d / %d = %d\n", c.a, c.f32,		c.a / c.f32);
    print("%d / %d = %d\n", c.a, c.f64,		c.a / c.f64);
    print("%d / %d = %d\n", c.a, c.a,		c.a / c.a);
    print("%d / %d = %d\n", c.a, c.vu64[1],	c.a / c.vu64[1]);
    print("%d / %d = %d\n", c.a, c.vf32[o2],	c.a / c.vf32[o2]);
    print("%d / %d = %d\n", c.a, c.vf64[3],	c.a / c.vf64[3]);
    print("%d / %d = %d\n", c.a, c.va[o4],	c.a / c.va[o4]);
    print("%d \\ %d = %d\n", c.i16, c.u64,	c.i16 \ c.u64);
    print("%d \\ %d = %d\n", c.i16, c.f32,	c.i16 \ c.f32);
    print("%d \\ %d = %d\n", c.i16, c.f64,	c.i16 \ c.f64);
    print("%d \\ %d = %d\n", c.i16, c.a,	c.i16 \ c.a);
    print("%d \\ %d = %d\n", c.i16, c.vu64[1],	c.i16 \ c.vu64[1]);
    print("%d \\ %d = %d\n", c.i16, c.vf32[o2],	c.i16 \ c.vf32[o2]);
    print("%d \\ %d = %d\n", c.i16, c.vf64[3],	c.i16 \ c.vf64[3]);
    print("%d \\ %d = %d\n", c.i16, c.va[o4],	c.i16 \ c.va[o4]);
    print("%d \\ %d = %d\n", c.u64, c.u64,	c.u64 \ c.u64);
    print("%d \\ %d = %d\n", c.u64, c.f32,	c.u64 \ c.f32);
    print("%d \\ %d = %d\n", c.u64, c.f64,	c.u64 \ c.f64);
    print("%d \\ %d = %d\n", c.u64, c.a,	c.u64 \ c.a);
    print("%d \\ %d = %d\n", c.u64, c.vu64[1],  c.u64 \ c.vu64[1]);
    print("%d \\ %d = %d\n", c.u64, c.vf32[o2],	c.u64 \ c.vf32[o2]);
    print("%d \\ %d = %d\n", c.u64, c.vf64[3],	c.u64 \ c.vf64[3]);
    print("%d \\ %d = %d\n", c.u64, c.va[o4],	c.u64 \ c.va[o4]);
    print("%d \\ %d = %d\n", c.f32, c.u64,	c.f32 \ c.u64);
    print("%d \\ %d = %d\n", c.f32, c.f32,	c.f32 \ c.f32);
    print("%d \\ %d = %d\n", c.f32, c.f64,	c.f32 \ c.f64);
    print("%d \\ %d = %d\n", c.f32, c.a,	c.f32 \ c.a);
    print("%d \\ %d = %d\n", c.f32, c.vu64[1],	c.f32 \ c.vu64[1]);
    print("%d \\ %d = %d\n", c.f32, c.vf32[o2],	c.f32 \ c.vf32[o2]);
    print("%d \\ %d = %d\n", c.f32, c.vf64[3],	c.f32 \ c.vf64[3]);
    print("%d \\ %d = %d\n", c.f32, c.va[o4],	c.f32 \ c.va[o4]);
    print("%d \\ %d = %d\n", c.f64, c.u64,	c.f64 \ c.u64);
    print("%d \\ %d = %d\n", c.f64, c.f32,	c.f64 \ c.f32);
    print("%d \\ %d = %d\n", c.f64, c.f64,	c.f64 \ c.f64);
    print("%d \\ %d = %d\n", c.f64, c.a,	c.f64 \ c.a);
    print("%d \\ %d = %d\n", c.f64, c.vu64[1],	c.f64 \ c.vu64[1]);
    print("%d \\ %d = %d\n", c.f64, c.vf32[o2],	c.f64 \ c.vf32[o2]);
    print("%d \\ %d = %d\n", c.f64, c.vf64[3],	c.f64 \ c.vf64[3]);
    print("%d \\ %d = %d\n", c.f64, c.va[o4],	c.f64 \ c.va[o4]);
    print("%d \\ %d = %d\n", c.a, c.u64,	c.a \ c.u64);
    print("%d \\ %d = %d\n", c.a, c.f32,	c.a \ c.f32);
    print("%d \\ %d = %d\n", c.a, c.f64,	c.a \ c.f64);
    print("%d \\ %d = %d\n", c.a, c.a,		c.a \ c.a);
    print("%d \\ %d = %d\n", c.a, c.vu64[1],	c.a \ c.vu64[1]);
    print("%d \\ %d = %d\n", c.a, c.vf32[o2],	c.a \ c.vf32[o2]);
    print("%d \\ %d = %d\n", c.a, c.vf64[3],	c.a \ c.vf64[3]);
    print("%d \\ %d = %d\n", c.a, c.va[o4],	c.a \ c.va[o4]);
    print("%d %% %d = %d\n", c.i16, c.u64,	c.i16 % c.u64);
    print("%d %% %d = %d\n", c.i16, c.f32,	c.i16 % c.f32);
    print("%d %% %d = %d\n", c.i16, c.f64,	c.i16 % c.f64);
    print("%d %% %d = %d\n", c.i16, c.a,	c.i16 % c.a);
    print("%d %% %d = %d\n", c.i16, c.vu64[1],	c.i16 % c.vu64[1]);
    print("%d %% %d = %d\n", c.i16, c.vf32[o2],	c.i16 % c.vf32[o2]);
    print("%d %% %d = %d\n", c.i16, c.vf64[3],	c.i16 % c.vf64[3]);
    print("%d %% %d = %d\n", c.i16, c.va[o4],	c.i16 % c.va[o4]);
    print("%d %% %d = %d\n", c.u64, c.u64,	c.u64 % c.u64);
    print("%d %% %d = %d\n", c.u64, c.f32,	c.u64 % c.f32);
    print("%d %% %d = %d\n", c.u64, c.f64,	c.u64 % c.f64);
    print("%d %% %d = %d\n", c.u64, c.a,	c.u64 % c.a);
    print("%d %% %d = %d\n", c.u64, c.vu64[1],	c.u64 % c.vu64[1]);
    print("%d %% %d = %d\n", c.u64, c.vf32[o2],	c.u64 % c.vf32[o2]);
    print("%d %% %d = %d\n", c.u64, c.vf64[3],	c.u64 % c.vf64[3]);
    print("%d %% %d = %d\n", c.u64, c.va[o4],	c.u64 % c.va[o4]);
    print("%d %% %d = %d\n", c.f32, c.u64,	c.f32 % c.u64);
    print("%d %% %d = %d\n", c.f32, c.f32,	c.f32 % c.f32);
    print("%d %% %d = %d\n", c.f32, c.f64,	c.f32 % c.f64);
    print("%d %% %d = %d\n", c.f32, c.a,	c.f32 % c.a);
    print("%d %% %d = %d\n", c.f32, c.vu64[1],	c.f32 % c.vu64[1]);
    print("%d %% %d = %d\n", c.f32, c.vf32[o2],	c.f32 % c.vf32[o2]);
    print("%d %% %d = %d\n", c.f32, c.vf64[3],	c.f32 % c.vf64[3]);
    print("%d %% %d = %d\n", c.f32, c.va[o4],	c.f32 % c.va[o4]);
    print("%d %% %d = %d\n", c.f64, c.u64,	c.f64 % c.u64);
    print("%d %% %d = %d\n", c.f64, c.f32,	c.f64 % c.f32);
    print("%d %% %d = %d\n", c.f64, c.f64,	c.f64 % c.f64);
    print("%d %% %d = %d\n", c.f64, c.a,	c.f64 % c.a);
    print("%d %% %d = %d\n", c.f64, c.vu64[1],	c.f64 % c.vu64[1]);
    print("%d %% %d = %d\n", c.f64, c.vf32[o2],	c.f64 % c.vf32[o2]);
    print("%d %% %d = %d\n", c.f64, c.vf64[3],	c.f64 % c.vf64[3]);
    print("%d %% %d = %d\n", c.f64, c.va[o4],	c.f64 % c.va[o4]);
    print("%d %% %d = %d\n", c.a, c.u64,	c.a % c.u64);
    print("%d %% %d = %d\n", c.a, c.f32,	c.a % c.f32);
    print("%d %% %d = %d\n", c.a, c.f64,	c.a % c.f64);
    print("%d %% %d = %d\n", c.a, c.a,		c.a % c.a);
    print("%d %% %d = %d\n", c.a, c.vu64[1],	c.a % c.vu64[1]);
    print("%d %% %d = %d\n", c.a, c.vf32[o2],	c.a % c.vf32[o2]);
    print("%d %% %d = %d\n", c.a, c.vf64[3],	c.a % c.vf64[3]);
    print("%d %% %d = %d\n", c.a, c.va[o4],	c.a % c.va[o4]);
}
t24(0, 1, 2, 3, 4/3, 0, 2, 4);

int8_t		t25i8 = -1;
uint8_t		t25u8 =  1;
int16_t		t25i16 = -2;
uint16_t	t25u16 =  2;
int32_t		t25i32 = -4;
uint32_t	t25u32 =  4;
int64_t		t25i64 = -8;
uint64_t	t25u64 =  8;
float32_t	t25f32 = -4.0;
float64_t	t25f64 =  8.0;
auto		t25w = 4;
auto		t25f = 8;
auto		t25z = 0x80000000000000000;
auto		t25x = 1/2;
auto		t25q = 0x80000000000000000/7;
auto		t25r = 16.0L;
auto		t25dd = 1.5*I;
auto		t25qq = 2/3*I;
auto		t25cc = 1.25L*I;
auto		t25n = null;
int8_t		t25vi8[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
uint8_t		t25vu8[] = {  2, 2, 2, 2, 2, 2, 2, 2, 2, 2 };
int16_t		t25vi16[] = { -3, -3, -3, -3, -3, -3, -3, -3, -3, -3 };
uint16_t	t25vu16[] = {  3, 3, 3, 3, 3, 3, 3, 3, 3, 3 };
int32_t		t25vi32[] = { -5, -5, -5, -5, -5, -5, -5, -5, -5, -5 };
uint32_t	t25vu32[] = {  5, 5, 5, 5, 5, 5, 5, 5, 5, 5 };
int64_t		t25vi64[] = { -9, -9, -9, -9, -9, -9, -9, -9, -9, -9 };
uint64_t	t25vu64[] = {  9, 9, 9, 9, 9, 9, 9, 9, 9, 9 };
float32_t	t25vf32[] = { -5.0, -5.0, -5.0, -5.0, -5.0, -5.0, -5.0, -5.0, -5.0, -5.0 };
float64_t	t25vf64[] = { -9.0, -9.0, -9.0, -9.0, -9.0, -9.0, -9.0, -9.0, -9.0, -9.0 };
auto		t25va[] = { t25w, t25f, t25z, t25x, t25q, t25r, t25dd, t25qq, t25cc, t25n };
int8_t i8t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	     int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	     float32_t f32, float64_t f64, auto a,
	     int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	     int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	     float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[0] - vu8[0] - vi16[0] - vu16[0] - vi32[0] - vu32[0] -
	vi64[0] - vu64[0] - vf32[0] - vf64[0] - va[0] -
	-1;
}
uint8_t u8t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	      int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	      float32_t f32, float64_t f64, auto a,
	      int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	      int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	      float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[1] - vu8[1] - vi16[1] - vu16[1] - vi32[1] - vu32[1] -
	vi64[1] - vu64[1] - vf32[1] - vf64[1] - va[1] -
	1;
}
int16_t i16t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[2] - vu8[2] - vi16[2] - vu16[2] - vi32[2] - vu32[2] -
	vi64[2] - vu64[2] - vf32[2] - vf64[2] - va[2] -
	-2;
}
uint16_t u16t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[3] - vu8[3] - vi16[3] - vu16[3] - vi32[3] - vu32[3] -
	vi64[3] - vu64[3] - vf32[3] - vf64[3] - va[3] -
	2;
}
int32_t i32t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[4] - vu8[4] - vi16[4] - vu16[4] - vi32[4] - vu32[4] -
	vi64[4] - vu64[4] - vf32[4] - vf64[4] - va[4] -
	-4;
}
uint32_t u32t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[5] - vu8[5] - vi16[5] - vu16[5] - vi32[5] - vu32[5] -
	vi64[5] - vu64[5] - vf32[5] - vf64[5] - va[5] -
	4;
}
int64_t i64t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[6] - vu8[6] - vi16[6] - vu16[6] - vi32[6] - vu32[6] -
	vi64[6] - vu64[6] - vf32[6] - vf64[6] - va[6] -
	-8;
}
uint64_t u64t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[7] - vu8[7] - vi16[7] - vu16[7] - vi32[7] - vu32[7] -
	vi64[7] - vu64[7] - vf32[7] - vf64[7] - va[7] -
	8;
}
float32_t f32t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[8] - vu8[8] - vi16[8] - vu16[8] - vi32[8] - vu32[8] -
	vi64[8] - vu64[8] - vf32[8] - vf64[8] - va[8] -
	4.5;
}
float64_t f64t25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	       int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	       float32_t f32, float64_t f64, auto a,
	       int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	       int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	       float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[9] - vu8[9] - vi16[9] - vu16[9] - vi32[9] - vu32[9] -
	vi64[9] - vu64[9] - vf32[9] - vf64[9] - va[9] -
	8.5;
}
auto at25(int8_t i8, uint8_t u8, int16_t i16, uint16_t u16,
	  int32_t i32, uint32_t u32, int64_t i64, uint64_t u64,
	  float32_t f32, float64_t f64, auto a,
	  int8_t vi8[], uint8_t vu8[], int16_t vi16[], uint16_t vu16[],
	  int32_t vi32[], uint32_t vu32[], int64_t vi64[], uint64_t vu64[],
	  float32_t vf32[], float64_t vf64[], auto va[]) {
    return i8 - u8 - i16 - u16 - i32 - u32 - i64 - u64 - f32 - f64 - a -
	vi8[0] - vu8[0] - vi16[0] - vu16[0] - vi32[0] - vu32[0] -
	vi64[0] - vu64[0] - vf32[0] - vf64[0] - va[0] -
	42;
}
print("%d\n", i8t25(t25i8, t25u8, t25i16, t25u16,
		    t25i32, t25u32, t25i64, t25u64,
		    t25f32, t25f64, t25w,
		    t25vi8, t25vu8, t25vi16, t25vu16,
		    t25vi32, t25vu32, t25vi64, t25vu64,
		    t25vf32, t25vf64, t25va));
print("%d\n", u8t25(t25i8, t25u8, t25i16, t25u16,
		    t25i32, t25u32, t25i64, t25u64,
		    t25f32, t25f64, t25f,
		    t25vi8, t25vu8, t25vi16, t25vu16,
		    t25vi32, t25vu32, t25vi64, t25vu64,
		    t25vf32, t25vf64, t25va));
print("%d\n", i16t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u16t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25x,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", i32t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25q,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u32t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25r,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", i64t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25dd,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u64t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25qq,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", f32t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25cc,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", f64t25(t25i8, t25u8, t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25n,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", at25(t25i8, t25u8, t25i16, t25u16,
		   t25i32, t25u32, t25i64, t25u64,
		   t25f32, t25f64, t25w,
		   t25vi8, t25vu8, t25vi16, t25vu16,
		   t25vi32, t25vu32, t25vi64, t25vu64,
		   t25vf32, t25vf64, t25va));
print("%d\n", i8t25(t25i8,
		    u8t25(t25i8, t25u8, t25i16, t25u16,
			  t25i32, t25u32, t25i64, t25u64,
			  t25f32, t25f64, t25f,
			  t25vi8, t25vu8, t25vi16, t25vu16,
			  t25vi32, t25vu32, t25vi64, t25vu64,
			  t25vf32, t25vf64, t25va),
		    t25i16, t25u16,
		    t25i32, t25u32, t25i64, t25u64,
		    t25f32, t25f64, t25w,
		    t25vi8, t25vu8, t25vi16, t25vu16,
		    t25vi32, t25vu32, t25vi64, t25vu64,
		    t25vf32, t25vf64, t25va));
print("%d\n", u8t25(i8t25(t25i8,
			  u8t25(t25i8, t25u8, t25i16, t25u16,
				t25i32, t25u32, t25i64, t25u64,
				t25f32, t25f64, t25f,
				t25vi8, t25vu8, t25vi16, t25vu16,
				t25vi32, t25vu32, t25vi64, t25vu64,
				t25vf32, t25vf64, t25va),
			  t25i16, t25u16,
			  t25i32, t25u32, t25i64, t25u64,
			  t25f32, t25f64, t25w,
			  t25vi8, t25vu8, t25vi16, t25vu16,
			  t25vi32, t25vu32, t25vi64, t25vu64,
			  t25vf32, t25vf64, t25va),
		    t25u8, t25i16, t25u16,
		    t25i32, t25u32, t25i64, t25u64,
		    t25f32, t25f64, t25f,
		    t25vi8, t25vu8, t25vi16, t25vu16,
		    t25vi32, t25vu32, t25vi64, t25vu64,
		    t25vf32, t25vf64, t25va));
print("%d\n", i16t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25i16, t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u16t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25u16,
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", i32t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25i32, t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u32t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25u32, t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", i64t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25i64, t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", u64t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
	 				     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
					 		 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25u64,
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", f32t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
	 				     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
					 		 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
			 				 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
				 		   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
						 	 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
			 				       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
				 	     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
			 				 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25f32, t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", f64t25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
	 				     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
					 		 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
			 				 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
				 		   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
						 	 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
			 				       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
				 	     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
			 				 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    f32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
	 				     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
					 	   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
						 	 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
		 				   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
		 					 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
						 	       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
							 		   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
		 					 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
				 	     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
		 				   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
				 			 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i64t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
					 			     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
	 						 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
			 				 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
					 	   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i32t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  u16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
			 				       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							i16t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       u8t25(i8t25(t25i8,
									   u8t25(t25i8, t25u8, t25i16, t25u16,
										 t25i32, t25u32, t25i64, t25u64,
										 t25f32, t25f64, t25f,
										 t25vi8, t25vu8, t25vi16, t25vu16,
										 t25vi32, t25vu32, t25vi64, t25vu64,
										 t25vf32, t25vf64, t25va),
									   t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25w,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25z,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     t25f64, t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));
print("%d\n", at25(i8t25(t25i8,
			   u8t25(t25i8, t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25w,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		     u8t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u8, t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25f,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i16, t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u16t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u16,
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
		 			     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i32, t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u32, t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    i64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
	 				     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
					 		 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25i64, t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    u64t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
			 				 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
				 		   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
						 	 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
			 				       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
				 	     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
			 				 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25u64,
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
		    f32t25(i8t25(t25i8,
				 u8t25(t25i8, t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25w,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   u8t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u8, t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25f,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i16, t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u16t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u16,
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i32, t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u32t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
	 				     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
					 	   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
						 	 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u32, t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  i64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
		 				   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
		 					 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
						 	       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
							 		   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25i64, t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			  u64t25(i8t25(t25i8,
				       u8t25(t25i8, t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25w,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 u8t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u8, t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25f,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i16, t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u16t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u16,
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
		 					 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
				 	     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i32, t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				u32t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
		 				   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
				 			 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25u32, t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				i64t25(i8t25(t25i8,
					     u8t25(t25i8, t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25w,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       u8t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u8, t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25f,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i16, t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u16t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
					 			     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u16,
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      i32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
	 						 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25i32, t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				      u32t25(i8t25(t25i8,
						   u8t25(t25i8, t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25w,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     u8t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u8, t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25f,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
			 				 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i16, t25u16,
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    u16t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25u16,
					 	   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					    i32t25(i8t25(t25i8,
							 u8t25(t25i8, t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25w,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   u8t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u8, t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25f,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  i16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25i16, t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						  u16t25(i8t25(t25i8,
							       u8t25(t25i8, t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25w,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 u8t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25u8, t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25f,
							       t25vi8, t25vu8, t25vi16, t25vu16,
			 				       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							i16t25(i8t25(t25i8,
								     u8t25(t25i8, t25u8, t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25f,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25w,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       u8t25(i8t25(t25i8,
									   u8t25(t25i8, t25u8, t25i16, t25u16,
										 t25i32, t25u32, t25i64, t25u64,
										 t25f32, t25f64, t25f,
										 t25vi8, t25vu8, t25vi16, t25vu16,
										 t25vi32, t25vu32, t25vi64, t25vu64,
										 t25vf32, t25vf64, t25va),
									   t25i16, t25u16,
									   t25i32, t25u32, t25i64, t25u64,
									   t25f32, t25f64, t25w,
									   t25vi8, t25vu8, t25vi16, t25vu16,
									   t25vi32, t25vu32, t25vi64, t25vu64,
									   t25vf32, t25vf64, t25va),
								     t25u8, t25i16, t25u16,
								     t25i32, t25u32, t25i64, t25u64,
								     t25f32, t25f64, t25f,
								     t25vi8, t25vu8, t25vi16, t25vu16,
								     t25vi32, t25vu32, t25vi64, t25vu64,
								     t25vf32, t25vf64, t25va),
							       t25i16, t25u16,
							       t25i32, t25u32, t25i64, t25u64,
							       t25f32, t25f64, t25z,
							       t25vi8, t25vu8, t25vi16, t25vu16,
							       t25vi32, t25vu32, t25vi64, t25vu64,
							       t25vf32, t25vf64, t25va),
							 t25u16,
							 t25i32, t25u32, t25i64, t25u64,
							 t25f32, t25f64, t25z,
							 t25vi8, t25vu8, t25vi16, t25vu16,
							 t25vi32, t25vu32, t25vi64, t25vu64,
							 t25vf32, t25vf64, t25va),
						   t25i32, t25u32, t25i64, t25u64,
						   t25f32, t25f64, t25z,
						   t25vi8, t25vu8, t25vi16, t25vu16,
						   t25vi32, t25vu32, t25vi64, t25vu64,
						   t25vf32, t25vf64, t25va),
					     t25u32, t25i64, t25u64,
					     t25f32, t25f64, t25z,
					     t25vi8, t25vu8, t25vi16, t25vu16,
					     t25vi32, t25vu32, t25vi64, t25vu64,
					     t25vf32, t25vf64, t25va),
				       t25i64, t25u64,
				       t25f32, t25f64, t25z,
				       t25vi8, t25vu8, t25vi16, t25vu16,
				       t25vi32, t25vu32, t25vi64, t25vu64,
				       t25vf32, t25vf64, t25va),
				 t25u64,
				 t25f32, t25f64, t25z,
				 t25vi8, t25vu8, t25vi16, t25vu16,
				 t25vi32, t25vu32, t25vi64, t25vu64,
				 t25vf32, t25vf64, t25va),
			   t25f32, t25f64, t25z,
			   t25vi8, t25vu8, t25vi16, t25vu16,
			   t25vi32, t25vu32, t25vi64, t25vu64,
			   t25vf32, t25vf64, t25va),
			f64t25(i8t25(t25i8,
			       u8t25(t25i8, t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25i16, t25u16,
			       t25i32, t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25w,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			 u8t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25u8, t25i16, t25u16,
			       t25i32, t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25f,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			i16t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25i16, t25u16,
			       t25i32, t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			u16t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25u16,
			       t25i32, t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			i32t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25i32, t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			u32t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25u32, t25i64, t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			i64t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
				 		       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
		 				       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
				 			     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
					 		     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
	 				   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25i64, t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			u64t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
		 			   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
	 							   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
	 					 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
	 							   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i64t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
					 	 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
	 					       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
	 					       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
	 					 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i32t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
			 				     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						u16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25u64,
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			f32t25(i8t25(t25i8,
				     u8t25(t25i8, t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25w,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       u8t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u8, t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25f,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i16, t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u16t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u16,
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
					 	       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i32, t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u32t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
		 				 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
			 						 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u32, t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      i64t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
		 						   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
	 					       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
		 				       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i32t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						u16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
				 			     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25i64, t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			      u64t25(i8t25(t25i8,
					   u8t25(t25i8, t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25w,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     u8t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u8, t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25f,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i16, t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u16t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
						 	     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u16,
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
							 	   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i32, t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    u32t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
		 				       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
	 						     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i32t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
				 			     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						u16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25u32, t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				    i64t25(i8t25(t25i8,
						 u8t25(t25i8, t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25w,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   u8t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u8, t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25f,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i16, t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u16t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u16,
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  i32t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
					 				 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						u16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25i32, t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					  u32t25(i8t25(t25i8,
						       u8t25(t25i8, t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25w,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 u8t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u8, t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25f,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i16, t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						u16t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25u16,
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						i32t25(i8t25(t25i8,
							     u8t25(t25i8, t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25w,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       u8t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u8, t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25f,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      i16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25i16, t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						      u16t25(i8t25(t25i8,
								   u8t25(t25i8, t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25w,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     u8t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25u8, t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25f,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							    i16t25(i8t25(t25i8,
									 u8t25(t25i8, t25u8, t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25f,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25w,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   u8t25(i8t25(t25i8,
			 						       u8t25(t25i8, t25u8, t25i16, t25u16,
										     t25i32, t25u32, t25i64, t25u64,
										     t25f32, t25f64, t25f,
										     t25vi8, t25vu8, t25vi16, t25vu16,
										     t25vi32, t25vu32, t25vi64, t25vu64,
										     t25vf32, t25vf64, t25va),
									       t25i16, t25u16,
									       t25i32, t25u32, t25i64, t25u64,
									       t25f32, t25f64, t25w,
									       t25vi8, t25vu8, t25vi16, t25vu16,
									       t25vi32, t25vu32, t25vi64, t25vu64,
									       t25vf32, t25vf64, t25va),
									 t25u8, t25i16, t25u16,
									 t25i32, t25u32, t25i64, t25u64,
									 t25f32, t25f64, t25f,
									 t25vi8, t25vu8, t25vi16, t25vu16,
									 t25vi32, t25vu32, t25vi64, t25vu64,
									 t25vf32, t25vf64, t25va),
								   t25i16, t25u16,
								   t25i32, t25u32, t25i64, t25u64,
								   t25f32, t25f64, t25z,
								   t25vi8, t25vu8, t25vi16, t25vu16,
								   t25vi32, t25vu32, t25vi64, t25vu64,
								   t25vf32, t25vf64, t25va),
							     t25u16,
							     t25i32, t25u32, t25i64, t25u64,
							     t25f32, t25f64, t25z,
							     t25vi8, t25vu8, t25vi16, t25vu16,
							     t25vi32, t25vu32, t25vi64, t25vu64,
							     t25vf32, t25vf64, t25va),
						       t25i32, t25u32, t25i64, t25u64,
						       t25f32, t25f64, t25z,
						       t25vi8, t25vu8, t25vi16, t25vu16,
						       t25vi32, t25vu32, t25vi64, t25vu64,
						       t25vf32, t25vf64, t25va),
						 t25u32, t25i64, t25u64,
						 t25f32, t25f64, t25z,
						 t25vi8, t25vu8, t25vi16, t25vu16,
						 t25vi32, t25vu32, t25vi64, t25vu64,
						 t25vf32, t25vf64, t25va),
					   t25i64, t25u64,
					   t25f32, t25f64, t25z,
					   t25vi8, t25vu8, t25vi16, t25vu16,
					   t25vi32, t25vu32, t25vi64, t25vu64,
					   t25vf32, t25vf64, t25va),
				     t25u64,
				     t25f32, t25f64, t25z,
				     t25vi8, t25vu8, t25vi16, t25vu16,
				     t25vi32, t25vu32, t25vi64, t25vu64,
				     t25vf32, t25vf64, t25va),
			       t25f32, t25f64, t25z,
			       t25vi8, t25vu8, t25vi16, t25vu16,
			       t25vi32, t25vu32, t25vi64, t25vu64,
			       t25vf32, t25vf64, t25va),
			 t25f64, t25z,
			 t25vi8, t25vu8, t25vi16, t25vu16,
			 t25vi32, t25vu32, t25vi64, t25vu64,
			 t25vf32, t25vf64, t25va),
		     t25z,
		     t25vi8, t25vu8, t25vi16, t25vu16,
		     t25vi32, t25vu32, t25vi64, t25vu64,
		     t25vf32, t25vf64, t25va));

int8_t		t26i8;
uint8_t		t26u8;
int16_t		t26i16;
uint16_t	t26u16;
int32_t		t26i32;
uint32_t	t26u32;
int64_t		t26i64;
uint64_t	t26u64;
float32_t	t26f32;
float64_t	t26f64;
auto		t26a;
for (t26i8 = -10; t26i8 < 10; ++t26i8)		;	print("%d\n", t26i8);
for (t26u8 = 0; t26u8 < 20; ++t26u8)		;	print("%d\n", t26u8);
for (t26i16 = -100; t26i16 < 100; ++t26i16)	;	print("%d\n", t26i16);
for (t26u16 = 0; t26u16 < 200; ++t26u16)	;	print("%d\n", t26u16);
for (t26i32 = -1000; t26i32 < 1000; ++t26i32)	;	print("%d\n", t26i32);
for (t26u32 = 0; t26u32 < 20000; ++t26u32)	;	print("%d\n", t26u32);
for (t26i64 = -10000; t26i64 < 10000; ++t26i64)	;	print("%d\n", t26i64);
for (t26u64 = 0; t26u64 < 20000; ++t26u64)	;	print("%d\n", t26u64);
for (t26f32 = -10; t26f32 < 10; ++t26f32)	;	print("%d\n", t26f32);
for (t26f64 = -100; t26f64 < 100; ++t26f64)	;	print("%d\n", t26f64);
for (t26a = -10; t26a < 10; ++t26a)		;	print("%d\n", t26a);
for (t26a = -10/3; t26a < 10/3; ++t26a)		;	print("%d\n", t26a);
t26i8 = -10;	while (t26i8 < 10)	++t26i8;	print("%d\n", t26i8);
t26u8 = 0;	while (t26u8 < 20)	++t26u8;	print("%d\n", t26u8);
t26i16 = -100;	while (t26i16 < 100)	++t26i16;	print("%d\n", t26i16);
t26u16 = 0;	while (t26u16 < 200)	++t26u16;	print("%d\n", t26u16);
t26i32 = -1000;	while (t26i32 < 1000)	++t26i32;	print("%d\n", t26i32);
t26u32 = 0;	while (t26u32 < 20000)	++t26u32;	print("%d\n", t26u32);
t26i64 = -10000;while (t26i64 < 10000)	++t26i64;	print("%d\n", t26i64);
t26u64 = 0;	while (t26u64 < 20000)	++t26u64;	print("%d\n", t26u64);
t26f32 = -10;	while (t26f32 < 10)	++t26f32;	print("%d\n", t26f32);
t26f64 = -100;	while (t26f64 < 100)	++t26f64;	print("%d\n", t26f64);
t26a = -10;	while (t26a < 10)	++t26a;		print("%d\n", t26a);
t26a = -10/3;	while (t26a < 10/3)	++t26a;		print("%d\n", t26a);
t26i8 = -10;	do ++t26i8;	while (t26i8 < 10);	print("%d\n", t26i8);
t26u8 = 0;	do ++t26u8;	while (t26u8 < 20);	print("%d\n", t26u8);
t26i16 = -100;	do ++t26i16;	while (t26i16 < 100);	print("%d\n", t26i16);
t26u16 = 0;	do ++t26u16;	while (t26u16 < 200);	print("%d\n", t26u16);
t26i32 = -1000;	do ++t26i32;	while (t26i32 < 1000);	print("%d\n", t26i32);
t26u32 = 0;	do ++t26u32;	while (t26u32 < 20000);	print("%d\n", t26u32);
t26i64 = -10000;do ++t26i64;	while (t26i64 < 10000);	print("%d\n", t26i64);
t26u64 = 0;	do ++t26u64;	while (t26u64 < 20000);	print("%d\n", t26u64);
t26f32 = -10;	do ++t26f32;	while (t26f32 < 10);	print("%d\n", t26f32);
t26f64 = -100;	do ++t26f64;	while (t26f64 < 100);	print("%d\n", t26f64);
t26a = -10;	do ++t26a;	while (t26a < 10);	print("%d\n", t26a);
t26a = -10/3;	do ++t26a;	while (t26a < 10/3);	print("%d\n", t26a);
t26i8 = 10;
switch (t26i8) {
	case 0:	case 1 ... 9:	print("error\n");	break;
	case 10:					break;
	default:		print("error\n");	break;
}
t26u8 = 3;
switch (t26u8) {
	case 0:	case 1: case 2:	print("error\n");	break;
	case 3:						break;
	case 4: default:	print("error\n");	break;
}
for (t26i32 = 0, t26i64 = 0; t26i32 < 10; t26i32++) {
    if (t26i32 & 1)
	continue;
    ++t26i64;
}
print("%d %d\n", t26i32, t26i64);
for (t26u32 = t26u64 = 0; t26u32 < 10; t26u32++) {
    if (t26u32 > 5)
	break;
    t26u64 += t26u32;
}
print("%d %d\n", t26u32, t26u64);

class t27s_t {
    int8_t		i8;
    int8_t		vi8[];
    string_t isa() { return "t27s"; }
};
class t27u_t : t27s_t {
    uint8_t		u8;
    uint8_t		vu8[];
    string_t isa() { return "t27u"; }
};
class t27f_t : t27u_t {
    float64_t		f64;
    float64_t		vf64[];
    string_t isa() { return "t27f"; }
};
class t27a_t : t27f_t {
    auto		a;
    auto		va[];
    string_t isa() { return "t27a"; }
};
t27s_t t27s = {
    1, { 11 },
};
t27u_t t27u = {
    2, { 22 },
    3, { 33 },
};
t27f_t t27f = {
    4, { 44 },
    5, { 55 },
    6, { 66 },
};
t27a_t t27a = {
    7, { 77 },
    8, { 88 },
    9, { 99 },
    1/2, { 11/2 },
};
print("\
%s\n\
s:	%d %d\n\
%s\n\
s:	%d %d\n\
u:	%d %d\n\
%s\n\
s:	%d %d\n\
u:	%d %d\n\
f:	%d %d\n\
%s\n\
s:	%d %d\n\
u:	%d %d\n\
f:	%d %d\n\
a:	%d %d\n",
      t27s.isa(),
      t27s.i8,	t27s.vi8[0],
      t27u.isa(),
      t27u.i8,	t27u.vi8[0],
      t27u.u8,	t27u.vu8[0],
      t27f.isa(),
      t27f.i8,	t27f.vi8[0],
      t27f.u8,	t27f.vu8[0],
      t27f.f64,	t27f.vf64[0],
      t27a.isa(),
      t27a.i8,	t27a.vi8[0],
      t27a.u8,	t27a.vu8[0],
      t27a.f64,	t27a.vf64[0],
      t27a.a,	t27a.va[0]
);

class t28c_t {
    int8_t		i8;
    int8_t		vi8[];
    t28c_t () {
	if (!i8)
	    i8 = 1;
	if (!vi8)
	    vi8 = { 1 };
    }
};
t28c_t t28c = {};
print("%d %d\n", t28c.i8, t28c.vi8[0]);
t28c = { 2, { 2 } };
print("%d %d\n", t28c.i8, t28c.vi8[0]);

/* missing test, vector of classes */
class t29c_t {
    int16_t	i16;
    int32_t	i32;
    uint32_t	u32;
    int64_t	i64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	a;
    int16_t	vi16[];
    int32_t	vi32[];
    uint32_t	vu32[];
    int64_t	vi64[];
    uint64_t	vu64[];
    float32_t	vf32[];
    float64_t	vf64[];
    auto	va[];
};
t29c_t t29v[] = {
    { 1, 2, 3, 4, 5, 6.0, 7.0, 1/2,
	{ 8 }, { 9 }, { 10 }, { 11 }, { 12 }, { 13.0 }, { 14.0 }, { 15/2 }
    },
};
print("\
i16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
a:	%d\n\
vi16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
va:	%d\n",
      t29v[0].i16,
      t29v[0].i32,
      t29v[0].u32,
      t29v[0].i64,
      t29v[0].u64,
      t29v[0].a,
      t29v[0].vi16[0],
      t29v[0].vi32[0],
      t29v[0].vu32[0],
      t29v[0].vi64[0],
      t29v[0].vu64[0],
      t29v[0].va[0]);

/*
An exception occurred. Exception Nr. 20
 */
try {
    throw 20;
}
catch (auto t30e) {
    print("An exception occurred. Exception Nr. %d\n", t30e);
}
/*
Innermost catch: string
Topmost catch: string
 */
try {
    try {
	throw "string";
    }
    catch (auto t30ie) {
	print("Innermost catch: %s\n", t30ie);
	throw;
    }
}
catch (auto te) {
    print("Topmost catch: %s\n", te);
}
/*
My exception happened
(1) handled typed exception: My exception happened
(2) handled typed exception: My exception happened
 */
class t30_exception_t {
    string_t what() {
	return "My exception happened";
    }
};
t30_exception_t t30_e = {};
try {
    throw t30_e;
}
catch (t30_exception_t t30_ec) {
    print("%s\n", t30_ec.what());
}
void t30_handle_exception_0() {
    try {
	throw;
    }
    catch (t30_exception_t ce) {
	print("(1) handled typed exception: %s\n", ce.what());
    }
    catch (auto e) {
	print("error %d\n", __LINE__);
    }
}
void t30_f0() {
    try {
	throw t30_e;
    }
    catch (auto e) {
	t30_handle_exception_0();
    }
}
t30_f0();
void t30_handle_exception_1(auto except) {
    try {
	throw except;
    }
    catch (t30_exception_t ce) {
	print("(2) handled typed exception: %s\n", ce.what());
    }
    catch (auto e) {
	print("error %d\n", __LINE__);
    }
}
void t30_f1() {
    try {
	throw t30_e;
    }
    catch (auto e) {
	t30_handle_exception_1(e);
    }
}
t30_f1();
/*
--
in try block, throwing "5"...
in catch: "5"
in finally block...
 */
try {
    print("--\nin try block, throwing \"5\"...\n");
    throw "5";
}
catch (string_t t30se) {
    print("in catch: %#s\n", t30se);
}
catch (auto ae) {
    print("error %d\n", __LINE__);
}
finally {
    print("in finally block...\n");
}
/*
--
in top try...
in inner try, throwing "3"...
in inner typed catch: "3"
in inner finally, throwing "2"...
in top typed catch: "2"
in top finally...
 */
try {
    print("--\nin top try...\n");
    try {
	print("in inner try, throwing \"3\"...\n");
	throw "3";
    }
    catch (string_t t30ise) {
	print("in inner typed catch: %#s\n", t30ise);
    }
    catch (auto t30iae) {
	print("error %d\n", __LINE__);
    }
    finally {
	print("in inner finally, throwing \"2\"...\n");
	/* this must throw to the top try */
	throw "2";
    }
}
catch (string_t t30tse) {
    print("in top typed catch: %#s\n", t30tse);
}
catch (auto t30tae) {
    print("error %d\n", __LINE__);
}
finally {
    print("in top finally...\n");
}
/*
--
in top try...
in inner try, throwing "3"...
in inner typed catch: "3"
in inner finally...
in top finally...
 */
try {
    print("--\nin top try...\n");
    try {
	print("in inner try, throwing \"3\"...\n");
	throw "3";
    }
    catch (string_t t30ise1) {
	print("in inner typed catch: %#s\n", t30ise1);
    }
    catch (auto t30iae1) {
	print("error %d\n", __LINE__);
    }
    finally {
	print("in inner finally...\n");
    }
}
catch (string_t t30tse1) {
    print("in top typed catch: %#s\n", t30tse1);
}
catch (auto t30tae1) {
    print("error %d\n", __LINE__);
}
finally {
    print("in top finally...\n");
}
/*
--
in top try...
in inner try...
in inner finally...
in top finally...
 */
try {
    print("--\nin top try...\n");
    try {
	print("in inner try...\n");
    }
    catch (string_t t30ise2) {
	print("in inner typed catch: %#s\n", t30ise2);
    }
    catch (auto t30iae2) {
	print("error %d\n", __LINE__);
    }
    finally {
	print("in inner finally...\n");
    }
}
catch (string_t t30tse2) {
    print("in top typed catch: %#s\n", t30tse2);
}
catch (auto t30tae2) {
    print("error %d\n", __LINE__);
}
finally {
    print("in top finally...\n");
}
/*
--
in top try...
in inner try, throwing null...
in inner catch: null
in inner finally...
in top finally...
 */
try {
    print("--\nin top try...\n");
    try {
	print("in inner try, throwing null...\n");
	throw null;
    }
    catch (auto t30iae3) {
	print("in inner catch: %#s\n", t30iae3);
    }
    finally {
	print("in inner finally...\n");
    }
}
catch (auto t30tae3) {
    print("in top typed catch: %#s\n", t30tae3);
}
finally {
    print("in top finally...\n");
}
/*
 * These are commented because (arguably) must cause a parse time error:
 ---
// <stdin>:2:5:error: goto leaves 'try' block
try {
    goto out;
}
out:
    ;
---
// <stdin>:1:1:error: goto enters 'try' block
goto in;
try {
    in:
	;
}
---
// <stdin>:2:5:error: 'return' leaves 'try' block
try {
    return;
}
---
// <stdin>:3:2:error: 'break' leaves 'try' block
for (;;) {
    try {
	break;
    }
}
---
// <stdin>:3:2:error: 'continue' leaves 'try' block
for (;;) {
    try {
	continue;
    }
}
 ---
// <stdin>:4:5:error: goto leaves 'catch' block
try {
}
catch (auto e) {
    goto out;
}
out:
    ;
---
// <stdin>:1:1:error: goto enters 'catch' block
goto in;
try {
}
catch (auto e) {
    in:
	;
}
---
// <stdin>:4:5:error: 'return' leaves 'catch' block
try {
}
catch (auto e) {
    return;
}
---
// <stdin>:5:2:error: 'break' leaves 'catch' block
for (;;) {
    try {
    }
    catch (auto e) {
	break;
    }
}
---
// <stdin>:5:2:error: 'continue' leaves 'catch' block
for (;;) {
    try {
    }
    catch (auto e) {
	continue;
    }
}
 ---
// <stdin>:6:5:error: goto leaves 'finally' block
try {
}
catch (auto e) {
}
finally {
    goto out;
}
out:
    ;
---
// <stdin>:1:1:error: goto enters 'finally' block
goto in;
try {
}
catch (auto e) {
}
finally {
    in:
	;
}
---
// <stdin>:6:5:error: 'return' leaves 'finally' block
try {
}
catch (auto e) {
}
finally {
    return;
}
---
// <stdin>:7:2:error: 'break' leaves 'finally' block
for (;;) {
    try {
    }
    catch (auto e) {
    }
    finally {
	break;
    }
}
---
// <stdin>:7:2:error: 'continue' leaves 'finally' block
for (;;) {
    try {
    }
    catch (auto e) {
    }
    finally {
	continue;
    }
}
 */

auto t31va[3] = { 2: 20, 0: 1, 44, };
if (t31va[0] != 1 || t31va[1] != 44 || t31va[2] != 20)
    print("error %d\n", __LINE__);
class t31a_t {
    int32_t	s32;
    uint32_t	u32;
    auto	any;
};
t31a_t t31a = {
    44,
    any:	22,
    u32:	66,
};
if (t31a.s32 != 44 || t31a.u32 != 66 || t31a.any != 22)
    print("error %d\n", __LINE__);
class t31b_t {
    int8_t	s8;
    uint8_t	u8;
    int16_t	s16;
    uint16_t	u16;
    int32_t	s32;
    uint32_t	u32;
    int64_t	s64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	any;
};
t31b_t t31b = {
    any:	true,
    u32:	  32,
    s16:	 -16,
    f64:	  64.0,
    s32:	 -32,
    u8:		   8,
    f32:	  32.0,
    s8:		  -8,
    s64:	 -64,
		  44,
    u16:	  16,
};
if ( t31b.s8 !=   -8 ||  t31b.u8 !=    8 ||
    t31b.s16 !=  -16 || t31b.u16 !=   16 ||
    t31b.s32 !=  -32 || t31b.u32 !=   32 ||
    /* u64 field must initialize to 44, as it follows the s64 field */
    t31b.s64 !=  -64 || t31b.u64 !=   44 ||
    t31b.f32 != 32.0 || t31b.f64 != 64.0 ||
    t31b.any != true)			print("error %d\n", __LINE__);
uint8_t		t31_u8  =   8;
int32_t		t31_s32 = -32;
int64_t		t31_s64 = -64;
uint64_t	t31_u64 =  64;
t31b_t t31bb = {
    f64:	 t31_s64 * (1/64),
    any:	 null,
    u32:	 t31_u8 * 4,
     u8:	 8,
     s8:	 t31_s64 / 8,
    s64:	 t31_s64,
    u64:	 t31_u64,
    f32:	 1.0 / t31_s32,
    s32:	-32,
};
print("\
s8:	%d\n\
u8:	%d\n\
s16:	%d\n\
u16:	%d\n\
s32:	%d\n\
u32:	%d\n\
s64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
any:	%d\n",
    t31bb.s8,  t31bb.u8,  t31bb.s16, t31bb.u16,
    t31bb.s32, t31bb.u32, t31bb.s64, t31bb.u64,
    t31bb.f32, t31bb.f64, t31bb.any);

/* Test not properly tested earlier cases of register starving due
 * due to too many values needing to be saved/restored */
auto t32v[] = { 1, 2, 3 };
auto t32f()
{
    auto i, n = 3;
    for (i = 0; i < n; i++) {
	t32v[i] *= 10;
	print("%d\n", t32v[i]);
    }
    return n;
}
t32f();

auto t33f0(...)
{
    auto i, n = sizeof(...);
    for (i = 0; i < n; i++) {
	...[i] = i * 10;
	if (...[i] != i * 10)		print("error %d\n", __LINE__);
    }
    return n;
}
t33f0(1, 2, 3);
auto t33f1(...)
{
    auto i, n = sizeof(...);
    for (i = 0; i < n; i++)
	print("%d\n", ...[i]);
    return n;
}
t33f1(0, 1, 2);
auto t33f2(...)
{
    auto i, n = sizeof(...);
    for (i = 0; i < n; i++) {
	...[i]++;
	print("%d\n", ...[i]);
    }
    return n;
}
t33f2(1, 2, 3);
auto t33f3(...)
{
    auto i, n = sizeof(...);
    for (i = 0; i < n; i++) {
	++...[i];
	print("%d\n", ...[i]);
    }
    return n;
}
t33f3(1, 2, 3);
auto t33_f0(...)				{ return sizeof(...); }
auto t33_f1(auto v1, ...)			{ return sizeof(...); }
auto t33_f2(auto v1, auto v2, ...)		{ return sizeof(...); }
auto t33_f3(auto v1, auto v2, auto v3, ...)	{ return sizeof(...); }
void t33_f_t1(void)
{
    auto v1 = 1, v2 = 2, v3 = 3;
    if (t33_f0(v1, v2, v3) != 3)	print("error %d\n", __LINE__);
    if (t33_f1(v1, v2, v3) != 2)	print("error %d\n", __LINE__);
    if (t33_f2(v1, v2, v3) != 1)	print("error %d\n", __LINE__);
    if (t33_f3(v1, v2, v3) != 0)	print("error %d\n", __LINE__);
    if (t33_f0() != 0)			print("error %d\n", __LINE__);
    if (t33_f1(v1) != 0)		print("error %d\n", __LINE__);
    if (t33_f2(v1, v2) != 0)		print("error %d\n", __LINE__);
    if (t33_f3(v1, v2, v3) != 0)	print("error %d\n", __LINE__);
    if (t33_f0(v1) != 1)		print("error %d\n", __LINE__);
    if (t33_f1(v1, v2) != 1)		print("error %d\n", __LINE__);
    if (t33_f2(v1, v2, v3) != 1)	print("error %d\n", __LINE__);
    if (t33_f3(v1, v2, v3, -1) != 1)	print("error %d\n", __LINE__);
}
t33_f_t1();
class t33_c_t {
    auto f0(...) {
	auto r = 0, n = sizeof(...);
	for (--n; n >= 0; --n)
	    r += ...[n];
	return r;
    }
    auto f1(auto v1, ...) {
	auto r = v1, n = sizeof(...);
	for (--n; n >= 0; --n)
	    r += ...[n];
	return r;
    }
    auto f2(auto v1, auto v2, ...) {
	auto r = v1 + v2, n = sizeof(...);
	for (--n; n >= 0; --n)
	    r += ...[n];
	return r;
    }
};
void t33_f_t2(t33_c_t c)
{
    auto x= 1, y = 2, z = 3;
    if (c.f0(x, y, z) != 6)		print("error %d\n", __LINE__);
    if (c.f1(x, y, z) != 6)		print("error %d\n", __LINE__);
    if (c.f2(x, y, z) != 6)		print("error %d\n", __LINE__);
}
t33_c_t t33_c = {};
t33_f_t2(t33_c);
void t33_fn(...)
{
    auto n = sizeof(...);
    switch (n) {
	case 0:
	    t33_fn(1, 2);
	    break;
	case 1:
	    t33_fn(1, 2, 3, 4);
	    break;
	case 2:
	    t33_fn(1, 2, 3, 4, 5);
	    break;
	case 3:
	    break;
	case 4:
	    t33_fn(1, 2, 3);
	    break;
	case 5:
	    t33_fn(1, 2, 3, 4, 5, 6);
	    break;
	case 6:
	    t33_fn(1);
	    break;
	default:
	    print("error %d\n", __LINE__);
    }
    if (n != sizeof(...))		print("error %d\n", __LINE__);
}
void t33_f_t3(void)
{
    t33_fn();
}
t33_f_t3();

int16_t t34v[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,   7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ 100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
int8_t t34i;
int16_t t34j;
int32_t t34k;
int64_t t34l;
float32_t t34m;
for (t34i = 0; t34i < 1; t34i++) {
    print("{\n");
    for (t34j = 0; t34j < 2; t34j++) {
	print("  {\n");
	for (t34k = 0; t34k < 3; t34k++) {
	    print("    {\n");
	    for (t34l = 0; t34l < 4; t34l++) {
		print("      { ");
		for (t34m = 0; t34m < 5; t34m++)
		    print("%3d, ", t34v[t34i][t34j][t34k][t34l][t34m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
auto t34a7 = 7;
int32_t t34i25 = 25;
float32_t t34f53 = 53.0;
uint64_t t34ul78 = 78;
float64_t t34d94 = 94.0;
int8_t t34c100 = 100;
int16_t t34v1[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,  t34a7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  t34i25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  t34f53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  t34ul78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  t34d94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ t34c100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
for (t34i = 0; t34i < 1; t34i++) {
    print("{\n");
    for (t34j = 0; t34j < 2; t34j++) {
	print("  {\n");
	for (t34k = 0; t34k < 3; t34k++) {
	    print("    {\n");
	    for (t34l = 0; t34l < 4; t34l++) {
		print("      { ");
		for (t34m = 0; t34m < 5; t34m++)
		    print("%3d, ", t34v[t34i][t34j][t34k][t34l][t34m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
for (t34i = 0; t34i < 1; t34i++) {
    print("{\n");
    for (t34j = 0; t34j < 2; t34j++) {
	print("  {\n");
	for (t34k = 0; t34k < 3; t34k++) {
	    print("    {\n");
	    for (t34l = 0; t34l < 4; t34l++) {
		print("      { ");
		for (t34m = 0; t34m < 5; t34m++)
		    print("%5d, ", t34v[t34i][t34j][t34k][t34l][t34m] = 119 - (t34m + t34l * 5 + t34k * 5*4 + t34j * 5*4*3 + t34i));
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}

auto t35v[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,   7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ 100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
int8_t t35i;
int16_t t35j;
int32_t t35k;
int64_t t35l;
float32_t t35m;
for (t35i = 0; t35i < 1; t35i++) {
    print("{\n");
    for (t35j = 0; t35j < 2; t35j++) {
	print("  {\n");
	for (t35k = 0; t35k < 3; t35k++) {
	    print("    {\n");
	    for (t35l = 0; t35l < 4; t35l++) {
		print("      { ");
		for (t35m = 0; t35m < 5; t35m++)
		    print("%3d, ", t35v[t35i][t35j][t35k][t35l][t35m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
auto t35a7 = 7;
int32_t t35i25 = 25;
float32_t t35f53 = 53.0;
uint64_t t35ul78 = 78;
float64_t t35d94 = 94.0;
int8_t t35c100 = 100;
auto t35v1[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,  t35a7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  t35i25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  t35f53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  t35ul78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  t35d94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ t35c100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
for (t35i = 0; t35i < 1; t35i++) {
    print("{\n");
    for (t35j = 0; t35j < 2; t35j++) {
	print("  {\n");
	for (t35k = 0; t35k < 3; t35k++) {
	    print("    {\n");
	    for (t35l = 0; t35l < 4; t35l++) {
		print("      { ");
		for (t35m = 0; t35m < 5; t35m++)
		    print("%3d, ", t35v[t35i][t35j][t35k][t35l][t35m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
for (t35i = 0; t35i < 1; t35i++) {
    print("{\n");
    for (t35j = 0; t35j < 2; t35j++) {
	print("  {\n");
	for (t35k = 0; t35k < 3; t35k++) {
	    print("    {\n");
	    for (t35l = 0; t35l < 4; t35l++) {
		print("      { ");
		for (t35m = 0; t35m < 5; t35m++)
		    print("%5d, ", t35v[t35i][t35j][t35k][t35l][t35m] = 119 - (t35m + t35l * 5 + t35k * 5*4 + t35j * 5*4*3 + t35i));
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}

uint64_t t36v[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,   7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ 100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
int8_t t36i;
int16_t t36j;
int32_t t36k;
int64_t t36l;
float32_t t36m;
for (t36i = 0; t36i < 1; t36i++) {
    print("{\n");
    for (t36j = 0; t36j < 2; t36j++) {
	print("  {\n");
	for (t36k = 0; t36k < 3; t36k++) {
	    print("    {\n");
	    for (t36l = 0; t36l < 4; t36l++) {
		print("      { ");
		for (t36m = 0; t36m < 5; t36m++)
		    print("%3d, ", t36v[t36i][t36j][t36k][t36l][t36m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
auto t36a7 = 7;
int32_t t36i25 = 25;
float32_t t36f53 = 53.0;
uint64_t t36ul78 = 78;
float64_t t36d94 = 94.0;
int8_t t36c100 = 100;
uint64_t t36v1[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,  t36a7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  t36i25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  t36f53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  t36ul78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  t36d94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ t36c100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
for (t36i = 0; t36i < 1; t36i++) {
    print("{\n");
    for (t36j = 0; t36j < 2; t36j++) {
	print("  {\n");
	for (t36k = 0; t36k < 3; t36k++) {
	    print("    {\n");
	    for (t36l = 0; t36l < 4; t36l++) {
		print("      { ");
		for (t36m = 0; t36m < 5; t36m++)
		    print("%3d, ", t36v[t36i][t36j][t36k][t36l][t36m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
for (t36i = 0; t36i < 1; t36i++) {
    print("{\n");
    for (t36j = 0; t36j < 2; t36j++) {
	print("  {\n");
	for (t36k = 0; t36k < 3; t36k++) {
	    print("    {\n");
	    for (t36l = 0; t36l < 4; t36l++) {
		print("      { ");
		for (t36m = 0; t36m < 5; t36m++) {
		    t36v[t36i][t36j][t36k][t36l][t36m] = 119 - (t36m + t36l * 5 + t36k * 5*4 + t36j * 5*4*3 + t36i);
		    print("%3d, ", t36v[t36i][t36j][t36k][t36l][t36m]);
		}
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}

uint32_t t37v[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,   7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ 100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
int8_t t37i;
int16_t t37j;
int32_t t37k;
int64_t t37l;
float32_t t37m;
for (t37i = 0; t37i < 1; t37i++) {
    print("{\n");
    for (t37j = 0; t37j < 2; t37j++) {
	print("  {\n");
	for (t37k = 0; t37k < 3; t37k++) {
	    print("    {\n");
	    for (t37l = 0; t37l < 4; t37l++) {
		print("      { ");
		for (t37m = 0; t37m < 5; t37m++)
		    print("%3d, ", t37v[t37i][t37j][t37k][t37l][t37m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
auto t37a7 = 7;
int32_t t37i25 = 25;
float32_t t37f53 = 53.0;
uint64_t t37ul78 = 78;
float64_t t37d94 = 94.0;
int8_t t37c100 = 100;
uint32_t t37v1[1][2][3][4][5] = {
    {
	{
	    {
		{   0,   1,   2,   3,   4, },
		{   5,   6,  t37a7,   8,   9, },
		{  10,  11,  12,  13,  14, },
		{  15,  16,  17,  18,  19, },
	    },
	    {
		{  20,  21,  22,  23,  24, },
		{  t37i25,  26,  27,  28,  29, },
		{  30,  31,  32,  33,  34, },
		{  35,  36,  37,  38,  39, },
	    },
	    {
		{  40,  41,  42,  43,  44, },
		{  45,  46,  47,  48,  49, },
		{  50,  51,  52,  t37f53,  54, },
		{  55,  56,  57,  58,  59, },
	    },
	},
	{
	    {
		{  60,  61,  62,  63,  64, },
		{  65,  66,  67,  68,  69, },
		{  70,  71,  72,  73,  74, },
		{  75,  76,  77,  t37ul78,  79, },
	    },
	    {
		{  80,  81,  82,  83,  84, },
		{  85,  86,  87,  88,  89, },
		{  90,  91,  92,  93,  t37d94, },
		{  95,  96,  97,  98,  99, },
	    },
	    {
		{ t37c100, 101, 102, 103, 104, },
		{ 105, 106, 107, 108, 109, },
		{ 110, 111, 112, 113, 114, },
		{ 115, 116, 117, 118, 119, },
	    },
	},
    },
};
for (t37i = 0; t37i < 1; t37i++) {
    print("{\n");
    for (t37j = 0; t37j < 2; t37j++) {
	print("  {\n");
	for (t37k = 0; t37k < 3; t37k++) {
	    print("    {\n");
	    for (t37l = 0; t37l < 4; t37l++) {
		print("      { ");
		for (t37m = 0; t37m < 5; t37m++)
		    print("%3d, ", t37v[t37i][t37j][t37k][t37l][t37m]);
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}
for (t37i = 0; t37i < 1; t37i++) {
    print("{\n");
    for (t37j = 0; t37j < 2; t37j++) {
	print("  {\n");
	for (t37k = 0; t37k < 3; t37k++) {
	    print("    {\n");
	    for (t37l = 0; t37l < 4; t37l++) {
		print("      { ");
		for (t37m = 0; t37m < 5; t37m++) {
		    t37v[t37i][t37j][t37k][t37l][t37m] = 119 - (t37m + t37l * 5 + t37k * 5*4 + t37j * 5*4*3 + t37i);
		    print("%3d, ", t37v[t37i][t37j][t37k][t37l][t37m]);
		}
		print("},\n");
	    }
	    print("    },\n");
	}
	print("  },\n");
    }
    print("};\n");
}

class t38c_t {
    int8_t	i8;
    uint8_t	u8;
    int16_t	i16;
    uint16_t	u16;
    int32_t	i32;
    uint32_t	u32;
    int64_t	i64;
    uint64_t	u64;
    float32_t	f32;
    float64_t	f64;
    auto	a;
    int8_t	vi8[];
    uint8_t	vu8[];
    int16_t	vi16[];
    uint16_t	vu16[];
    int32_t	vi32[];
    uint32_t	vu32[];
    int64_t	vi64[];
    uint64_t	vu64[];
    float32_t	vf32[];
    float64_t	vf64[];
    t38c_t	va[];
};
t38c_t t38c = {
    -8, 8, -16, 16, -32, 32, -64, 64, 1/32.0, 1/64.0, "foobar",
    { 1 }, { 1, 2 },
    { 1, 2, 3 }, { 1, 2, 3, 4 },
    { 1, 2, 3, 4, 5 }, { 1, 2, 3, 4, 5, 6 },
    { 1, 2, 3, 4, 5, 6, 7 }, { 1, 2, 3, 4, 5, 6, 7, 8 },
    { 1, 2, 3, 4, 5, 6, 7, 8, 9 }, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },
};
t38c.va = { t38c, t38c, t38c, t38c, t38c, t38c, t38c, t38c, t38c, t38c };
print("\
i8:	%d\n\
u8:	%d\n\
i16:	%d\n\
u16:	%d\n\
i32:	%d\n\
u32:	%d\n\
i64:	%d\n\
u64:	%d\n\
f32:	%d\n\
f64:	%d\n\
a:	%#s\n\
vi8:	%d\n\
vu8:	%d\n\
vi16:	%d\n\
vu16:	%d\n\
vi32:	%d\n\
vu32:	%d\n\
vi64:	%d\n\
vu64:	%d\n\
vf32:	%d\n\
vf64:	%d\n\
va:	%#s\n\
",
      t38c.i8,
      t38c.va[0].u8,
      t38c.va[0].va[1].i16,
      t38c.va[0].va[1].va[2].u16,
      t38c.va[0].va[1].va[2].va[3].i32,
      t38c.va[0].va[1].va[2].va[3].va[4].u32,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].i64,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].u64,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].f32,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].va[8].f64,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].va[8].va[9].a,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].va[8].va[9].vi8[0],
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].va[8].vu8[1],
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].vi16[2],
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].vu16[3],
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].vi32[4],
      t38c.va[0].va[1].va[2].va[3].va[4].vu32[5],
      t38c.va[0].va[1].va[2].va[3].vi64[6],
      t38c.va[0].va[1].va[2].vu64[7],
      t38c.va[0].va[1].vf32[8],
      t38c.va[0].vf64[9],
      t38c.va[0].a);
print("%d\n%d\n%d\n%d\n%d\n%d\n",
      t38c.i8 += t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].va[8].vu8[1],
      t38c.va[0].u8 += t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].i8,
      t38c.va[0].va[1].va[2].i16 + t38c.va[0].va[1].va[2].va[3].u32,
      t38c.va[0].va[1].va[2].va[3].i32 / t38c.va[0].u32,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].i64 % t38c.va[0].va[1].va[2].va[3].va[4].u64,
      t38c.va[0].va[1].va[2].va[3].va[4].va[5].va[6].va[7].f32 \ 2);

/* Use small values to no interfere too much with profiling code generation */
auto t39afib(auto n) {
    return n >= 2 ? t39afib(n - 1) + t39afib(n - 2) + 1 : 1;
}
print("a : fib(10) = %d\n", t39afib(10));
uint64_t t39ulfib(uint64_t n) {
    return n >= 2 ? t39ulfib(n - 1) + t39ulfib(n - 2) + 1 : 1;
}
print("ul: fib(10) = %d\n", t39ulfib(10));
int64_t t39lfib(int64_t n) {
    return n >= 2 ? t39lfib(n - 1) + t39lfib(n - 2) + 1 : 1;
}
print("sl: fib(10) = %d\n", t39lfib(10));
uint32_t t39uifib(uint32_t n) {
    return n >= 2 ? t39uifib(n - 1) + t39uifib(n - 2) + 1 : 1;
}
print("ui: fib(10) = %d\n", t39uifib(10));
int32_t t39ifib(int32_t n) {
    return n >= 2 ? t39ifib(n - 1) + t39ifib(n - 2) + 1 : 1;
}
print("si: fib(10) = %d\n", t39ifib(10));
uint16_t t39usfib(uint16_t n) {
    return n >= 2 ? t39usfib(n - 1) + t39usfib(n - 2) + 1 : 1;
}
print("us: fib(10) = %d\n", t39usfib(10));
int16_t t39sfib(int16_t n) {
    return n >= 2 ? t39sfib(n - 1) + t39sfib(n - 2) + 1 : 1;
}
print("ss: fib(10) = %d\n", t39sfib(10));
uint8_t t39ucfib(uint8_t n) {
    return n >= 2 ? t39ucfib(n - 1) + t39ucfib(n - 2) + 1 : 1;
}
print("uc: fib(10) = %d\n", t39ucfib(10));
int8_t t39cfib(int8_t n) {
    return n >= 2 ? t39cfib(n - 1) + t39cfib(n - 2) + 1 : 1;
}
print("sc: fib(10) = %d\n", t39cfib(10));
float32_t t39ffib(float32_t n) {
    return n >= 2 ? t39ffib(n - 1) + t39ffib(n - 2) + 1 : 1;
}
print("f : fib(10) = %d\n", t39ffib(10));
float64_t t39dfib(float64_t n) {
    return n >= 2 ? t39dfib(n - 1) + t39dfib(n - 2) + 1 : 1;
}
print("d : fib(10) = %d\n", t39dfib(10));
/* Simple test using implemented features
 * ("new" and streams not yet implemented) */
int8_t t39vli8[5] = { 1, 2, 3, 4, 5 }, t39vri8[5] = {};
void t39si8(int8_t l[], int8_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39si8(t39vli8, t39vri8);
uint8_t t39vlu8[5] = { 1, 2, 3, 4, 5 }, t39vru8[5] = {};
void t39su8(uint8_t l[], uint8_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39su8(t39vlu8, t39vru8);
int16_t t39vli16[5] = { 1, 2, 3, 4, 5 }, t39vri16[5] = {};
void t39si16(int16_t l[], int16_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39si16(t39vli16, t39vri16);
uint16_t t39vlu16[5] = { 1, 2, 3, 4, 5 }, t39vru16[5] = {};
void t39su16(uint16_t l[], uint16_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39su16(t39vlu16, t39vru16);
int32_t t39vli32[5] = { 1, 2, 3, 4, 5 }, t39vri32[5] = {};
void t39si32(int32_t l[], int32_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39si32(t39vli32, t39vri32);
uint32_t t39vlu32[5] = { 1, 2, 3, 4, 5 }, t39vru32[5] = {};
void t39su32(uint32_t l[], uint32_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39su32(t39vlu32, t39vru32);
int64_t t39vli64[5] = { 1, 2, 3, 4, 5 }, t39vri64[5] = {};
void t39si64(int64_t l[], int64_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39si64(t39vli64, t39vri64);
uint64_t t39vlu64[5] = { 1, 2, 3, 4, 5 }, t39vru64[5] = {};
void t39su64(uint64_t l[], uint64_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39su64(t39vlu64, t39vru64);
float32_t t39vlf32[5] = { 1, 2, 3, 4, 5 }, t39vrf32[5] = {};
void t39sf32(float32_t l[], float32_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39sf32(t39vlf32, t39vrf32);
float64_t t39vlf64[5] = { 1, 2, 3, 4, 5 }, t39vrf64[5] = {};
void t39sf64(float64_t l[], float64_t r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39sf64(t39vlf64, t39vrf64);
auto t39vla[5] = { 1, 2, 3, 4, 5 }, t39vra[5] = {};
void t39sa(auto l[], auto r[]) {
    int32_t i, s;
    s = sizeof(l) < sizeof(r) ? sizeof(l) : sizeof(r);
    for (i = 0; i < s; ++i)
	print("%d ", r[i] = l[i] * l[i]);
    print("\n");
}
t39sa(t39vla, t39vra);

int8_t		t40sc1 = 1, t40sc2 = 2;
uint8_t		t40uc1 = 1, t40uc2 = 2;
int16_t		t40ss1 = 1, t40ss2 = 2;
uint16_t	t40us1 = 1, t40us2 = 2;
int32_t		t40si1 = 1, t40si2 = 2;
uint32_t	t40ui1 = 1, t40ui2 = 2;
int64_t		t40sl1 = 1, t40sl2 = 2;
uint64_t	t40ul1 = 1, t40ul2 = 2;
float32_t	t40sf1 = 1, t40sf2 = 2;
float64_t	t40df1 = 1, t40df2 = 2;
auto		t40av1 = 1, t40av2 = 2;
print("sc <  ");
print("%-3d ", t40sc1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 < t40av2 ? t40sc1 : t40av2);
print("\nsc <= ");
print("%-3d ", t40sc1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 <= t40av2 ? t40sc1 : t40av2);
print("\nsc == ");
print("%-3d ", t40sc1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 == t40av2 ? t40sc1 : t40av2);
print("\nsc >= ");
print("%-3d ", t40sc1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 >= t40av2 ? t40sc1 : t40av2);
print("\nsc >  ");
print("%-3d ", t40sc1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 > t40av2 ? t40sc1 : t40av2);
print("\nsc != ");
print("%-3d ", t40sc1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 != t40av2 ? t40sc1 : t40av2);
print("\nsc +  ");
print("%-3d ", t40sc1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 + t40av2 ? t40sc1 : t40av2);
print("\nsc -  ");
print("%-3d ", t40sc1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 - t40av2 ? t40sc1 : t40av2);
print("\nsc *  ");
print("%-3d ", t40sc1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 * t40av2 ? t40sc1 : t40av2);
print("\nsc \\  ");
print("%-3d ", t40sc1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 \ t40av2 ? t40sc1 : t40av2);
print("\nsc %%  ");
print("%-3d ", t40sc1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sc1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sc1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sc1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sc1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sc1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sc1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sc1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sc1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sc1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sc1 % t40av2 ? t40sc1 : t40av2);
print("\nuc <  ");
print("%-3d ", t40uc1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 < t40av2 ? t40sc1 : t40av2);
print("\nuc <= ");
print("%-3d ", t40uc1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 <= t40av2 ? t40sc1 : t40av2);
print("\nuc == ");
print("%-3d ", t40uc1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 == t40av2 ? t40sc1 : t40av2);
print("\nuc >= ");
print("%-3d ", t40uc1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 >= t40av2 ? t40sc1 : t40av2);
print("\nuc >  ");
print("%-3d ", t40uc1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 > t40av2 ? t40sc1 : t40av2);
print("\nuc != ");
print("%-3d ", t40uc1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 != t40av2 ? t40sc1 : t40av2);
print("\nuc +  ");
print("%-3d ", t40uc1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 + t40av2 ? t40sc1 : t40av2);
print("\nuc -  ");
print("%-3d ", t40uc1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 - t40av2 ? t40sc1 : t40av2);
print("\nuc *  ");
print("%-3d ", t40uc1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 * t40av2 ? t40sc1 : t40av2);
print("\nuc \\  ");
print("%-3d ", t40uc1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 \ t40av2 ? t40sc1 : t40av2);
print("\nuc %%  ");
print("%-3d ", t40uc1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40uc1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40uc1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40uc1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40uc1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40uc1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40uc1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40uc1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40uc1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40uc1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40uc1 % t40av2 ? t40sc1 : t40av2);
print("\nss <  ");
print("%-3d ", t40ss1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 < t40av2 ? t40sc1 : t40av2);
print("\nss <= ");
print("%-3d ", t40ss1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 <= t40av2 ? t40sc1 : t40av2);
print("\nss == ");
print("%-3d ", t40ss1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 == t40av2 ? t40sc1 : t40av2);
print("\nss >= ");
print("%-3d ", t40ss1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 >= t40av2 ? t40sc1 : t40av2);
print("\nss >  ");
print("%-3d ", t40ss1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 > t40av2 ? t40sc1 : t40av2);
print("\nss != ");
print("%-3d ", t40ss1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 != t40av2 ? t40sc1 : t40av2);
print("\nss +  ");
print("%-3d ", t40ss1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 + t40av2 ? t40sc1 : t40av2);
print("\nss -  ");
print("%-3d ", t40ss1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 - t40av2 ? t40sc1 : t40av2);
print("\nss *  ");
print("%-3d ", t40ss1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 * t40av2 ? t40sc1 : t40av2);
print("\nss \\  ");
print("%-3d ", t40ss1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 \ t40av2 ? t40sc1 : t40av2);
print("\nss %%  ");
print("%-3d ", t40ss1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ss1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ss1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ss1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ss1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ss1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ss1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ss1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ss1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ss1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ss1 % t40av2 ? t40sc1 : t40av2);
print("\nus <  ");
print("%-3d ", t40us1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 < t40av2 ? t40sc1 : t40av2);
print("\nus <= ");
print("%-3d ", t40us1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 <= t40av2 ? t40sc1 : t40av2);
print("\nus == ");
print("%-3d ", t40us1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 == t40av2 ? t40sc1 : t40av2);
print("\nus >= ");
print("%-3d ", t40us1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 >= t40av2 ? t40sc1 : t40av2);
print("\nus >  ");
print("%-3d ", t40us1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 > t40av2 ? t40sc1 : t40av2);
print("\nus != ");
print("%-3d ", t40us1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 != t40av2 ? t40sc1 : t40av2);
print("\nus +  ");
print("%-3d ", t40us1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 + t40av2 ? t40sc1 : t40av2);
print("\nus -  ");
print("%-3d ", t40us1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 - t40av2 ? t40sc1 : t40av2);
print("\nus *  ");
print("%-3d ", t40us1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 * t40av2 ? t40sc1 : t40av2);
print("\nus \\  ");
print("%-3d ", t40us1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 \ t40av2 ? t40sc1 : t40av2);
print("\nus %%  ");
print("%-3d ", t40us1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40us1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40us1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40us1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40us1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40us1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40us1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40us1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40us1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40us1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40us1 % t40av2 ? t40sc1 : t40av2);
print("\nsi <  ");
print("%-3d ", t40si1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 < t40av2 ? t40sc1 : t40av2);
print("\nsi <= ");
print("%-3d ", t40si1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 <= t40av2 ? t40sc1 : t40av2);
print("\nsi == ");
print("%-3d ", t40si1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 == t40av2 ? t40sc1 : t40av2);
print("\nsi >= ");
print("%-3d ", t40si1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 >= t40av2 ? t40sc1 : t40av2);
print("\nsi >  ");
print("%-3d ", t40si1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 > t40av2 ? t40sc1 : t40av2);
print("\nsi != ");
print("%-3d ", t40si1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 != t40av2 ? t40sc1 : t40av2);
print("\nsi +  ");
print("%-3d ", t40si1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 + t40av2 ? t40sc1 : t40av2);
print("\nsi -  ");
print("%-3d ", t40si1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 - t40av2 ? t40sc1 : t40av2);
print("\nsi *  ");
print("%-3d ", t40si1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 * t40av2 ? t40sc1 : t40av2);
print("\nsi \\  ");
print("%-3d ", t40si1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 \ t40av2 ? t40sc1 : t40av2);
print("\nsi %%  ");
print("%-3d ", t40si1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40si1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40si1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40si1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40si1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40si1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40si1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40si1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40si1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40si1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40si1 % t40av2 ? t40sc1 : t40av2);
print("\nui <  ");
print("%-3d ", t40ui1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 < t40av2 ? t40sc1 : t40av2);
print("\nui <= ");
print("%-3d ", t40ui1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 <= t40av2 ? t40sc1 : t40av2);
print("\nui == ");
print("%-3d ", t40ui1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 == t40av2 ? t40sc1 : t40av2);
print("\nui >= ");
print("%-3d ", t40ui1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 >= t40av2 ? t40sc1 : t40av2);
print("\nui >  ");
print("%-3d ", t40ui1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 > t40av2 ? t40sc1 : t40av2);
print("\nui != ");
print("%-3d ", t40ui1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 != t40av2 ? t40sc1 : t40av2);
print("\nui +  ");
print("%-3d ", t40ui1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 + t40av2 ? t40sc1 : t40av2);
print("\nui -  ");
print("%-3d ", t40ui1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 - t40av2 ? t40sc1 : t40av2);
print("\nui *  ");
print("%-3d ", t40ui1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 * t40av2 ? t40sc1 : t40av2);
print("\nui \\  ");
print("%-3d ", t40ui1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 \ t40av2 ? t40sc1 : t40av2);
print("\nui %%  ");
print("%-3d ", t40ui1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ui1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ui1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ui1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ui1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ui1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ui1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ui1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ui1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ui1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ui1 % t40av2 ? t40sc1 : t40av2);
print("\nsl <  ");
print("%-3d ", t40sl1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 < t40av2 ? t40sc1 : t40av2);
print("\nsl <= ");
print("%-3d ", t40sl1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 <= t40av2 ? t40sc1 : t40av2);
print("\nsl == ");
print("%-3d ", t40sl1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 == t40av2 ? t40sc1 : t40av2);
print("\nsl >= ");
print("%-3d ", t40sl1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 >= t40av2 ? t40sc1 : t40av2);
print("\nsl >  ");
print("%-3d ", t40sl1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 > t40av2 ? t40sc1 : t40av2);
print("\nsl != ");
print("%-3d ", t40sl1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 != t40av2 ? t40sc1 : t40av2);
print("\nsl +  ");
print("%-3d ", t40sl1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 + t40av2 ? t40sc1 : t40av2);
print("\nsl -  ");
print("%-3d ", t40sl1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 - t40av2 ? t40sc1 : t40av2);
print("\nsl *  ");
print("%-3d ", t40sl1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 * t40av2 ? t40sc1 : t40av2);
print("\nsl \\  ");
print("%-3d ", t40sl1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 \ t40av2 ? t40sc1 : t40av2);
print("\nsl %%  ");
print("%-3d ", t40sl1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sl1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sl1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sl1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sl1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sl1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sl1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sl1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sl1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sl1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sl1 % t40av2 ? t40sc1 : t40av2);
print("\nul <  ");
print("%-3d ", t40ul1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 < t40av2 ? t40sc1 : t40av2);
print("\nul <= ");
print("%-3d ", t40ul1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 <= t40av2 ? t40sc1 : t40av2);
print("\nul == ");
print("%-3d ", t40ul1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 == t40av2 ? t40sc1 : t40av2);
print("\nul >= ");
print("%-3d ", t40ul1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 >= t40av2 ? t40sc1 : t40av2);
print("\nul >  ");
print("%-3d ", t40ul1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 > t40av2 ? t40sc1 : t40av2);
print("\nul != ");
print("%-3d ", t40ul1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 != t40av2 ? t40sc1 : t40av2);
print("\nul +  ");
print("%-3d ", t40ul1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 + t40av2 ? t40sc1 : t40av2);
print("\nul -  ");
print("%-3d ", t40ul1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 - t40av2 ? t40sc1 : t40av2);
print("\nul *  ");
print("%-3d ", t40ul1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 * t40av2 ? t40sc1 : t40av2);
print("\nul \\  ");
print("%-3d ", t40ul1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 \ t40av2 ? t40sc1 : t40av2);
print("\nul %%  ");
print("%-3d ", t40ul1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40ul1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40ul1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40ul1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40ul1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40ul1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40ul1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40ul1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40ul1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40ul1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40ul1 % t40av2 ? t40sc1 : t40av2);
print("\nsf <  ");
print("%-3d ", t40sf1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 < t40av2 ? t40sc1 : t40av2);
print("\nsf <= ");
print("%-3d ", t40sf1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 <= t40av2 ? t40sc1 : t40av2);
print("\nsf == ");
print("%-3d ", t40sf1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 == t40av2 ? t40sc1 : t40av2);
print("\nsf >= ");
print("%-3d ", t40sf1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 >= t40av2 ? t40sc1 : t40av2);
print("\nsf >  ");
print("%-3d ", t40sf1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 > t40av2 ? t40sc1 : t40av2);
print("\nsf != ");
print("%-3d ", t40sf1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 != t40av2 ? t40sc1 : t40av2);
print("\nsf +  ");
print("%-3d ", t40sf1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 + t40av2 ? t40sc1 : t40av2);
print("\nsf -  ");
print("%-3d ", t40sf1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 - t40av2 ? t40sc1 : t40av2);
print("\nsf *  ");
print("%-3d ", t40sf1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 * t40av2 ? t40sc1 : t40av2);
print("\nsf \\  ");
print("%-3d ", t40sf1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 \ t40av2 ? t40sc1 : t40av2);
print("\nsf %%  ");
print("%-3d ", t40sf1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40sf1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40sf1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40sf1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40sf1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40sf1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40sf1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40sf1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40sf1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40sf1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40sf1 % t40av2 ? t40sc1 : t40av2);
print("\ndf <  ");
print("%-3d ", t40df1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 < t40av2 ? t40sc1 : t40av2);
print("\ndf <= ");
print("%-3d ", t40df1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 <= t40av2 ? t40sc1 : t40av2);
print("\ndf == ");
print("%-3d ", t40df1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 == t40av2 ? t40sc1 : t40av2);
print("\ndf >= ");
print("%-3d ", t40df1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 >= t40av2 ? t40sc1 : t40av2);
print("\ndf >  ");
print("%-3d ", t40df1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 > t40av2 ? t40sc1 : t40av2);
print("\ndf != ");
print("%-3d ", t40df1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 != t40av2 ? t40sc1 : t40av2);
print("\ndf +  ");
print("%-3d ", t40df1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 + t40av2 ? t40sc1 : t40av2);
print("\ndf -  ");
print("%-3d ", t40df1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 - t40av2 ? t40sc1 : t40av2);
print("\ndf *  ");
print("%-3d ", t40df1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 * t40av2 ? t40sc1 : t40av2);
print("\ndf \\  ");
print("%-3d ", t40df1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 \ t40av2 ? t40sc1 : t40av2);
print("\ndf %%  ");
print("%-3d ", t40df1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40df1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40df1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40df1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40df1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40df1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40df1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40df1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40df1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40df1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40df1 % t40av2 ? t40sc1 : t40av2);
print("\nav <  ");
print("%-3d ", t40av1 < t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 < t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 < t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 < t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 < t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 < t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 < t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 < t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 < t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 < t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 < t40av2 ? t40sc1 : t40av2);
print("\nav <= ");
print("%-3d ", t40av1 <= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 <= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 <= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 <= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 <= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 <= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 <= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 <= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 <= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 <= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 <= t40av2 ? t40sc1 : t40av2);
print("\nav == ");
print("%-3d ", t40av1 == t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 == t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 == t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 == t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 == t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 == t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 == t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 == t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 == t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 == t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 == t40av2 ? t40sc1 : t40av2);
print("\nav >= ");
print("%-3d ", t40av1 >= t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 >= t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 >= t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 >= t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 >= t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 >= t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 >= t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 >= t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 >= t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 >= t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 >= t40av2 ? t40sc1 : t40av2);
print("\nav >  ");
print("%-3d ", t40av1 > t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 > t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 > t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 > t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 > t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 > t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 > t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 > t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 > t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 > t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 > t40av2 ? t40sc1 : t40av2);
print("\nav != ");
print("%-3d ", t40av1 != t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 != t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 != t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 != t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 != t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 != t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 != t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 != t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 != t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 != t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 != t40av2 ? t40sc1 : t40av2);
print("\nav +  ");
print("%-3d ", t40av1 + t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 + t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 + t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 + t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 + t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 + t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 + t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 + t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 + t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 + t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 + t40av2 ? t40sc1 : t40av2);
print("\nav -  ");
print("%-3d ", t40av1 - t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 - t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 - t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 - t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 - t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 - t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 - t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 - t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 - t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 - t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 - t40av2 ? t40sc1 : t40av2);
print("\nav *  ");
print("%-3d ", t40av1 * t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 * t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 * t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 * t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 * t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 * t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 * t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 * t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 * t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 * t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 * t40av2 ? t40sc1 : t40av2);
print("\nav \\  ");
print("%-3d ", t40av1 \ t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 \ t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 \ t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 \ t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 \ t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 \ t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 \ t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 \ t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 \ t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 \ t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 \ t40av2 ? t40sc1 : t40av2);
print("\nav %%  ");
print("%-3d ", t40av1 % t40sc2 ? t40sc1 : t40sc2);
print("%-3d ", t40av1 % t40uc2 ? t40sc1 : t40uc2);
print("%-3d ", t40av1 % t40ss2 ? t40sc1 : t40ss2);
print("%-3d ", t40av1 % t40us2 ? t40sc1 : t40us2);
print("%-3d ", t40av1 % t40si2 ? t40sc1 : t40si2);
print("%-3d ", t40av1 % t40ui2 ? t40sc1 : t40ui2);
print("%-3d ", t40av1 % t40sl2 ? t40sc1 : t40sl2);
print("%-3d ", t40av1 % t40ul2 ? t40sc1 : t40ul2);
print("%-3d ", t40av1 % t40sf2 ? t40sc1 : t40sf2);
print("%-3d ", t40av1 % t40df2 ? t40sc1 : t40df2);
print("%-3d ", t40av1 % t40av2 ? t40sc1 : t40av2);
print("\n");

int8_t sc_t41_sc(int8_t a)    { return a; }
int8_t sc_t41_uc(uint8_t a)   { return a; }
int8_t sc_t41_ss(int16_t a)   { return a; }
int8_t sc_t41_us(uint16_t a)  { return a; }
int8_t sc_t41_si(int32_t a)   { return a; }
int8_t sc_t41_ui(uint32_t a)  { return a; }
int8_t sc_t41_sl(int64_t a)   { return a; }
int8_t sc_t41_ul(uint64_t a)  { return a; }
int8_t sc_t41_sf(float32_t a) { return a; }
int8_t sc_t41_df(float64_t a) { return a; }
int8_t sc_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      sc_t41_sc(1), sc_t41_uc(2),  sc_t41_ss(3), sc_t41_us(4),
      sc_t41_si(5), sc_t41_ui(6),  sc_t41_sl(7), sc_t41_ul(8),
      sc_t41_sf(9), sc_t41_df(10), sc_t41_av(11));
uint8_t uc_t41_sc(int8_t a)    { return a; }
uint8_t uc_t41_uc(uint8_t a)   { return a; }
uint8_t uc_t41_ss(int16_t a)   { return a; }
uint8_t uc_t41_us(uint16_t a)  { return a; }
uint8_t uc_t41_si(int32_t a)   { return a; }
uint8_t uc_t41_ui(uint32_t a)  { return a; }
uint8_t uc_t41_sl(int64_t a)   { return a; }
uint8_t uc_t41_ul(uint64_t a)  { return a; }
uint8_t uc_t41_sf(float32_t a) { return a; }
uint8_t uc_t41_df(float64_t a) { return a; }
uint8_t uc_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      uc_t41_sc(1), uc_t41_uc(2),  uc_t41_ss(3), uc_t41_us(4),
      uc_t41_si(5), uc_t41_ui(6),  uc_t41_sl(7), uc_t41_ul(8),
      uc_t41_sf(9), uc_t41_df(10), uc_t41_av(11));
int16_t ss_t41_sc(int8_t a)    { return a; }
int16_t ss_t41_uc(uint8_t a)   { return a; }
int16_t ss_t41_ss(int16_t a)   { return a; }
int16_t ss_t41_us(uint16_t a)  { return a; }
int16_t ss_t41_si(int32_t a)   { return a; }
int16_t ss_t41_ui(uint32_t a)  { return a; }
int16_t ss_t41_sl(int64_t a)   { return a; }
int16_t ss_t41_ul(uint64_t a)  { return a; }
int16_t ss_t41_sf(float32_t a) { return a; }
int16_t ss_t41_df(float64_t a) { return a; }
int16_t ss_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      ss_t41_sc(1), ss_t41_uc(2),  ss_t41_ss(3), ss_t41_us(4),
      ss_t41_si(5), ss_t41_ui(6),  ss_t41_sl(7), ss_t41_ul(8),
      ss_t41_sf(9), ss_t41_df(10), ss_t41_av(11));
uint16_t us_t41_sc(int8_t a)    { return a; }
uint16_t us_t41_uc(uint8_t a)   { return a; }
uint16_t us_t41_ss(int16_t a)   { return a; }
uint16_t us_t41_us(uint16_t a)  { return a; }
uint16_t us_t41_si(int32_t a)   { return a; }
uint16_t us_t41_ui(uint32_t a)  { return a; }
uint16_t us_t41_sl(int64_t a)   { return a; }
uint16_t us_t41_ul(uint64_t a)  { return a; }
uint16_t us_t41_sf(float32_t a) { return a; }
uint16_t us_t41_df(float64_t a) { return a; }
uint16_t us_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      us_t41_sc(1), us_t41_uc(2),  us_t41_ss(3), us_t41_us(4),
      us_t41_si(5), us_t41_ui(6),  us_t41_sl(7), us_t41_ul(8),
      us_t41_sf(9), us_t41_df(10), us_t41_av(11));
int32_t si_t41_sc(int8_t a)    { return a; }
int32_t si_t41_uc(uint8_t a)   { return a; }
int32_t si_t41_ss(int16_t a)   { return a; }
int32_t si_t41_us(uint16_t a)  { return a; }
int32_t si_t41_si(int32_t a)   { return a; }
int32_t si_t41_ui(uint32_t a)  { return a; }
int32_t si_t41_sl(int64_t a)   { return a; }
int32_t si_t41_ul(uint64_t a)  { return a; }
int32_t si_t41_sf(float32_t a) { return a; }
int32_t si_t41_df(float64_t a) { return a; }
int32_t si_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      si_t41_sc(1), si_t41_uc(2),  si_t41_ss(3), si_t41_us(4),
      si_t41_si(5), si_t41_ui(6),  si_t41_sl(7), si_t41_ul(8),
      si_t41_sf(9), si_t41_df(10), si_t41_av(11));
uint32_t ui_t41_sc(int8_t a)    { return a; }
uint32_t ui_t41_uc(uint8_t a)   { return a; }
uint32_t ui_t41_ss(int16_t a)   { return a; }
uint32_t ui_t41_us(uint16_t a)  { return a; }
uint32_t ui_t41_si(int32_t a)   { return a; }
uint32_t ui_t41_ui(uint32_t a)  { return a; }
uint32_t ui_t41_sl(int64_t a)   { return a; }
uint32_t ui_t41_ul(uint64_t a)  { return a; }
uint32_t ui_t41_sf(float32_t a) { return a; }
uint32_t ui_t41_df(float64_t a) { return a; }
uint32_t ui_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      ui_t41_sc(1), ui_t41_uc(2),  ui_t41_ss(3), ui_t41_us(4),
      ui_t41_si(5), ui_t41_ui(6),  ui_t41_sl(7), ui_t41_ul(8),
      ui_t41_sf(9), ui_t41_df(10), ui_t41_av(11));
int64_t sl_t41_sc(int8_t a)    { return a; }
int64_t sl_t41_uc(uint8_t a)   { return a; }
int64_t sl_t41_ss(int16_t a)   { return a; }
int64_t sl_t41_us(uint16_t a)  { return a; }
int64_t sl_t41_si(int32_t a)   { return a; }
int64_t sl_t41_ui(uint32_t a)  { return a; }
int64_t sl_t41_sl(int64_t a)   { return a; }
int64_t sl_t41_ul(uint64_t a)  { return a; }
int64_t sl_t41_sf(float32_t a) { return a; }
int64_t sl_t41_df(float64_t a) { return a; }
int64_t sl_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      sl_t41_sc(1), si_t41_uc(2),  sl_t41_ss(3), sl_t41_us(4),
      sl_t41_si(5), si_t41_ui(6),  sl_t41_sl(7), sl_t41_ul(8),
      sl_t41_sf(9), si_t41_df(10), sl_t41_av(11));
uint64_t ul_t41_sc(int8_t a)    { return a; }
uint64_t ul_t41_uc(uint8_t a)   { return a; }
uint64_t ul_t41_ss(int16_t a)   { return a; }
uint64_t ul_t41_us(uint16_t a)  { return a; }
uint64_t ul_t41_si(int32_t a)   { return a; }
uint64_t ul_t41_ui(uint32_t a)  { return a; }
uint64_t ul_t41_sl(int64_t a)   { return a; }
uint64_t ul_t41_ul(uint64_t a)  { return a; }
uint64_t ul_t41_sf(float32_t a) { return a; }
uint64_t ul_t41_df(float64_t a) { return a; }
uint64_t ul_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      ul_t41_sc(1), ul_t41_uc(2),  ul_t41_ss(3), ul_t41_us(4),
      ul_t41_si(5), ul_t41_ui(6),  ul_t41_sl(7), ul_t41_ul(8),
      ul_t41_sf(9), ul_t41_df(10), ul_t41_av(11));
float32_t sf_t41_sc(int8_t a)    { return a; }
float32_t sf_t41_uc(uint8_t a)   { return a; }
float32_t sf_t41_ss(int16_t a)   { return a; }
float32_t sf_t41_us(uint16_t a)  { return a; }
float32_t sf_t41_si(int32_t a)   { return a; }
float32_t sf_t41_ui(uint32_t a)  { return a; }
float32_t sf_t41_sl(int64_t a)   { return a; }
float32_t sf_t41_ul(uint64_t a)  { return a; }
float32_t sf_t41_sf(float32_t a) { return a; }
float32_t sf_t41_df(float64_t a) { return a; }
float32_t sf_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      sf_t41_sc(1), sf_t41_uc(2),  sf_t41_ss(3), sf_t41_us(4),
      sf_t41_si(5), sf_t41_ui(6),  sf_t41_sl(7), sf_t41_ul(8),
      sf_t41_sf(9), sf_t41_df(10), sf_t41_av(11));
float64_t df_t41_sc(int8_t a)    { return a; }
float64_t df_t41_uc(uint8_t a)   { return a; }
float64_t df_t41_ss(int16_t a)   { return a; }
float64_t df_t41_us(uint16_t a)  { return a; }
float64_t df_t41_si(int32_t a)   { return a; }
float64_t df_t41_ui(uint32_t a)  { return a; }
float64_t df_t41_sl(int64_t a)   { return a; }
float64_t df_t41_ul(uint64_t a)  { return a; }
float64_t df_t41_sf(float32_t a) { return a; }
float64_t df_t41_df(float64_t a) { return a; }
float64_t df_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      df_t41_sc(1), df_t41_uc(2),  df_t41_ss(3), df_t41_us(4),
      df_t41_si(5), df_t41_ui(6),  df_t41_sl(7), df_t41_ul(8),
      df_t41_sf(9), df_t41_df(10), df_t41_av(11));
auto av_t41_sc(int8_t a)    { return a; }
auto av_t41_uc(uint8_t a)   { return a; }
auto av_t41_ss(int16_t a)   { return a; }
auto av_t41_us(uint16_t a)  { return a; }
auto av_t41_si(int32_t a)   { return a; }
auto av_t41_ui(uint32_t a)  { return a; }
auto av_t41_sl(int64_t a)   { return a; }
auto av_t41_ul(uint64_t a)  { return a; }
auto av_t41_sf(float32_t a) { return a; }
auto av_t41_df(float64_t a) { return a; }
auto av_t41_av(auto a)      { return a; }
print("%d %d %d %d %d %d %d %d %d %d %d\n",
      av_t41_sc(1), av_t41_uc(2),  av_t41_ss(3), av_t41_us(4),
      av_t41_si(5), av_t41_ui(6),  av_t41_sl(7), av_t41_ul(8),
      av_t41_sf(9), av_t41_df(10), av_t41_av(11));

class t42c_t {
    int8_t	sc;
};
t42c_t t42a = new t42c_t;
t42a.sc = 32;
print("%d %d\n", t42a.sc, sizeof(t42a));
int32_t t42av[];
t42av = new int32_t[42];
t42av[32] = 43;
print("%d %d\n", t42av[32], sizeof(t42av));
int32_t t42av2[];
int32_t t42len = 20;
t42av2 = new int32_t[t42len];
t42av2[12] = -21;
print("%d %d\n", t42av2[12], sizeof(t42av2));
int32_t t42av3[];
float32_t t42len2 = 20.0;
t42av3 = new int32_t[t42len2];
t42av3[12] = -21;
print("%d %d\n", t42av3[12], sizeof(t42av3));

print("%#x %#x %#x %#x\n", typeof(1), typeof(1.0), typeof(1/2), typeof("foo"));
int8_t		t43sc;
uint8_t		t43uc;
int16_t		t43ss;
uint16_t	t43us;
int32_t		t43si;
uint32_t	t43ui;
int64_t		t43sl;
uint64_t	t43ul;
float32_t	t43sf;
float64_t	t43df;
auto		t43av;
class		t43c_t {
    auto v;
};
t43c_t		t43c = {};
print("\
sc: %#x %#x\n\
uc: %#x %#x\n\
ss: %#x %#x\n\
us: %#x %#x\n\
si: %#x %#x\n\
ui: %#x %#x\n\
sl: %#x %#x\n\
ul: %#x %#x\n\
sf: %#x %#x\n\
df: %#x %#x\n\
av: %#x %#x\n\
cc: %#x %#x\n",
      typeof(int8_t),    typeof(t43sc), typeof(uint8_t),   typeof(t43uc),
      typeof(int16_t),   typeof(t43ss), typeof(uint16_t),  typeof(t43us),
      typeof(int32_t),   typeof(t43si), typeof(uint32_t),  typeof(t43ui),
      typeof(int64_t),   typeof(t43sl), typeof(uint64_t),  typeof(t43ul),
      typeof(float32_t), typeof(t43sf), typeof(float64_t), typeof(t43df),
      typeof(auto),      typeof(t43av), typeof(t43c_t),    typeof(t43c));
t43av = t43c;
print("%#x\n", typeof(t43c));
int32_t si_t43_v(void) { return 1; }
auto av_t43_v(void) { return 1/2; }
print("%#x %#x\n", typeof(si_t43_v()), typeof(av_t43_v()));
int16_t t43v[] = { 1, 2 };
print("%#x\n", typeof(t43v[1]));

#define t44max(a, b) ((a) > (b) ? (a) : (b))
/*
((1) > (2) ? (1) : (2))
 */
if (t44max(1, 2) != 2)
    print("error %d\n", __LINE__);
/*
((max(-1, 3)) > (max(2, 1)) ? (max(-1, 3)) : (max(2, 1)))
((((-1) > (3) ? (-1) : (3))) > (((2) > (1) ? (2) : (1)))) ? (((-1) > (3) ? (-1) : (3)))) : (((2) > (1) ? (2) : (1)))))
 */
if (t44max(t44max(-1, 3), t44max(2, 1)) != 3)
    print("error %d\n", __LINE__);
/*
((2 + 1) > (max(4.2, 9/2)) ? (2 + 1) : (max(4.2, 9/2)))
((2 + 1) > (((4.2) > (9/2) ? (4.2) : (9/2))) ? (2 + 1) : (((4.2) > (9/2) ? (4.2) : (9/2))))
 */
if (t44max(2 + 1, t44max(4.2, 9 / 2)) != 9/2)
    print("error %d\n", __LINE__);
#define t44plus		+
#define t44times	*
/*
((3 plus 3) > (3 times 3) ? (3 plus 3) : (3 times 3))
((3 + 3) > (3 * 3) ? (3 + 3) : (3 * 3))
 */
if (t44max(3 t44plus 3, 3 t44times 3) != 9)
    print("error %d\n", __LINE__);
#define t44_NUMBERS	1, \
			2, \
			3
/*
1, 2, 3
 */
int32_t t44x[] = { t44_NUMBERS };
if (t44x[0] != 1 || t44x[1] != 2 || t44x[2] != 3)
    print("error %d\n", __LINE__);
#define t44_TABLESIZE	t44_BUFSIZE
#define t44_BUFSIZE	1024
/*
BUFSIZE
1024
 */
if (t44_TABLESIZE != 1024)
    print("error %d\n", __LINE__);
#undef t44_BUFSIZE
#define t44_BUFSIZE	37
/*
BUFSIZE
37
 */
if (t44_TABLESIZE != 37)
    print("error %d\n", __LINE__);
if (t44_TABLESIZE != t44_BUFSIZE)
    print("error %d\n", __LINE__);
auto t44_foo = 2;
#define t44_foo		(4 + t44_foo)
/*
(4 + foo)
--> foo recursion
 */
if (t44_foo != 6)
    print("error %d\n", __LINE__);
auto t44_x = 5;
auto t44_y = 2;
#define t44_x		(4 + t44_y)
#define t44_y		(2 * t44_x)
/*
(4 + y)
(4 + (2 * x))
--> x recursion
 */
if (t44_x != 14)
    print("error %d\n", __LINE__);
/*
(2 * x)
(2 * (4 + y))
--> y recursion
 */
if (t44_y != 12)
    print("error %d\n", __LINE__);
auto t44_a = 1, t44_b = 2;
#undef t44_foo
#define t44_foo		(t44_a, t44_b)
#define t44_bar(x)	t44_lose(x)
#define t44_lose(x)	(1 + (x))
/*
bar(foo)
(a, b)
lose((a, b))
(1 + ((a, b)))
 */
if (t44_bar(t44_foo) != 3)
    print("error %d\n", __LINE__);
#undef t44_x
t44_x = 10;
#define t44_ignore_second_arg(a,b,c) a; c
/*
x += 10; x += 10
 */
t44_ignore_second_arg(t44_x += 10,
		      t44_x += 10,
		      t44_x += 10);
if (t44_x != 30)
    print("error %d\n", __LINE__);
#define t44_set_to_1
t44_x = 0;
#ifdef t44_set_to_1
t44_x = 1;
#endif
/*
1
 */
if (t44_x != 1)
    print("error %d\n", __LINE__);
#undef t44_set_to_1
t44_x = 0;
#ifdef t44_set_to_1
t44_x = 1;
#else
t44_x = 10;
#endif
/*
10
 */
if (t44_x != 10)
    print("error %d\n", __LINE__);
#undef t44_foo
t44_foo = 1;
#define t44_PLUS	+
#define t44_INC(x)	t44_PLUS+x
/*
PLUS + foo
+ + foo
 */
t44_INC(t44_foo);
if (t44_foo != 1)
    print("error %d\n", __LINE__);
#undef t44_x
#undef t44_y
t44_x = -1.5;
#define t44_foo(x)	x, "x"
/*
-1.5, "x"
 */
print("%d %#s\n", t44_foo(t44_x));
#undef t44_foo
#define t44_foo
/*
 */
if (t44_foo - 10 != -10)
    print("error %d\n", __LINE__);
#warning warning preprocessor test
#undef t44_foo
#define t44_foo()	2
/*
2
 */
if (t44_foo() + t44_foo() != 4)
    print("error %d\n", __LINE__);
#undef t44_foo
#define t44_foo		t44_foo
#ifdef t44_foo
t44_foo = -1;
#else
t44_foo = 1;
#endif
/*
-1
 */
if (t44_foo != -1)
    print("error %d\n", __LINE__);
#undef t44_foo
#define t44_foo(x)	t44_ ## x
t44_x = -1, t44_y = 1;
/*
-1
--
1
 */
if (t44_foo(x) + t44_foo(y) != 0)
    print("error %d\n", __LINE__);
#define t44_WARN_IF(EXP) \
    do { if (EXP) \
	print("%s", "Warning: " #EXP "\n"); } \
    while (0)
t44_x = 0;
/*	==>
    do { if (t44_x == 0) print("%s", "Warning: "  "t44_x == 0" "\n"); } while (0); */
t44_WARN_IF (t44_x == 0);
#undef t44_foo
#define t44_xstr(s) t44_astr(s)
#define t44_astr(s) #s
#define t44_foo 4
/*
# foo
"foo"
 */
print("%s\n", t44_astr(t44_foo));
/*
xstr(astr(foo))
astr(4)
# 4
"4"
 */
print("%s\n", t44_xstr(t44_foo));
#undef t44_foo
print("%s\n", t44_xstr("s \"t\" r"));
#define x	y
#define y	x
#define X	_Y_
#define Y	_X_
print("%s\n", t44_astr((x||y)&&X^Y));
#undef Y
#undef X
#undef y
#undef x
class t44_command {
    string_t	name;
    auto	value;
};
#define t44_COMMAND(NAME)	{ #NAME, t44_##NAME }
t44_x = 7; t44_y = 15;
t44_command t44c[] = {
    t44_COMMAND(x),
    t44_COMMAND(y),
};
t44_x = t44_y = 0;
if (t44c[0].name != "x" || t44c[0].value != 7 ||
    t44c[1].name != "y" || t44c[1].value != 15)
    print("error %d\n", __LINE__);
#define t44_print(...)		print(__VA_ARGS__)
/*
print("%d %d\n", 1, 2)
 */
t44_print("%d %d\n", 1, 2);
#undef t44_print
#define t44_print(format, ...)	print(format, __VA_ARGS__)
/*
print(%s", "Success\n");
 */
t44_print("%s", "Success\n");
#undef t44_print
#define t44_print(format, arg1, arg2)	print(format, ## arg1, ## arg2)
t44_print("%d\n", , 1);
t44_print("%d\n", 0, );
t44_print("foobar\n", , );
#define t44_	t44
#define foo	foo_
#define t44_set_foo(prefix, sufix, value)	prefix##sufix = value
auto t44foo_ = -1;
t44_foo = t44foo_;
/*	==>
t44_foo = 10;
	and not
t44foo_ = 10;
	last one would happen if fully expanded macro arguments were
	used with '##'
*/
t44_set_foo(t44_, foo, 10);
if (t44_foo != 10 || t44foo_ != -1)
    print("error %d\n", __LINE__);
print("hello from %s:%s:%d\n", __FILE__, __FUNCTION__, __LINE__);
void t44_f(auto file, auto function, auto line)
{
    print("hello again, from %s:%s:%d\n", __FILE__, __FUNCTION__, __LINE__);
    print("I was called from %s:%s:%d\n", file, function, line);
}
t44_f(__FILE__, __FUNCTION__, __LINE__);
/*
--- not supported ---
#define twice(x) (2*(x))
#define call_with_1(x) x(1)
if (call_with_1 (twice) != 2)
    print("error %d\n", __LINE__);
 */
#define t44_strange(format)	print(format,
/*
print("%d",
 */
t44_strange("%d\n") 45);
#define t44_new_var(prefix)		prefix ## __COUNTER__
if (t44_xstr(t44_new_var(foo)) != "foo0")
    print("error %d\n", __LINE__);
print("Hello again! Now at line %d, date is %s, and time is %s.\n",
      __LINE__, __DATE__, __TIME__);
#if 0
this line is never parsed
#endif
#if defined (__vax__) || defined (__ns16000__)
print("Hi there __vax__ or __ns16000__!\n");
#endif
#if defined (BUFSIZE) && BUFSIZE >= 1024
print("BUFSIZE && BUFSIZE >= 1024");
#endif
#if BUFSIZE >= 1024		/* BUFSIZE expands to 0 in conditional */
print("BUFSIZE >= 1024");
#endif
#if !defined(NEVER_DEFINED_BEFORE)
print("!defined(NEVER_DEFINED_BEFORE)\n");
#else
print("???\n");
#endif
#define ONE	1
#define TWO	two
#define two	2
#define THREE	ThReE
#define ThReE	three
#define three	3
#define FOUR	Four
#define Four	fouR
#define fouR	four
#define four	4
#define FIVE	Five
#define Five	fIve
#define fIve	fiVe
#define fiVe	five
#define five	5
#if ONE + ONE != TWO
print("error ONE + ONE != TWO\n");
#elif ONE << ONE == THREE || TWO + TWO == FIVE
print("error ONE << ONE == THREE || TWO + TWO == FIVE\n");
#elif FIVE ^ FOUR != THREE + - FOUR / TWO
print("error FIVE ^ FOUR != THREE + - FOUR / TWO\n");
#else
/* nothing */
#  ifndef ONE
print("error %d\n", __LINE__);
#  else
print("ONE\n");
#  endif
#endif
#if (TWO + THREE) * TWO != 10
print("error %d\n", __LINE__);
#endif
#if 0
not parsed
/*
#else
also not parsed
#endif
again not parsed */
#endif
#if 1
1;
#else
hello!
#endif
/* should not warn because of indentical redefine */
#undef t44_foo
#define t44_foo(a, b, c)	a, b, c
#define t44_foo(a, b, c)	a, b, c
#undef t44_foo
#define t44_foo	1, 2, 3
#define t44_foo		1, 2, 3
#if ONE + \
	ONE + ONE \
	+ ONE + ONE \
	!= TWO \
	+ TWO + \
	ONE
print("1+1+1+1+1 != 5\n");
#elif (FIVE + FIVE \
	+ FIVE + FIVE \
	+ FIVE \
	) /* truncation operation followed by line concatenation */\\
	FIVE != ONE + TWO \
	+ THREE + FOUR - FIVE
print("(5+5+5+5+5)\\5 != 1+2+3+4-5\n");
#elif FIVE == five * Five / (2 + three)
print("%d\n", FIVE);	/* expected result */
#elif FIVE == 5
print("5 == 5\n");	/* correct, but should just skip it */
#elif ONE
print("1\n");		/* correct, but should just skip it */
#else
print("error %d\n", __LINE__);
#endif
#if TWO + TWO != FOUR
print("2+2 != 4\n");
#  if ONE + ONE != TWO
print("1+1 != 2\n");
#  endif
#elif ONE + ONE == TWO		/* <= use this condition */
#  if ONE ^ TWO != 1 | TWO
print("1^2 != 1|2\n");
#  elif THREE & ONE == FOUR >> TWO	/* <= use this condition */
print("3&1 == 4>>2\n");	/* <<<<< expected result */
#  elif (ONE || 0) && FOUR + THREE && 1 - ONE
print("(1||0) && 4+3 && 1-1\n");
#  elif ONE + ONE - TWO == 0		/* correct but already choosen branch */
print("1+1-2 == 0\n");
#  else
print("error %d\n", __LINE__);
#  endif
#elif TWO + TWO == FOUR		/* <= correct, but already choosen a branch */
print("2+2 = 4\n");
#elif 1 + ONE == two		/* <= correct, but already choosen a branch */
print("1+1 == 2\n");
#else				/* also "correct", but should not execute */
print("error %d\n", __LINE__);
#endif
#if 1
#  if 1
#    if 1
print("1\n");
#    elif 1
print("error %d\n", __LINE__);
#    elif 1
print("error %d\n", __LINE__);
#    else
print("error %d\n", __LINE__);
#    endif
#  elif 1
print("error %d\n", __LINE__);
#  elif 1
print("error %d\n", __LINE__);
#  else
print("error %d\n", __LINE__);
#  endif
#elif 1
print("error %d\n", __LINE__);
#elif 1
print("error %d\n", __LINE__);
#else
print("error %d\n", __LINE__);
#endif
#if 0
#  if 1
print("error %d\n", __LINE__);
#  elif 0
print("error %d\n", __LINE__);
#  else
print("error %d\n", __LINE__);
#  endif
#elif 0
#  if 1
print("error %d\n", __LINE__);
#  elif 1
print("error %d\n", __LINE__);
#  else
print("error %d\n", __LINE__);
#  endif
#else
#  if 0
print("error %d\n", __LINE__);
#  elif 0
#    if 1
print("error %d\n", __LINE__);
#    else
print("error %d\n", __LINE__);
#    endif
#  else
#    if 0
print("error %d\n", __LINE__);
#    else
#      if 1
print("5\n");
#      elif 1
print("error %d\n", __LINE__);
#      else
print("error %d\n", __LINE__);
#      endif
#    endif
#  endif
#endif
#if 1
# if 0
#  if 3
#   if 4
#    if 5
print("error %d\n", __LINE__);
#     if 6
#      if 7
#       if 8
#        if 9
#         if 10
print("error %d\n", __LINE__);
#         endif
#        endif
#       endif
#      endif
#     endif
#    endif
#   endif
#  endif
# elif 2
#  if 3
#   if 4
#    if 5
#     if 0
#      if 7
print("error %d\n", __LINE__);
#       if 8
#        if 9
#         if 10
print("error %d\n", __LINE__);
#         endif
#        endif
#       endif
#      endif
#     elif 6
#      if 7
#       if 8
#        if 9
#         if 10
print("10\n");
#         endif
#        endif
#       endif
#      endif
#     elif 6
#      if 7
print("error %d\n", __LINE__);
#       if 8
#        if 9
print("error %d\n", __LINE__);
#         if 10
print("error %d\n", __LINE__);
#         endif
#        endif
#       endif
#      endif
#     else
#      if 7
print("error %d\n", __LINE__);
#       if 8
#        if 9
#         if 10
print("error %d\n", __LINE__);
#	  elif 1
print("error %d\n", __LINE__);
#	  elif 1
print("error %d\n", __LINE__);
#         endif
#        endif
#       endif
#      endif
#     endif
#    endif
#   endif
#  endif
# endif
#endif
#if 0
"#endif"
#endif

#define t45_defscheck(name, ta, tb, tc, op)				\
void name(ta a, tb b, tc c) {						\
    int8_t	sc;							\
    int16_t	ss;							\
    int32_t	si;							\
    int64_t	sl;							\
    float32_t	f;	float64_t	d;				\
    auto	v;							\
    sc = ss = si = sl = f = d = v = b;					\
    if (a op sc != c)	print("error %d\n", __LINE__);			\
    if (a op ss != c)	print("error %d\n", __LINE__);			\
    if (a op si != c)	print("error %d\n", __LINE__);			\
    if (a op sl != c)	print("error %d\n", __LINE__);			\
    if (a op f  != c)	print("error %d\n", __LINE__);			\
    if (a op d  != c)	print("error %d\n", __LINE__);			\
    if (a op v  != c)	print("error %d\n", __LINE__);			\
}
#define t45_defucheck(name, ta, tb, tc, op)				\
void name(ta a, tb b, tc c) {						\
    uint8_t	uc;							\
    uint16_t	us;							\
    uint32_t	ui;							\
    uint64_t	ul;							\
    uc = us = ui = ul = b;						\
    if (a op uc != c)	print("error %d\n", __LINE__);			\
    if (a op us != c)	print("error %d\n", __LINE__);			\
    if (a op ui != c)	print("error %d\n", __LINE__);			\
    if (a op ul != c)	print("error %d\n", __LINE__);			\
}
t45_defscheck(t45_slt_ccc, int8_t,  int8_t,  int8_t,  <)
t45_defucheck(t45_ult_ccc, uint8_t, uint8_t, uint8_t, <)
t45_slt_ccc( 1, 2, 1);
t45_slt_ccc( 1, 1, 0);
t45_slt_ccc(-1, 1, 1);
t45_ult_ccc( 1, 2, 1);
t45_ult_ccc( 1, 1, 0);
t45_ult_ccc(-1, 1, 0);
t45_defscheck(t45_slt_sss, int16_t,  int16_t,  int16_t,  <)
t45_defucheck(t45_ult_sss, uint16_t, uint16_t, uint16_t, <)
t45_slt_sss( 1, 2, 1);
t45_slt_sss( 1, 1, 0);
t45_slt_sss(-1, 1, 1);
t45_ult_sss( 1, 2, 1);
t45_ult_sss( 1, 1, 0);
t45_ult_sss(-1, 1, 0);
t45_defscheck(t45_slt_iii, int32_t,  int32_t,  int32_t,  <)
t45_defucheck(t45_ult_iii, uint32_t, uint32_t, uint32_t, <)
t45_slt_iii( 1, 2, 1);
t45_slt_iii( 1, 1, 0);
t45_slt_iii(-1, 1, 1);
t45_ult_iii( 1, 2, 1);
t45_ult_iii( 1, 1, 0);
t45_ult_iii(-1, 1, 0);
t45_defscheck(t45_slt_lll, int64_t,  int64_t,  int64_t,  <)
t45_defucheck(t45_ult_lll, uint64_t, uint64_t, uint64_t, <)
t45_slt_lll( 1, 2, 1);
t45_slt_lll( 1, 1, 0);
t45_slt_lll(-1, 1, 1);
t45_ult_lll( 1, 2, 1);
t45_ult_lll( 1, 1, 0);
t45_ult_lll(-1, 1, 0);
t45_defscheck(t45_slt_fff, float32_t,  float32_t,  float32_t, <)
t45_slt_fff( 1, 2, 1);
t45_slt_fff( 1, 1, 0);
t45_slt_fff(-1, 1, 1);
t45_defscheck(t45_slt_ddd, float64_t,  float64_t,  float64_t, <)
t45_slt_ddd( 1, 2, 1);
t45_slt_ddd( 1, 1, 0);
t45_slt_ddd(-1, 1, 1);
t45_defscheck(t45_slt_vvv, auto, auto, auto, <)
t45_slt_vvv( 1, 2, 1);
t45_slt_vvv( 1, 1, 0);
t45_slt_vvv(-1, 1, 1);
t45_defscheck(t45_sle_ccc, int8_t,  int8_t,  int8_t,  <=)
t45_defucheck(t45_ule_ccc, uint8_t, uint8_t, uint8_t, <=)
t45_sle_ccc( 1, 2, 1);
t45_sle_ccc( 1, 1, 1);
t45_sle_ccc(-1, 1, 1);
t45_ule_ccc( 1, 2, 1);
t45_ule_ccc( 1, 1, 1);
t45_ule_ccc(-1, 1, 0);
t45_defscheck(t45_sle_sss, int16_t,  int16_t,  int16_t,  <=)
t45_defucheck(t45_ule_sss, uint16_t, uint16_t, uint16_t, <=)
t45_sle_sss( 1, 2, 1);
t45_sle_sss( 1, 1, 1);
t45_sle_sss(-1, 1, 1);
t45_ule_sss( 1, 2, 1);
t45_ule_sss( 1, 1, 1);
t45_ule_sss(-1, 1, 0);
t45_defscheck(t45_sle_iii, int32_t,  int32_t,  int32_t,  <=)
t45_defucheck(t45_ule_iii, uint32_t, uint32_t, uint32_t, <=)
t45_sle_iii( 1, 2, 1);
t45_sle_iii( 1, 1, 1);
t45_sle_iii(-1, 1, 1);
t45_ule_iii( 1, 2, 1);
t45_ule_iii( 1, 1, 1);
t45_ule_iii(-1, 1, 0);
t45_defscheck(t45_sle_lll, int64_t,  int64_t,  int64_t,  <=)
t45_defucheck(t45_ule_lll, uint64_t, uint64_t, uint64_t, <=)
t45_sle_lll( 1, 2, 1);
t45_sle_lll( 1, 1, 1);
t45_sle_lll(-1, 1, 1);
t45_ule_lll( 1, 2, 1);
t45_ule_lll( 1, 1, 1);
t45_ule_lll(-1, 1, 0);
t45_defscheck(t45_sle_fff, float32_t,  float32_t,  float32_t, <=)
t45_sle_fff( 1, 2, 1);
t45_sle_fff( 1, 1, 1);
t45_sle_fff(-1, 1, 1);
t45_defscheck(t45_sle_ddd, float64_t,  float64_t,  float64_t, <=)
t45_sle_ddd( 1, 2, 1);
t45_sle_ddd( 1, 1, 1);
t45_sle_ddd(-1, 1, 1);
t45_defscheck(t45_sle_vvv, auto, auto, auto, <=)
t45_sle_vvv( 1, 2, 1);
t45_sle_vvv( 1, 1, 1);
t45_sle_vvv(-1, 1, 1);
t45_defscheck(t45_seq_ccc, int8_t,  int8_t,  int8_t,  ==)
t45_defucheck(t45_ueq_ccc, uint8_t, uint8_t, uint8_t, ==)
t45_seq_ccc( 1, 2, 0);
t45_seq_ccc( 1, 1, 1);
t45_seq_ccc(-1, 1, 0);
t45_ueq_ccc( 1, 2, 0);
t45_ueq_ccc( 1, 1, 1);
t45_ueq_ccc(-1, 1, 0);
t45_defscheck(t45_seq_sss, int16_t,  int16_t,  int16_t,  ==)
t45_defucheck(t45_ueq_sss, uint16_t, uint16_t, uint16_t, ==)
t45_seq_sss( 1, 2, 0);
t45_seq_sss( 1, 1, 1);
t45_seq_sss(-1, 1, 0);
t45_ueq_sss( 1, 2, 0);
t45_ueq_sss( 1, 1, 1);
t45_ueq_sss(-1, 1, 0);
t45_defscheck(t45_seq_iii, int32_t,  int32_t,  int32_t,  ==)
t45_defucheck(t45_ueq_iii, uint32_t, uint32_t, uint32_t, ==)
t45_seq_iii( 1, 2, 0);
t45_seq_iii( 1, 1, 1);
t45_seq_iii(-1, 1, 0);
t45_ueq_iii( 1, 2, 0);
t45_ueq_iii( 1, 1, 1);
t45_ueq_iii(-1, 1, 0);
t45_defscheck(t45_seq_lll, int64_t,  int64_t,  int64_t,  ==)
t45_defucheck(t45_ueq_lll, uint64_t, uint64_t, uint64_t, ==)
t45_seq_lll( 1, 2, 0);
t45_seq_lll( 1, 1, 1);
t45_seq_lll(-1, 1, 0);
t45_ueq_lll( 1, 2, 0);
t45_ueq_lll( 1, 1, 1);
t45_ueq_lll(-1, 1, 0);
t45_defscheck(t45_seq_fff, float32_t,  float32_t,  float32_t, ==)
t45_seq_fff( 1, 2, 0);
t45_seq_fff( 1, 1, 1);
t45_seq_fff(-1, 1, 0);
t45_defscheck(t45_seq_ddd, float64_t,  float64_t,  float64_t, ==)
t45_seq_ddd( 1, 2, 0);
t45_seq_ddd( 1, 1, 1);
t45_seq_ddd(-1, 1, 0);
t45_defscheck(t45_seq_vvv, auto, auto, auto, ==)
t45_seq_vvv( 1, 2, 0);
t45_seq_vvv( 1, 1, 1);
t45_seq_vvv(-1, 1, 0);
t45_defscheck(t45_sge_ccc, int8_t,  int8_t,  int8_t,  >=)
t45_defucheck(t45_uge_ccc, uint8_t, uint8_t, uint8_t, >=)
t45_sge_ccc( 1, 2, 0);
t45_sge_ccc( 1, 1, 1);
t45_sge_ccc(-1, 1, 0);
t45_uge_ccc( 1, 2, 0);
t45_uge_ccc( 1, 1, 1);
t45_uge_ccc(-1, 1, 1);
t45_defscheck(t45_sge_sss, int16_t,  int16_t,  int16_t,  >=)
t45_defucheck(t45_uge_sss, uint16_t, uint16_t, uint16_t, >=)
t45_sge_sss( 1, 2, 0);
t45_sge_sss( 1, 1, 1);
t45_sge_sss(-1, 1, 0);
t45_uge_sss( 1, 2, 0);
t45_uge_sss( 1, 1, 1);
t45_uge_sss(-1, 1, 1);
t45_defscheck(t45_sge_iii, int32_t,  int32_t,  int32_t,  >=)
t45_defucheck(t45_uge_iii, uint32_t, uint32_t, uint32_t, >=)
t45_sge_iii( 1, 2, 0);
t45_sge_iii( 1, 1, 1);
t45_sge_iii(-1, 1, 0);
t45_uge_iii( 1, 2, 0);
t45_uge_iii( 1, 1, 1);
t45_uge_iii(-1, 1, 1);
t45_defscheck(t45_sge_lll, int64_t,  int64_t,  int64_t,  >=)
t45_defucheck(t45_uge_lll, uint64_t, uint64_t, uint64_t, >=)
t45_sge_lll( 1, 2, 0);
t45_sge_lll( 1, 1, 1);
t45_sge_lll(-1, 1, 0);
t45_uge_lll( 1, 2, 0);
t45_uge_lll( 1, 1, 1);
t45_uge_lll(-1, 1, 1);
t45_defscheck(t45_sge_fff, float32_t,  float32_t,  float32_t, >=)
t45_sge_fff( 1, 2, 0);
t45_sge_fff( 1, 1, 1);
t45_sge_fff(-1, 1, 0);
t45_defscheck(t45_sge_ddd, float64_t,  float64_t,  float64_t, >=)
t45_sge_ddd( 1, 2, 0);
t45_sge_ddd( 1, 1, 1);
t45_sge_ddd(-1, 1, 0);
t45_defscheck(t45_sge_vvv, auto, auto, auto, >=)
t45_sge_vvv( 1, 2, 0);
t45_sge_vvv( 1, 1, 1);
t45_sge_vvv(-1, 1, 0);
t45_defscheck(t45_sgt_ccc, int8_t,  int8_t,  int8_t,  >)
t45_defucheck(t45_ugt_ccc, uint8_t, uint8_t, uint8_t, >)
t45_sgt_ccc( 1, 2, 0);
t45_sgt_ccc( 1, 1, 0);
t45_sgt_ccc(-1, 1, 0);
t45_ugt_ccc( 1, 2, 0);
t45_ugt_ccc( 1, 1, 0);
t45_ugt_ccc(-1, 1, 1);
t45_defscheck(t45_sgt_sss, int16_t,  int16_t,  int16_t,  >)
t45_defucheck(t45_ugt_sss, uint16_t, uint16_t, uint16_t, >)
t45_sgt_sss( 1, 2, 0);
t45_sgt_sss( 1, 1, 0);
t45_sgt_sss(-1, 1, 0);
t45_ugt_sss( 1, 2, 0);
t45_ugt_sss( 1, 1, 0);
t45_ugt_sss(-1, 1, 1);
t45_defscheck(t45_sgt_iii, int32_t,  int32_t,  int32_t,  >)
t45_defucheck(t45_ugt_iii, uint32_t, uint32_t, uint32_t, >)
t45_sgt_iii( 1, 2, 0);
t45_sgt_iii( 1, 1, 0);
t45_sgt_iii(-1, 1, 0);
t45_ugt_iii( 1, 2, 0);
t45_ugt_iii( 1, 1, 0);
t45_ugt_iii(-1, 1, 1);
t45_defscheck(t45_sgt_lll, int64_t,  int64_t,  int64_t,  >)
t45_defucheck(t45_ugt_lll, uint64_t, uint64_t, uint64_t, >)
t45_sgt_lll( 1, 2, 0);
t45_sgt_lll( 1, 1, 0);
t45_sgt_lll(-1, 1, 0);
t45_ugt_lll( 1, 2, 0);
t45_ugt_lll( 1, 1, 0);
t45_ugt_lll(-1, 1, 1);
t45_defscheck(t45_sgt_fff, float32_t,  float32_t,  float32_t, >)
t45_sgt_fff( 1, 2, 0);
t45_sgt_fff( 1, 1, 0);
t45_sgt_fff(-1, 1, 0);
t45_defscheck(t45_sgt_ddd, float64_t,  float64_t,  float64_t, >)
t45_sgt_ddd( 1, 2, 0);
t45_sgt_ddd( 1, 1, 0);
t45_sgt_ddd(-1, 1, 0);
t45_defscheck(t45_sgt_vvv, auto, auto, auto, >)
t45_sgt_vvv( 1, 2, 0);
t45_sgt_vvv( 1, 1, 0);
t45_sgt_vvv(-1, 1, 0);
t45_defscheck(t45_sne_ccc, int8_t,  int8_t,  int8_t,  !=)
t45_defucheck(t45_une_ccc, uint8_t, uint8_t, uint8_t, !=)
t45_sne_ccc( 1, 2, 1);
t45_sne_ccc( 1, 1, 0);
t45_sne_ccc(-1, 1, 1);
t45_une_ccc( 1, 2, 1);
t45_une_ccc( 1, 1, 0);
t45_une_ccc(-1, 1, 1);
t45_defscheck(t45_sne_sss, int16_t,  int16_t,  int16_t,  !=)
t45_defucheck(t45_une_sss, uint16_t, uint16_t, uint16_t, !=)
t45_sne_sss( 1, 2, 1);
t45_sne_sss( 1, 1, 0);
t45_sne_sss(-1, 1, 1);
t45_une_sss( 1, 2, 1);
t45_une_sss( 1, 1, 0);
t45_une_sss(-1, 1, 1);
t45_defscheck(t45_sne_iii, int32_t,  int32_t,  int32_t,  !=)
t45_defucheck(t45_une_iii, uint32_t, uint32_t, uint32_t, !=)
t45_sne_iii( 1, 2, 1);
t45_sne_iii( 1, 1, 0);
t45_sne_iii(-1, 1, 1);
t45_une_iii( 1, 2, 1);
t45_une_iii( 1, 1, 0);
t45_une_iii(-1, 1, 1);
t45_defscheck(t45_sne_lll, int64_t,  int64_t,  int64_t,  !=)
t45_defucheck(t45_une_lll, uint64_t, uint64_t, uint64_t, !=)
t45_sne_lll( 1, 2, 1);
t45_sne_lll( 1, 1, 0);
t45_sne_lll(-1, 1, 1);
t45_une_lll( 1, 2, 1);
t45_une_lll( 1, 1, 0);
t45_une_lll(-1, 1, 1);
t45_defscheck(t45_sne_fff, float32_t,  float32_t,  float32_t, !=)
t45_sne_fff( 1, 2, 1);
t45_sne_fff( 1, 1, 0);
t45_sne_fff(-1, 1, 1);
t45_defscheck(t45_sne_ddd, float64_t,  float64_t,  float64_t, !=)
t45_sne_ddd( 1, 2, 1);
t45_sne_ddd( 1, 1, 0);
t45_sne_ddd(-1, 1, 1);
t45_defscheck(t45_sne_vvv, auto, auto, auto, !=)
t45_sne_vvv( 1, 2, 1);
t45_sne_vvv( 1, 1, 0);
t45_sne_vvv(-1, 1, 1);
t45_defscheck(t45_sadd_ccc, int8_t,  int8_t,  int8_t,  +)
t45_defucheck(t45_uadd_ccc, uint8_t, uint8_t, uint16_t, +)
t45_sadd_ccc( 1, 2, 3);
t45_sadd_ccc( 1, 1, 2);
t45_sadd_ccc(-1, 1, 0);
t45_uadd_ccc( 1, 2, 3);
t45_uadd_ccc( 1, 1, 2);
t45_uadd_ccc(-1, 1, 256);
t45_defscheck(t45_sadd_sss, int16_t,  int16_t,  int16_t,  +)
t45_defucheck(t45_uadd_sss, uint16_t, uint16_t, uint32_t, +)
t45_sadd_sss( 1, 2, 3);
t45_sadd_sss( 1, 1, 2);
t45_sadd_sss(-1, 1, 0);
t45_uadd_sss( 1, 2, 3);
t45_uadd_sss( 1, 1, 2);
t45_uadd_sss(-1, 1, 65536);
t45_defscheck(t45_sadd_iii, int32_t,  int32_t,  int32_t,  +)
t45_defucheck(t45_uadd_iii, uint32_t, uint32_t, uint64_t, +)
t45_sadd_iii( 1, 2, 3);
t45_sadd_iii( 1, 1, 2);
t45_sadd_iii(-1, 1, 0);
t45_uadd_iii( 1, 2, 3);
t45_uadd_iii( 1, 1, 2);
t45_uadd_iii(-1, 1, 4294967296);
t45_defscheck(t45_sadd_lll, int64_t,  int64_t,  int64_t,  +)
t45_defucheck(t45_uadd_lll, uint64_t, uint64_t, auto, +)
t45_sadd_lll( 1, 2, 3);
t45_sadd_lll( 1, 1, 2);
t45_sadd_lll(-1, 1, 0);
t45_uadd_lll( 1, 2, 3);
t45_uadd_lll( 1, 1, 2);
t45_uadd_lll(-1, 1, 18446744073709551616);
t45_defscheck(t45_sadd_fff, float32_t,  float32_t,  float32_t, +)
t45_sadd_fff( 1, 2, 3);
t45_sadd_fff( 1, 1, 2);
t45_sadd_fff(-1, 1, 0);
t45_defscheck(t45_sadd_ddd, float64_t,  float64_t,  float64_t, +)
t45_sadd_ddd( 1, 2, 3);
t45_sadd_ddd( 1, 1, 2);
t45_sadd_ddd(-1, 1, 0);
t45_defscheck(t45_sadd_vvv, auto, auto, auto, +)
t45_sadd_vvv( 1, 2, 3);
t45_sadd_vvv( 1, 1, 2);
t45_sadd_vvv(-1, 1, 0);
t45_defscheck(t45_ssub_ccc, int8_t,  int8_t,  int8_t,  -)
t45_defucheck(t45_usub_ccc, uint8_t, uint8_t, auto, -)
t45_ssub_ccc( 1, 2, -1);
t45_ssub_ccc( 1, 1,  0);
t45_ssub_ccc(-1, 1, -2);
t45_usub_ccc( 1, 2, -1);
t45_usub_ccc( 1, 1,  0);
t45_usub_ccc(-1, 1,  254);
t45_defscheck(t45_ssub_sss, int16_t,  int16_t,  int16_t,  -)
t45_defucheck(t45_usub_sss, uint16_t, uint16_t, auto, -)
t45_ssub_sss( 1, 2, -1);
t45_ssub_sss( 1, 1,  0);
t45_ssub_sss(-1, 1, -2);
t45_usub_sss( 1, 2, -1);
t45_usub_sss( 1, 1,  0);
t45_usub_sss(-1, 1,  65534);
t45_defscheck(t45_ssub_iii, int32_t,  int32_t,  int32_t,  -)
t45_defucheck(t45_usub_iii, uint32_t, uint32_t, auto, -)
t45_ssub_iii( 1, 2, -1);
t45_ssub_iii( 1, 1,  0);
t45_ssub_iii(-1, 1, -2);
t45_usub_iii( 1, 2, -1);
t45_usub_iii( 1, 1,  0);
t45_usub_iii(-1, 1,  4294967294);
t45_defscheck(t45_ssub_lll, int64_t,  int64_t,  int64_t,  -)
t45_defucheck(t45_usub_lll, uint64_t, auto, auto, -)
t45_ssub_lll( 1, 2, -1);
t45_ssub_lll( 1, 1,  0);
t45_ssub_lll(-1, 1, -2);
t45_usub_lll( 1, 2, -1);
t45_usub_lll( 1, 1,  0);
t45_usub_lll(-1, 1,  18446744073709551614);
t45_defscheck(t45_ssub_fff, float32_t,  float32_t,  float32_t, -)
t45_ssub_fff( 1, 2, -1);
t45_ssub_fff( 1, 1,  0);
t45_ssub_fff(-1, 1, -2);
t45_defscheck(t45_ssub_ddd, float64_t,  float64_t,  float64_t, -)
t45_ssub_ddd( 1, 2, -1);
t45_ssub_ddd( 1, 1,  0);
t45_ssub_ddd(-1, 1, -2);
t45_defscheck(t45_ssub_vvv, auto, auto, auto, -)
t45_ssub_vvv( 1, 2, -1);
t45_ssub_vvv( 1, 1,  0);
t45_ssub_vvv(-1, 1, -2);

void t46_0() {
    uint64_t	u;
    for (u = 0x7ffffffffffffff0; u < 0x8000000000010000.0; u++)
	;
    if (u != 0x8000000000010000.0)
	print("error %d\n", __LINE__);
}
t46_0();
class t46_c_t {
    int8_t	c;	uint8_t		uc;
    int16_t	s;	uint16_t	us;
    int32_t	i;	uint32_t	ui;
    int64_t	l;	uint64_t	ul;
    float32_t	f;	float64_t	d;
    auto	v;
    int8_t c_c_I()	{ return c++; }
    int8_t c_uc_I()	{ return uc++; }
    int16_t s_s_I()	{ return s++; }
    int16_t s_us_I()	{ return us++; }
    int32_t i_i_I()	{ return i++; }
    int32_t i_ui_I()	{ return ui++; }
    int64_t l_l_I()	{ return l++; }
    int64_t l_ul_I()	{ return ul++; }
    float32_t f_f_I()	{ return f++; }
    float64_t d_d_I()	{ return d++; }
    auto v_v_I()	{ return v++; }
    int8_t c_c_D()	{ return c--; }
    int8_t c_uc_D()	{ return uc--; }
    int16_t s_s_D()	{ return s--; }
    int16_t s_us_D()	{ return us--; }
    int32_t i_i_D()	{ return i--; }
    int32_t i_ui_D()	{ return ui--; }
    int64_t l_l_D()	{ return l--; }
    int64_t l_ul_D()	{ return ul--; }
    float32_t f_f_D()	{ return f--; }
    float64_t d_d_D()	{ return d--; }
    auto v_v_D()	{ return v--; }
    int8_t c_I_c()	{ return ++c; }
    int8_t c_I_uc()	{ return ++uc; }
    int16_t s_I_s()	{ return ++s; }
    int16_t s_I_us()	{ return ++us; }
    int32_t i_I_i()	{ return ++i; }
    int32_t i_I_ui()	{ return ++ui; }
    int64_t l_I_l()	{ return ++l; }
    int64_t l_I_ul()	{ return ++ul; }
    float32_t f_I_f()	{ return ++f; }
    float64_t d_I_d()	{ return ++d; }
    auto v_I_v()	{ return ++v; }
    int8_t c_D_c()	{ return --c; }
    int8_t c_D_uc()	{ return --uc; }
    int16_t s_D_s()	{ return --s; }
    int16_t s_D_us()	{ return --us; }
    int32_t i_D_i()	{ return --i; }
    int32_t i_D_ui()	{ return --ui; }
    int64_t l_D_l()	{ return --l; }
    int64_t l_D_ul()	{ return --ul; }
    float32_t f_D_f()	{ return --f; }
    float64_t d_D_d()	{ return --d; }
    auto v_D_v()	{ return --v; }
    void c_A_c(int8_t a)	{ c += a; }
    void c_A_uc(uint8_t a)	{ c += a; }
    void c_A_s(int16_t a)	{ c += a; }
    void c_A_us(uint16_t a)	{ c += a; }
    void c_A_i(int32_t a)	{ c += a; }
    void c_A_ui(uint32_t a)	{ c += a; }
    void c_A_l(int64_t a)	{ c += a; }
    void c_A_ul(uint64_t a)	{ c += a; }
    void c_A_f(float32_t a)	{ c += a; }
    void c_A_d(float64_t a)	{ c += a; }
    void c_A_v(auto a)		{ c += a; }
    void uc_A_c(int8_t a)	{ uc += a; }
    void uc_A_uc(uint8_t a)	{ uc += a; }
    void uc_A_s(int16_t a)	{ uc += a; }
    void uc_A_us(uint16_t a)	{ uc += a; }
    void uc_A_i(int32_t a)	{ uc += a; }
    void uc_A_ui(uint32_t a)	{ uc += a; }
    void uc_A_l(int64_t a)	{ uc += a; }
    void uc_A_ul(uint64_t a)	{ uc += a; }
    void uc_A_f(float32_t a)	{ uc += a; }
    void uc_A_d(float64_t a)	{ uc += a; }
    void uc_A_v(auto a)		{ uc += a; }
    void s_A_c(int8_t a)	{ s += a; }
    void s_A_uc(uint8_t a)	{ s += a; }
    void s_A_s(int16_t a)	{ s += a; }
    void s_A_us(uint16_t a)	{ s += a; }
    void s_A_i(int32_t a)	{ s += a; }
    void s_A_ui(uint32_t a)	{ s += a; }
    void s_A_l(int64_t a)	{ s += a; }
    void s_A_ul(uint64_t a)	{ s += a; }
    void s_A_f(float32_t a)	{ s += a; }
    void s_A_d(float64_t a)	{ s += a; }
    void s_A_v(auto a)		{ s += a; }
    void us_A_c(int8_t a)	{ us += a; }
    void us_A_uc(uint8_t a)	{ us += a; }
    void us_A_s(int16_t a)	{ us += a; }
    void us_A_us(uint16_t a)	{ us += a; }
    void us_A_i(int32_t a)	{ us += a; }
    void us_A_ui(uint32_t a)	{ us += a; }
    void us_A_l(int64_t a)	{ us += a; }
    void us_A_ul(uint64_t a)	{ us += a; }
    void us_A_f(float32_t a)	{ us += a; }
    void us_A_d(float64_t a)	{ us += a; }
    void us_A_v(auto a)		{ us += a; }
    void i_A_c(int8_t a)	{ i += a; }
    void i_A_uc(uint8_t a)	{ i += a; }
    void i_A_s(int16_t a)	{ i += a; }
    void i_A_us(uint16_t a)	{ i += a; }
    void i_A_i(int32_t a)	{ i += a; }
    void i_A_ui(uint32_t a)	{ i += a; }
    void i_A_l(int64_t a)	{ i += a; }
    void i_A_ul(uint64_t a)	{ i += a; }
    void i_A_f(float32_t a)	{ i += a; }
    void i_A_d(float64_t a)	{ i += a; }
    void i_A_v(auto a)		{ i += a; }
    void ui_A_c(int8_t a)	{ ui += a; }
    void ui_A_uc(uint8_t a)	{ ui += a; }
    void ui_A_s(int16_t a)	{ ui += a; }
    void ui_A_us(uint16_t a)	{ ui += a; }
    void ui_A_i(int32_t a)	{ ui += a; }
    void ui_A_ui(uint32_t a)	{ ui += a; }
    void ui_A_l(int64_t a)	{ ui += a; }
    void ui_A_ul(uint64_t a)	{ ui += a; }
    void ui_A_f(float32_t a)	{ ui += a; }
    void ui_A_d(float64_t a)	{ ui += a; }
    void ui_A_v(auto a)		{ ui += a; }
    void l_S_c(int8_t a)	{ l -= a; }
    void l_S_uc(uint8_t a)	{ l -= a; }
    void l_S_s(int16_t a)	{ l -= a; }
    void l_S_us(uint16_t a)	{ l -= a; }
    void l_S_i(int32_t a)	{ l -= a; }
    void l_S_ui(uint32_t a)	{ l -= a; }
    void l_S_l(int64_t a)	{ l -= a; }
    void l_S_ul(uint64_t a)	{ l -= a; }
    void l_S_f(float32_t a)	{ l -= a; }
    void l_S_d(float64_t a)	{ l -= a; }
    void l_S_v(auto a)		{ l -= a; }
    void ul_S_c(int8_t a)	{ ul -= a; }
    void ul_S_uc(uint8_t a)	{ ul -= a; }
    void ul_S_s(int16_t a)	{ ul -= a; }
    void ul_S_us(uint16_t a)	{ ul -= a; }
    void ul_S_i(int32_t a)	{ ul -= a; }
    void ul_S_ui(uint32_t a)	{ ul -= a; }
    void ul_S_l(int64_t a)	{ ul -= a; }
    void ul_S_ul(uint64_t a)	{ ul -= a; }
    void ul_S_f(float32_t a)	{ ul -= a; }
    void ul_S_d(float64_t a)	{ ul -= a; }
    void ul_S_v(auto a)		{ ul -= a; }
    void f_S_c(int8_t a)	{ f -= a; }
    void f_S_uc(uint8_t a)	{ f -= a; }
    void f_S_s(int16_t a)	{ f -= a; }
    void f_S_us(uint16_t a)	{ f -= a; }
    void f_S_i(int32_t a)	{ f -= a; }
    void f_S_ui(uint32_t a)	{ f -= a; }
    void f_S_l(int64_t a)	{ f -= a; }
    void f_S_ul(uint64_t a)	{ f -= a; }
    void f_S_f(float32_t a)	{ f -= a; }
    void f_S_d(float64_t a)	{ f -= a; }
    void f_S_v(auto a)		{ f -= a; }
    void d_S_c(int8_t a)	{ d -= a; }
    void d_S_uc(uint8_t a)	{ d -= a; }
    void d_S_s(int16_t a)	{ d -= a; }
    void d_S_us(uint16_t a)	{ d -= a; }
    void d_S_i(int32_t a)	{ d -= a; }
    void d_S_ui(uint32_t a)	{ d -= a; }
    void d_S_l(int64_t a)	{ d -= a; }
    void d_S_ul(uint64_t a)	{ d -= a; }
    void d_S_f(float32_t a)	{ d -= a; }
    void d_S_d(float64_t a)	{ d -= a; }
    void d_S_v(auto a)		{ d -= a; }
    void v_S_c(int8_t a)	{ v -= a; }
    void v_S_uc(uint8_t a)	{ v -= a; }
    void v_S_s(int16_t a)	{ v -= a; }
    void v_S_us(uint16_t a)	{ v -= a; }
    void v_S_i(int32_t a)	{ v -= a; }
    void v_S_ui(uint32_t a)	{ v -= a; }
    void v_S_l(int64_t a)	{ v -= a; }
    void v_S_ul(uint64_t a)	{ v -= a; }
    void v_S_f(float32_t a)	{ v -= a; }
    void v_S_d(float64_t a)	{ v -= a; }
    void v_S_v(auto a)		{ v -= a; }
    void reset()	{ c = uc = s = us = i = ui = l = ul = f = d = v = 0; }
    void t0() {
	/* assuming first call (basically to have v as null) */
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
	if (c_c_I() != 0.0 || c_uc_I() != 0 ||
	    s_s_I() != 0 || s_us_I() != 0.0 ||
	    i_i_I() != 0.0 || i_ui_I() != 0 ||
	    l_l_I() != 0 || l_ul_I() != 0.0 ||
	    f_f_I() != 0.0 || d_d_I() != 0 ||
	    v_v_I() != 0)
	    print("error %d\n", __LINE__);
	if (c != 1 || uc != 1.0 ||
	    s != 1.0 || us != 1 ||
	    i != 1 || ui != 1.0 ||
	    l != 1.0 || ul != 1 ||
	    f != 1 || d != 1.0 ||
	    v != 1.0)
	    print("error %d\n", __LINE__);
	if (c_D_c() != 0 || c_D_uc() != 0.0 ||
	    s_D_s() != 0.0 || s_D_us() != 0 ||
	    i_D_i() != 0 || i_D_ui() != 0.0 ||
	    l_D_l() != 0.0 || l_D_ul() != 0 ||
	    f_D_f() != 0 || d_D_d() != 0.0 ||
	    v_D_v() != 0)
	    print("error %d\n", __LINE__);
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
    }
    void t1() {
	reset();
	if (c_c_I() != 0.0 || c_uc_I() != 0 ||
	    s_s_I() != 0 || s_us_I() != 0.0 ||
	    i_i_I() != 0.0 || i_ui_I() != 0 ||
	    l_l_I() != 0 || l_ul_I() != 0.0 ||
	    f_f_I() != 0.0 || d_d_I() != 0 ||
	    v_v_I() != 0)
	    print("error %d\n", __LINE__);
	if (c != 1 || uc != 1.0 ||
	    s != 1.0 || us != 1 ||
	    i != 1 || ui != 1.0 ||
	    l != 1.0 || ul != 1 ||
	    f != 1 || d != 1.0 ||
	    v != 1.0)
	    print("error %d\n", __LINE__);
	if (c_D_c() != 0 || c_D_uc() != 0.0 ||
	    s_D_s() != 0.0 || s_D_us() != 0 ||
	    i_D_i() != 0 || i_D_ui() != 0.0 ||
	    l_D_l() != 0.0 || l_D_ul() != 0 ||
	    f_D_f() != 0 || d_D_d() != 0.0 ||
	    v_D_v() != 0)
	    print("error %d\n", __LINE__);
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
    }
    void t2() {
	reset();
	ul = 0x7fffffffffffffff;
	if (l_ul_I() != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
	if (l_ul_I() != -0x8000000000000000)	print("error %d\n", __LINE__);
	if (l_ul_I() != -0x7fffffffffffffff)	print("error %d\n", __LINE__);
	if (l_D_ul() != -0x7fffffffffffffff)	print("error %d\n", __LINE__);
	if (l_D_ul() != -0x8000000000000000)	print("error %d\n", __LINE__);
	if (ul != 0x8000000000000000)		print("error %d\n", __LINE__);
    }
    void t3() {
	reset();
	if (c_c_D() != 0.0 || c_uc_D() != 0 ||
	    s_s_D() != 0 || s_us_D() != 0.0 ||
	    i_i_D() != 0.0 || i_ui_D() != 0 ||
	    l_l_D() != 0 || l_ul_D() != 0.0 ||
	    f_f_D() != 0.0 || d_d_D() != 0 ||
	    v_v_D() != 0)
	    print("error %d\n", __LINE__);
	if (c != -1 || uc != 0xff.0 ||
	    s != -1.0 || us != 0xffff ||
	    i != -1 || ui != 0xffffffff.0 ||
	    l != -1.0 || ul != 0xffffffffffffffff ||
	    f != -1 || d != -1.0 ||
	    v != -1.0)
	    print("error %d\n", __LINE__);
	if (c_I_c() != 0 || c_I_uc() != 0.0 ||
	    s_I_s() != 0.0 || s_I_us() != 0 ||
	    i_I_i() != 0 || i_I_ui() != 0.0 ||
	    l_I_l() != 0.0 || l_I_ul() != 0 ||
	    f_I_f() != 0 || d_I_d() != 0.0 ||
	    v_I_v() != 0)
	    print("error %d\n", __LINE__);
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
    }
    void t4() {
	int8_t		xc;	uint8_t		xuc;
	int16_t		xs;	uint16_t	xus;
	int32_t		xi;	uint32_t	xui;
	int64_t		xl;	uint64_t	xul;
	float32_t	xf;	float64_t	xd;
	auto		xv;
	reset();
	xc = c++;	xuc = uc++;	xs = s++;	xus = us++;
	xi = i++;	xui = ui++;	xl = l++;	xul = ul++;
	xf = f++;	xd = d++;	xv = v++;
	if (xc != 0 || xuc != 0.0 ||
	    xs != 0.0 || xus != 0 ||
	    xi != 0 || xui != 0.0 ||
	    xl != 0.0 || xul != 0 ||
	    xf != 0 || xd != 0.0 ||
	    xv != 0.0)
	    print("error %d\n", __LINE__);
	if (c != 1 || uc != 1.0 ||
	    s != 1.0 || us != 1 ||
	    i != 1 || ui != 1.0 ||
	    l != 1.0 || ul != 1 ||
	    f != 1 || d != 1.0 ||
	    v != 1.0)
	    print("error %d\n", __LINE__);
	xc = c--;	xuc = uc--;	xs = s--;	xus = us--;
	xi = i--;	xui = ui--;	xl = l--;	xul = ul--;
	xf = f--;	xd = d--;	xv = v--;
	if (xc != 1.0 || xuc != 1 ||
	    xs != 1 || xus != 1.0 ||
	    xi != 1.0 || xui != 1 ||
	    xl != 1 || xul != 1.0 ||
	    xf != 1.0 || xd != 1 ||
	    xv != 1)
	    print("error %d\n", __LINE__);
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
	xc = ++c;	xuc = ++uc;	xs = ++s;	xus = ++us;
	xi = ++i;	xui = ++ui;	xl = ++l;	xul = ++ul;
	xf = ++f;	xd = ++d;	xv = ++v;
	if (xc != c || xuc != uc ||
	    xs != s || xus != us ||
	    xi != i || xui != ui ||
	    xl != l || xul != ul ||
	    xf != f || xd != d ||
	    xv != v)
	    print("error %d\n", __LINE__);
	c = --xv;	uc = --xd;	s = --xf;	us = --xul;
	i = --xl;	ui = --xui;	l = --xi;	ul = --xus;
	f = --xs;	d = --xuc;	v = --xc;
	if (c != 0.0 || uc != 0 ||
	    s != 0 || us != 0.0 ||
	    i != 0.0 || ui != 0 ||
	    l != 0 || ul != 0.0 ||
	    f != 0.0 || d != 0 ||
	    v != 0)
	    print("error %d\n", __LINE__);
    }
    /* float comparisons may vary due to conversion... */
    void t5() {
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x7f;
	c_A_c(c);
	if (c != -0x02)		print("error %d\n", __LINE__);
	c_A_uc(uc);
	if (c !=  0x7d)		print("error %d\n", __LINE__);
	c_A_s(s);
	if (c != -0x04)		print("error %d\n", __LINE__);
	c_A_us(us);
	if (c !=  0x7b)		print("error %d\n", __LINE__);
	c_A_i(i);
	if (c != -0x06)		print("error %d\n", __LINE__);
	c_A_ui(ui);
	if (c !=  0x79)		print("error %d\n", __LINE__);
	c_A_l(l);
	if (c != -0x08)		print("error %d\n", __LINE__);
	c_A_ul(ul);
	if (c !=  0x77)		print("error %d\n", __LINE__);
	c_A_f(f);
	if (c != -0x0a)		print("error %d\n", __LINE__);
	c_A_d(d);
	if (c !=  0x75)		print("error %d\n", __LINE__);
	c_A_v(v);
	if (c != -0x0c)		print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x81;
	uc_A_c(c);
	if (uc != 0x02)		print("error %d\n", __LINE__);
	uc_A_uc(uc);
	if (uc != 0x04)		print("error %d\n", __LINE__);
	uc_A_s(s);
	if (uc != 0x85)		print("error %d\n", __LINE__);
	uc_A_us(us);
	if (uc != 0x06)		print("error %d\n", __LINE__);
	uc_A_i(i);
	if (uc != 0x87)		print("error %d\n", __LINE__);
	uc_A_ui(ui);
	if (uc != 0x08)		print("error %d\n", __LINE__);
	uc_A_l(l);
	if (uc != 0x89)		print("error %d\n", __LINE__);
	uc_A_ul(ul);
	if (uc != 0x0a)		print("error %d\n", __LINE__);
	uc_A_f(f);
	if (uc != 0x8b)		print("error %d\n", __LINE__);
	uc_A_d(d);
	if (uc != 0x0c)		print("error %d\n", __LINE__);
	uc_A_v(v);
	if (uc != 0x8d)		print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x8001;
	s_A_c(c);
	if (s != -0x7ffe)		print("error %d\n", __LINE__);
	s_A_uc(uc);
	if (s != -0x7ffd)		print("error %d\n", __LINE__);
	s_A_s(s);
	if (s !=  0x0006)		print("error %d\n", __LINE__);
	s_A_us(us);
	if (s != -0x7ff9)		print("error %d\n", __LINE__);
	s_A_i(i);
	if (s !=  0x0008)		print("error %d\n", __LINE__);
	s_A_ui(ui);
	if (s != -0x7ff7)		print("error %d\n", __LINE__);
	s_A_l(l);
	if (s !=  0x000a)		print("error %d\n", __LINE__);
	s_A_ul(ul);
	if (s != -0x7ff5)		print("error %d\n", __LINE__);
	s_A_f(f);
	if (s !=  0x000c)		print("error %d\n", __LINE__);
	s_A_d(d);
	if (s != -0x7ff3)		print("error %d\n", __LINE__);
	s_A_v(v);  if (s !=  0x000e)	print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x7fff;
	us_A_c(c);
	if (us != 0x7ffe)		print("error %d\n", __LINE__);
	us_A_uc(uc);
	if (us != 0x80fd)		print("error %d\n", __LINE__);
	us_A_s(s);
	if (us != 0x00fc)		print("error %d\n", __LINE__);
	us_A_us(us);
	if (us != 0x01f8)		print("error %d\n", __LINE__);
	us_A_i(i);
	if (us != 0x81f7)		print("error %d\n", __LINE__);
	us_A_ui(ui);
	if (us != 0x01f6)		print("error %d\n", __LINE__);
	us_A_l(l);
	if (us != 0x81f5)		print("error %d\n", __LINE__);
	us_A_ul(ul);
	if (us != 0x01f4)		print("error %d\n", __LINE__);
	us_A_f(f);
	if (us != 0x81f3)		print("error %d\n", __LINE__);
	us_A_d(d);
	if (us != 0x01f2)		print("error %d\n", __LINE__);
	us_A_v(v);
	if (us != 0x81f1)		print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0xa5a5a5a5;
	i_A_c(c);
	if (i != -0x5a5a5ab6)		print("error %d\n", __LINE__);
	i_A_uc(uc);
	if (i != -0x5a5a5a11)		print("error %d\n", __LINE__);
	i_A_s(s);
	if (i != -0x5a5ab46c)		print("error %d\n", __LINE__);
	i_A_us(us);
	if (i != -0x5a5a0ec7)		print("error %d\n", __LINE__);
	i_A_i(i);
	if (i !=  0x4b4be272)		print("error %d\n", __LINE__);
	i_A_ui(ui);
	if (i != -0x0f0e77e9)		print("error %d\n", __LINE__);
	i_A_l(l);
	if (i != -0x6968d244)		print("error %d\n", __LINE__);
	i_A_ul(ul);
	if (i !=  0x3c3cd361)		print("error %d\n", __LINE__);
	/* truncate overflow */
	if (i_A_f(f), i == -0x80000000) {
	    i_A_d(d);
	    if (i !=  0x25a5a5a5)	print("error %d\n", __LINE__);
	    i_A_v(v);
	    if (i != -0x34b4b4b6)	print("error %d\n", __LINE__);
	}
	else {
	    if (i != 0x7fffffff)	print("error %d\n", __LINE__);
	    i_A_d(d);
	    if (i !=  0x7fffffff)	print("error %d\n", __LINE__);
	    i_A_v(v);
	    if (i !=  0x25a5a5a4)	print("error %d\n", __LINE__);
	}
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x80007ffe;
	ui_A_c(c);
	if (ui != 0x80007ffc)		print("error %d\n", __LINE__);
	ui_A_uc(uc);
	if (ui != 0x800080fa)		print("error %d\n", __LINE__);
	ui_A_s(s);
	if (ui != 0x800100f8)		print("error %d\n", __LINE__);
	ui_A_us(us);
	if (ui != 0x800180f6)		print("error %d\n", __LINE__);
	ui_A_i(i);
	if (ui != 0x000200f4)		print("error %d\n", __LINE__);
	ui_A_ui(ui);
	if (ui != 0x000401e8)		print("error %d\n", __LINE__);
	ui_A_l(l);
	if (ui != 0x800481e6)		print("error %d\n", __LINE__);
	ui_A_ul(ul);
	if (ui != 0x000501e4)		print("error %d\n", __LINE__);
	/* truncate overflow */
	if (ui_A_f(f), ui == 0x80000000) {
	    ui_A_d(d);
	    if (ui != 0x80000000)	print("error %d\n", __LINE__);
	    ui_A_v(v);
	    if (ui != 0x00007ffe)	print("error %d\n", __LINE__);
	}
	else {
	    if (ui != 0x7fffffff)	print("error %d\n", __LINE__);
	    ui_A_d(d);
	    if (ui != 0x7fffffff)	print("error %d\n", __LINE__);
	    ui_A_v(v);
	    if (ui != 0x00007ffd)	print("error %d\n", __LINE__);
	}
	c = uc = s = us = i = ui = l = ul = f = d = v = 0xfffffffffffffffe;
	l_S_c(c);
	if (l !=  0x0000000000000000)	print("error %d\n", __LINE__);
	l_S_uc(uc);
	if (l != -0x00000000000000fe)	print("error %d\n", __LINE__);
	l_S_s(s);
	if (l != -0x00000000000000fc)	print("error %d\n", __LINE__);
	l_S_us(us);
	if (l != -0x00000000000100fa)	print("error %d\n", __LINE__);
	l_S_i(i);
	if (l != -0x00000000000100f8)	print("error %d\n", __LINE__);
	l_S_ui(ui);
	if (l != -0x00000001000100f6)	print("error %d\n", __LINE__);
	l_S_l(l);
	if (l !=  0x0000000000000000)	print("error %d\n", __LINE__);
	l_S_ul(ul);
	if (l !=  0x0000000000000002)	print("error %d\n", __LINE__);
	if (l_S_f(f), l == -0x8000000000000000) {
	    l_S_d(d);
	    if (l != -0x8000000000000000)print("error %d\n", __LINE__);
	    l_S_v(v);
	    if (l != -0x7ffffffffffffffe)print("error %d\n", __LINE__);
	}
	else {
	    if (l != 0x0000000000000001)print("error %d\n", __LINE__);
	    l_S_d(d);
	    if (l != 0x0000000000000800)print("error %d\n", __LINE__);
	    l_S_v(v);
	    if (l != 0x0000000000000802)print("error %d\n", __LINE__);
	}
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x8000000000000001;
	ul_S_c(c);
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_S_uc(uc);
	if (ul != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
	ul_S_s(s);
	if (ul != 0x7ffffffffffffffe)	print("error %d\n", __LINE__);
	ul_S_us(us);
	if (ul != 0x7ffffffffffffffd)	print("error %d\n", __LINE__);
	ul_S_i(i);
	if (ul != 0x7ffffffffffffffc)	print("error %d\n", __LINE__);
	ul_S_ui(ui);
	if (ul != 0x7ffffffffffffffb)	print("error %d\n", __LINE__);
	ul_S_l(l);
	if (ul != 0xfffffffffffffffa)	print("error %d\n", __LINE__);
	ul_S_ul(ul);
	if (ul != 0x0000000000000000)	print("error %d\n", __LINE__);
	ul_S_f(f);
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_S_d(d);
	if (ul != 0x0000000000000000)	print("error %d\n", __LINE__);
	ul_S_v(v);
	if (ul != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x800000.0;
	f_S_c(c);
	if (f !=  0x0800000.0)		print("error %d\n", __LINE__);
	f_S_uc(uc);
	if (f !=  0x0800000.0)		print("error %d\n", __LINE__);
	f_S_s(s);
	if (f !=  0x0800000.0)		print("error %d\n", __LINE__);
	f_S_us(us);
	if (f !=  0x0800000.0)		print("error %d\n", __LINE__);
	f_S_i(i);
	if (f != -0x0000000.0)		print("error %d\n", __LINE__);
	f_S_ui(ui);
	if (f != -0x0800000.0)		print("error %d\n", __LINE__);
	f_S_l(l);
	if (f != -0x1000000.0)		print("error %d\n", __LINE__);
	f_S_ul(ul);
	if (f != -0x1800000.0)		print("error %d\n", __LINE__);
	f_S_f(f);
	if (f !=  0x0000000.0)		print("error %d\n", __LINE__);
	f_S_d(d);
	if (f != -0x0800000.0)		print("error %d\n", __LINE__);
	f_S_v(v);
	if (f != -0x1000000.0)		print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0xffff.0;
	d_S_c(c);
	if (d !=  0x10000.0)		print("error %d\n", __LINE__);
	d_S_uc(uc);
	if (d !=  0x0ff01.0)		print("error %d\n", __LINE__);
	d_S_s(s);
	if (d !=  0x0ff02.0)		print("error %d\n", __LINE__);
	d_S_us(us);
	if (d != -0x000fd.0)		print("error %d\n", __LINE__);
	d_S_i(i);
	if (d != -0x100fc.0)		print("error %d\n", __LINE__);
	d_S_ui(ui);
	if (d != -0x200fb.0)		print("error %d\n", __LINE__);
	d_S_l(l);
	if (d != -0x300fa.0)		print("error %d\n", __LINE__);
	d_S_ul(ul);
	if (d != -0x400f9.0)		print("error %d\n", __LINE__);
	d_S_f(f);
	if (d != -0x500f8.0)		print("error %d\n", __LINE__);
	d_S_d(d);
	if (d !=  0x00000.0)		print("error %d\n", __LINE__);
	d_S_v(v);
	if (d != -0x0ffff.0)		print("error %d\n", __LINE__);
	c = uc = s = us = i = ui = l = ul = f = d = v = 0x7fffffffffffffff;
	v_S_c(c);
	if (v !=  0x8000000000000000)	print("error %d\n", __LINE__);
	v_S_uc(uc);
	if (v !=  0x7fffffffffffff01)	print("error %d\n", __LINE__);
	v_S_s(s);
	if (v !=  0x7fffffffffffff02)	print("error %d\n", __LINE__);
	v_S_us(us);
	if (v !=  0x7ffffffffffeff03)	print("error %d\n", __LINE__);
	v_S_i(i);
	if (v !=  0x7ffffffffffeff04)	print("error %d\n", __LINE__);
	v_S_ui(ui);
	if (v !=  0x7ffffffefffeff05)	print("error %d\n", __LINE__);
	v_S_l(l);
	if (v != -0x00000001000100fa)	print("error %d\n", __LINE__);
	v_S_ul(ul);
	if (v != -0x80000001000100f9)	print("error %d\n", __LINE__);
	v_S_f(f);
	if (v != -0x10000000100010000.0 || typeof(v) != typeof(0.0))
	    print("error %d\n", __LINE__);
	v_S_d(d);
	if (v != -0x18000000100010000.0)print("error %d\n", __LINE__);
	v_S_v(v);
	if (v !=  0.0)			print("error %d\n", __LINE__);
    }
};
t46_c_t t46_class = {};
t46_class.t0();
t46_class.t1();
t46_class.t2();
t46_class.t3();
t46_class.t4();
t46_class.t5();
/* Equivalent of previous tests using global variables. */
int8_t		t46_c;	uint8_t		t46_uc;
int16_t		t46_s;	uint16_t	t46_us;
int32_t		t46_i;	uint32_t	t46_ui;
int64_t		t46_l;	uint64_t	t46_ul;
float32_t	t46_f;	float64_t	t46_d;
auto		t46_v;
int32_t		t46_gi;	uint32_t	t46_gui;
int64_t		t46_gl;	uint64_t	t46_gul;
float32_t	t46_gf;	float64_t	t46_gd;
auto		t46_gv;
for (t46_ul = 0x7ffffffffffffff0; t46_ul < 0x8000000000010000.0; t46_ul++)
    ;
if (t46_ul != 0x8000000000010000.0)		print("error %d\n", __LINE__);
int8_t t46_c_c_I()	{ return t46_c++; }
int8_t t46_c_uc_I()	{ return t46_uc++; }
int16_t t46_s_s_I()	{ return t46_s++; }
int16_t t46_s_us_I()	{ return t46_us++; }
int32_t t46_i_i_I()	{ return t46_i++; }
int32_t t46_i_ui_I()	{ return t46_ui++; }
int64_t t46_l_l_I()	{ return t46_l++; }
int64_t t46_l_ul_I()	{ return t46_ul++; }
float32_t t46_f_f_I()	{ return t46_f++; }
float64_t t46_d_d_I()	{ return t46_d++; }
auto t46_v_v_I()	{ return t46_v++; }
int8_t t46_c_c_D()	{ return t46_c--; }
int8_t t46_c_uc_D()	{ return t46_uc--; }
int16_t t46_s_s_D()	{ return t46_s--; }
int16_t t46_s_us_D()	{ return t46_us--; }
int32_t t46_i_i_D()	{ return t46_i--; }
int32_t t46_i_ui_D()	{ return t46_ui--; }
int64_t t46_l_l_D()	{ return t46_l--; }
int64_t t46_l_ul_D()	{ return t46_ul--; }
float32_t t46_f_f_D()	{ return t46_f--; }
float64_t t46_d_d_D()	{ return t46_d--; }
auto t46_v_v_D()	{ return t46_v--; }
int8_t t46_c_I_c()	{ return ++t46_c; }
int8_t t46_c_I_uc()	{ return ++t46_uc; }
int16_t t46_s_I_s()	{ return ++t46_s; }
int16_t t46_s_I_us()	{ return ++t46_us; }
int32_t t46_i_I_i()	{ return ++t46_i; }
int32_t t46_i_I_ui()	{ return ++t46_ui; }
int64_t t46_l_I_l()	{ return ++t46_l; }
int64_t t46_l_I_ul()	{ return ++t46_ul; }
float32_t t46_f_I_f()	{ return ++t46_f; }
float64_t t46_d_I_d()	{ return ++t46_d; }
auto t46_v_I_v()	{ return ++t46_v; }
int8_t t46_c_D_c()	{ return --t46_c; }
int8_t t46_c_D_uc()	{ return --t46_uc; }
int16_t t46_s_D_s()	{ return --t46_s; }
int16_t t46_s_D_us()	{ return --t46_us; }
int32_t t46_i_D_i()	{ return --t46_i; }
int32_t t46_i_D_ui()	{ return --t46_ui; }
int64_t t46_l_D_l()	{ return --t46_l; }
int64_t t46_l_D_ul()	{ return --t46_ul; }
float32_t t46_f_D_f()	{ return --t46_f; }
float64_t t46_d_D_d()	{ return --t46_d; }
auto t46_v_D_v()	{ return --t46_v; }
void t46_c_A_c(int8_t a)	{ t46_c += a; }
void t46_c_A_uc(uint8_t a)	{ t46_c += a; }
void t46_c_A_s(int16_t a)	{ t46_c += a; }
void t46_c_A_us(uint16_t a)	{ t46_c += a; }
void t46_c_A_i(int32_t a)	{ t46_c += a; }
void t46_c_A_ui(uint32_t a)	{ t46_c += a; }
void t46_c_A_l(int64_t a)	{ t46_c += a; }
void t46_c_A_ul(uint64_t a)	{ t46_c += a; }
void t46_c_A_f(float32_t a)	{ t46_c += a; }
void t46_c_A_d(float64_t a)	{ t46_c += a; }
void t46_c_A_v(auto a)		{ t46_c += a; }
void t46_uc_A_c(int8_t a)	{ t46_uc += a; }
void t46_uc_A_uc(uint8_t a)	{ t46_uc += a; }
void t46_uc_A_s(int16_t a)	{ t46_uc += a; }
void t46_uc_A_us(uint16_t a)	{ t46_uc += a; }
void t46_uc_A_i(int32_t a)	{ t46_uc += a; }
void t46_uc_A_ui(uint32_t a)	{ t46_uc += a; }
void t46_uc_A_l(int64_t a)	{ t46_uc += a; }
void t46_uc_A_ul(uint64_t a)	{ t46_uc += a; }
void t46_uc_A_f(float32_t a)	{ t46_uc += a; }
void t46_uc_A_d(float64_t a)	{ t46_uc += a; }
void t46_uc_A_v(auto a)		{ t46_uc += a; }
void t46_s_A_c(int8_t a)	{ t46_s += a; }
void t46_s_A_uc(uint8_t a)	{ t46_s += a; }
void t46_s_A_s(int16_t a)	{ t46_s += a; }
void t46_s_A_us(uint16_t a)	{ t46_s += a; }
void t46_s_A_i(int32_t a)	{ t46_s += a; }
void t46_s_A_ui(uint32_t a)	{ t46_s += a; }
void t46_s_A_l(int64_t a)	{ t46_s += a; }
void t46_s_A_ul(uint64_t a)	{ t46_s += a; }
void t46_s_A_f(float32_t a)	{ t46_s += a; }
void t46_s_A_d(float64_t a)	{ t46_s += a; }
void t46_s_A_v(auto a)		{ t46_s += a; }
void t46_us_A_c(int8_t a)	{ t46_us += a; }
void t46_us_A_uc(uint8_t a)	{ t46_us += a; }
void t46_us_A_s(int16_t a)	{ t46_us += a; }
void t46_us_A_us(uint16_t a)	{ t46_us += a; }
void t46_us_A_i(int32_t a)	{ t46_us += a; }
void t46_us_A_ui(uint32_t a)	{ t46_us += a; }
void t46_us_A_l(int64_t a)	{ t46_us += a; }
void t46_us_A_ul(uint64_t a)	{ t46_us += a; }
void t46_us_A_f(float32_t a)	{ t46_us += a; }
void t46_us_A_d(float64_t a)	{ t46_us += a; }
void t46_us_A_v(auto a)		{ t46_us += a; }
void t46_i_A_c(int8_t a)	{ t46_i += a; }
void t46_i_A_uc(uint8_t a)	{ t46_i += a; }
void t46_i_A_s(int16_t a)	{ t46_i += a; }
void t46_i_A_us(uint16_t a)	{ t46_i += a; }
void t46_i_A_i(int32_t a)	{ t46_i += a; }
void t46_i_A_ui(uint32_t a)	{ t46_i += a; }
void t46_i_A_l(int64_t a)	{ t46_i += a; }
void t46_i_A_ul(uint64_t a)	{ t46_i += a; }
void t46_i_A_f(float32_t a)	{ t46_i += a; }
void t46_i_A_d(float64_t a)	{ t46_i += a; }
void t46_i_A_v(auto a)		{ t46_i += a; }
void t46_ui_A_c(int8_t a)	{ t46_ui += a; }
void t46_ui_A_uc(uint8_t a)	{ t46_ui += a; }
void t46_ui_A_s(int16_t a)	{ t46_ui += a; }
void t46_ui_A_us(uint16_t a)	{ t46_ui += a; }
void t46_ui_A_i(int32_t a)	{ t46_ui += a; }
void t46_ui_A_ui(uint32_t a)	{ t46_ui += a; }
void t46_ui_A_l(int64_t a)	{ t46_ui += a; }
void t46_ui_A_ul(uint64_t a)	{ t46_ui += a; }
void t46_ui_A_f(float32_t a)	{ t46_ui += a; }
void t46_ui_A_d(float64_t a)	{ t46_ui += a; }
void t46_ui_A_v(auto a)		{ t46_ui += a; }
void t46_l_S_c(int8_t a)	{ t46_l -= a; }
void t46_l_S_uc(uint8_t a)	{ t46_l -= a; }
void t46_l_S_s(int16_t a)	{ t46_l -= a; }
void t46_l_S_us(uint16_t a)	{ t46_l -= a; }
void t46_l_S_i(int32_t a)	{ t46_l -= a; }
void t46_l_S_ui(uint32_t a)	{ t46_l -= a; }
void t46_l_S_l(int64_t a)	{ t46_l -= a; }
void t46_l_S_ul(uint64_t a)	{ t46_l -= a; }
void t46_l_S_f(float32_t a)	{ t46_l -= a; }
void t46_l_S_d(float64_t a)	{ t46_l -= a; }
void t46_l_S_v(auto a)		{ t46_l -= a; }
void t46_ul_S_c(int8_t a)	{ t46_ul -= a; }
void t46_ul_S_uc(uint8_t a)	{ t46_ul -= a; }
void t46_ul_S_s(int16_t a)	{ t46_ul -= a; }
void t46_ul_S_us(uint16_t a)	{ t46_ul -= a; }
void t46_ul_S_i(int32_t a)	{ t46_ul -= a; }
void t46_ul_S_ui(uint32_t a)	{ t46_ul -= a; }
void t46_ul_S_l(int64_t a)	{ t46_ul -= a; }
void t46_ul_S_ul(uint64_t a)	{ t46_ul -= a; }
void t46_ul_S_f(float32_t a)	{ t46_ul -= a; }
void t46_ul_S_d(float64_t a)	{ t46_ul -= a; }
void t46_ul_S_v(auto a)		{ t46_ul -= a; }
void t46_f_S_c(int8_t a)	{ t46_f -= a; }
void t46_f_S_uc(uint8_t a)	{ t46_f -= a; }
void t46_f_S_s(int16_t a)	{ t46_f -= a; }
void t46_f_S_us(uint16_t a)	{ t46_f -= a; }
void t46_f_S_i(int32_t a)	{ t46_f -= a; }
void t46_f_S_ui(uint32_t a)	{ t46_f -= a; }
void t46_f_S_l(int64_t a)	{ t46_f -= a; }
void t46_f_S_ul(uint64_t a)	{ t46_f -= a; }
void t46_f_S_f(float32_t a)	{ t46_f -= a; }
void t46_f_S_d(float64_t a)	{ t46_f -= a; }
void t46_f_S_v(auto a)		{ t46_f -= a; }
void t46_d_S_c(int8_t a)	{ t46_d -= a; }
void t46_d_S_uc(uint8_t a)	{ t46_d -= a; }
void t46_d_S_s(int16_t a)	{ t46_d -= a; }
void t46_d_S_us(uint16_t a)	{ t46_d -= a; }
void t46_d_S_i(int32_t a)	{ t46_d -= a; }
void t46_d_S_ui(uint32_t a)	{ t46_d -= a; }
void t46_d_S_l(int64_t a)	{ t46_d -= a; }
void t46_d_S_ul(uint64_t a)	{ t46_d -= a; }
void t46_d_S_f(float32_t a)	{ t46_d -= a; }
void t46_d_S_d(float64_t a)	{ t46_d -= a; }
void t46_d_S_v(auto a)		{ t46_d -= a; }
void t46_v_S_c(int8_t a)	{ t46_v -= a; }
void t46_v_S_uc(uint8_t a)	{ t46_v -= a; }
void t46_v_S_s(int16_t a)	{ t46_v -= a; }
void t46_v_S_us(uint16_t a)	{ t46_v -= a; }
void t46_v_S_i(int32_t a)	{ t46_v -= a; }
void t46_v_S_ui(uint32_t a)	{ t46_v -= a; }
void t46_v_S_l(int64_t a)	{ t46_v -= a; }
void t46_v_S_ul(uint64_t a)	{ t46_v -= a; }
void t46_v_S_f(float32_t a)	{ t46_v -= a; }
void t46_v_S_d(float64_t a)	{ t46_v -= a; }
void t46_v_S_v(auto a)		{ t46_v -= a; }
void t46_reset() {
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0;
}
t46_ul = 0;
void t46_t0() {
    /* assuming first call (basically to have v as null) */
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
    if (t46_c_c_I() != 0.0 || t46_c_uc_I() != 0 ||
	t46_s_s_I() != 0 || t46_s_us_I() != 0.0 ||
	t46_i_i_I() != 0.0 || t46_i_ui_I() != 0 ||
	t46_l_l_I() != 0 || t46_l_ul_I() != 0.0 ||
	t46_f_f_I() != 0.0 || t46_d_d_I() != 0 ||
	t46_v_v_I() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != 1 || t46_uc != 1.0 ||
	t46_s != 1.0 || t46_us != 1 ||
	t46_i != 1 || t46_ui != 1.0 ||
	t46_l != 1.0 || t46_ul != 1 ||
	t46_f != 1 || t46_d != 1.0 ||
	t46_v != 1.0)
	print("error %d\n", __LINE__);
    if (t46_c_D_c() != 0 || t46_c_D_uc() != 0.0 ||
	t46_s_D_s() != 0.0 || t46_s_D_us() != 0 ||
	t46_i_D_i() != 0 || t46_i_D_ui() != 0.0 ||
	t46_l_D_l() != 0.0 || t46_l_D_ul() != 0 ||
	t46_f_D_f() != 0 || t46_d_D_d() != 0.0 ||
	t46_v_D_v() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
}
void t46_t1() {
    t46_reset();
    if (t46_c_c_I() != 0.0 || t46_c_uc_I() != 0 ||
	t46_s_s_I() != 0 || t46_s_us_I() != 0.0 ||
	t46_i_i_I() != 0.0 || t46_i_ui_I() != 0 ||
	t46_l_l_I() != 0 || t46_l_ul_I() != 0.0 ||
	t46_f_f_I() != 0.0 || t46_d_d_I() != 0 ||
	t46_v_v_I() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != 1 || t46_uc != 1.0 ||
	t46_s != 1.0 || t46_us != 1 ||
	t46_i != 1 || t46_ui != 1.0 ||
	t46_l != 1.0 || t46_ul != 1 ||
	t46_f != 1 || t46_d != 1.0 ||
	t46_v != 1.0)
	print("error %d\n", __LINE__);
    if (t46_c_D_c() != 0 || t46_c_D_uc() != 0.0 ||
	t46_s_D_s() != 0.0 || t46_s_D_us() != 0 ||
	t46_i_D_i() != 0 || t46_i_D_ui() != 0.0 ||
	t46_l_D_l() != 0.0 || t46_l_D_ul() != 0 ||
	t46_f_D_f() != 0 || t46_d_D_d() != 0.0 ||
	t46_v_D_v() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
}
void t46_t2() {
    t46_reset();
    t46_ul = 0x7fffffffffffffff;
    if (t46_l_ul_I() != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
    if (t46_l_ul_I() != -0x8000000000000000)	print("error %d\n", __LINE__);
    if (t46_l_ul_I() != -0x7fffffffffffffff)	print("error %d\n", __LINE__);
    if (t46_l_D_ul() != -0x7fffffffffffffff)	print("error %d\n", __LINE__);
    if (t46_l_D_ul() != -0x8000000000000000)	print("error %d\n", __LINE__);
    if (t46_ul != 0x8000000000000000)		print("error %d\n", __LINE__);
}
void t46_t3() {
    t46_reset();
    if (t46_c_c_D() != 0.0 || t46_c_uc_D() != 0 ||
	t46_s_s_D() != 0 || t46_s_us_D() != 0.0 ||
	t46_i_i_D() != 0.0 || t46_i_ui_D() != 0 ||
	t46_l_l_D() != 0 || t46_l_ul_D() != 0.0 ||
	t46_f_f_D() != 0.0 || t46_d_d_D() != 0 ||
	t46_v_v_D() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != -1 || t46_uc != 0xff.0 ||
	t46_s != -1.0 || t46_us != 0xffff ||
	t46_i != -1 || t46_ui != 0xffffffff.0 ||
	t46_l != -1.0 || t46_ul != 0xffffffffffffffff ||
	t46_f != -1 || t46_d != -1.0 ||
	t46_v != -1.0)
	print("error %d\n", __LINE__);
    if (t46_c_I_c() != 0 || t46_c_I_uc() != 0.0 ||
	t46_s_I_s() != 0.0 || t46_s_I_us() != 0 ||
	t46_i_I_i() != 0 || t46_i_I_ui() != 0.0 ||
	t46_l_I_l() != 0.0 || t46_l_I_ul() != 0 ||
	t46_f_I_f() != 0 || t46_d_I_d() != 0.0 ||
	t46_v_I_v() != 0)
	print("error %d\n", __LINE__);
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
}
void t46_t4() {
    int8_t		xc;	uint8_t		xuc;
    int16_t		xs;	uint16_t	xus;
    int32_t		xi;	uint32_t	xui;
    int64_t		xl;	uint64_t	xul;
    float32_t		xf;	float64_t	xd;
    auto		xv;
    t46_reset();
    xc = t46_c++;	xuc = t46_uc++;	xs = t46_s++;	xus = t46_us++;
    xi = t46_i++;	xui = t46_ui++;	xl = t46_l++;	xul = t46_ul++;
    xf = t46_f++;	xd = t46_d++;	xv = t46_v++;
    if (xc != 0 || xuc != 0.0 ||
	xs != 0.0 || xus != 0 ||
	xi != 0 || xui != 0.0 ||
	xl != 0.0 || xul != 0 ||
	xf != 0 || xd != 0.0 ||
	xv != 0.0)
	print("error %d\n", __LINE__);
    if (t46_c != 1 || t46_uc != 1.0 ||
	t46_s != 1.0 || t46_us != 1 ||
	t46_i != 1 || t46_ui != 1.0 ||
	t46_l != 1.0 || t46_ul != 1 ||
	t46_f != 1 || t46_d != 1.0 ||
	t46_v != 1.0)
	print("error %d\n", __LINE__);
    xc = t46_c--;	xuc = t46_uc--;	xs = t46_s--;	xus = t46_us--;
    xi = t46_i--;	xui = t46_ui--;	xl = t46_l--;	xul = t46_ul--;
    xf = t46_f--;	xd = t46_d--;	xv = t46_v--;
    if (xc != 1.0 || xuc != 1 ||
	xs != 1 || xus != 1.0 ||
	xi != 1.0 || xui != 1 ||
	xl != 1 || xul != 1.0 ||
	xf != 1.0 || xd != 1 ||
	xv != 1)
	print("error %d\n", __LINE__);
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
    xc = ++t46_c;	xuc = ++t46_uc;	xs = ++t46_s;	xus = ++t46_us;
    xi = ++t46_i;	xui = ++t46_ui;	xl = ++t46_l;	xul = ++t46_ul;
    xf = ++t46_f;	xd = ++t46_d;	xv = ++t46_v;
    if (xc != t46_c || xuc != t46_uc ||
	xs != t46_s || xus != t46_us ||
	xi != t46_i || xui != t46_ui ||
	xl != t46_l || xul != t46_ul ||
	xf != t46_f || xd != t46_d ||
	xv != t46_v)
	print("error %d\n", __LINE__);
    t46_c = --xv;	t46_uc = --xd;	t46_s = --xf;	t46_us = --xul;
    t46_i = --xl;	t46_ui = --xui;	t46_l = --xi;	t46_ul = --xus;
    t46_f = --xs;	t46_d = --xuc;	t46_v = --xc;
    if (t46_c != 0.0 || t46_uc != 0 ||
	t46_s != 0 || t46_us != 0.0 ||
	t46_i != 0.0 || t46_ui != 0 ||
	t46_l != 0 || t46_ul != 0.0 ||
	t46_f != 0.0 || t46_d != 0 ||
	t46_v != 0)
	print("error %d\n", __LINE__);
}
/* float comparisons may vary due to conversion... */
void t46_t5() {
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x7f;
    t46_c_A_c(t46_c);
    if (t46_c != -0x02)			print("error %d\n", __LINE__);
    t46_c_A_uc(t46_uc);
    if (t46_c !=  0x7d)			print("error %d\n", __LINE__);
    t46_c_A_s(t46_s);
    if (t46_c != -0x04)			print("error %d\n", __LINE__);
    t46_c_A_us(t46_us);
    if (t46_c !=  0x7b)			print("error %d\n", __LINE__);
    t46_c_A_i(t46_i);
    if (t46_c != -0x06)			print("error %d\n", __LINE__);
    t46_c_A_ui(t46_ui);
    if (t46_c !=  0x79)			print("error %d\n", __LINE__);
    t46_c_A_l(t46_l);
    if (t46_c != -0x08)			print("error %d\n", __LINE__);
    t46_c_A_ul(t46_ul);
    if (t46_c !=  0x77)			print("error %d\n", __LINE__);
    t46_c_A_f(t46_f);
    if (t46_c != -0x0a)			print("error %d\n", __LINE__);
    t46_c_A_d(t46_d);
    if (t46_c !=  0x75)			print("error %d\n", __LINE__);
    t46_c_A_v(t46_v);
    if (t46_c != -0x0c)			print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x81;
    t46_uc_A_c(t46_c);
    if (t46_uc != 0x02)			print("error %d\n", __LINE__);
    t46_uc_A_uc(t46_uc);
    if (t46_uc != 0x04)			print("error %d\n", __LINE__);
    t46_uc_A_s(t46_s);
    if (t46_uc != 0x85)			print("error %d\n", __LINE__);
    t46_uc_A_us(t46_us);
    if (t46_uc != 0x06)			print("error %d\n", __LINE__);
    t46_uc_A_i(t46_i);
    if (t46_uc != 0x87)			print("error %d\n", __LINE__);
    t46_uc_A_ui(t46_ui);
    if (t46_uc != 0x08)			print("error %d\n", __LINE__);
    t46_uc_A_l(t46_l);
    if (t46_uc != 0x89)			print("error %d\n", __LINE__);
    t46_uc_A_ul(t46_ul);
    if (t46_uc != 0x0a)			print("error %d\n", __LINE__);
    t46_uc_A_f(t46_f);
    if (t46_uc != 0x8b)			print("error %d\n", __LINE__);
    t46_uc_A_d(t46_d);
    if (t46_uc != 0x0c)			print("error %d\n", __LINE__);
    t46_uc_A_v(t46_v);
    if (t46_uc != 0x8d)			print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x8001;
    t46_s_A_c(t46_c);
    if (t46_s != -0x7ffe)		print("error %d\n", __LINE__);
    t46_s_A_uc(t46_uc);
    if (t46_s != -0x7ffd)		print("error %d\n", __LINE__);
    t46_s_A_s(t46_s);
    if (t46_s !=  0x0006)		print("error %d\n", __LINE__);
    t46_s_A_us(t46_us);
    if (t46_s != -0x7ff9)		print("error %d\n", __LINE__);
    t46_s_A_i(t46_i);
    if (t46_s !=  0x0008)		print("error %d\n", __LINE__);
    t46_s_A_ui(t46_ui);
    if (t46_s != -0x7ff7)		print("error %d\n", __LINE__);
    t46_s_A_l(t46_l);
    if (t46_s !=  0x000a)		print("error %d\n", __LINE__);
    t46_s_A_ul(t46_ul);
    if (t46_s != -0x7ff5)		print("error %d\n", __LINE__);
    t46_s_A_f(t46_f);
    if (t46_s !=  0x000c)		print("error %d\n", __LINE__);
    t46_s_A_d(t46_d);
    if (t46_s != -0x7ff3)		print("error %d\n", __LINE__);
    t46_s_A_v(t46_v);
    if (t46_s !=  0x000e)		print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x7fff;
    t46_us_A_c(t46_c);
    if (t46_us != 0x7ffe)		print("error %d\n", __LINE__);
    t46_us_A_uc(t46_uc);
    if (t46_us != 0x80fd)		print("error %d\n", __LINE__);
    t46_us_A_s(t46_s);
    if (t46_us != 0x00fc)		print("error %d\n", __LINE__);
    t46_us_A_us(t46_us);
    if (t46_us != 0x01f8)		print("error %d\n", __LINE__);
    t46_us_A_i(t46_i);
    if (t46_us != 0x81f7)		print("error %d\n", __LINE__);
    t46_us_A_ui(t46_ui);
    if (t46_us != 0x01f6)		print("error %d\n", __LINE__);
    t46_us_A_l(t46_l);
    if (t46_us != 0x81f5)		print("error %d\n", __LINE__);
    t46_us_A_ul(t46_ul);
    if (t46_us != 0x01f4)		print("error %d\n", __LINE__);
    t46_us_A_f(t46_f);
    if (t46_us != 0x81f3)		print("error %d\n", __LINE__);
    t46_us_A_d(t46_d);
    if (t46_us != 0x01f2)		print("error %d\n", __LINE__);
    t46_us_A_v(t46_v);
    if (t46_us != 0x81f1)		print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0xa5a5a5a5;
    t46_i_A_c(t46_c);
    if (t46_i != -0x5a5a5ab6)		print("error %d\n", __LINE__);
    t46_i_A_uc(t46_uc);
    if (t46_i != -0x5a5a5a11)		print("error %d\n", __LINE__);
    t46_i_A_s(t46_s);
    if (t46_i != -0x5a5ab46c)		print("error %d\n", __LINE__);
    t46_i_A_us(t46_us);
    if (t46_i != -0x5a5a0ec7)		print("error %d\n", __LINE__);
    t46_i_A_i(t46_i);
    if (t46_i !=  0x4b4be272)		print("error %d\n", __LINE__);
    t46_i_A_ui(t46_ui);
    if (t46_i != -0x0f0e77e9)		print("error %d\n", __LINE__);
    t46_i_A_l(t46_l);
    if (t46_i != -0x6968d244)		print("error %d\n", __LINE__);
    t46_i_A_ul(t46_ul);
    if (t46_i !=  0x3c3cd361)		print("error %d\n", __LINE__);
    /* truncate overflow */
    if (t46_i_A_f(t46_f), t46_i == -0x80000000) {
	t46_i_A_d(t46_d);
	if (t46_i !=  0x25a5a5a5)	print("error %d\n", __LINE__);
	t46_i_A_v(t46_v);
	if (t46_i != -0x34b4b4b6)	print("error %d\n", __LINE__);
    }
    else {
	if (t46_i != 0x7fffffff)	print("error %d\n", __LINE__);
	t46_i_A_d(t46_d);
	if (t46_i !=  0x7fffffff)	print("error %d\n", __LINE__);
	t46_i_A_v(t46_v);
	if (t46_i !=  0x25a5a5a4)	print("error %d\n", __LINE__);
    }
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x80007ffe;
    t46_ui_A_c(t46_c);
    if (t46_ui != 0x80007ffc)		print("error %d\n", __LINE__);
    t46_ui_A_uc(t46_uc);
    if (t46_ui != 0x800080fa)		print("error %d\n", __LINE__);
    t46_ui_A_s(t46_s);
    if (t46_ui != 0x800100f8)		print("error %d\n", __LINE__);
    t46_ui_A_us(t46_us);
    if (t46_ui != 0x800180f6)		print("error %d\n", __LINE__);
    t46_ui_A_i(t46_i);
    if (t46_ui != 0x000200f4)		print("error %d\n", __LINE__);
    t46_ui_A_ui(t46_ui);
    if (t46_ui != 0x000401e8)		print("error %d\n", __LINE__);
    t46_ui_A_l(t46_l);
    if (t46_ui != 0x800481e6)		print("error %d\n", __LINE__);
    t46_ui_A_ul(t46_ul);
    if (t46_ui != 0x000501e4)		print("error %d\n", __LINE__);
    /* truncate overflow */
    if (t46_ui_A_f(t46_f), t46_ui == 0x80000000) {
	t46_ui_A_d(t46_d);
	if (t46_ui != 0x80000000)	print("error %d\n", __LINE__);
	t46_ui_A_v(t46_v);
	if (t46_ui != 0x00007ffe)	print("error %d\n", __LINE__);
    }
    else {
	if (t46_ui != 0x7fffffff)	print("error %d\n", __LINE__);
	t46_ui_A_d(t46_d);
	if (t46_ui != 0x7fffffff)	print("error %d\n", __LINE__);
	t46_ui_A_v(t46_v);
	if (t46_ui != 0x00007ffd)	print("error %d\n", __LINE__);
    }
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0xfffffffffffffffe;
    t46_l_S_c(t46_c);
    if (t46_l !=  0x0000000000000000)	print("error %d\n", __LINE__);
    t46_l_S_uc(t46_uc);
    if (t46_l != -0x00000000000000fe)	print("error %d\n", __LINE__);
    t46_l_S_s(t46_s);
    if (t46_l != -0x00000000000000fc)	print("error %d\n", __LINE__);
    t46_l_S_us(t46_us);
    if (t46_l != -0x00000000000100fa)	print("error %d\n", __LINE__);
    t46_l_S_i(t46_i);
    if (t46_l != -0x00000000000100f8)	print("error %d\n", __LINE__);
    t46_l_S_ui(t46_ui);
    if (t46_l != -0x00000001000100f6)	print("error %d\n", __LINE__);
    t46_l_S_l(t46_l);
    if (t46_l !=  0x0000000000000000)	print("error %d\n", __LINE__);
    t46_l_S_ul(t46_ul);
    if (t46_l !=  0x0000000000000002)	print("error %d\n", __LINE__);
    if (t46_l_S_f(t46_f), t46_l == -0x8000000000000000) {
	t46_l_S_d(t46_d);
	if (t46_l != -0x8000000000000000)print("error %d\n", __LINE__);
	t46_l_S_v(t46_v);
	if (t46_l != -0x7ffffffffffffffe)print("error %d\n", __LINE__);
    }
    else {
	if (t46_l != 0x0000000000000001)print("error %d\n", __LINE__);
	t46_l_S_d(t46_d);
	if (t46_l != 0x0000000000000800)print("error %d\n", __LINE__);
	t46_l_S_v(t46_v);
	if (t46_l != 0x0000000000000802)print("error %d\n", __LINE__);
    }
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x8000000000000001;
    t46_ul_S_c(t46_c);
    if (t46_ul != 0x8000000000000000)	print("error %d\n", __LINE__);
    t46_ul_S_uc(t46_uc);
    if (t46_ul != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
    t46_ul_S_s(t46_s);
    if (t46_ul != 0x7ffffffffffffffe)	print("error %d\n", __LINE__);
    t46_ul_S_us(t46_us);
    if (t46_ul != 0x7ffffffffffffffd)	print("error %d\n", __LINE__);
    t46_ul_S_i(t46_i);
    if (t46_ul != 0x7ffffffffffffffc)	print("error %d\n", __LINE__);
    t46_ul_S_ui(t46_ui);
    if (t46_ul != 0x7ffffffffffffffb)	print("error %d\n", __LINE__);
    t46_ul_S_l(t46_l);
    if (t46_ul != 0xfffffffffffffffa)	print("error %d\n", __LINE__);
    t46_ul_S_ul(t46_ul);
    if (t46_ul != 0x0000000000000000)	print("error %d\n", __LINE__);
    t46_ul_S_f(t46_f);
    if (t46_ul != 0x8000000000000000)	print("error %d\n", __LINE__);
    t46_ul_S_d(t46_d);
    if (t46_ul != 0x0000000000000000)	print("error %d\n", __LINE__);
    t46_ul_S_v(t46_v);
    if (t46_ul != 0x7fffffffffffffff)	print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x800000.0;
    t46_f_S_c(t46_c);
    if (t46_f !=  0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_uc(t46_uc);
    if (t46_f !=  0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_s(t46_s);
    if (t46_f !=  0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_us(t46_us);
    if (t46_f !=  0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_i(t46_i);
    if (t46_f != -0x0000000.0)		print("error %d\n", __LINE__);
    t46_f_S_ui(t46_ui);
    if (t46_f != -0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_l(t46_l);
    if (t46_f != -0x1000000.0)		print("error %d\n", __LINE__);
    t46_f_S_ul(t46_ul);
    if (t46_f != -0x1800000.0)		print("error %d\n", __LINE__);
    t46_f_S_f(t46_f);
    if (t46_f !=  0x0000000.0)		print("error %d\n", __LINE__);
    t46_f_S_d(t46_d);
    if (t46_f != -0x0800000.0)		print("error %d\n", __LINE__);
    t46_f_S_v(t46_v);
    if (t46_f != -0x1000000.0)		print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0xffff.0;
    t46_d_S_c(t46_c);
    if (t46_d !=  0x10000.0)		print("error %d\n", __LINE__);
    t46_d_S_uc(t46_uc);
    if (t46_d !=  0x0ff01.0)		print("error %d\n", __LINE__);
    t46_d_S_s(t46_s);
    if (t46_d !=  0x0ff02.0)		print("error %d\n", __LINE__);
    t46_d_S_us(t46_us);
    if (t46_d != -0x000fd.0)		print("error %d\n", __LINE__);
    t46_d_S_i(t46_i);
    if (t46_d != -0x100fc.0)		print("error %d\n", __LINE__);
    t46_d_S_ui(t46_ui);
    if (t46_d != -0x200fb.0)		print("error %d\n", __LINE__);
    t46_d_S_l(t46_l);
    if (t46_d != -0x300fa.0)		print("error %d\n", __LINE__);
    t46_d_S_ul(t46_ul);
    if (t46_d != -0x400f9.0)		print("error %d\n", __LINE__);
    t46_d_S_f(t46_f);
    if (t46_d != -0x500f8.0)		print("error %d\n", __LINE__);
    t46_d_S_d(t46_d);
    if (t46_d !=  0x00000.0)		print("error %d\n", __LINE__);
    t46_d_S_v(t46_v);
    if (t46_d != -0x0ffff.0)		print("error %d\n", __LINE__);
    t46_c = t46_uc = t46_s = t46_us = t46_i = t46_ui =
	t46_l = t46_ul = t46_f = t46_d = t46_v = 0x7fffffffffffffff;
    t46_v_S_c(t46_c);
    if (t46_v !=  0x8000000000000000)	print("error %d\n", __LINE__);
    t46_v_S_uc(t46_uc);
    if (t46_v !=  0x7fffffffffffff01)	print("error %d\n", __LINE__);
    t46_v_S_s(t46_s);
    if (t46_v !=  0x7fffffffffffff02)	print("error %d\n", __LINE__);
    t46_v_S_us(t46_us);
    if (t46_v !=  0x7ffffffffffeff03)	print("error %d\n", __LINE__);
    t46_v_S_i(t46_i);
    if (t46_v !=  0x7ffffffffffeff04)	print("error %d\n", __LINE__);
    t46_v_S_ui(t46_ui);
    if (t46_v !=  0x7ffffffefffeff05)	print("error %d\n", __LINE__);
    t46_v_S_l(t46_l);
    if (t46_v != -0x00000001000100fa)	print("error %d\n", __LINE__);
    t46_v_S_ul(t46_ul);
    if (t46_v != -0x80000001000100f9)	print("error %d\n", __LINE__);
    t46_v_S_f(t46_f);
    if (t46_v != -0x10000000100010000.0 || typeof(t46_v) != typeof(0.0))
	print("error %d\n", __LINE__);
    t46_v_S_d(t46_d);
    if (t46_v != -0x18000000100010000.0)print("error %d\n", __LINE__);
    t46_v_S_v(t46_v);
    if (t46_v !=  0.0)			print("error %d\n", __LINE__);
}
t46_t0();
t46_t1();
t46_t2();
t46_t3();
t46_t4();
t46_t5();
class t46_c2_t {
    int32_t	i;	uint32_t	ui;
    int64_t	l;	uint64_t	ul;
    float32_t	f;	float64_t	d;
    auto	v;
    int32_t	ci;	uint32_t	cui;
    int64_t	cl;	uint64_t	cul;
    float32_t	cf;	float64_t	cd;
    auto	cv;
    void i_Ag_i()	{ i += t46_i; }
    void i_Ag_ui()	{ i += t46_ui; }
    void i_Ag_l()	{ i += t46_l; }
    void i_Ag_ul()	{ i += t46_ul; }
    void i_Ag_f()	{ i += t46_f; }
    void i_Ag_d()	{ i += t46_d; }
    void i_Ag_v()	{ i += t46_v; }
    void ui_Ag_i()	{ ui += t46_i; }
    void ui_Ag_ui()	{ ui += t46_ui; }
    void ui_Ag_l()	{ ui += t46_l; }
    void ui_Ag_ul()	{ ui += t46_ul; }
    void ui_Ag_f()	{ ui += t46_f; }
    void ui_Ag_d()	{ ui += t46_d; }
    void ui_Ag_v()	{ ui += t46_v; }
    void l_Ag_i()	{ l += t46_i; }
    void l_Ag_ui()	{ l += t46_ui; }
    void l_Ag_l()	{ l += t46_l; }
    void l_Ag_ul()	{ l += t46_ul; }
    void l_Ag_f()	{ l += t46_f; }
    void l_Ag_d()	{ l += t46_d; }
    void l_Ag_v()	{ l += t46_v; }
    void ul_Ag_i()	{ ul += t46_i; }
    void ul_Ag_ui()	{ ul += t46_ui; }
    void ul_Ag_l()	{ ul += t46_l; }
    void ul_Ag_ul()	{ ul += t46_ul; }
    void ul_Ag_f()	{ ul += t46_f; }
    void ul_Ag_d()	{ ul += t46_d; }
    void ul_Ag_v()	{ ul += t46_v; }
    void f_Ag_i()	{ f += t46_i; }
    void f_Ag_ui()	{ f += t46_ui; }
    void f_Ag_l()	{ f += t46_l; }
    void f_Ag_ul()	{ f += t46_ul; }
    void f_Ag_f()	{ f += t46_f; }
    void f_Ag_d()	{ f += t46_d; }
    void f_Ag_v()	{ f += t46_v; }
    void d_Ag_i()	{ d += t46_i; }
    void d_Ag_ui()	{ d += t46_ui; }
    void d_Ag_l()	{ d += t46_l; }
    void d_Ag_ul()	{ d += t46_ul; }
    void d_Ag_f()	{ d += t46_f; }
    void d_Ag_d()	{ d += t46_d; }
    void d_Ag_v()	{ d += t46_v; }
    void v_Ag_i()	{ v += t46_i; }
    void v_Ag_ui()	{ v += t46_ui; }
    void v_Ag_l()	{ v += t46_l; }
    void v_Ag_ul()	{ v += t46_ul; }
    void v_Ag_f()	{ v += t46_f; }
    void v_Ag_d()	{ v += t46_d; }
    void v_Ag_v()	{ v += t46_v; }
    void i_gA_i()	{ t46_i += i; }
    void i_gA_ui()	{ t46_i += ui; }
    void i_gA_l()	{ t46_i += l; }
    void i_gA_ul()	{ t46_i += ul; }
    void i_gA_f()	{ t46_i += f; }
    void i_gA_d()	{ t46_i += d; }
    void i_gA_v()	{ t46_i += v; }
    void ui_gA_i()	{ t46_ui += i; }
    void ui_gA_ui()	{ t46_ui += ui; }
    void ui_gA_l()	{ t46_ui += l; }
    void ui_gA_ul()	{ t46_ui += ul; }
    void ui_gA_f()	{ t46_ui += f; }
    void ui_gA_d()	{ t46_ui += d; }
    void ui_gA_v()	{ t46_ui += v; }
    void l_gA_i()	{ t46_l += i; }
    void l_gA_ui()	{ t46_l += ui; }
    void l_gA_l()	{ t46_l += l; }
    void l_gA_ul()	{ t46_l += ul; }
    void l_gA_f()	{ t46_l += f; }
    void l_gA_d()	{ t46_l += d; }
    void l_gA_v()	{ t46_l += v; }
    void ul_gA_i()	{ t46_ul += i; }
    void ul_gA_ui()	{ t46_ul += ui; }
    void ul_gA_l()	{ t46_ul += l; }
    void ul_gA_ul()	{ t46_ul += ul; }
    void ul_gA_f()	{ t46_ul += f; }
    void ul_gA_d()	{ t46_ul += d; }
    void ul_gA_v()	{ t46_ul += v; }
    void f_gA_i()	{ t46_f += i; }
    void f_gA_ui()	{ t46_f += ui; }
    void f_gA_l()	{ t46_f += l; }
    void f_gA_ul()	{ t46_f += ul; }
    void f_gA_f()	{ t46_f += f; }
    void f_gA_d()	{ t46_f += d; }
    void f_gA_v()	{ t46_f += v; }
    void d_gA_i()	{ t46_d += i; }
    void d_gA_ui()	{ t46_d += ui; }
    void d_gA_l()	{ t46_d += l; }
    void d_gA_ul()	{ t46_d += ul; }
    void d_gA_f()	{ t46_d += f; }
    void d_gA_d()	{ t46_d += d; }
    void d_gA_v()	{ t46_d += v; }
    void v_gA_i()	{ t46_v += i; }
    void v_gA_ui()	{ t46_v += ui; }
    void v_gA_l()	{ t46_v += l; }
    void v_gA_ul()	{ t46_v += ul; }
    void v_gA_f()	{ t46_v += f; }
    void v_gA_d()	{ t46_v += d; }
    void v_gA_v()	{ t46_v += v; }
    void i_I_i()	{ i = i + 1; }
    void i_I_ui()	{ i = ui + 1; }
    void i_I_l()	{ i = l + 1; }
    void i_I_ul()	{ i = ul + 1; }
    void i_I_f()	{ i = f + 1; }
    void i_I_d()	{ i = d + 1; }
    void i_I_v()	{ i = v + 1; }
    void ui_I_i()	{ ui = i + 1; }
    void ui_I_ui()	{ ui = ui + 1; }
    void ui_I_l()	{ ui = l + 1; }
    void ui_I_ul()	{ ui = ul + 1; }
    void ui_I_f()	{ ui = f + 1; }
    void ui_I_d()	{ ui = d + 1; }
    void ui_I_v()	{ ui = v + 1; }
    void l_I_i()	{ l = i + 1; }
    void l_I_ui()	{ l = ui + 1; }
    void l_I_l()	{ l = l + 1; }
    void l_I_ul()	{ l = ul + 1; }
    void l_I_f()	{ l = f + 1; }
    void l_I_d()	{ l = d + 1; }
    void l_I_v()	{ l = v + 1; }
    void ul_I_i()	{ ul = i + 1; }
    void ul_I_ui()	{ ul = ui + 1; }
    void ul_I_l()	{ ul = l + 1; }
    void ul_I_ul()	{ ul = ul + 1; }
    void ul_I_f()	{ ul = f + 1; }
    void ul_I_d()	{ ul = d + 1; }
    void ul_I_v()	{ ul = v + 1; }
    void f_I_i()	{ f = i + 1; }
    void f_I_ui()	{ f = ui + 1; }
    void f_I_l()	{ f = l + 1; }
    void f_I_ul()	{ f = ul + 1; }
    void f_I_f()	{ f = f + 1; }
    void f_I_d()	{ f = d + 1; }
    void f_I_v()	{ f = v + 1; }
    void d_I_i()	{ d = i + 1; }
    void d_I_ui()	{ d = ui + 1; }
    void d_I_l()	{ d = l + 1; }
    void d_I_ul()	{ d = ul + 1; }
    void d_I_f()	{ d = f + 1; }
    void d_I_d()	{ d = d + 1; }
    void d_I_v()	{ d = v + 1; }
    void v_I_i()	{ v = i + 1; }
    void v_I_ui()	{ v = ui + 1; }
    void v_I_l()	{ v = l + 1; }
    void v_I_ul()	{ v = ul + 1; }
    void v_I_f()	{ v = f + 1; }
    void v_I_d()	{ v = d + 1; }
    void v_I_v()	{ v = v + 1; }
    void i_Ig_i()	{ i = t46_i + 1; }
    void i_Ig_ui()	{ i = t46_ui + 1; }
    void i_Ig_l()	{ i = t46_l + 1; }
    void i_Ig_ul()	{ i = t46_ul + 1; }
    void i_Ig_f()	{ i = t46_f + 1; }
    void i_Ig_d()	{ i = t46_d + 1; }
    void i_Ig_v()	{ i = t46_v + 1; }
    void ui_Ig_i()	{ ui = t46_i + 1; }
    void ui_Ig_ui()	{ ui = t46_ui + 1; }
    void ui_Ig_l()	{ ui = t46_l + 1; }
    void ui_Ig_ul()	{ ui = t46_ul + 1; }
    void ui_Ig_f()	{ ui = t46_f + 1; }
    void ui_Ig_d()	{ ui = t46_d + 1; }
    void ui_Ig_v()	{ ui = t46_v + 1; }
    void l_Ig_i()	{ l = t46_i + 1; }
    void l_Ig_ui()	{ l = t46_ui + 1; }
    void l_Ig_l()	{ l = t46_l + 1; }
    void l_Ig_ul()	{ l = t46_ul + 1; }
    void l_Ig_f()	{ l = t46_f + 1; }
    void l_Ig_d()	{ l = t46_d + 1; }
    void l_Ig_v()	{ l = t46_v + 1; }
    void ul_Ig_i()	{ ul = t46_i + 1; }
    void ul_Ig_ui()	{ ul = t46_ui + 1; }
    void ul_Ig_l()	{ ul = t46_l + 1; }
    void ul_Ig_ul()	{ ul = t46_ul + 1; }
    void ul_Ig_f()	{ ul = t46_f + 1; }
    void ul_Ig_d()	{ ul = t46_d + 1; }
    void ul_Ig_v()	{ ul = t46_v + 1; }
    void f_Ig_i()	{ f = t46_i + 1; }
    void f_Ig_ui()	{ f = t46_ui + 1; }
    void f_Ig_l()	{ f = t46_l + 1; }
    void f_Ig_ul()	{ f = t46_ul + 1; }
    void f_Ig_f()	{ f = t46_f + 1; }
    void f_Ig_d()	{ f = t46_d + 1; }
    void f_Ig_v()	{ f = t46_v + 1; }
    void d_Ig_i()	{ d = t46_i + 1; }
    void d_Ig_ui()	{ d = t46_ui + 1; }
    void d_Ig_l()	{ d = t46_l + 1; }
    void d_Ig_ul()	{ d = t46_ul + 1; }
    void d_Ig_f()	{ d = t46_f + 1; }
    void d_Ig_d()	{ d = t46_d + 1; }
    void d_Ig_v()	{ d = t46_v + 1; }
    void v_Ig_i()	{ v = t46_i + 1; }
    void v_Ig_ui()	{ v = t46_ui + 1; }
    void v_Ig_l()	{ v = t46_l + 1; }
    void v_Ig_ul()	{ v = t46_ul + 1; }
    void v_Ig_f()	{ v = t46_f + 1; }
    void v_Ig_d()	{ v = t46_d + 1; }
    void v_Ig_v()	{ v = t46_v + 1; }
    void i_gI_i()	{ t46_i = i + 1; }
    void i_gI_ui()	{ t46_i = ui + 1; }
    void i_gI_l()	{ t46_i = l + 1; }
    void i_gI_ul()	{ t46_i = ul + 1; }
    void i_gI_f()	{ t46_i = f + 1; }
    void i_gI_d()	{ t46_i = d + 1; }
    void i_gI_v()	{ t46_i = v + 1; }
    void ui_gI_i()	{ t46_ui = i + 1; }
    void ui_gI_ui()	{ t46_ui = ui + 1; }
    void ui_gI_l()	{ t46_ui = l + 1; }
    void ui_gI_ul()	{ t46_ui = ul + 1; }
    void ui_gI_f()	{ t46_ui = f + 1; }
    void ui_gI_d()	{ t46_ui = d + 1; }
    void ui_gI_v()	{ t46_ui = v + 1; }
    void l_gI_i()	{ t46_l = i + 1; }
    void l_gI_ui()	{ t46_l = ui + 1; }
    void l_gI_l()	{ t46_l = l + 1; }
    void l_gI_ul()	{ t46_l = ul + 1; }
    void l_gI_f()	{ t46_l = f + 1; }
    void l_gI_d()	{ t46_l = d + 1; }
    void l_gI_v()	{ t46_l = v + 1; }
    void ul_gI_i()	{ t46_ul = i + 1; }
    void ul_gI_ui()	{ t46_ul = ui + 1; }
    void ul_gI_l()	{ t46_ul = l + 1; }
    void ul_gI_ul()	{ t46_ul = ul + 1; }
    void ul_gI_f()	{ t46_ul = f + 1; }
    void ul_gI_d()	{ t46_ul = d + 1; }
    void ul_gI_v()	{ t46_ul = v + 1; }
    void f_gI_i()	{ t46_f = i + 1; }
    void f_gI_ui()	{ t46_f = ui + 1; }
    void f_gI_l()	{ t46_f = l + 1; }
    void f_gI_ul()	{ t46_f = ul + 1; }
    void f_gI_f()	{ t46_f = f + 1; }
    void f_gI_d()	{ t46_f = d + 1; }
    void f_gI_v()	{ t46_f = v + 1; }
    void d_gI_i()	{ t46_d = i + 1; }
    void d_gI_ui()	{ t46_d = ui + 1; }
    void d_gI_l()	{ t46_d = l + 1; }
    void d_gI_ul()	{ t46_d = ul + 1; }
    void d_gI_f()	{ t46_d = f + 1; }
    void d_gI_d()	{ t46_d = d + 1; }
    void d_gI_v()	{ t46_d = v + 1; }
    void v_gI_i()	{ t46_v = i + 1; }
    void v_gI_ui()	{ t46_v = ui + 1; }
    void v_gI_l()	{ t46_v = l + 1; }
    void v_gI_ul()	{ t46_v = ul + 1; }
    void v_gI_f()	{ t46_v = f + 1; }
    void v_gI_d()	{ t46_v = d + 1; }
    void v_gI_v()	{ t46_v = v + 1; }
    void x7f()		{
	i = ui = t46_i = t46_ui = 0x7fffffff;
	l = ul = t46_l = t46_ul = 0x7fffffffffffffff;
	f = t46_f = 0x7f.0;
	d = t46_d = 0x7fff.0;
	v = t46_v = 0x7fffffffffffffffffffffff;
    }
    void c_x7f()	{
	i = ui = 0x7fffffff;
	l = ul = 0x7fffffffffffffff;
	f = 0x7f.0;
	d = 0x7fff.0;
	v = 0x7fffffffffffffffffffffff;
    }
    void g_x7f()	{
	t46_i = t46_ui = 0x7fffffff;
	t46_l = t46_ul = 0x7fffffffffffffff;
	t46_f = 0x7f.0;
	t46_d = 0x7fff.0;
	t46_v = 0x7fffffffffffffffffffffff;
    }
    void c_x80()	{
	i = ui = 0x80000000;
	l = ul = 0x8000000000000000;
	f = 0x80.0;
	d = 0x8000.0;
	v = 0x800000000000000000000000;
    }
    void g_x80()	{
	t46_i = t46_ui = 0x80000000;
	t46_l = t46_ul = 0x8000000000000000;
	t46_f = 0x80.0;
	t46_d = 0x8000.0;
	t46_v = 0x800000000000000000000000;
    }
    void c_x81()	{
	i = ui = 0x80000001;
	l = ul = 0x8000000000000001;
	f = 0x81.0;
	d = 0x8001.0;
	v = 0x800000000000000000000001;
    }
    void g_x81()	{
	t46_i = t46_ui = 0x80000001;
	t46_l = t46_ul = 0x8000000000000001;
	t46_f = 0x81.0;
	t46_d = 0x8001.0;
	t46_v = 0x800000000000000000000001;
    }
    void t0(int32_t xi, uint32_t xui, int64_t xl, uint64_t xul,
	    float32_t xf, float64_t xd, auto xv) {
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	i_Ag_i();
	if (i != -0x00000002)		print("error %d\n", __LINE__);
	i_Ag_ui();
	if (i !=  0x7fffffff)		print("error %d\n", __LINE__);
	i_Ag_l();
	if (i !=  0x7ffffffe)		print("error %d\n", __LINE__);
	i_Ag_ul();
	if (i !=  0x7fffffff)		print("error %d\n", __LINE__);
	i_Ag_f();
	if (i == -0x80000000) {
	    i_Ag_d();
	    if (i != -0x7f000000)	print("error %d\n", __LINE__);
	    i_Ag_v();
	    if (i != -0x7f000001)	print("error %d\n", __LINE__);
	}
	else if (i == 0x7fffffff) {
	    i_Ag_d();
	    if (i != 0x7fffffff)	print("error %d\n", __LINE__);
	    i_Ag_v();
	    if (i != 0x7ffffffe)	print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	ui_Ag_i();
	if (ui != 0x00000000)		print("error %d\n", __LINE__);
	ui_Ag_ui();
	if (ui != 0x80000001)		print("error %d\n", __LINE__);
	ui_Ag_l();
	if (ui != 0x80000000)		print("error %d\n", __LINE__);
	ui_Ag_ul();
	if (ui != 0x80000001)		print("error %d\n", __LINE__);
	ui_Ag_f();
	if (ui == 0x80000000) {
	    ui_Ag_d();
	    if (ui != 0x80000000)	print("error %d\n", __LINE__);
	    ui_Ag_v();
	    if (ui != 0x7fffffff)	print("error %d\n", __LINE__);
	}
	else if (ui == 0x7fffffff) {
	    ui_Ag_d();
	    if (ui != 0x7fffffff)	print("error %d\n", __LINE__);
	    ui_Ag_v();
	    if (ui != 0x7ffffffe)	print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	l_Ag_i();
	if (l != -0x7fffffff80000002)	print("error %d\n", __LINE__);
	l_Ag_ui();
	if (l != -0x7fffffff00000001)	print("error %d\n", __LINE__);
	l_Ag_l();
	if (l !=  0x00000000fffffffe)	print("error %d\n", __LINE__);
	l_Ag_ul();
	if (l != -0x7fffffff00000001)	print("error %d\n", __LINE__);
	l_Ag_f();
	if (l != -0x7fffffff00000000)	print("error %d\n", __LINE__);
	l_Ag_d();
	if (l != -0x7ffffffeff000000)	print("error %d\n", __LINE__);
	l_Ag_v();
	if (l !=  0x1000000100ffffff)	print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	ul_Ag_i();
	if (ul != 0x8000000080000000)	print("error %d\n", __LINE__);
	ul_Ag_ui();
	if (ul != 0x8000000100000001)	print("error %d\n", __LINE__);
	ul_Ag_l();
	if (ul != 0x0000000100000000)	print("error %d\n", __LINE__);
	ul_Ag_ul();
	if (ul != 0x8000000100000001)	print("error %d\n", __LINE__);
	ul_Ag_f();
	if (ul == 0x8000000000000000) {
	    ul_Ag_d();
	    if (ul != 0x8000000000000000)print("error %d\n", __LINE__);
	    ul_Ag_v();
	    if (ul != 0x0fffffffffffffff)print("error %d\n", __LINE__);
	}
	else if (ul == 0x8000000100000000) {
	    ul_Ag_d();
	    if (ul != 0x8000000101000000)print("error %d\n", __LINE__);
	    ul_Ag_v();
	    if (ul != 0x1000000100ffffff)print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	f_Ag_i();
	if (f != 0x00000000080000100.0)	print("error %d\n", __LINE__);
	f_Ag_ui();
	if (f != 0x00000000100000200.0)	print("error %d\n", __LINE__);
	f_Ag_l();
	if (f != 0x08000000000000000.0)	print("error %d\n", __LINE__);
	f_Ag_ul();
	if (f != 0x10000000000000000.0)	print("error %d\n", __LINE__);
	f_Ag_f();
	if (f != 0x10000000000000000.0)	print("error %d\n", __LINE__);
	f_Ag_d();
	if (f != 0x10000000000000000.0)	print("error %d\n", __LINE__);
	f_Ag_v();
	if (f != 0x19000000000000000.0)	print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	d_Ag_i();
	if (d != 0x00000000080ffffff.0)	print("error %d\n", __LINE__);
	d_Ag_ui();
	if (d != 0x00000000101000000.0)	print("error %d\n", __LINE__);
	d_Ag_l();
	if (d != 0x08000000101000000.0)	print("error %d\n", __LINE__);
	d_Ag_ul();
	if (d != 0x10000000101000000.0)	print("error %d\n", __LINE__);
	d_Ag_f();
	if (d != 0x10000000101000000.0)	print("error %d\n", __LINE__);
	d_Ag_d();
	if (d != 0x10000000102000000.0)	print("error %d\n", __LINE__);
	d_Ag_v();
	if (d != 0x19000000102000000.0)	print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	v_Ag_i();
	if (v != 0x0900000007ffffffe  )	print("error %d\n", __LINE__);
	v_Ag_ui();
	if (v != 0x090000000ffffffff  )	print("error %d\n", __LINE__);
	v_Ag_l();
	if (v != 0x110000000fffffffe  )	print("error %d\n", __LINE__);
	v_Ag_ul();
	if (v != 0x190000000ffffffff  )	print("error %d\n", __LINE__);
	v_Ag_f();
	if (v != 0x190000000fffff000.0)	print("error %d\n", __LINE__);
	v_Ag_d();
	if (v != 0x19000000100fff000.0)	print("error %d\n", __LINE__);
	v_Ag_v();
	if (v != 0x22000000100ffe000.0)	print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	i_gA_i();
	if (t46_i != -0x00000002)	print("error %d\n", __LINE__);
	i_gA_ui();
	if (t46_i !=  0x7fffffff)	print("error %d\n", __LINE__);
	i_gA_l();
	if (t46_i !=  0x7ffffffe)	print("error %d\n", __LINE__);
	i_gA_ul();
	if (t46_i !=  0x7fffffff)	print("error %d\n", __LINE__);
	i_gA_f();
	if (t46_i == -0x80000000) {
	    i_gA_d();
	    if (t46_i != -0x7f000000)	print("error %d\n", __LINE__);
	    i_gA_v();
	    if (t46_i != -0x7f000001)	print("error %d\n", __LINE__);
	}
	else if (t46_i == 0x7fffffff) {
	    i_gA_d();
	    if (t46_i != 0x7fffffff)	print("error %d\n", __LINE__);
	    i_gA_v();
	    if (t46_i != 0x7ffffffe)	print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	ui_gA_i();
	if (t46_ui != 0x00000000)	print("error %d\n", __LINE__);
	ui_gA_ui();
	if (t46_ui != 0x80000001)	print("error %d\n", __LINE__);
	ui_gA_l();
	if (t46_ui != 0x80000000)	print("error %d\n", __LINE__);
	ui_gA_ul();
	if (t46_ui != 0x80000001)	print("error %d\n", __LINE__);
	ui_gA_f();
	if (t46_ui == 0x80000000) {
	    ui_gA_d();
	    if (t46_ui != 0x80000000)	print("error %d\n", __LINE__);
	    ui_gA_v();
	    if (t46_ui != 0x7fffffff)	print("error %d\n", __LINE__);
	}
	else if (t46_ui == 0x7fffffff) {
	    ui_gA_d();
	    if (t46_ui != 0x7fffffff)	print("error %d\n", __LINE__);
	    ui_gA_v();
	    if (t46_ui != 0x7ffffffe)	print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	l_gA_i();
	if (t46_l != -0x7fffffff80000002)print("error %d\n", __LINE__);
	l_gA_ui();
	if (t46_l != -0x7fffffff00000001)print("error %d\n", __LINE__);
	l_gA_l();
	if (t46_l !=  0x00000000fffffffe)print("error %d\n", __LINE__);
	l_gA_ul();
	if (t46_l != -0x7fffffff00000001)print("error %d\n", __LINE__);
	l_gA_f();
	if (t46_l != -0x7fffffff00000000)print("error %d\n", __LINE__);
	l_gA_d();
	if (t46_l != -0x7ffffffeff000000)print("error %d\n", __LINE__);
	l_gA_v();
	if (t46_l !=  0x1000000100ffffff)print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	ul_gA_i();
	if (t46_ul != 0x8000000080000000)print("error %d\n", __LINE__);
	ul_gA_ui();
	if (t46_ul != 0x8000000100000001)print("error %d\n", __LINE__);
	ul_gA_l();
	if (t46_ul != 0x0000000100000000)print("error %d\n", __LINE__);
	ul_gA_ul();
	if (t46_ul != 0x8000000100000001)print("error %d\n", __LINE__);
	ul_gA_f();
	if (t46_ul == 0x8000000000000000) {
	    ul_gA_d();
	    if (t46_ul != 0x8000000000000000)print("error %d\n", __LINE__);
	    ul_gA_v();
	    if (t46_ul != 0x0fffffffffffffff)print("error %d\n", __LINE__);
	}
	else if (t46_ul == 0x8000000100000000) {
	    ul_gA_d();
	    if (t46_ul != 0x8000000101000000)print("error %d\n", __LINE__);
	    ul_gA_v();
	    if (t46_ul != 0x1000000100ffffff)print("error %d\n", __LINE__);
	}
	else				print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	f_gA_i();
	if (t46_f != 0x00000000080000100.0)print("error %d\n", __LINE__);
	f_gA_ui();
	if (t46_f != 0x00000000100000200.0)print("error %d\n", __LINE__);
	f_gA_l();
	if (t46_f != 0x08000000000000000.0)print("error %d\n", __LINE__);
	f_gA_ul();
	if (t46_f != 0x10000000000000000.0)print("error %d\n", __LINE__);
	f_gA_f();
	if (t46_f != 0x10000000000000000.0)print("error %d\n", __LINE__);
	f_gA_d();
	if (t46_f != 0x10000000000000000.0)print("error %d\n", __LINE__);
	f_gA_v();
	if (t46_f != 0x19000000000000000.0)print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	d_gA_i();
	if (t46_d != 0x00000000080ffffff.0)print("error %d\n", __LINE__);
	d_gA_ui();
	if (t46_d != 0x00000000101000000.0)print("error %d\n", __LINE__);
	d_gA_l();
	if (t46_d != 0x08000000101000000.0)print("error %d\n", __LINE__);
	d_gA_ul();
	if (t46_d != 0x10000000101000000.0)print("error %d\n", __LINE__);
	d_gA_f();
	if (t46_d != 0x10000000101000000.0)print("error %d\n", __LINE__);
	d_gA_d();
	if (t46_d != 0x10000000102000000.0)print("error %d\n", __LINE__);
	d_gA_v();
	if (t46_d != 0x19000000102000000.0)print("error %d\n", __LINE__);
	i = t46_i = xi;		ui = t46_ui = xui;
	l = t46_l = xl;		ul = t46_ul = xul;
	f = t46_f = xf;		d = t46_d = xd;
	v = t46_v = xv;
	v_gA_i();
	if (t46_v != 0x0900000007ffffffe  )print("error %d\n", __LINE__);
	v_gA_ui();
	if (t46_v != 0x090000000ffffffff  )print("error %d\n", __LINE__);
	v_gA_l();
	if (t46_v != 0x110000000fffffffe  )print("error %d\n", __LINE__);
	v_gA_ul();
	if (t46_v != 0x190000000ffffffff  )print("error %d\n", __LINE__);
	v_gA_f();
	if (t46_v != 0x190000000fffff000.0)print("error %d\n", __LINE__);
	v_gA_d();
	if (t46_v != 0x19000000100fff000.0)print("error %d\n", __LINE__);
	v_gA_v();
	if (t46_v != 0x22000000100ffe000.0)print("error %d\n", __LINE__);
    }
    void t1() {
	x7f();
	i_I_i();
	if (i != -0x80000000)		print("error %d\n", __LINE__);
	i_I_ui();
	if (i != -0x80000000)		print("error %d\n", __LINE__);
	i_I_l();
	if (i !=  0)			print("error %d\n", __LINE__);
	i_I_ul();
	if (i !=  0)			print("error %d\n", __LINE__);
	i_I_f();
	if (i !=  0x80)			print("error %d\n", __LINE__);
	i_I_d();
	if (i !=  0x8000)		print("error %d\n", __LINE__);
	i_I_v();
	if (i !=  0x00000000)		print("error %d\n", __LINE__);
	x7f();
	ui_I_i();
	if (ui != 0x80000000)		print("error %d\n", __LINE__);
	x7f();
	ui_I_ui();
	if (ui != 0x80000000)		print("error %d\n", __LINE__);
	ui_I_l();
	if (ui != 0)			print("error %d\n", __LINE__);
	ui_I_ul();
	if (ui != 0)			print("error %d\n", __LINE__);
	ui_I_f();
	if (ui != 0x80)			print("error %d\n", __LINE__);
	ui_I_d();
	if (ui != 0x8000)		print("error %d\n", __LINE__);
	ui_I_v();
	if (ui != 0)			print("error %d\n", __LINE__);
	x7f();
	l_I_i();
	if (l !=  0x80000000)		print("error %d\n", __LINE__);
	l_I_ui();
	if (l !=  0x80000000)		print("error %d\n", __LINE__);
	x7f();
	l_I_l();
	if (l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_I_ul();
	if (l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_I_f();
	if (l !=  0x80)			print("error %d\n", __LINE__);
	l_I_d();
	if (l !=  0x8000)		print("error %d\n", __LINE__);
	l_I_v();
	if (l !=  0)			print("error %d\n", __LINE__);
	x7f();
	ul_I_i();
	if (ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_I_ui();
	if (ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_I_l();
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	x7f();
	ul_I_ul();
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_I_f();
	if (ul != 0x80)			print("error %d\n", __LINE__);
	ul_I_d();
	if (ul != 0x8000)		print("error %d\n", __LINE__);
	ul_I_v();
	if (ul != 0)		print("error %d\n", __LINE__);
	x7f();
	f_I_i();
	if (f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_I_ui();
	if (f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_I_l();
	if (f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	f_I_ul();
	if (f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	x7f();
	f_I_f();
	if (f != 0x80.0)		print("error %d\n", __LINE__);
	f_I_d();
	if (f != 0x8000.0)		print("error %d\n", __LINE__);
	f_I_v();
	if (f != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	x7f();
	d_I_i();
	if (d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_I_ui();
	if (d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_I_l();
	if (d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_I_ul();
	if (d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_I_f();
	if (d != 0x80.0)		print("error %d\n", __LINE__);
	x7f();
	d_I_d();
	if (d != 0x8000.0)		print("error %d\n", __LINE__);
	d_I_v();
	if (d != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	x7f();
	v_I_i();
	if (v != 0x80000000)		print("error %d\n", __LINE__);
	v_I_ui();
	if (v != 0x80000000)		print("error %d\n", __LINE__);
	v_I_l();
	if (v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_I_ul();
	if (v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_I_f();
	if (v != 0x80.0)		print("error %d\n", __LINE__);
	v_I_d();
	if (v != 0x8000.0)		print("error %d\n", __LINE__);
	x7f();
	v_I_v();
	if (v != 0x800000000000000000000000)
	    print("error %d\n", __LINE__);
	i_Ig_i();
	if (i != -0x80000000)		print("error %d\n", __LINE__);
	i_Ig_ui();
	if (i != -0x80000000)		print("error %d\n", __LINE__);
	i_Ig_l();
	if (i !=  0)			print("error %d\n", __LINE__);
	i_Ig_ul();
	if (i !=  0)			print("error %d\n", __LINE__);
	i_Ig_f();
	if (i !=  0x80)			print("error %d\n", __LINE__);
	i_Ig_d();
	if (i !=  0x8000)		print("error %d\n", __LINE__);
	i_Ig_v();
	if (i !=  0x00000000)		print("error %d\n", __LINE__);
	ui_Ig_i();
	if (ui != 0x80000000)		print("error %d\n", __LINE__);
	ui_Ig_ui();
	if (ui != 0x80000000)		print("error %d\n", __LINE__);
	ui_Ig_l();
	if (ui != 0)			print("error %d\n", __LINE__);
	ui_Ig_ul();
	if (ui != 0)			print("error %d\n", __LINE__);
	ui_Ig_f();
	if (ui != 0x80)			print("error %d\n", __LINE__);
	ui_Ig_d();
	if (ui != 0x8000)		print("error %d\n", __LINE__);
	ui_Ig_v();
	if (ui != 0)			print("error %d\n", __LINE__);
	l_Ig_i();
	if (l !=  0x80000000)		print("error %d\n", __LINE__);
	l_Ig_ui();
	if (l !=  0x80000000)		print("error %d\n", __LINE__);
	l_Ig_l();
	if (l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_Ig_ul();
	if (l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_Ig_f();
	if (l !=  0x80)			print("error %d\n", __LINE__);
	l_Ig_d();
	if (l !=  0x8000)		print("error %d\n", __LINE__);
	l_Ig_v();
	if (l !=  0)			print("error %d\n", __LINE__);
	ul_Ig_i();
	if (ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_Ig_ui();
	if (ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_Ig_l();
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_Ig_ul();
	if (ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_Ig_f();
	if (ul != 0x80)			print("error %d\n", __LINE__);
	ul_Ig_d();
	if (ul != 0x8000)		print("error %d\n", __LINE__);
	ul_Ig_v();
	if (ul != 0)		print("error %d\n", __LINE__);
	f_Ig_i();
	if (f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_Ig_ui();
	if (f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_Ig_l();
	if (f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	f_Ig_ul();
	if (f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	f_Ig_f();
	if (f != 0x80.0)		print("error %d\n", __LINE__);
	f_Ig_d();
	if (f != 0x8000.0)		print("error %d\n", __LINE__);
	f_Ig_v();
	if (f != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	d_Ig_i();
	if (d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_Ig_ui();
	if (d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_Ig_l();
	if (d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_Ig_ul();
	if (d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_Ig_f();
	if (d != 0x80.0)		print("error %d\n", __LINE__);
	d_Ig_d();
	if (d != 0x8000.0)		print("error %d\n", __LINE__);
	d_Ig_v();
	if (d != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	v_Ig_i();
	if (v != 0x80000000)		print("error %d\n", __LINE__);
	v_Ig_ui();
	if (v != 0x80000000)		print("error %d\n", __LINE__);
	v_Ig_l();
	if (v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_Ig_ul();
	if (v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_Ig_f();
	if (v != 0x80.0)		print("error %d\n", __LINE__);
	v_Ig_d();
	if (v != 0x8000.0)		print("error %d\n", __LINE__);
	v_Ig_v();
	if (v != 0x800000000000000000000000)
	    print("error %d\n", __LINE__);
	x7f();
	i_gI_i();
	if (t46_i != -0x80000000)	print("error %d\n", __LINE__);
	i_gI_ui();
	if (t46_i != -0x80000000)	print("error %d\n", __LINE__);
	i_gI_l();
	if (t46_i !=  0)		print("error %d\n", __LINE__);
	i_gI_ul();
	if (t46_i !=  0)		print("error %d\n", __LINE__);
	i_gI_f();
	if (t46_i !=  0x80)		print("error %d\n", __LINE__);
	i_gI_d();
	if (t46_i !=  0x8000)		print("error %d\n", __LINE__);
	i_gI_v();
	if (t46_i !=  0x00000000)	print("error %d\n", __LINE__);
	ui_gI_i();
	if (t46_ui != 0x80000000)	print("error %d\n", __LINE__);
	ui_gI_ui();
	if (t46_ui != 0x80000000)	print("error %d\n", __LINE__);
	ui_gI_l();
	if (t46_ui != 0)		print("error %d\n", __LINE__);
	ui_gI_ul();
	if (t46_ui != 0)		print("error %d\n", __LINE__);
	ui_gI_f();
	if (t46_ui != 0x80)		print("error %d\n", __LINE__);
	ui_gI_d();
	if (t46_ui != 0x8000)		print("error %d\n", __LINE__);
	ui_gI_v();
	if (t46_ui != 0)		print("error %d\n", __LINE__);
	l_gI_i();
	if (t46_l !=  0x80000000)		print("error %d\n", __LINE__);
	l_gI_ui();
	if (t46_l !=  0x80000000)		print("error %d\n", __LINE__);
	l_gI_l();
	if (t46_l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_gI_ul();
	if (t46_l != -0x8000000000000000)	print("error %d\n", __LINE__);
	l_gI_f();
	if (t46_l !=  0x80)			print("error %d\n", __LINE__);
	l_gI_d();
	if (t46_l !=  0x8000)			print("error %d\n", __LINE__);
	l_gI_v();
	if (t46_l !=  0)			print("error %d\n", __LINE__);
	ul_gI_i();
	if (t46_ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_gI_ui();
	if (t46_ul != 0x80000000)		print("error %d\n", __LINE__);
	ul_gI_l();
	if (t46_ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_gI_ul();
	if (t46_ul != 0x8000000000000000)	print("error %d\n", __LINE__);
	ul_gI_f();
	if (t46_ul != 0x80)			print("error %d\n", __LINE__);
	ul_gI_d();
	if (t46_ul != 0x8000)			print("error %d\n", __LINE__);
	ul_gI_v();
	if (t46_ul != 0)			print("error %d\n", __LINE__);
	f_gI_i();
	if (t46_f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_gI_ui();
	if (t46_f != 0x80000000.0)		print("error %d\n", __LINE__);
	f_gI_l();
	if (t46_f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	f_gI_ul();
	if (t46_f != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	f_gI_f();
	if (t46_f != 0x80.0)			print("error %d\n", __LINE__);
	f_gI_d();
	if (t46_f != 0x8000.0)			print("error %d\n", __LINE__);
	f_gI_v();
	if (t46_f != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	d_gI_i();
	if (t46_d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_gI_ui();
	if (t46_d != 0x80000000.0)		print("error %d\n", __LINE__);
	d_gI_l();
	if (t46_d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_gI_ul();
	if (t46_d != 0x8000000000000000.0)	print("error %d\n", __LINE__);
	d_gI_f();
	if (t46_d != 0x80.0)			print("error %d\n", __LINE__);
	d_gI_d();
	if (t46_d != 0x8000.0)			print("error %d\n", __LINE__);
	d_gI_v();
	if (t46_d != 0x800000000000000000000000.0)
	    print("error %d\n", __LINE__);
	v_gI_i();
	if (t46_v != 0x80000000)		print("error %d\n", __LINE__);
	v_gI_ui();
	if (t46_v != 0x80000000)		print("error %d\n", __LINE__);
	v_gI_l();
	if (t46_v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_gI_ul();
	if (t46_v != 0x8000000000000000)	print("error %d\n", __LINE__);
	v_gI_f();
	if (t46_v != 0x80.0)			print("error %d\n", __LINE__);
	v_gI_d();
	if (t46_v != 0x8000.0)			print("error %d\n", __LINE__);
	v_gI_v();
	if (t46_v != 0x800000000000000000000000)
	    print("error %d\n", __LINE__);
    }
    void t2(int32_t i7f, uint32_t ui7f,	int64_t l7f, uint64_t ul7f,
	    float32_t f7f, float64_t d7f, auto v7f,
	    int32_t i80, uint32_t ui80,	int64_t l80, uint64_t ul80,
	    float32_t f80, float64_t d80, auto v80,
	    int32_t i81, uint32_t ui81,	int64_t l81, uint64_t ul81,
	    float32_t f81, float64_t d81, auto v81) {
	int32_t		xi;	uint32_t	xui;
	int64_t		xl;	uint64_t	xul;
	float32_t	xf;	float64_t	xd;
	auto		xv;
	c_x7f();	g_x80();
	if (i != i)		print("error %d\n", __LINE__);
	if (i != ui)		print("error %d\n", __LINE__);
	if (i >= l)		print("error %d\n", __LINE__);
	if (i >= ul)		print("error %d\n", __LINE__);
	if (i <= f)		print("error %d\n", __LINE__);
	if (i <= d)		print("error %d\n", __LINE__);
	if (i >= v)		print("error %d\n", __LINE__);
	if (i != i7f)		print("error %d\n", __LINE__);
	if (i != ui7f)		print("error %d\n", __LINE__);
	if (i >= l7f)		print("error %d\n", __LINE__);
	if (i >= ul7f)		print("error %d\n", __LINE__);
	if (i <= f7f)		print("error %d\n", __LINE__);
	if (i <= d7f)		print("error %d\n", __LINE__);
	if (i >= v7f)		print("error %d\n", __LINE__);
	if (i <= t46_i)		print("error %d\n", __LINE__);
	if (i >= t46_ui)	print("error %d\n", __LINE__);
	if (i <= t46_l)		print("error %d\n", __LINE__);
	if (i >= t46_ul)	print("error %d\n", __LINE__);
	if (i <= t46_f)		print("error %d\n", __LINE__);
	if (i <= t46_d)		print("error %d\n", __LINE__);
	if (i >= t46_v)		print("error %d\n", __LINE__);
	if (i <= i80)		print("error %d\n", __LINE__);
	if (i >= ui80)		print("error %d\n", __LINE__);
	if (i <= l80)		print("error %d\n", __LINE__);
	if (i >= ul80)		print("error %d\n", __LINE__);
	if (i <= f80)		print("error %d\n", __LINE__);
	if (i <= d80)		print("error %d\n", __LINE__);
	if (i >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (i != i)		print("error %d\n", __LINE__);
	if (i == ui)		print("error %d\n", __LINE__);
	if (i <= l)		print("error %d\n", __LINE__);
	if (i >= ul)		print("error %d\n", __LINE__);
	if (i >= f)		print("error %d\n", __LINE__);
	if (i >= d)		print("error %d\n", __LINE__);
	if (i >= v)		print("error %d\n", __LINE__);
	if (i != i80)		print("error %d\n", __LINE__);
	if (i == ui80)		print("error %d\n", __LINE__);
	if (i <= l80)		print("error %d\n", __LINE__);
	if (i >= ul80)		print("error %d\n", __LINE__);
	if (i >= f80)		print("error %d\n", __LINE__);
	if (i >= d80)		print("error %d\n", __LINE__);
	if (i >= v80)		print("error %d\n", __LINE__);
	if (i >= t46_i)		print("error %d\n", __LINE__);
	if (i >= t46_ui)	print("error %d\n", __LINE__);
	if (i <= t46_l)		print("error %d\n", __LINE__);
	if (i >= t46_ul)	print("error %d\n", __LINE__);
	if (i >= t46_f)		print("error %d\n", __LINE__);
	if (i >= t46_d)		print("error %d\n", __LINE__);
	if (i >= t46_v)		print("error %d\n", __LINE__);
	if (i >= i81)		print("error %d\n", __LINE__);
	if (i >= ui81)		print("error %d\n", __LINE__);
	if (i <= l81)		print("error %d\n", __LINE__);
	if (i >= ul81)		print("error %d\n", __LINE__);
	if (i >= f81)		print("error %d\n", __LINE__);
	if (i >= d81)		print("error %d\n", __LINE__);
	if (i >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (ui != i)		print("error %d\n", __LINE__);
	if (ui != ui)		print("error %d\n", __LINE__);
	if (ui >= l)		print("error %d\n", __LINE__);
	if (ui >= ul)		print("error %d\n", __LINE__);
	if (ui <= f)		print("error %d\n", __LINE__);
	if (ui <= d)		print("error %d\n", __LINE__);
	if (ui >= v)		print("error %d\n", __LINE__);
	if (ui != i7f)		print("error %d\n", __LINE__);
	if (ui != ui7f)		print("error %d\n", __LINE__);
	if (ui >= l7f)		print("error %d\n", __LINE__);
	if (ui >= ul7f)		print("error %d\n", __LINE__);
	if (ui <= f7f)		print("error %d\n", __LINE__);
	if (ui <= d7f)		print("error %d\n", __LINE__);
	if (ui >= v7f)		print("error %d\n", __LINE__);
	if (ui <= t46_i)	print("error %d\n", __LINE__);
	if (ui >= t46_ui)	print("error %d\n", __LINE__);
	if (ui <= t46_l)	print("error %d\n", __LINE__);
	if (ui >= t46_ul)	print("error %d\n", __LINE__);
	if (ui <= t46_f)	print("error %d\n", __LINE__);
	if (ui <= t46_d)	print("error %d\n", __LINE__);
	if (ui >= t46_v)	print("error %d\n", __LINE__);
	if (ui <= i80)		print("error %d\n", __LINE__);
	if (ui >= ui80)		print("error %d\n", __LINE__);
	if (ui <= l80)		print("error %d\n", __LINE__);
	if (ui >= ul80)		print("error %d\n", __LINE__);
	if (ui <= f80)		print("error %d\n", __LINE__);
	if (ui <= d80)		print("error %d\n", __LINE__);
	if (ui >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (ui == i)		print("error %d\n", __LINE__);
	if (ui != ui)		print("error %d\n", __LINE__);
	if (ui <= l)		print("error %d\n", __LINE__);
	if (ui >= ul)		print("error %d\n", __LINE__);
	if (ui <= f)		print("error %d\n", __LINE__);
	if (ui <= d)		print("error %d\n", __LINE__);
	if (ui >= v)		print("error %d\n", __LINE__);
	if (ui == i80)		print("error %d\n", __LINE__);
	if (ui != ui80)		print("error %d\n", __LINE__);
	if (ui <= l80)		print("error %d\n", __LINE__);
	if (ui >= ul80)		print("error %d\n", __LINE__);
	if (ui <= f80)		print("error %d\n", __LINE__);
	if (ui <= d80)		print("error %d\n", __LINE__);
	if (ui >= v80)		print("error %d\n", __LINE__);
	if (ui <= t46_i)	print("error %d\n", __LINE__);
	if (ui >= t46_ui)	print("error %d\n", __LINE__);
	if (ui <= t46_l)	print("error %d\n", __LINE__);
	if (ui >= t46_ul)	print("error %d\n", __LINE__);
	if (ui <= t46_f)	print("error %d\n", __LINE__);
	if (ui <= t46_d)	print("error %d\n", __LINE__);
	if (ui >= t46_v)	print("error %d\n", __LINE__);
	if (ui <= i81)		print("error %d\n", __LINE__);
	if (ui >= ui81)		print("error %d\n", __LINE__);
	if (ui <= l81)		print("error %d\n", __LINE__);
	if (ui >= ul81)		print("error %d\n", __LINE__);
	if (ui <= f81)		print("error %d\n", __LINE__);
	if (ui <= d81)		print("error %d\n", __LINE__);
	if (ui >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (l <= i)		print("error %d\n", __LINE__);
	if (l <= ui)		print("error %d\n", __LINE__);
	if (l != l)		print("error %d\n", __LINE__);
	if (l > ul)		print("error %d\n", __LINE__);
	if (l <= f)		print("error %d\n", __LINE__);
	if (l <= d)		print("error %d\n", __LINE__);
	if (l >= v)		print("error %d\n", __LINE__);
	if (l <= i7f)		print("error %d\n", __LINE__);
	if (l <= ui7f)		print("error %d\n", __LINE__);
	if (l != l7f)		print("error %d\n", __LINE__);
	if (l > ul7f)		print("error %d\n", __LINE__);
	if (l <= f7f)		print("error %d\n", __LINE__);
	if (l <= d7f)		print("error %d\n", __LINE__);
	if (l >= v7f)		print("error %d\n", __LINE__);
	if (l <= t46_i)		print("error %d\n", __LINE__);
	if (l <= t46_ui)	print("error %d\n", __LINE__);
	if (l <= t46_l)		print("error %d\n", __LINE__);
	if (l >= t46_ul)	print("error %d\n", __LINE__);
	if (l <= t46_f)		print("error %d\n", __LINE__);
	if (l <= t46_d)		print("error %d\n", __LINE__);
	if (l >= t46_v)		print("error %d\n", __LINE__);
	if (l <= i80)		print("error %d\n", __LINE__);
	if (l <= ui80)		print("error %d\n", __LINE__);
	if (l <= l80)		print("error %d\n", __LINE__);
	if (l >= ul80)		print("error %d\n", __LINE__);
	if (l <= f80)		print("error %d\n", __LINE__);
	if (l <= d80)		print("error %d\n", __LINE__);
	if (l >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (l >= i)		print("error %d\n", __LINE__);
	if (l >= ui)		print("error %d\n", __LINE__);
	if (l != l)		print("error %d\n", __LINE__);
	if (l >= ul)		print("error %d\n", __LINE__);
	if (l >= f)		print("error %d\n", __LINE__);
	if (l >= d)		print("error %d\n", __LINE__);
	if (l >= v)		print("error %d\n", __LINE__);
	if (l >= i80)		print("error %d\n", __LINE__);
	if (l == ui80)		print("error %d\n", __LINE__);
	if (l != l80)		print("error %d\n", __LINE__);
	if (l >= ul80)		print("error %d\n", __LINE__);
	if (l >= f80)		print("error %d\n", __LINE__);
	if (l >= d80)		print("error %d\n", __LINE__);
	if (l >= v80)		print("error %d\n", __LINE__);
	if (l >= t46_i)		print("error %d\n", __LINE__);
	if (l >= t46_ui)	print("error %d\n", __LINE__);
	if (l >= t46_l)		print("error %d\n", __LINE__);
	if (l >= t46_ul)	print("error %d\n", __LINE__);
	if (l >= t46_f)		print("error %d\n", __LINE__);
	if (l >= t46_d)		print("error %d\n", __LINE__);
	if (l >= t46_v)		print("error %d\n", __LINE__);
	if (l >= i81)		print("error %d\n", __LINE__);
	if (l >= ui81)		print("error %d\n", __LINE__);
	if (l >= l81)		print("error %d\n", __LINE__);
	if (l >= ul81)		print("error %d\n", __LINE__);
	if (l >= f81)		print("error %d\n", __LINE__);
	if (l >= d81)		print("error %d\n", __LINE__);
	if (l >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (ul <= i)		print("error %d\n", __LINE__);
	if (ul <= ui)		print("error %d\n", __LINE__);
	if (ul != l)		print("error %d\n",__LINE__);
	if (ul != ul)		print("error %d\n", __LINE__);
	if (ul <= f)		print("error %d\n", __LINE__);
	if (ul <= d)		print("error %d\n", __LINE__);
	if (ul >= v)		print("error %d\n", __LINE__);
	if (ul <= i7f)		print("error %d\n", __LINE__);
	if (ul <= ui7f)		print("error %d\n", __LINE__);
	if (ul != l7f)		print("error %d\n", __LINE__);
	if (ul != ul7f)		print("error %d\n", __LINE__);
	if (ul <= f7f)		print("error %d\n", __LINE__);
	if (ul <= d7f)		print("error %d\n", __LINE__);
	if (ul >= v7f)		print("error %d\n", __LINE__);
	if (ul <= t46_i)	print("error %d\n", __LINE__);
	if (ul <= t46_ui)	print("error %d\n", __LINE__);
	if (ul <= t46_l)	print("error %d\n", __LINE__);
	if (ul >= t46_ul)	print("error %d\n", __LINE__);
	if (ul <= t46_f)	print("error %d\n", __LINE__);
	if (ul <= t46_d)	print("error %d\n", __LINE__);
	if (ul >= t46_v)	print("error %d\n", __LINE__);
	if (ul <= i80)		print("error %d\n", __LINE__);
	if (ul <= ui80)		print("error %d\n", __LINE__);
	if (ul <= l80)		print("error %d\n", __LINE__);
	if (ul >= ul80)		print("error %d\n", __LINE__);
	if (ul <= f80)		print("error %d\n", __LINE__);
	if (ul <= d80)		print("error %d\n", __LINE__);
	if (ul >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (ul == i)		print("error %d\n", __LINE__);
	if (ul == ui)		print("error %d\n", __LINE__);
	if (ul <= l)		print("error %d\n", __LINE__);
	if (ul != ul)		print("error %d\n", __LINE__);
	if (ul <= f)		print("error %d\n", __LINE__);
	if (ul <= d)		print("error %d\n", __LINE__);
	if (ul >= v)		print("error %d\n", __LINE__);
	if (ul == i80)		print("error %d\n", __LINE__);
	if (ul == ui80)		print("error %d\n", __LINE__);
	if (ul <= l80)		print("error %d\n", __LINE__);
	if (ul != ul80)		print("error %d\n", __LINE__);
	if (ul <= f80)		print("error %d\n", __LINE__);
	if (ul <= d80)		print("error %d\n", __LINE__);
	if (ul >= v80)		print("error %d\n", __LINE__);
	if (ul <= t46_i)	print("error %d\n", __LINE__);
	if (ul < t46_ui)	print("error %d\n", __LINE__);
	if (ul <= t46_l)	print("error %d\n", __LINE__);
	if (ul >= t46_ul)	print("error %d\n", __LINE__);
	if (ul <= t46_f)	print("error %d\n", __LINE__);
	if (ul <= t46_d)	print("error %d\n", __LINE__);
	if (ul >= t46_v)	print("error %d\n", __LINE__);
	if (ul <= i81)		print("error %d\n", __LINE__);
	if (ul < ui81)		print("error %d\n", __LINE__);
	if (ul <= l81)		print("error %d\n", __LINE__);
	if (ul >= ul81)		print("error %d\n", __LINE__);
	if (ul <= f81)		print("error %d\n", __LINE__);
	if (ul <= d81)		print("error %d\n", __LINE__);
	if (ul >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (f > i)		print("error %d\n", __LINE__);
	if (f > ui)		print("error %d\n", __LINE__);
	if (f >= l)		print("error %d\n", __LINE__);
	if (f >= ul)		print("error %d\n", __LINE__);
	if (f != f)		print("error %d\n", __LINE__);
	if (f > d)		print("error %d\n", __LINE__);
	if (f > v)		print("error %d\n", __LINE__);
	if (f > i7f)		print("error %d\n", __LINE__);
	if (f > ui7f)		print("error %d\n", __LINE__);
	if (f >= l7f)		print("error %d\n", __LINE__);
	if (f >= ul7f)		print("error %d\n", __LINE__);
	if (f != f7f)		print("error %d\n", __LINE__);
	if (f > d7f)		print("error %d\n", __LINE__);
	if (f > v7f)		print("error %d\n", __LINE__);
	if (f < t46_i)		print("error %d\n", __LINE__);
	if (f > t46_ui)		print("error %d\n", __LINE__);
	if (f < t46_l)		print("error %d\n", __LINE__);
	if (f > t46_ul)		print("error %d\n", __LINE__);
	if (f > t46_f)		print("error %d\n", __LINE__);
	if (f > t46_d)		print("error %d\n", __LINE__);
	if (f > t46_v)		print("error %d\n", __LINE__);
	if (f < i80)		print("error %d\n", __LINE__);
	if (f > ui80)		print("error %d\n", __LINE__);
	if (f < l80)		print("error %d\n", __LINE__);
	if (f > ul80)		print("error %d\n", __LINE__);
	if (f > f80)		print("error %d\n", __LINE__);
	if (f > d80)		print("error %d\n", __LINE__);
	if (f > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (f < i)		print("error %d\n", __LINE__);
	if (f > ui)		print("error %d\n", __LINE__);
	if (f < l)		print("error %d\n", __LINE__);
	if (f >= ul)		print("error %d\n", __LINE__);
	if (f != f)		print("error %d\n", __LINE__);
	if (f >= d)		print("error %d\n", __LINE__);
	if (f >= v)		print("error %d\n", __LINE__);
	if (f < i80)		print("error %d\n", __LINE__);
	if (f > ui80)		print("error %d\n", __LINE__);
	if (f < l80)		print("error %d\n", __LINE__);
	if (f >= ul80)		print("error %d\n", __LINE__);
	if (f != f80)		print("error %d\n", __LINE__);
	if (f >= d80)		print("error %d\n", __LINE__);
	if (f >= v80)		print("error %d\n", __LINE__);
	if (f < t46_i)		print("error %d\n", __LINE__);
	if (f >= t46_ui)	print("error %d\n", __LINE__);
	if (f < t46_l)		print("error %d\n", __LINE__);
	if (f >= t46_ul)	print("error %d\n", __LINE__);
	if (f >= t46_f)		print("error %d\n", __LINE__);
	if (f >= t46_d)		print("error %d\n", __LINE__);
	if (f >= t46_v)		print("error %d\n", __LINE__);
	if (f < i81)		print("error %d\n", __LINE__);
	if (f >= ui81)		print("error %d\n", __LINE__);
	if (f < l81)		print("error %d\n", __LINE__);
	if (f >= ul81)		print("error %d\n", __LINE__);
	if (f >= f81)		print("error %d\n", __LINE__);
	if (f >= d81)		print("error %d\n", __LINE__);
	if (f >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (d > i)		print("error %d\n", __LINE__);
	if (d > ui)		print("error %d\n", __LINE__);
	if (d >= l)		print("error %d\n", __LINE__);
	if (d >= ul)		print("error %d\n", __LINE__);
	if (d <= f)		print("error %d\n", __LINE__);
	if (d != d)		print("error %d\n", __LINE__);
	if (d > v)		print("error %d\n", __LINE__);
	if (d > i7f)		print("error %d\n", __LINE__);
	if (d > ui7f)		print("error %d\n", __LINE__);
	if (d >= l7f)		print("error %d\n", __LINE__);
	if (d >= ul7f)		print("error %d\n", __LINE__);
	if (d <= f7f)		print("error %d\n", __LINE__);
	if (d != d7f)		print("error %d\n", __LINE__);
	if (d > v7f)		print("error %d\n", __LINE__);
	if (d < t46_i)		print("error %d\n", __LINE__);
	if (d > t46_ui)		print("error %d\n", __LINE__);
	if (d < t46_l)		print("error %d\n", __LINE__);
	if (d > t46_ul)		print("error %d\n", __LINE__);
	if (d < t46_f)		print("error %d\n", __LINE__);
	if (d > t46_d)		print("error %d\n", __LINE__);
	if (d > t46_v)		print("error %d\n", __LINE__);
	if (d < i80)		print("error %d\n", __LINE__);
	if (d > ui80)		print("error %d\n", __LINE__);
	if (d < l80)		print("error %d\n", __LINE__);
	if (d > ul80)		print("error %d\n", __LINE__);
	if (d < f80)		print("error %d\n", __LINE__);
	if (d > d80)		print("error %d\n", __LINE__);
	if (d > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (d < i)		print("error %d\n", __LINE__);
	if (d > ui)		print("error %d\n", __LINE__);
	if (d < l)		print("error %d\n", __LINE__);
	if (d >= ul)		print("error %d\n", __LINE__);
	if (d <= f)		print("error %d\n", __LINE__);
	if (d != d)		print("error %d\n", __LINE__);
	if (d >= v)		print("error %d\n", __LINE__);
	if (d < i80)		print("error %d\n", __LINE__);
	if (d > ui80)		print("error %d\n", __LINE__);
	if (d < l80)		print("error %d\n", __LINE__);
	if (d >= ul80)		print("error %d\n", __LINE__);
	if (d <= f80)		print("error %d\n", __LINE__);
	if (d != d80)		print("error %d\n", __LINE__);
	if (d >= v80)		print("error %d\n", __LINE__);
	if (d < t46_i)		print("error %d\n", __LINE__);
	if (d >= t46_ui)	print("error %d\n", __LINE__);
	if (d < t46_l)		print("error %d\n", __LINE__);
	if (d >= t46_ul)	print("error %d\n", __LINE__);
	if (d <= t46_f)		print("error %d\n", __LINE__);
	if (d >= t46_d)		print("error %d\n", __LINE__);
	if (d >= t46_v)		print("error %d\n", __LINE__);
	if (d < i81)		print("error %d\n", __LINE__);
	if (d >= ui81)		print("error %d\n", __LINE__);
	if (d < l81)		print("error %d\n", __LINE__);
	if (d >= ul81)		print("error %d\n", __LINE__);
	if (d <= f81)		print("error %d\n", __LINE__);
	if (d >= d81)		print("error %d\n", __LINE__);
	if (d >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (v < i)		print("error %d\n", __LINE__);
	if (v < ui)		print("error %d\n", __LINE__);
	if (v <= l)		print("error %d\n", __LINE__);
	if (v <= ul)		print("error %d\n", __LINE__);
	if (v <= f)		print("error %d\n", __LINE__);
	if (v <= d)		print("error %d\n", __LINE__);
	if (v != v)		print("error %d\n", __LINE__);
	if (v < i7f)		print("error %d\n", __LINE__);
	if (v < ui7f)		print("error %d\n", __LINE__);
	if (v <= l7f)		print("error %d\n", __LINE__);
	if (v <= ul7f)		print("error %d\n", __LINE__);
	if (v <= f7f)		print("error %d\n", __LINE__);
	if (v <= d7f)		print("error %d\n", __LINE__);
	if (v != v7f)		print("error %d\n", __LINE__);
	if (v < t46_i)		print("error %d\n", __LINE__);
	if (v < t46_ui)		print("error %d\n", __LINE__);
	if (v < t46_l)		print("error %d\n", __LINE__);
	if (v < t46_ul)		print("error %d\n", __LINE__);
	if (v < t46_f)		print("error %d\n", __LINE__);
	if (v < t46_d)		print("error %d\n", __LINE__);
	if (v > t46_v)		print("error %d\n", __LINE__);
	if (v < i80)		print("error %d\n", __LINE__);
	if (v < ui80)		print("error %d\n", __LINE__);
	if (v < l80)		print("error %d\n", __LINE__);
	if (v < ul80)		print("error %d\n", __LINE__);
	if (v < f80)		print("error %d\n", __LINE__);
	if (v < d80)		print("error %d\n", __LINE__);
	if (v > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (v < i)		print("error %d\n", __LINE__);
	if (v < ui)		print("error %d\n", __LINE__);
	if (v < l)		print("error %d\n", __LINE__);
	if (v <= ul)		print("error %d\n", __LINE__);
	if (v <= f)		print("error %d\n", __LINE__);
	if (v <= d)		print("error %d\n", __LINE__);
	if (v != v)		print("error %d\n", __LINE__);
	if (v < i80)		print("error %d\n", __LINE__);
	if (v < ui80)		print("error %d\n", __LINE__);
	if (v < l80)		print("error %d\n", __LINE__);
	if (v <= ul80)		print("error %d\n", __LINE__);
	if (v <= f80)		print("error %d\n", __LINE__);
	if (v <= d80)		print("error %d\n", __LINE__);
	if (v != v80)		print("error %d\n", __LINE__);
	if (v < t46_i)		print("error %d\n", __LINE__);
	if (v <= t46_ui)	print("error %d\n", __LINE__);
	if (v < t46_l)		print("error %d\n", __LINE__);
	if (v <= t46_ul)	print("error %d\n", __LINE__);
	if (v <= t46_f)		print("error %d\n", __LINE__);
	if (v <= t46_d)		print("error %d\n", __LINE__);
	if (v >= t46_v)		print("error %d\n", __LINE__);
	if (v < i81)		print("error %d\n", __LINE__);
	if (v <= ui81)		print("error %d\n", __LINE__);
	if (v < l81)		print("error %d\n", __LINE__);
	if (v <= ul81)		print("error %d\n", __LINE__);
	if (v <= f81)		print("error %d\n", __LINE__);
	if (v <= d81)		print("error %d\n", __LINE__);
	if (v >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (i7f != i)		print("error %d\n", __LINE__);
	if (i7f != ui)		print("error %d\n", __LINE__);
	if (i7f >= l)		print("error %d\n", __LINE__);
	if (i7f >= ul)		print("error %d\n", __LINE__);
	if (i7f <= f)		print("error %d\n", __LINE__);
	if (i7f <= d)		print("error %d\n", __LINE__);
	if (i7f >= v)		print("error %d\n", __LINE__);
	if (i7f <= t46_i)	print("error %d\n", __LINE__);
	if (i7f >= t46_ui)	print("error %d\n", __LINE__);
	if (i7f <= t46_l)	print("error %d\n", __LINE__);
	if (i7f >= t46_ul)	print("error %d\n", __LINE__);
	if (i7f <= t46_f)	print("error %d\n", __LINE__);
	if (i7f <= t46_d)	print("error %d\n", __LINE__);
	if (i7f >= t46_v)	print("error %d\n", __LINE__);
	if (i7f <= i80)		print("error %d\n", __LINE__);
	if (i7f >= ui80)	print("error %d\n", __LINE__);
	if (i7f <= l80)		print("error %d\n", __LINE__);
	if (i7f >= ul80)	print("error %d\n", __LINE__);
	if (i7f <= f80)		print("error %d\n", __LINE__);
	if (i7f <= d80)		print("error %d\n", __LINE__);
	if (i7f >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (i80 != i)		print("error %d\n", __LINE__);
	if (i80 == ui)		print("error %d\n", __LINE__);
	if (i80 <= l)		print("error %d\n", __LINE__);
	if (i80 >= ul)		print("error %d\n", __LINE__);
	if (i80 >= f)		print("error %d\n", __LINE__);
	if (i80 >= d)		print("error %d\n", __LINE__);
	if (i80 >= v)		print("error %d\n", __LINE__);
	if (i80 >= t46_i)	print("error %d\n", __LINE__);
	if (i80 >= t46_ui)	print("error %d\n", __LINE__);
	if (i80 <= t46_l)	print("error %d\n", __LINE__);
	if (i80 >= t46_ul)	print("error %d\n", __LINE__);
	if (i80 >= t46_f)	print("error %d\n", __LINE__);
	if (i80 >= t46_d)	print("error %d\n", __LINE__);
	if (i80 >= t46_v)	print("error %d\n", __LINE__);
	if (i80 >= i81)		print("error %d\n", __LINE__);
	if (i80 >= ui81)	print("error %d\n", __LINE__);
	if (i80 <= l81)		print("error %d\n", __LINE__);
	if (i80 >= ul81)	print("error %d\n", __LINE__);
	if (i80 >= f81)		print("error %d\n", __LINE__);
	if (i80 >= d81)		print("error %d\n", __LINE__);
	if (i80 >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (ui7f != i)		print("error %d\n", __LINE__);
	if (ui7f != ui)		print("error %d\n", __LINE__);
	if (ui7f >= l)		print("error %d\n", __LINE__);
	if (ui7f >= ul)		print("error %d\n", __LINE__);
	if (ui7f <= f)		print("error %d\n", __LINE__);
	if (ui7f <= d)		print("error %d\n", __LINE__);
	if (ui7f >= v)		print("error %d\n", __LINE__);
	if (ui7f <= t46_i)	print("error %d\n", __LINE__);
	if (ui7f >= t46_ui)	print("error %d\n", __LINE__);
	if (ui7f <= t46_l)	print("error %d\n", __LINE__);
	if (ui7f >= t46_ul)	print("error %d\n", __LINE__);
	if (ui7f <= t46_f)	print("error %d\n", __LINE__);
	if (ui7f <= t46_d)	print("error %d\n", __LINE__);
	if (ui7f >= t46_v)	print("error %d\n", __LINE__);
	if (ui7f <= i80)	print("error %d\n", __LINE__);
	if (ui7f >= ui80)	print("error %d\n", __LINE__);
	if (ui7f <= l80)	print("error %d\n", __LINE__);
	if (ui7f >= ul80)	print("error %d\n", __LINE__);
	if (ui7f <= f80)	print("error %d\n", __LINE__);
	if (ui7f <= d80)	print("error %d\n", __LINE__);
	if (ui7f >= v80)	print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (ui80 == i)		print("error %d\n", __LINE__);
	if (ui80 != ui)		print("error %d\n", __LINE__);
	if (ui80 <= l)		print("error %d\n", __LINE__);
	if (ui80 >= ul)		print("error %d\n", __LINE__);
	if (ui80 <= f)		print("error %d\n", __LINE__);
	if (ui80 <= d)		print("error %d\n", __LINE__);
	if (ui80 >= v)		print("error %d\n", __LINE__);
	if (ui80 <= t46_i)	print("error %d\n", __LINE__);
	if (ui80 >= t46_ui)	print("error %d\n", __LINE__);
	if (ui80 <= t46_l)	print("error %d\n", __LINE__);
	if (ui80 >= t46_ul)	print("error %d\n", __LINE__);
	if (ui80 <= t46_f)	print("error %d\n", __LINE__);
	if (ui80 <= t46_d)	print("error %d\n", __LINE__);
	if (ui80 >= t46_v)	print("error %d\n", __LINE__);
	if (ui80 <= i81)	print("error %d\n", __LINE__);
	if (ui80 >= ui81)	print("error %d\n", __LINE__);
	if (ui80 <= l81)	print("error %d\n", __LINE__);
	if (ui80 >= ul81)	print("error %d\n", __LINE__);
	if (ui80 <= f81)	print("error %d\n", __LINE__);
	if (ui80 <= d81)	print("error %d\n", __LINE__);
	if (ui80 >= v81)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (l7f <= i)		print("error %d\n", __LINE__);
	if (l7f <= ui)		print("error %d\n", __LINE__);
	if (l7f != l)		print("error %d\n", __LINE__);
	if (l7f > ul)		print("error %d\n", __LINE__);
	if (l7f <= f)		print("error %d\n", __LINE__);
	if (l7f <= d)		print("error %d\n", __LINE__);
	if (l7f >= v)		print("error %d\n", __LINE__);
	if (l7f <= t46_i)	print("error %d\n", __LINE__);
	if (l7f <= t46_ui)	print("error %d\n", __LINE__);
	if (l7f <= t46_l)	print("error %d\n", __LINE__);
	if (l7f >= t46_ul)	print("error %d\n", __LINE__);
	if (l7f <= t46_f)	print("error %d\n", __LINE__);
	if (l7f <= t46_d)	print("error %d\n", __LINE__);
	if (l7f >= t46_v)	print("error %d\n", __LINE__);
	if (l7f <= i80)		print("error %d\n", __LINE__);
	if (l7f <= ui80)	print("error %d\n", __LINE__);
	if (l7f <= l80)		print("error %d\n", __LINE__);
	if (l7f >= ul80)	print("error %d\n", __LINE__);
	if (l7f <= f80)		print("error %d\n", __LINE__);
	if (l7f <= d80)		print("error %d\n", __LINE__);
	if (l7f >= v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (l80 >= i)		print("error %d\n", __LINE__);
	if (l80 >= ui)		print("error %d\n", __LINE__);
	if (l80 != l)		print("error %d\n", __LINE__);
	if (l80 >= ul)		print("error %d\n", __LINE__);
	if (l80 >= f)		print("error %d\n", __LINE__);
	if (l80 >= d)		print("error %d\n", __LINE__);
	if (l80 >= v)		print("error %d\n", __LINE__);
	if (l80 >= t46_i)	print("error %d\n", __LINE__);
	if (l80 >= t46_ui)	print("error %d\n", __LINE__);
	if (l80 >= t46_l)	print("error %d\n", __LINE__);
	if (l80 >= t46_ul)	print("error %d\n", __LINE__);
	if (l80 >= t46_f)	print("error %d\n", __LINE__);
	if (l80 >= t46_d)	print("error %d\n", __LINE__);
	if (l80 >= t46_v)	print("error %d\n", __LINE__);
	if (l80 >= i81)		print("error %d\n", __LINE__);
	if (l80 >= ui81)	print("error %d\n", __LINE__);
	if (l80 >= l81)		print("error %d\n", __LINE__);
	if (l80 >= ul81)	print("error %d\n", __LINE__);
	if (l80 >= f81)		print("error %d\n", __LINE__);
	if (l80 >= d81)		print("error %d\n", __LINE__);
	if (l80 >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (ul7f <= i)		print("error %d\n", __LINE__);
	if (ul7f <= ui)		print("error %d\n", __LINE__);
	if (ul7f != l)		print("error %d\n",__LINE__);
	if (ul7f != ul)		print("error %d\n", __LINE__);
	if (ul7f <= f)		print("error %d\n", __LINE__);
	if (ul7f <= d)		print("error %d\n", __LINE__);
	if (ul7f >= v)		print("error %d\n", __LINE__);
	if (ul7f <= t46_i)	print("error %d\n", __LINE__);
	if (ul7f <= t46_ui)	print("error %d\n", __LINE__);
	if (ul7f <= t46_l)	print("error %d\n", __LINE__);
	if (ul7f >= t46_ul)	print("error %d\n", __LINE__);
	if (ul7f <= t46_f)	print("error %d\n",__LINE__);
	if (ul7f <= t46_d)	print("error %d\n", __LINE__);
	if (ul7f >= t46_v)	print("error %d\n", __LINE__);
	if (ul7f <= i80)	print("error %d\n", __LINE__);
	if (ul7f <= ui80)	print("error %d\n", __LINE__);
	if (ul7f <= l80)	print("error %d\n", __LINE__);
	if (ul7f >= ul80)	print("error %d\n", __LINE__);
	if (ul7f <= f80)	print("error %d\n", __LINE__);
	if (ul7f <= d80)	print("error %d\n", __LINE__);
	if (ul7f >= v80)	print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (ul80 == i)		print("error %d\n", __LINE__);
	if (ul80 == ui)		print("error %d\n", __LINE__);
	if (ul80 <= l)		print("error %d\n", __LINE__);
	if (ul80 != ul)		print("error %d\n", __LINE__);
	if (ul80 <= f)		print("error %d\n", __LINE__);
	if (ul80 <= d)		print("error %d\n", __LINE__);
	if (ul80 >= v)		print("error %d\n", __LINE__);
	if (ul80 <= t46_i)	print("error %d\n", __LINE__);
	if (ul80 < t46_ui)	print("error %d\n", __LINE__);
	if (ul80 <= t46_l)	print("error %d\n", __LINE__);
	if (ul80 >= t46_ul)	print("error %d\n", __LINE__);
	if (ul80 <= t46_f)	print("error %d\n", __LINE__);
	if (ul80 <= t46_d)	print("error %d\n", __LINE__);
	if (ul80 >= t46_v)	print("error %d\n", __LINE__);
	if (ul80 <= i81)	print("error %d\n", __LINE__);
	if (ul80 < ui81)	print("error %d\n", __LINE__);
	if (ul80 <= l81)	print("error %d\n", __LINE__);
	if (ul80 >= ul81)	print("error %d\n", __LINE__);
	if (ul80 <= f81)	print("error %d\n", __LINE__);
	if (ul80 <= d81)	print("error %d\n", __LINE__);
	if (ul80 >= v81)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (f7f > i)		print("error %d\n", __LINE__);
	if (f7f > ui)		print("error %d\n", __LINE__);
	if (f7f >= l)		print("error %d\n", __LINE__);
	if (f7f >= ul)		print("error %d\n", __LINE__);
	if (f7f != f)		print("error %d\n", __LINE__);
	if (f7f > d)		print("error %d\n", __LINE__);
	if (f7f > v)		print("error %d\n", __LINE__);
	if (f7f < t46_i)	print("error %d\n", __LINE__);
	if (f7f > t46_ui)	print("error %d\n", __LINE__);
	if (f7f < t46_l)	print("error %d\n", __LINE__);
	if (f7f > t46_ul)	print("error %d\n", __LINE__);
	if (f7f > t46_f)	print("error %d\n", __LINE__);
	if (f7f > t46_d)	print("error %d\n", __LINE__);
	if (f7f > t46_v)	print("error %d\n", __LINE__);
	if (f7f < i80)		print("error %d\n", __LINE__);
	if (f7f > ui80)		print("error %d\n", __LINE__);
	if (f7f < l80)		print("error %d\n", __LINE__);
	if (f7f > ul80)		print("error %d\n", __LINE__);
	if (f7f > f80)		print("error %d\n", __LINE__);
	if (f7f > d80)		print("error %d\n", __LINE__);
	if (f7f > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (f80 < i)		print("error %d\n", __LINE__);
	if (f80 > ui)		print("error %d\n", __LINE__);
	if (f80 < l)		print("error %d\n", __LINE__);
	if (f80 >= ul)		print("error %d\n", __LINE__);
	if (f80 != f)		print("error %d\n", __LINE__);
	if (f80 >= d)		print("error %d\n", __LINE__);
	if (f80 >= v)		print("error %d\n", __LINE__);
	if (f80 < t46_i)	print("error %d\n", __LINE__);
	if (f80 >= t46_ui)	print("error %d\n", __LINE__);
	if (f80 < t46_l)	print("error %d\n", __LINE__);
	if (f80 >= t46_ul)	print("error %d\n", __LINE__);
	if (f80 >= t46_f)	print("error %d\n", __LINE__);
	if (f80 >= t46_d)	print("error %d\n", __LINE__);
	if (f80 >= t46_v)	print("error %d\n", __LINE__);
	if (f80 < i81)		print("error %d\n", __LINE__);
	if (f80 >= ui81)	print("error %d\n", __LINE__);
	if (f80 < l81)		print("error %d\n", __LINE__);
	if (f80 >= ul81)	print("error %d\n", __LINE__);
	if (f80 >= f81)		print("error %d\n", __LINE__);
	if (f80 >= d81)		print("error %d\n", __LINE__);
	if (f80 >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (d7f > i)		print("error %d\n", __LINE__);
	if (d7f > ui)		print("error %d\n", __LINE__);
	if (d7f >= l)		print("error %d\n", __LINE__);
	if (d7f >= ul)		print("error %d\n", __LINE__);
	if (d7f <= f)		print("error %d\n", __LINE__);
	if (d7f != d)		print("error %d\n", __LINE__);
	if (d7f > v)		print("error %d\n", __LINE__);
	if (d7f < t46_i)	print("error %d\n", __LINE__);
	if (d7f > t46_ui)	print("error %d\n", __LINE__);
	if (d7f < t46_l)	print("error %d\n", __LINE__);
	if (d7f > t46_ul)	print("error %d\n", __LINE__);
	if (d7f < t46_f)	print("error %d\n", __LINE__);
	if (d7f > t46_d)	print("error %d\n", __LINE__);
	if (d7f > t46_v)	print("error %d\n", __LINE__);
	if (d7f < i80)		print("error %d\n", __LINE__);
	if (d7f > ui80)		print("error %d\n", __LINE__);
	if (d7f < l80)		print("error %d\n", __LINE__);
	if (d7f > ul80)		print("error %d\n", __LINE__);
	if (d7f < f80)		print("error %d\n", __LINE__);
	if (d7f > d80)		print("error %d\n", __LINE__);
	if (d7f > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (d80 < i)		print("error %d\n", __LINE__);
	if (d80 > ui)		print("error %d\n", __LINE__);
	if (d80 < l)		print("error %d\n", __LINE__);
	if (d80 >= ul)		print("error %d\n", __LINE__);
	if (d80 <= f)		print("error %d\n", __LINE__);
	if (d80 != d)		print("error %d\n", __LINE__);
	if (d80 >= v)		print("error %d\n", __LINE__);
	if (d80 < t46_i)	print("error %d\n", __LINE__);
	if (d80 >= t46_ui)	print("error %d\n", __LINE__);
	if (d80 < t46_l)	print("error %d\n", __LINE__);
	if (d80 >= t46_ul)	print("error %d\n", __LINE__);
	if (d80 <= t46_f)	print("error %d\n", __LINE__);
	if (d80 >= t46_d)	print("error %d\n", __LINE__);
	if (d80 >= t46_v)	print("error %d\n", __LINE__);
	if (d80 < i81)		print("error %d\n", __LINE__);
	if (d80 >= ui81)	print("error %d\n", __LINE__);
	if (d80 < l81)		print("error %d\n", __LINE__);
	if (d80 >= ul81)	print("error %d\n", __LINE__);
	if (d80 <= f81)		print("error %d\n", __LINE__);
	if (d80 >= d81)		print("error %d\n", __LINE__);
	if (d80 >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (v7f < i)		print("error %d\n", __LINE__);
	if (v7f < ui)		print("error %d\n", __LINE__);
	if (v7f <= l)		print("error %d\n", __LINE__);
	if (v7f <= ul)		print("error %d\n", __LINE__);
	if (v7f <= f)		print("error %d\n", __LINE__);
	if (v7f <= d)		print("error %d\n", __LINE__);
	if (v7f != v)		print("error %d\n", __LINE__);
	if (v7f < t46_i)	print("error %d\n", __LINE__);
	if (v7f < t46_ui)	print("error %d\n", __LINE__);
	if (v7f < t46_l)	print("error %d\n", __LINE__);
	if (v7f < t46_ul)	print("error %d\n", __LINE__);
	if (v7f < t46_f)	print("error %d\n", __LINE__);
	if (v7f < t46_d)	print("error %d\n", __LINE__);
	if (v7f > t46_v)	print("error %d\n", __LINE__);
	if (v7f < i80)		print("error %d\n", __LINE__);
	if (v7f < ui80)		print("error %d\n", __LINE__);
	if (v7f < l80)		print("error %d\n", __LINE__);
	if (v7f < ul80)		print("error %d\n", __LINE__);
	if (v7f < f80)		print("error %d\n", __LINE__);
	if (v7f < d80)		print("error %d\n", __LINE__);
	if (v7f > v80)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (v80 < i)		print("error %d\n", __LINE__);
	if (v80 < ui)		print("error %d\n", __LINE__);
	if (v80 < l)		print("error %d\n", __LINE__);
	if (v80 <= ul)		print("error %d\n", __LINE__);
	if (v80 <= f)		print("error %d\n", __LINE__);
	if (v80 <= d)		print("error %d\n", __LINE__);
	if (v80 != v)		print("error %d\n", __LINE__);
	if (v80 < t46_i)	print("error %d\n", __LINE__);
	if (v80 <= t46_ui)	print("error %d\n", __LINE__);
	if (v80 < t46_l)	print("error %d\n", __LINE__);
	if (v80 <= t46_ul)	print("error %d\n", __LINE__);
	if (v80 <= t46_f)	print("error %d\n", __LINE__);
	if (v80 <= t46_d)	print("error %d\n", __LINE__);
	if (v80 >= t46_v)	print("error %d\n", __LINE__);
	if (v80 < i81)		print("error %d\n", __LINE__);
	if (v80 <= ui81)	print("error %d\n", __LINE__);
	if (v80 < l81)		print("error %d\n", __LINE__);
	if (v80 <= ul81)	print("error %d\n", __LINE__);
	if (v80 <= f81)		print("error %d\n", __LINE__);
	if (v80 <= d81)		print("error %d\n", __LINE__);
	if (v80 >= v81)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_i > i)		print("error %d\n", __LINE__);
	if (t46_i > ui)		print("error %d\n", __LINE__);
	if (t46_i > l)		print("error %d\n", __LINE__);
	if (t46_i > ul)		print("error %d\n", __LINE__);
	if (t46_i > f)		print("error %d\n", __LINE__);
	if (t46_i > d)		print("error %d\n", __LINE__);
	if (t46_i > v)		print("error %d\n", __LINE__);
	if (t46_i > i7f)	print("error %d\n", __LINE__);
	if (t46_i > ui7f)	print("error %d\n", __LINE__);
	if (t46_i > l7f)	print("error %d\n", __LINE__);
	if (t46_i > ul7f)	print("error %d\n", __LINE__);
	if (t46_i > f7f)	print("error %d\n", __LINE__);
	if (t46_i > d7f)	print("error %d\n", __LINE__);
	if (t46_i > v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_ui < i)		print("error %d\n", __LINE__);
	if (t46_ui == ui)	print("error %d\n", __LINE__);
	if (t46_ui > l)		print("error %d\n", __LINE__);
	if (t46_ui > ul)	print("error %d\n", __LINE__);
	if (t46_ui < f)		print("error %d\n", __LINE__);
	if (t46_ui < d)		print("error %d\n", __LINE__);
	if (t46_ui > v)		print("error %d\n", __LINE__);
	if (t46_ui == i7f)	print("error %d\n", __LINE__);
	if (t46_ui == ui7f)	print("error %d\n", __LINE__);
	if (t46_ui > l7f)	print("error %d\n", __LINE__);
	if (t46_ui > ul7f)	print("error %d\n", __LINE__);
	if (t46_ui < f7f)	print("error %d\n", __LINE__);
	if (t46_ui < d7f)	print("error %d\n", __LINE__);
	if (t46_ui > v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_l > i)		print("error %d\n", __LINE__);
	if (t46_l > ui)		print("error %d\n", __LINE__);
	if (t46_l == l)		print("error %d\n", __LINE__);
	if (t46_l > ul)		print("error %d\n", __LINE__);
	if (t46_l > f)		print("error %d\n", __LINE__);
	if (t46_l > d)		print("error %d\n", __LINE__);
	if (t46_l > v)		print("error %d\n", __LINE__);
	if (t46_l > i7f)	print("error %d\n", __LINE__);
	if (t46_l > ui7f)	print("error %d\n", __LINE__);
	if (t46_l == l7f)	print("error %d\n", __LINE__);
	if (t46_l > ul7f)	print("error %d\n", __LINE__);
	if (t46_l > f7f)	print("error %d\n", __LINE__);
	if (t46_l > d7f)	print("error %d\n", __LINE__);
	if (t46_l > v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_ul <= i)	print("error %d\n", __LINE__);
	if (t46_ul <= ui)	print("error %d\n", __LINE__);
	if (t46_ul <= l)	print("error %d\n",__LINE__);
	if (t46_ul <= ul)	print("error %d\n", __LINE__);
	if (t46_ul <= f)	print("error %d\n", __LINE__);
	if (t46_ul <= d)	print("error %d\n", __LINE__);
	if (t46_ul >= v)	print("error %d\n", __LINE__);
	if (t46_ul <= i7f)	print("error %d\n", __LINE__);
	if (t46_ul <= ui7f)	print("error %d\n", __LINE__);
	if (t46_ul <= l7f)	print("error %d\n", __LINE__);
	if (t46_ul <= ul7f)	print("error %d\n", __LINE__);
	if (t46_ul <= f7f)	print("error %d\n", __LINE__);
	if (t46_ul <= d7f)	print("error %d\n", __LINE__);
	if (t46_ul >= v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_f > i)		print("error %d\n", __LINE__);
	if (t46_f > ui)		print("error %d\n", __LINE__);
	if (t46_f > l)		print("error %d\n", __LINE__);
	if (t46_f > ul)		print("error %d\n", __LINE__);
	if (t46_f == f)		print("error %d\n", __LINE__);
	if (t46_f > d)		print("error %d\n", __LINE__);
	if (t46_f > v)		print("error %d\n", __LINE__);
	if (t46_f > i7f)	print("error %d\n", __LINE__);
	if (t46_f > ui7f)	print("error %d\n", __LINE__);
	if (t46_f > l7f)	print("error %d\n", __LINE__);
	if (t46_f > ul7f)	print("error %d\n", __LINE__);
	if (t46_f == f7f)	print("error %d\n", __LINE__);
	if (t46_f > d7f)	print("error %d\n", __LINE__);
	if (t46_f > v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_d > i)		print("error %d\n", __LINE__);
	if (t46_d > ui)		print("error %d\n", __LINE__);
	if (t46_d > l)		print("error %d\n", __LINE__);
	if (t46_d > ul)		print("error %d\n", __LINE__);
	if (t46_d <= f)		print("error %d\n", __LINE__);
	if (t46_d <= d)		print("error %d\n", __LINE__);
	if (t46_d > v)		print("error %d\n", __LINE__);
	if (t46_d > i7f)	print("error %d\n", __LINE__);
	if (t46_d > ui7f)	print("error %d\n", __LINE__);
	if (t46_d > l7f)	print("error %d\n", __LINE__);
	if (t46_d > ul7f)	print("error %d\n", __LINE__);
	if (t46_d <= f7f)	print("error %d\n", __LINE__);
	if (t46_d <= d7f)	print("error %d\n", __LINE__);
	if (t46_d > v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_v <= i)		print("error %d\n", __LINE__);
	if (t46_v < ui)		print("error %d\n", __LINE__);
	if (t46_v < l)		print("error %d\n", __LINE__);
	if (t46_v <= ul)	print("error %d\n", __LINE__);
	if (t46_v < f)		print("error %d\n", __LINE__);
	if (t46_v <= d)		print("error %d\n", __LINE__);
	if (t46_v == v)		print("error %d\n", __LINE__);
	if (t46_v <= i7f)	print("error %d\n", __LINE__);
	if (t46_v < ui7f)	print("error %d\n", __LINE__);
	if (t46_v < l7f)	print("error %d\n", __LINE__);
	if (t46_v <= ul7f)	print("error %d\n", __LINE__);
	if (t46_v < f7f)	print("error %d\n", __LINE__);
	if (t46_v <= d7f)	print("error %d\n", __LINE__);
	if (t46_v == v7f)	print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (xi = i != i, xi)		print("error %d\n", __LINE__);
	if (xui = i != ui, xui)		print("error %d\n", __LINE__);
	if (xl = i >= l, xl)		print("error %d\n", __LINE__);
	if (xul = i >= ul, xul)		print("error %d\n", __LINE__);
	if (xf = i <= f, xf)		print("error %d\n", __LINE__);
	if (xd = i <= d, xd)		print("error %d\n", __LINE__);
	if (xv = i >= v, xv)		print("error %d\n", __LINE__);
	if (xui = i != i7f, xui)	print("error %d\n", __LINE__);
	if (xl = i != ui7f, xl)		print("error %d\n", __LINE__);
	if (xul = i >= l7f, xul)	print("error %d\n", __LINE__);
	if (xf = i >= ul7f, xf)		print("error %d\n", __LINE__);
	if (xd = i <= f7f, xd)		print("error %d\n", __LINE__);
	if (xv = i <= d7f, xv)		print("error %d\n", __LINE__);
	if (xi = i >= v7f, xi)		print("error %d\n", __LINE__);
	if (xl = i <= t46_i, xl)	print("error %d\n", __LINE__);
	if (xul = i >= t46_ui, xul)	print("error %d\n", __LINE__);
	if (xf = i <= t46_l, xf)	print("error %d\n", __LINE__);
	if (xd = i >= t46_ul, xd)	print("error %d\n", __LINE__);
	if (xv = i <= t46_f, xv)	print("error %d\n", __LINE__);
	if (xi = i <= t46_d, xi)	print("error %d\n", __LINE__);
	if (xui = i >= t46_v, xui)	print("error %d\n", __LINE__);
	if (xul = i <= i80, xul)	print("error %d\n", __LINE__);
	if (xf = i >= ui80, xf)		print("error %d\n", __LINE__);
	if (xd = i <= l80, xd)		print("error %d\n", __LINE__);
	if (xv = i >= ul80, xv)		print("error %d\n", __LINE__);
	if (xi = i <= f80, xi)		print("error %d\n", __LINE__);
	if (xui = i <= d80, xui)	print("error %d\n", __LINE__);
	if (xl = i >= v80, xl)		print("error %d\n", __LINE__);
	c_x80();	g_x81();
	if (xf = i != i, xf)		print("error %d\n", __LINE__);
	if (xd = i == ui, xd)		print("error %d\n", __LINE__);
	if (xv = i <= l, xv)		print("error %d\n", __LINE__);
	if (xi = i >= ul, xi)		print("error %d\n", __LINE__);
	if (xui = i >= f, xui)		print("error %d\n", __LINE__);
	if (xl = i >= d, xl)		print("error %d\n", __LINE__);
	if (xul = i >= v, xul)		print("error %d\n", __LINE__);
	if (xd = i != i80, xd)		print("error %d\n", __LINE__);
	if (xv = i == ui80, xv)		print("error %d\n", __LINE__);
	if (xi = i <= l80, xi)		print("error %d\n", __LINE__);
	if (xui = i >= ul80, xui)	print("error %d\n", __LINE__);
	if (xl = i >= f80, xl)		print("error %d\n", __LINE__);
	if (xul = i >= d80, xul)	print("error %d\n", __LINE__);
	if (xf = i >= v80, xf)		print("error %d\n", __LINE__);
	if (xv = i >= t46_i, xv)	print("error %d\n", __LINE__);
	if (xi = i >= t46_ui, xi)	print("error %d\n", __LINE__);
	if (xui = i <= t46_l, xui)	print("error %d\n", __LINE__);
	if (xl = i >= t46_ul, xl)	print("error %d\n", __LINE__);
	if (xul = i >= t46_f, xul)	print("error %d\n", __LINE__);
	if (xf = i >= t46_d, xf)	print("error %d\n", __LINE__);
	if (xd = i >= t46_v, xd)	print("error %d\n", __LINE__);
	if (ci = i >= i81, ci)		print("error %d\n", __LINE__);
	if (cui = i >= ui81, cui)	print("error %d\n", __LINE__);
	if (cl = i <= l81, cl)		print("error %d\n", __LINE__);
	if (cul = i >= ul81, cul)	print("error %d\n", __LINE__);
	if (cf = i >= f81, cf)		print("error %d\n", __LINE__);
	if (cd = i >= d81, cd)		print("error %d\n", __LINE__);
	if (cv = i >= v81, cv)		print("error %d\n", __LINE__);
	c_x7f();	g_x80();
	if (t46_gi = ui != i, t46_gi)		print("error %d\n", __LINE__);
	if (t46_gui = ui != ui, t46_gui)	print("error %d\n", __LINE__);
	if (t46_gl = ui >= l, t46_gl)		print("error %d\n", __LINE__);
	if (t46_gul = ui >= ul, t46_gul)	print("error %d\n", __LINE__);
	if (t46_gf = ui <= f, t46_gf)		print("error %d\n", __LINE__);
	if (t46_gd = ui <= d, t46_gd)		print("error %d\n", __LINE__);
	if (t46_gv = ui >= v, t46_gv)		print("error %d\n", __LINE__);
	c_x7f();
	if (i != 0x7fffffff)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (i <= 0x7fff.0)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (i == 0x80000000)			print("error %d\n", __LINE__);
	if (i > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (i <= 0x8000.0)			print("error %d\n", __LINE__);
	if (i >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (i >= 0x80000001)			print("error %d\n", __LINE__);
	if (i >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (i < 0x8001.0)			print("error %d\n", __LINE__);
	if (i > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ui != 0x7fffffff)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ui <= 0x7fff.0)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ui == 0x80000000)			print("error %d\n", __LINE__);
	if (ui > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ui <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ui >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ui >= 0x80000001)			print("error %d\n", __LINE__);
	if (ui >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ui < 0x8001.0)			print("error %d\n", __LINE__);
	if (ui > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (l <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (l < 0x7fff.0)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (l == 0x80000000)			print("error %d\n", __LINE__);
	if (l > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (l <= 0x8000.0)			print("error %d\n", __LINE__);
	if (l >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (l < 0x80000001)			print("error %d\n", __LINE__);
	if (l > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (l < 0x8001.0)			print("error %d\n", __LINE__);
	if (l > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ul <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (ul > 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ul < 0x7fff.0)			print("error %d\n", __LINE__);
	if (ul > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ul == 0x80000000)			print("error %d\n", __LINE__);
	if (ul > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ul <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ul >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ul < 0x80000001)			print("error %d\n", __LINE__);
	if (ul > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ul < 0x8001.0)			print("error %d\n", __LINE__);
	if (ul > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (f >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (f >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (f != 0x7f.0)			print("error %d\n", __LINE__);
	if (f > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (f == 0x80000000)			print("error %d\n", __LINE__);
	if (f > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (f > 0x80.0)				print("error %d\n", __LINE__);
	if (f >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (f >= 0x80000001)			print("error %d\n", __LINE__);
	if (f >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (f > 0x8001.0)			print("error %d\n", __LINE__);
	if (f > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (d >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (d >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (d != 0x7fff.0)			print("error %d\n", __LINE__);
	if (d > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (d == 0x80000000)			print("error %d\n", __LINE__);
	if (d > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (d > 0x8000.0)			print("error %d\n", __LINE__);
	if (d >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (d >= 0x80000001)			print("error %d\n", __LINE__);
	if (d >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (d > 0x8001.0)			print("error %d\n", __LINE__);
	if (d > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (v < 0x7fffffff)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (v == 0x7f.0)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (v == 0x80000000)			print("error %d\n", __LINE__);
	if (v < 0x8000000000000000)		print("error %d\n", __LINE__);
	if (v <= 0x80.0)			print("error %d\n", __LINE__);
	if (v > 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (v <= 0x80000001)			print("error %d\n", __LINE__);
	if (v <= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (v < 0x8001.0)			print("error %d\n", __LINE__);
	if (v >= 0x800000000000000000000001)	print("error %d\n", __LINE__);
	c_x80();
	if (i >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (i >= 0x7fff.0)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (i == 0x80000000)			print("error %d\n", __LINE__);
	if (i > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (i >= 0x8000.0)			print("error %d\n", __LINE__);
	if (i >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (i >= 0x80000001)			print("error %d\n", __LINE__);
	if (i >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (i > 0x8001.0)			print("error %d\n", __LINE__);
	if (i > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ui <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ui <= 0x7fff.0)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ui != 0x80000000)			print("error %d\n", __LINE__);
	if (ui > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ui <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ui >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ui >= 0x80000001)			print("error %d\n", __LINE__);
	if (ui >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ui < 0x8001.0)			print("error %d\n", __LINE__);
	if (ui > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (l >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (l > 0x7fff.0)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (l == 0x80000000)			print("error %d\n", __LINE__);
	if (l == 0x8000000000000000)		print("error %d\n", __LINE__);
	if (l >= 0x8000.0)			print("error %d\n", __LINE__);
	if (l >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (l > 0x80000001)			print("error %d\n", __LINE__);
	if (l > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (l > 0x8001.0)			print("error %d\n", __LINE__);
	if (l > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ul <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (ul < 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ul < 0x7fff.0)			print("error %d\n", __LINE__);
	if (ul > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ul == 0x80000000)			print("error %d\n", __LINE__);
	if (ul != 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ul <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ul >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ul < 0x80000001)			print("error %d\n", __LINE__);
	if (ul > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ul < 0x8001.0)			print("error %d\n", __LINE__);
	if (ul > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (f >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (f >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (f == 0x7f.0)			print("error %d\n", __LINE__);
	if (f > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (f == 0x80000000)			print("error %d\n", __LINE__);
	if (f == 0x8000000000000000)		print("error %d\n", __LINE__);
	if (f != 0x80.0)			print("error %d\n", __LINE__);
	if (f >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (f >= 0x80000001)			print("error %d\n", __LINE__);
	if (f >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (f > 0x8001.0)			print("error %d\n", __LINE__);
	if (f > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (d >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (d >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (d == 0x7fff.0)			print("error %d\n", __LINE__);
	if (d > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (d == 0x80000000)			print("error %d\n", __LINE__);
	if (d > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (d != 0x8000.0)			print("error %d\n", __LINE__);
	if (d >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (d >= 0x80000001)			print("error %d\n", __LINE__);
	if (d >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (d > 0x8001.0)			print("error %d\n", __LINE__);
	if (d > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (v < 0x7fffffff)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (v == 0x7f.0)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (v == 0x80000000)			print("error %d\n", __LINE__);
	if (v < 0x8000000000000000)		print("error %d\n", __LINE__);
	if (v <= 0x80.0)			print("error %d\n", __LINE__);
	if (v != 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (v <= 0x80000001)			print("error %d\n", __LINE__);
	if (v <= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (v < 0x8001.0)			print("error %d\n", __LINE__);
	if (v >= 0x800000000000000000000001)	print("error %d\n", __LINE__);
	c_x81();
	if (i >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (i >= 0x7fff.0)			print("error %d\n", __LINE__);
	if (i >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (i == 0x80000000)			print("error %d\n", __LINE__);
	if (i > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (i >= 0x8000.0)			print("error %d\n", __LINE__);
	if (i >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (i >= 0x80000001)			print("error %d\n", __LINE__);
	if (i >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (i > 0x8001.0)			print("error %d\n", __LINE__);
	if (i > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ui <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ui <= 0x7fff.0)			print("error %d\n", __LINE__);
	if (ui >= 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ui == 0x80000000)			print("error %d\n", __LINE__);
	if (ui > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ui <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ui >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ui != 0x80000001)			print("error %d\n", __LINE__);
	if (ui >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ui < 0x8001.0)			print("error %d\n", __LINE__);
	if (ui > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (l >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (l > 0x7fff.0)			print("error %d\n", __LINE__);
	if (l > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (l == 0x80000000)			print("error %d\n", __LINE__);
	if (l == 0x8000000000000000)		print("error %d\n", __LINE__);
	if (l >= 0x8000.0)			print("error %d\n", __LINE__);
	if (l >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (l > 0x80000001)			print("error %d\n", __LINE__);
	if (l > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (l > 0x8001.0)			print("error %d\n", __LINE__);
	if (l > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (ul <= 0x7fffffff)			print("error %d\n", __LINE__);
	if (ul < 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (ul < 0x7fff.0)			print("error %d\n", __LINE__);
	if (ul > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (ul == 0x80000000)			print("error %d\n", __LINE__);
	if (ul == 0x8000000000000000)		print("error %d\n", __LINE__);
	if (ul <= 0x8000.0)			print("error %d\n", __LINE__);
	if (ul >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (ul < 0x80000001)			print("error %d\n", __LINE__);
	if (ul > 0x8000000000000001)		print("error %d\n", __LINE__);
	if (ul < 0x8001.0)			print("error %d\n", __LINE__);
	if (ul > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (f >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (f >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (f == 0x7f.0)			print("error %d\n", __LINE__);
	if (f > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (f == 0x80000000)			print("error %d\n", __LINE__);
	if (f == 0x8000000000000000)		print("error %d\n", __LINE__);
	if (f == 0x80.0)			print("error %d\n", __LINE__);
	if (f >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (f >= 0x80000001)			print("error %d\n", __LINE__);
	if (f >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (f > 0x8001.0)			print("error %d\n", __LINE__);
	if (f > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (d >= 0x7fffffff)			print("error %d\n", __LINE__);
	if (d >= 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (d == 0x7fff.0)			print("error %d\n", __LINE__);
	if (d > 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (d == 0x80000000)			print("error %d\n", __LINE__);
	if (d > 0x8000000000000000)		print("error %d\n", __LINE__);
	if (d == 0x8000.0)			print("error %d\n", __LINE__);
	if (d >= 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (d >= 0x80000001)			print("error %d\n", __LINE__);
	if (d >= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (d > 0x8001.0)			print("error %d\n", __LINE__);
	if (d > 0x800000000000000000000001)	print("error %d\n", __LINE__);
	if (v < 0x7fffffff)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffff)		print("error %d\n", __LINE__);
	if (v == 0x7f.0)			print("error %d\n", __LINE__);
	if (v < 0x7fffffffffffffffffffffff)	print("error %d\n", __LINE__);
	if (v == 0x80000000)			print("error %d\n", __LINE__);
	if (v < 0x8000000000000000)		print("error %d\n", __LINE__);
	if (v <= 0x80.0)			print("error %d\n", __LINE__);
	if (v == 0x800000000000000000000000)	print("error %d\n", __LINE__);
	if (v <= 0x80000001)			print("error %d\n", __LINE__);
	if (v <= 0x8000000000000001)		print("error %d\n", __LINE__);
	if (v < 0x8001.0)			print("error %d\n", __LINE__);
	if (v > 0x800000000000000000000001)	print("error %d\n", __LINE__);
    }
};
t46_c2_t t46_class2 = {};
/* use arguments to force no otimization as it is not done currently */
t46_class2.t0(0x7fffffff, 0x80000001,
	      0x7fffffffffffffff, 0x8000000000000001,
	      0x100.0, 0x1000000.0, 0x8fffffffffffffff);
t46_class2.t1();
t46_class2.t2(0x7fffffff, 0x7fffffff, 0x7fffffffffffffff, 0x7fffffffffffffff,
	      0x7f.0, 0x7fff.0, 0x7fffffffffffffffffffffff,
	      0x80000000, 0x80000000, 0x8000000000000000, 0x8000000000000000,
	      0x80.0, 0x8000.0, 0x800000000000000000000000,
	      0x80000001, 0x80000001, 0x8000000000000001, 0x8000000000000001,
	      0x81.0, 0x8001.0, 0x800000000000000000000001);

/* Not fully reliable tests for too large values */
int8_t		t47_sc = -1;
uint8_t		t47_uc =  1;
int16_t		t47_ss = -2;
uint16_t	t47_us =  2;
int32_t		t47_si = -4;
uint32_t	t47_ui =  4;
int64_t		t47_sl = -8;
uint64_t	t47_ul =  8;
float32_t	t47_sf = 1/4.0;
float64_t	t47_df = 1/8.0;
float32_t	t47_sf_inf = inf;
float64_t	t47_df_inf = inf;
float32_t	t47_sf_ninf = -inf;
float64_t	t47_df_ninf = -inf;
float32_t	t47_sf_nan = nan;
float64_t	t47_df_nan = nan;
auto		t47_w = 1;
auto		t47_f = 1.0;
auto		t47_x = 1/2;
auto		t47_z = 0x800000000000000000000000000000000;
auto		t47_q = 0x800000000000000000000000000000000/5;
auto		t47_r = 1.0L;
auto		t47_dd = 1.0*I;
auto		t47_qq = I;
auto		t47_cc = 1L*I;
auto		t47_s = "string";
auto		t47_inf = inf;
auto		t47_ninf = -inf;
auto		t47_nan = nan;
auto		t47_infL = inf*1L;
auto		t47_ninfL = -inf*1L;
auto		t47_nanL = nan*1L;
auto t47_chk(auto a, auto b) {
    if (nan_p(a) ^ nan_p(b))
	return false;
    else if (nan_p(a))
	return true;
    if (!!inf_p(a) ^ !!inf_p(b))
	return false;
    if ((!real_p(a) ^ !real_p(b)))
	return false;
    else if (real_p(a) && a && signbit(a) != signbit(b))
	return false;
    if (a != b && abs(a - b) > 0.0000000001)
	return false;
    return true;
}
auto t47_cmp(auto a, auto b) {
    if ((complex_p(a) ^ complex_p(b)) == 0) {
	if (complex_p(a)) {
	    if (t47_chk(real(a), real(b)) && t47_chk(imag(a), imag(b)))
		return true;
	}
	else if (t47_chk(a, b))
	    return true;
    }
    if (complex_p(a)) {
	if (abs(imag(a)) < 0.0000000001)
	    return true;
    }
    else if (complex_p(b) && abs(imag(b)) < 0.0000000001)
	return true;
    return false;
}
if (!integer_p(1))		print("error %d\n", __LINE__);
if (integer_p(1.0))		print("error %d\n", __LINE__);
if (integer_p(1/2))		print("error %d\n", __LINE__);
if (!integer_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (integer_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (integer_p(1.0L))		print("error %d\n", __LINE__);
if (integer_p(1.0*I))		print("error %d\n", __LINE__);
if (integer_p(I))		print("error %d\n", __LINE__);
if (integer_p(1L*I))		print("error %d\n", __LINE__);
if (integer_p("string"))	print("error %d\n", __LINE__);
if (integer_p(inf))		print("error %d\n", __LINE__);
if (integer_p(-inf))		print("error %d\n", __LINE__);
if (integer_p(nan))		print("error %d\n", __LINE__);
if (integer_p(inf*1L))		print("error %d\n", __LINE__);
if (integer_p(-inf*1L))		print("error %d\n", __LINE__);
if (integer_p(nan*1L))		print("error %d\n", __LINE__);
if (!integer_p(t47_sc))		print("error %d\n", __LINE__);
if (!integer_p(t47_uc))		print("error %d\n", __LINE__);
if (!integer_p(t47_ss))		print("error %d\n", __LINE__);
if (!integer_p(t47_us))		print("error %d\n", __LINE__);
if (!integer_p(t47_si))		print("error %d\n", __LINE__);
if (!integer_p(t47_ui))		print("error %d\n", __LINE__);
if (!integer_p(t47_sl))		print("error %d\n", __LINE__);
if (!integer_p(t47_ul))		print("error %d\n", __LINE__);
if (integer_p(t47_sf))		print("error %d\n", __LINE__);
if (integer_p(t47_df))		print("error %d\n", __LINE__);
if (integer_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (integer_p(t47_df_inf))	print("error %d\n", __LINE__);
if (integer_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (integer_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (integer_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (integer_p(t47_df_nan))	print("error %d\n", __LINE__);
if (!integer_p(t47_w))		print("error %d\n", __LINE__);
if (integer_p(t47_f))		print("error %d\n", __LINE__);
if (integer_p(t47_x))		print("error %d\n", __LINE__);
if (!integer_p(t47_z))		print("error %d\n", __LINE__);
if (integer_p(t47_q))		print("error %d\n", __LINE__);
if (integer_p(t47_r))		print("error %d\n", __LINE__);
if (integer_p(t47_dd))		print("error %d\n", __LINE__);
if (integer_p(t47_qq))		print("error %d\n", __LINE__);
if (integer_p(t47_cc))		print("error %d\n", __LINE__);
if (integer_p(t47_s))		print("error %d\n", __LINE__);
if (integer_p(t47_inf))		print("error %d\n", __LINE__);
if (integer_p(t47_ninf))	print("error %d\n", __LINE__);
if (integer_p(t47_nan))		print("error %d\n", __LINE__);
if (integer_p(t47_infL))	print("error %d\n", __LINE__);
if (integer_p(t47_ninfL))	print("error %d\n", __LINE__);
if (integer_p(t47_nanL))	print("error %d\n", __LINE__);
if (!rational_p(1))		print("error %d\n", __LINE__);
if (rational_p(1.0))		print("error %d\n", __LINE__);
if (!rational_p(1/2))		print("error %d\n", __LINE__);
if (!rational_p(1/4))		print("error %d\n", __LINE__);
if (!integer_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!rational_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (rational_p(1.0L))		print("error %d\n", __LINE__);
if (rational_p(1.0*I))		print("error %d\n", __LINE__);
if (rational_p(I))		print("error %d\n", __LINE__);
if (rational_p(1L*I))		print("error %d\n", __LINE__);
if (rational_p("string"))	print("error %d\n", __LINE__);
if (rational_p(inf))		print("error %d\n", __LINE__);
if (rational_p(-inf))		print("error %d\n", __LINE__);
if (rational_p(nan))		print("error %d\n", __LINE__);
if (rational_p(inf*1L))		print("error %d\n", __LINE__);
if (rational_p(-inf*1L))	print("error %d\n", __LINE__);
if (rational_p(nan*1L))		print("error %d\n", __LINE__);
if (!rational_p(t47_sc))	print("error %d\n", __LINE__);
if (!rational_p(t47_uc))	print("error %d\n", __LINE__);
if (!rational_p(t47_ss))	print("error %d\n", __LINE__);
if (!rational_p(t47_us))	print("error %d\n", __LINE__);
if (!rational_p(t47_si))	print("error %d\n", __LINE__);
if (!rational_p(t47_ui))	print("error %d\n", __LINE__);
if (!rational_p(t47_sl))	print("error %d\n", __LINE__);
if (!rational_p(t47_ul))	print("error %d\n", __LINE__);
if (rational_p(t47_sf))		print("error %d\n", __LINE__);
if (rational_p(t47_df))		print("error %d\n", __LINE__);
if (rational_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (rational_p(t47_df_inf))	print("error %d\n", __LINE__);
if (rational_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (rational_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (rational_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (rational_p(t47_df_nan))	print("error %d\n", __LINE__);
if (!rational_p(t47_w))		print("error %d\n", __LINE__);
if (rational_p(t47_f))		print("error %d\n", __LINE__);
if (!rational_p(t47_x))		print("error %d\n", __LINE__);
if (!rational_p(t47_z))		print("error %d\n", __LINE__);
if (!rational_p(t47_q))		print("error %d\n", __LINE__);
if (rational_p(t47_r))		print("error %d\n", __LINE__);
if (rational_p(t47_dd))		print("error %d\n", __LINE__);
if (rational_p(t47_qq))		print("error %d\n", __LINE__);
if (rational_p(t47_cc))		print("error %d\n", __LINE__);
if (rational_p(t47_s))		print("error %d\n", __LINE__);
if (rational_p(t47_inf))	print("error %d\n", __LINE__);
if (rational_p(t47_ninf))	print("error %d\n", __LINE__);
if (rational_p(t47_nan))	print("error %d\n", __LINE__);
if (rational_p(t47_infL))	print("error %d\n", __LINE__);
if (rational_p(t47_ninfL))	print("error %d\n", __LINE__);
if (rational_p(t47_nanL))	print("error %d\n", __LINE__);
if (float_p(1))			print("error %d\n", __LINE__);
if (!float_p(1.0))		print("error %d\n", __LINE__);
if (float_p(1/2))		print("error %d\n", __LINE__);
if (float_p(1/4))		print("error %d\n", __LINE__);
if (float_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (float_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!float_p(1.0L))		print("error %d\n", __LINE__);
if (float_p(1.0*I))		print("error %d\n", __LINE__);
if (float_p(I))			print("error %d\n", __LINE__);
if (float_p(1L*I))		print("error %d\n", __LINE__);
if (float_p("string"))		print("error %d\n", __LINE__);
if (!float_p(inf))		print("error %d\n", __LINE__);
if (!float_p(-inf))		print("error %d\n", __LINE__);
if (!float_p(nan))		print("error %d\n", __LINE__);
if (!float_p(inf*1L))		print("error %d\n", __LINE__);
if (!float_p(-inf*1L))		print("error %d\n", __LINE__);
if (!float_p(nan*1L))		print("error %d\n", __LINE__);
if (float_p(t47_sc))		print("error %d\n", __LINE__);
if (float_p(t47_uc))		print("error %d\n", __LINE__);
if (float_p(t47_ss))		print("error %d\n", __LINE__);
if (float_p(t47_us))		print("error %d\n", __LINE__);
if (float_p(t47_si))		print("error %d\n", __LINE__);
if (float_p(t47_ui))		print("error %d\n", __LINE__);
if (float_p(t47_sl))		print("error %d\n", __LINE__);
if (float_p(t47_ul))		print("error %d\n", __LINE__);
if (!float_p(t47_sf))		print("error %d\n", __LINE__);
if (!float_p(t47_df))		print("error %d\n", __LINE__);
if (!float_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (!float_p(t47_df_inf))	print("error %d\n", __LINE__);
if (!float_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (!float_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (!float_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (!float_p(t47_df_nan))	print("error %d\n", __LINE__);
if (float_p(t47_w))		print("error %d\n", __LINE__);
if (!float_p(t47_f))		print("error %d\n", __LINE__);
if (float_p(t47_x))		print("error %d\n", __LINE__);
if (float_p(t47_z))		print("error %d\n", __LINE__);
if (float_p(t47_q))		print("error %d\n", __LINE__);
if (!float_p(t47_r))		print("error %d\n", __LINE__);
if (float_p(t47_dd))		print("error %d\n", __LINE__);
if (float_p(t47_qq))		print("error %d\n", __LINE__);
if (float_p(t47_cc))		print("error %d\n", __LINE__);
if (float_p(t47_s))		print("error %d\n", __LINE__);
if (!float_p(t47_inf))		print("error %d\n", __LINE__);
if (!float_p(t47_ninf))		print("error %d\n", __LINE__);
if (!float_p(t47_nan))		print("error %d\n", __LINE__);
if (!float_p(t47_infL))		print("error %d\n", __LINE__);
if (!float_p(t47_ninfL))	print("error %d\n", __LINE__);
if (!float_p(t47_nanL))		print("error %d\n", __LINE__);
if (!real_p(1))			print("error %d\n", __LINE__);
if (!real_p(1.0))		print("error %d\n", __LINE__);
if (!real_p(1/2))		print("error %d\n", __LINE__);
if (!real_p(1/4))		print("error %d\n", __LINE__);
if (!real_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!real_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!real_p(1.0L))		print("error %d\n", __LINE__);
if (real_p(1.0*I))		print("error %d\n", __LINE__);
if (real_p(I))			print("error %d\n", __LINE__);
if (real_p(1L*I))		print("error %d\n", __LINE__);
if (real_p("string"))		print("error %d\n", __LINE__);
if (!real_p(inf))		print("error %d\n", __LINE__);
if (!real_p(-inf))		print("error %d\n", __LINE__);
if (!real_p(nan))		print("error %d\n", __LINE__);
if (!real_p(inf*1L))		print("error %d\n", __LINE__);
if (!real_p(-inf*1L))		print("error %d\n", __LINE__);
if (!real_p(nan*1L))		print("error %d\n", __LINE__);
if (!real_p(t47_sc))		print("error %d\n", __LINE__);
if (!real_p(t47_uc))		print("error %d\n", __LINE__);
if (!real_p(t47_ss))		print("error %d\n", __LINE__);
if (!real_p(t47_us))		print("error %d\n", __LINE__);
if (!real_p(t47_si))		print("error %d\n", __LINE__);
if (!real_p(t47_ui))		print("error %d\n", __LINE__);
if (!real_p(t47_sl))		print("error %d\n", __LINE__);
if (!real_p(t47_ul))		print("error %d\n", __LINE__);
if (!real_p(t47_sf))		print("error %d\n", __LINE__);
if (!real_p(t47_df))		print("error %d\n", __LINE__);
if (!real_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (!real_p(t47_df_inf))	print("error %d\n", __LINE__);
if (!real_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (!real_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (!real_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (!real_p(t47_df_nan))	print("error %d\n", __LINE__);
if (!real_p(t47_w))		print("error %d\n", __LINE__);
if (!real_p(t47_f))		print("error %d\n", __LINE__);
if (!real_p(t47_x))		print("error %d\n", __LINE__);
if (!real_p(t47_z))		print("error %d\n", __LINE__);
if (!real_p(t47_q))		print("error %d\n", __LINE__);
if (!real_p(t47_r))		print("error %d\n", __LINE__);
if (real_p(t47_dd))		print("error %d\n", __LINE__);
if (real_p(t47_qq))		print("error %d\n", __LINE__);
if (real_p(t47_cc))		print("error %d\n", __LINE__);
if (real_p(t47_s))		print("error %d\n", __LINE__);
if (!real_p(t47_inf))		print("error %d\n", __LINE__);
if (!real_p(t47_ninf))		print("error %d\n", __LINE__);
if (!real_p(t47_nan))		print("error %d\n", __LINE__);
if (!real_p(t47_infL))		print("error %d\n", __LINE__);
if (!real_p(t47_ninfL))		print("error %d\n", __LINE__);
if (!real_p(t47_nanL))		print("error %d\n", __LINE__);
if (complex_p(1))		print("error %d\n", __LINE__);
if (complex_p(1.0))		print("error %d\n", __LINE__);
if (complex_p(1/2))		print("error %d\n", __LINE__);
if (complex_p(1/4))		print("error %d\n", __LINE__);
if (complex_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (complex_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (complex_p(1.0L))		print("error %d\n", __LINE__);
if (!complex_p(1.0*I))		print("error %d\n", __LINE__);
if (!complex_p(I))		print("error %d\n", __LINE__);
if (!complex_p(1L*I))		print("error %d\n", __LINE__);
if (complex_p("string"))	print("error %d\n", __LINE__);
if (complex_p(inf))		print("error %d\n", __LINE__);
if (complex_p(-inf))		print("error %d\n", __LINE__);
if (complex_p(nan))		print("error %d\n", __LINE__);
if (complex_p(inf*1L))		print("error %d\n", __LINE__);
if (complex_p(-inf*1L))		print("error %d\n", __LINE__);
if (complex_p(nan*1L))		print("error %d\n", __LINE__);
if (complex_p(t47_sc))		print("error %d\n", __LINE__);
if (complex_p(t47_uc))		print("error %d\n", __LINE__);
if (complex_p(t47_ss))		print("error %d\n", __LINE__);
if (complex_p(t47_us))		print("error %d\n", __LINE__);
if (complex_p(t47_si))		print("error %d\n", __LINE__);
if (complex_p(t47_ui))		print("error %d\n", __LINE__);
if (complex_p(t47_sl))		print("error %d\n", __LINE__);
if (complex_p(t47_ul))		print("error %d\n", __LINE__);
if (complex_p(t47_sf))		print("error %d\n", __LINE__);
if (complex_p(t47_df))		print("error %d\n", __LINE__);
if (complex_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (complex_p(t47_df_inf))	print("error %d\n", __LINE__);
if (complex_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (complex_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (complex_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (complex_p(t47_df_nan))	print("error %d\n", __LINE__);
if (complex_p(t47_w))		print("error %d\n", __LINE__);
if (complex_p(t47_f))		print("error %d\n", __LINE__);
if (complex_p(t47_x))		print("error %d\n", __LINE__);
if (complex_p(t47_z))		print("error %d\n", __LINE__);
if (complex_p(t47_q))		print("error %d\n", __LINE__);
if (complex_p(t47_r))		print("error %d\n", __LINE__);
if (!complex_p(t47_dd))		print("error %d\n", __LINE__);
if (!complex_p(t47_qq))		print("error %d\n", __LINE__);
if (!complex_p(t47_cc))		print("error %d\n", __LINE__);
if (complex_p(t47_s))		print("error %d\n", __LINE__);
if (complex_p(t47_inf))		print("error %d\n", __LINE__);
if (complex_p(t47_ninf))	print("error %d\n", __LINE__);
if (complex_p(t47_nan))		print("error %d\n", __LINE__);
if (complex_p(t47_infL))	print("error %d\n", __LINE__);
if (complex_p(t47_ninfL))	print("error %d\n", __LINE__);
if (complex_p(t47_nanL))	print("error %d\n", __LINE__);
if (!number_p(1))		print("error %d\n", __LINE__);
if (!number_p(1.0))		print("error %d\n", __LINE__);
if (!number_p(1/2))		print("error %d\n", __LINE__);
if (!number_p(1/4))		print("error %d\n", __LINE__);
if (!number_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!number_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!number_p(1.0L))		print("error %d\n", __LINE__);
if (!number_p(1.0*I))		print("error %d\n", __LINE__);
if (!number_p(I))		print("error %d\n", __LINE__);
if (!number_p(1L*I))		print("error %d\n", __LINE__);
if (number_p("string"))		print("error %d\n", __LINE__);
if (!number_p(inf))		print("error %d\n", __LINE__);
if (!number_p(-inf))		print("error %d\n", __LINE__);
if (!number_p(nan))		print("error %d\n", __LINE__);
if (!number_p(inf*1L))		print("error %d\n", __LINE__);
if (!number_p(-inf*1L))		print("error %d\n", __LINE__);
if (!number_p(nan*1L))		print("error %d\n", __LINE__);
if (!number_p(t47_sc))		print("error %d\n", __LINE__);
if (!number_p(t47_uc))		print("error %d\n", __LINE__);
if (!number_p(t47_ss))		print("error %d\n", __LINE__);
if (!number_p(t47_us))		print("error %d\n", __LINE__);
if (!number_p(t47_si))		print("error %d\n", __LINE__);
if (!number_p(t47_ui))		print("error %d\n", __LINE__);
if (!number_p(t47_sl))		print("error %d\n", __LINE__);
if (!number_p(t47_ul))		print("error %d\n", __LINE__);
if (!number_p(t47_sf))		print("error %d\n", __LINE__);
if (!number_p(t47_df))		print("error %d\n", __LINE__);
if (!number_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (!number_p(t47_df_inf))	print("error %d\n", __LINE__);
if (!number_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (!number_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (!number_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (!number_p(t47_df_nan))	print("error %d\n", __LINE__);
if (!number_p(t47_w))		print("error %d\n", __LINE__);
if (!number_p(t47_f))		print("error %d\n", __LINE__);
if (!number_p(t47_x))		print("error %d\n", __LINE__);
if (!number_p(t47_z))		print("error %d\n", __LINE__);
if (!number_p(t47_q))		print("error %d\n", __LINE__);
if (!number_p(t47_r))		print("error %d\n", __LINE__);
if (!number_p(t47_dd))		print("error %d\n", __LINE__);
if (!number_p(t47_qq))		print("error %d\n", __LINE__);
if (!number_p(t47_cc))		print("error %d\n", __LINE__);
if (number_p(t47_s))		print("error %d\n", __LINE__);
if (!number_p(t47_inf))		print("error %d\n", __LINE__);
if (!number_p(t47_ninf))	print("error %d\n", __LINE__);
if (!number_p(t47_nan))		print("error %d\n", __LINE__);
if (!number_p(t47_infL))	print("error %d\n", __LINE__);
if (!number_p(t47_ninfL))	print("error %d\n", __LINE__);
if (!number_p(t47_nanL))	print("error %d\n", __LINE__);
if (!finite_p(1))		print("error %d\n", __LINE__);
if (!finite_p(1.0))		print("error %d\n", __LINE__);
if (!finite_p(1/2))		print("error %d\n", __LINE__);
if (!finite_p(1/4))		print("error %d\n", __LINE__);
if (!finite_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!finite_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!finite_p(1.0L))		print("error %d\n", __LINE__);
if (finite_p(1.0*I))		print("error %d\n", __LINE__);
if (finite_p(I))		print("error %d\n", __LINE__);
if (finite_p(1L*I))		print("error %d\n", __LINE__);
if (finite_p("string"))		print("error %d\n", __LINE__);
if (finite_p(inf))		print("error %d\n", __LINE__);
if (finite_p(-inf))		print("error %d\n", __LINE__);
if (finite_p(nan))		print("error %d\n", __LINE__);
if (finite_p(inf*1L))		print("error %d\n", __LINE__);
if (finite_p(-inf*1L))		print("error %d\n", __LINE__);
if (finite_p(nan*1L))		print("error %d\n", __LINE__);
if (!finite_p(t47_sc))		print("error %d\n", __LINE__);
if (!finite_p(t47_uc))		print("error %d\n", __LINE__);
if (!finite_p(t47_ss))		print("error %d\n", __LINE__);
if (!finite_p(t47_us))		print("error %d\n", __LINE__);
if (!finite_p(t47_si))		print("error %d\n", __LINE__);
if (!finite_p(t47_ui))		print("error %d\n", __LINE__);
if (!finite_p(t47_sl))		print("error %d\n", __LINE__);
if (!finite_p(t47_ul))		print("error %d\n", __LINE__);
if (!finite_p(t47_sf))		print("error %d\n", __LINE__);
if (!finite_p(t47_df))		print("error %d\n", __LINE__);
if (finite_p(t47_sf_inf))	print("error %d\n", __LINE__);
if (finite_p(t47_df_inf))	print("error %d\n", __LINE__);
if (finite_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (finite_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (finite_p(t47_sf_nan))	print("error %d\n", __LINE__);
if (finite_p(t47_df_nan))	print("error %d\n", __LINE__);
if (!finite_p(t47_w))		print("error %d\n", __LINE__);
if (!finite_p(t47_f))		print("error %d\n", __LINE__);
if (!finite_p(t47_x))		print("error %d\n", __LINE__);
if (!finite_p(t47_z))		print("error %d\n", __LINE__);
if (!finite_p(t47_q))		print("error %d\n", __LINE__);
if (!finite_p(t47_r))		print("error %d\n", __LINE__);
if (finite_p(t47_dd))		print("error %d\n", __LINE__);
if (finite_p(t47_qq))		print("error %d\n", __LINE__);
if (finite_p(t47_cc))		print("error %d\n", __LINE__);
if (finite_p(t47_s))		print("error %d\n", __LINE__);
if (finite_p(t47_inf))		print("error %d\n", __LINE__);
if (finite_p(t47_ninf))		print("error %d\n", __LINE__);
if (finite_p(t47_nan))		print("error %d\n", __LINE__);
if (finite_p(t47_infL))		print("error %d\n", __LINE__);
if (finite_p(t47_ninfL))	print("error %d\n", __LINE__);
if (finite_p(t47_nanL))		print("error %d\n", __LINE__);
if (inf_p(1))			print("error %d\n", __LINE__);
if (inf_p(1.0))			print("error %d\n", __LINE__);
if (inf_p(1/2))			print("error %d\n", __LINE__);
if (inf_p(1/4))			print("error %d\n", __LINE__);
if (inf_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (inf_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (inf_p(1.0L))		print("error %d\n", __LINE__);
if (inf_p(1.0*I))		print("error %d\n", __LINE__);
if (inf_p(I))			print("error %d\n", __LINE__);
if (inf_p(1L*I))		print("error %d\n", __LINE__);
if (inf_p("string"))		print("error %d\n", __LINE__);
if (!inf_p(inf))		print("error %d\n", __LINE__);
if (!inf_p(-inf))		print("error %d\n", __LINE__);
if (inf_p(nan))			print("error %d\n", __LINE__);
if (!inf_p(inf*1L))		print("error %d\n", __LINE__);
if (!inf_p(-inf*1L))		print("error %d\n", __LINE__);
if (inf_p(nan*1L))		print("error %d\n", __LINE__);
if (inf_p(t47_sc))		print("error %d\n", __LINE__);
if (inf_p(t47_uc))		print("error %d\n", __LINE__);
if (inf_p(t47_ss))		print("error %d\n", __LINE__);
if (inf_p(t47_us))		print("error %d\n", __LINE__);
if (inf_p(t47_si))		print("error %d\n", __LINE__);
if (inf_p(t47_ui))		print("error %d\n", __LINE__);
if (inf_p(t47_sl))		print("error %d\n", __LINE__);
if (inf_p(t47_ul))		print("error %d\n", __LINE__);
if (inf_p(t47_sf))		print("error %d\n", __LINE__);
if (inf_p(t47_df))		print("error %d\n", __LINE__);
if (!inf_p(t47_sf_inf))		print("error %d\n", __LINE__);
if (!inf_p(t47_df_inf))		print("error %d\n", __LINE__);
if (!inf_p(t47_sf_ninf))	print("error %d\n", __LINE__);
if (!inf_p(t47_df_ninf))	print("error %d\n", __LINE__);
if (inf_p(t47_sf_nan))		print("error %d\n", __LINE__);
if (inf_p(t47_df_nan))		print("error %d\n", __LINE__);
if (inf_p(t47_w))		print("error %d\n", __LINE__);
if (inf_p(t47_f))		print("error %d\n", __LINE__);
if (inf_p(t47_x))		print("error %d\n", __LINE__);
if (inf_p(t47_z))		print("error %d\n", __LINE__);
if (inf_p(t47_q))		print("error %d\n", __LINE__);
if (inf_p(t47_r))		print("error %d\n", __LINE__);
if (inf_p(t47_dd))		print("error %d\n", __LINE__);
if (inf_p(t47_qq))		print("error %d\n", __LINE__);
if (inf_p(t47_cc))		print("error %d\n", __LINE__);
if (inf_p(t47_s))		print("error %d\n", __LINE__);
if (!inf_p(t47_inf))		print("error %d\n", __LINE__);
if (!inf_p(t47_ninf))		print("error %d\n", __LINE__);
if (inf_p(t47_nan))		print("error %d\n", __LINE__);
if (!inf_p(t47_infL))		print("error %d\n", __LINE__);
if (!inf_p(t47_ninfL))		print("error %d\n", __LINE__);
if (inf_p(t47_nanL))		print("error %d\n", __LINE__);
if (nan_p(1))			print("error %d\n", __LINE__);
if (nan_p(1.0))			print("error %d\n", __LINE__);
if (nan_p(1/2))			print("error %d\n", __LINE__);
if (nan_p(1/4))			print("error %d\n", __LINE__);
if (nan_p(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (nan_p(0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (nan_p(1.0L))		print("error %d\n", __LINE__);
if (nan_p(1.0*I))		print("error %d\n", __LINE__);
if (nan_p(I))			print("error %d\n", __LINE__);
if (nan_p(1L*I))		print("error %d\n", __LINE__);
if (nan_p("string"))		print("error %d\n", __LINE__);
if (nan_p(inf))			print("error %d\n", __LINE__);
if (nan_p(-inf))		print("error %d\n", __LINE__);
if (!nan_p(nan))		print("error %d\n", __LINE__);
if (nan_p(inf*1L))		print("error %d\n", __LINE__);
if (nan_p(-inf*1L))		print("error %d\n", __LINE__);
if (!nan_p(nan*1L))		print("error %d\n", __LINE__);
if (nan_p(t47_sc))		print("error %d\n", __LINE__);
if (nan_p(t47_uc))		print("error %d\n", __LINE__);
if (nan_p(t47_ss))		print("error %d\n", __LINE__);
if (nan_p(t47_us))		print("error %d\n", __LINE__);
if (nan_p(t47_si))		print("error %d\n", __LINE__);
if (nan_p(t47_ui))		print("error %d\n", __LINE__);
if (nan_p(t47_sl))		print("error %d\n", __LINE__);
if (nan_p(t47_ul))		print("error %d\n", __LINE__);
if (nan_p(t47_sf))		print("error %d\n", __LINE__);
if (nan_p(t47_df))		print("error %d\n", __LINE__);
if (nan_p(t47_sf_inf))		print("error %d\n", __LINE__);
if (nan_p(t47_df_inf))		print("error %d\n", __LINE__);
if (nan_p(t47_sf_ninf))		print("error %d\n", __LINE__);
if (nan_p(t47_df_ninf))		print("error %d\n", __LINE__);
if (!nan_p(t47_sf_nan))		print("error %d\n", __LINE__);
if (!nan_p(t47_df_nan))		print("error %d\n", __LINE__);
if (nan_p(t47_w))		print("error %d\n", __LINE__);
if (nan_p(t47_f))		print("error %d\n", __LINE__);
if (nan_p(t47_x))		print("error %d\n", __LINE__);
if (nan_p(t47_z))		print("error %d\n", __LINE__);
if (nan_p(t47_q))		print("error %d\n", __LINE__);
if (nan_p(t47_r))		print("error %d\n", __LINE__);
if (nan_p(t47_dd))		print("error %d\n", __LINE__);
if (nan_p(t47_qq))		print("error %d\n", __LINE__);
if (nan_p(t47_cc))		print("error %d\n", __LINE__);
if (nan_p(t47_s))		print("error %d\n", __LINE__);
if (nan_p(t47_inf))		print("error %d\n", __LINE__);
if (nan_p(t47_ninf))		print("error %d\n", __LINE__);
if (!nan_p(t47_nan))		print("error %d\n", __LINE__);
if (nan_p(t47_infL))		print("error %d\n", __LINE__);
if (nan_p(t47_ninfL))		print("error %d\n", __LINE__);
if (!nan_p(t47_nanL))		print("error %d\n", __LINE__);
if (num(1) != 1)		print("error %d\n", __LINE__);
if (num(1/2) != 1)		print("error %d\n", __LINE__);
if (num(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (num(0x800000000000000000000000000000000/5) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (num(t47_sc) != -1)		print("error %d\n", __LINE__);
if (num(t47_uc) != 1)		print("error %d\n", __LINE__);
if (num(t47_ss) != -2)		print("error %d\n", __LINE__);
if (num(t47_us) != 2)		print("error %d\n", __LINE__);
if (num(t47_si) != -4)		print("error %d\n", __LINE__);
if (num(t47_ui) != 4)		print("error %d\n", __LINE__);
if (num(t47_sl) != -8)		print("error %d\n", __LINE__);
if (num(t47_ul) != 8)		print("error %d\n", __LINE__);
if (num(t47_w) != 1)		print("error %d\n", __LINE__);
if (num(t47_x) != 1)		print("error %d\n", __LINE__);
if (num(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (num(t47_q) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (den(1) != 1)		print("error %d\n", __LINE__);
if (den(1/2) != 2)		print("error %d\n", __LINE__);
if (den(0x800000000000000000000000000000000) != 1)
    print("error %d\n", __LINE__);
if (den(0x800000000000000000000000000000000/5) != 5)
    print("error %d\n", __LINE__);
if (den(t47_sc) != 1)		print("error %d\n", __LINE__);
if (den(t47_uc) != 1)		print("error %d\n", __LINE__);
if (den(t47_ss) != 1)		print("error %d\n", __LINE__);
if (den(t47_us) != 1)		print("error %d\n", __LINE__);
if (den(t47_si) != 1)		print("error %d\n", __LINE__);
if (den(t47_ui) != 1)		print("error %d\n", __LINE__);
if (den(t47_sl) != 1)		print("error %d\n", __LINE__);
if (den(t47_ul) != 1)		print("error %d\n", __LINE__);
if (den(t47_w) != 1)		print("error %d\n", __LINE__);
if (den(t47_x) != 2)		print("error %d\n", __LINE__);
if (den(t47_z) != 1) 		print("error %d\n", __LINE__);
if (den(t47_q) != 5)		print("error %d\n", __LINE__);
if (real(1) != 1)		print("error %d\n", __LINE__);
if (real(1.0) != 1.0)		print("error %d\n", __LINE__);
if (real(1/2) != 1/2)		print("error %d\n", __LINE__);
if (real(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (real(0x800000000000000000000000000000000/5) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (real(1.0L) != 1L)		print("error %d\n", __LINE__);
if (real(1.0*I) != 0.0)		print("error %d\n", __LINE__);
if (real(I) != 0)		print("error %d\n", __LINE__);
if (real(1L*I) != 0L)		print("error %d\n", __LINE__);
if (real(inf) != inf)		print("error %d\n", __LINE__);
if (real(-inf) != -inf)		print("error %d\n", __LINE__);
if (real(inf*1L) != inf)	print("error %d\n", __LINE__);
if (real(-inf*1L) != -inf)	print("error %d\n", __LINE__);
if (real(t47_sc) != -1)		print("error %d\n", __LINE__);
if (real(t47_uc) != 1)		print("error %d\n", __LINE__);
if (real(t47_ss) != -2)		print("error %d\n", __LINE__);
if (real(t47_us) != 2)		print("error %d\n", __LINE__);
if (real(t47_si) != -4)		print("error %d\n", __LINE__);
if (real(t47_ui) != 4)		print("error %d\n", __LINE__);
if (real(t47_sl) != -8)		print("error %d\n", __LINE__);
if (real(t47_ul) != 8)		print("error %d\n", __LINE__);
if (real(t47_sf) != 1/4.0)	print("error %d\n", __LINE__);
if (real(t47_df) != 1/8)	print("error %d\n", __LINE__);
if (real(t47_sf_inf) != inf)	print("error %d\n", __LINE__);
if (real(t47_df_inf) != inf)	print("error %d\n", __LINE__);
if (real(t47_sf_ninf) != -inf)	print("error %d\n", __LINE__);
if (real(t47_df_ninf) != -inf)	print("error %d\n", __LINE__);
if (real(t47_w) != 1)		print("error %d\n", __LINE__);
if (real(t47_f) != 1)		print("error %d\n", __LINE__);
if (real(t47_x) != 1/2)		print("error %d\n", __LINE__);
if (real(t47_z) != 0x800000000000000000000000000000000)
   print("error %d\n", __LINE__);
if (real(t47_q) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (real(t47_r) != 1L)		print("error %d\n", __LINE__);
if (real(t47_dd) != 0)		print("error %d\n", __LINE__);
if (real(t47_qq) != 0)		print("error %d\n", __LINE__);
if (real(t47_cc) != 0)		print("error %d\n", __LINE__);
if (real(t47_inf) != inf)	print("error %d\n", __LINE__);
if (real(t47_ninf) != -inf)	print("error %d\n", __LINE__);
if (real(t47_infL) != t47_infL)	print("error %d\n", __LINE__);
if (real(t47_ninfL) != t47_ninfL)
    print("error %d\n", __LINE__);
if (imag(1) != 0)		print("error %d\n", __LINE__);
if (imag(1.0) != 0.0)		print("error %d\n", __LINE__);
if (imag(1/2) != 0)		print("error %d\n", __LINE__);
if (imag(0x800000000000000000000000000000000) != 0)
    print("error %d\n", __LINE__);
if (imag(0x800000000000000000000000000000000/5) != 0)
    print("error %d\n", __LINE__);
if (imag(1.0L) != 0L)		print("error %d\n", __LINE__);
if (imag(1.0*I) != 1.0)		print("error %d\n", __LINE__);
if (imag(I) != 1)		print("error %d\n", __LINE__);
if (imag(1L*I) != 1L)		print("error %d\n", __LINE__);
if (imag(inf) != 0)		print("error %d\n", __LINE__);
if (imag(-inf) != 0)		print("error %d\n", __LINE__);
if (imag(inf*1L) != 0)		print("error %d\n", __LINE__);
if (imag(-inf*1L) != 0)		print("error %d\n", __LINE__);
if (imag(t47_sc) != 0)		print("error %d\n", __LINE__);
if (imag(t47_uc) != 0)		print("error %d\n", __LINE__);
if (imag(t47_ss) != 0)		print("error %d\n", __LINE__);
if (imag(t47_us) != 0)		print("error %d\n", __LINE__);
if (imag(t47_si) != 0)		print("error %d\n", __LINE__);
if (imag(t47_ui) != 0)		print("error %d\n", __LINE__);
if (imag(t47_sl) != 0)		print("error %d\n", __LINE__);
if (imag(t47_ul) != 0)		print("error %d\n", __LINE__);
if (imag(t47_sf) != 0.0)	print("error %d\n", __LINE__);
if (imag(t47_df) != 0.0)	print("error %d\n", __LINE__);
if (imag(t47_sf_inf) != 0)	print("error %d\n", __LINE__);
if (imag(t47_df_inf) != 0)	print("error %d\n", __LINE__);
if (imag(t47_sf_ninf) != 0)	print("error %d\n", __LINE__);
if (imag(t47_df_ninf) != 0)	print("error %d\n", __LINE__);
if (imag(t47_w) != 0)		print("error %d\n", __LINE__);
if (imag(t47_f) != 0)		print("error %d\n", __LINE__);
if (imag(t47_x) != 0)		print("error %d\n", __LINE__);
if (imag(t47_z) != 0)		print("error %d\n", __LINE__);
if (imag(t47_q) != 0)		print("error %d\n", __LINE__);
if (imag(t47_r) != 0L)		print("error %d\n", __LINE__);
if (imag(t47_dd) != 1.0)	print("error %d\n", __LINE__);
if (imag(t47_qq) != 1)		print("error %d\n", __LINE__);
if (imag(t47_cc) != 1L)		print("error %d\n", __LINE__);
if (imag(t47_inf) != 0)		print("error %d\n", __LINE__);
if (imag(t47_ninf) != 0)	print("error %d\n", __LINE__);
if (imag(t47_infL) != 0L)	print("error %d\n", __LINE__);
if (imag(t47_ninfL) != 0L)	print("error %d\n", __LINE__);
if (signbit(1))			print("error %d\n", __LINE__);
if (signbit(1.0))		print("error %d\n", __LINE__);
if (signbit(1/2))		print("error %d\n", __LINE__);
if (signbit(0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (signbit(0x800000000000000000000000000000000/5) != 0)
    print("error %d\n", __LINE__);
if (signbit(1.0L))		print("error %d\n", __LINE__);
if (signbit(inf))		print("error %d\n", __LINE__);
if (!signbit(-inf))		print("error %d\n", __LINE__);
if (!signbit(t47_sc))		print("error %d\n", __LINE__);
if (signbit(t47_uc))		print("error %d\n", __LINE__);
if (!signbit(t47_ss))		print("error %d\n", __LINE__);
if (signbit(t47_us))		print("error %d\n", __LINE__);
if (!signbit(t47_si))		print("error %d\n", __LINE__);
if (signbit(t47_ui))		print("error %d\n", __LINE__);
if (!signbit(t47_sl))		print("error %d\n", __LINE__);
if (signbit(t47_ul))		print("error %d\n", __LINE__);
if (signbit(t47_sf))		print("error %d\n", __LINE__);
if (signbit(t47_df))		print("error %d\n", __LINE__);
if (signbit(t47_sf_inf))	print("error %d\n", __LINE__);
if (signbit(t47_df_inf))	print("error %d\n", __LINE__);
if (!signbit(t47_sf_ninf))	print("error %d\n", __LINE__);
if (!signbit(t47_df_ninf))	print("error %d\n", __LINE__);
if (signbit(t47_w))		print("error %d\n", __LINE__);
if (signbit(t47_f))		print("error %d\n", __LINE__);
if (signbit(t47_x))		print("error %d\n", __LINE__);
if (signbit(t47_z))		print("error %d\n", __LINE__);
if (signbit(t47_q))		print("error %d\n", __LINE__);
if (signbit(t47_r))		print("error %d\n", __LINE__);
if (signbit(t47_inf))		print("error %d\n", __LINE__);
if (!signbit(t47_ninf))		print("error %d\n", __LINE__);
if (signbit(t47_infL))		print("error %d\n", __LINE__);
if (!signbit(t47_ninfL))	print("error %d\n", __LINE__);
if (abs(1) != 1)		print("error %d\n", __LINE__);
if (abs(-1.0) != 1.0)		print("error %d\n", __LINE__);
if (abs(1/2) != 1/2)		print("error %d\n", __LINE__);
if (abs(-0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (abs(0x800000000000000000000000000000000/5) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (abs(1.0L) != 1.0L)		print("error %d\n", __LINE__);
if (abs(1.0*I) != 1.0)		print("error %d\n", __LINE__);
if (abs(I) != 1)		print("error %d\n", __LINE__);
if (abs(1L*I) != 1L)		print("error %d\n", __LINE__);
if (abs(inf) != inf)		print("error %d\n", __LINE__);
if (abs(-inf) != inf)		print("error %d\n", __LINE__);
if (abs(inf*1L) != inf)		print("error %d\n", __LINE__);
if (abs(-inf*1L) != inf)	print("error %d\n", __LINE__);
if (abs(t47_sc) != 1)		print("error %d\n", __LINE__);
if (abs(t47_uc) != 1)		print("error %d\n", __LINE__);
if (abs(t47_ss) != 2)		print("error %d\n", __LINE__);
if (abs(t47_us) != 2)		print("error %d\n", __LINE__);
if (abs(t47_si) != 4)		print("error %d\n", __LINE__);
if (abs(t47_ui) != 4)		print("error %d\n", __LINE__);
if (abs(t47_sl) != 8)		print("error %d\n", __LINE__);
if (abs(t47_ul) != 8)		print("error %d\n", __LINE__);
if (abs(t47_sf) != 1/4.0)	print("error %d\n", __LINE__);
if (abs(t47_df) != 1/8)		print("error %d\n", __LINE__);
if (abs(t47_sf_inf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_df_inf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_sf_ninf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_df_ninf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_w) != 1)		print("error %d\n", __LINE__);
if (abs(t47_f) != 1)		print("error %d\n", __LINE__);
if (abs(t47_x) != 1/2)		print("error %d\n", __LINE__);
if (abs(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (abs(t47_q) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (abs(t47_r) != 1L)		print("error %d\n", __LINE__);
if (abs(t47_dd) != 1)		print("error %d\n", __LINE__);
if (abs(t47_qq) != 1)		print("error %d\n", __LINE__);
if (abs(t47_cc) != 1L)		print("error %d\n", __LINE__);
if (abs(t47_inf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_ninf) != inf)	print("error %d\n", __LINE__);
if (abs(t47_infL) != t47_infL)	print("error %d\n", __LINE__);
if (abs(t47_ninfL) != t47_infL)
    print("error %d\n", __LINE__);
if (signum(1) != 1)		print("error %d\n", __LINE__);
if (signum(1.0) != 1.0)		print("error %d\n", __LINE__);
if (signum(1/2) != 1)		print("error %d\n", __LINE__);
if (signum(0x800000000000000000000000000000000) != 1)
    print("error %d\n", __LINE__);
if (signum(0x800000000000000000000000000000000/5) != 1)
    print("error %d\n", __LINE__);
if (signum(-1.0L) != -1L)	print("error %d\n", __LINE__);
if (signum(1.0*I) != 1.0*I)	print("error %d\n", __LINE__);
if (signum(I) != I)		print("error %d\n", __LINE__);
if (signum(1L*I) != I)		print("error %d\n", __LINE__);
if (signum(inf) != 1.0)		print("error %d\n", __LINE__);
if (signum(-inf) != -1.0)	print("error %d\n", __LINE__);
if (signum(inf*1L) != 1L)	print("error %d\n", __LINE__);
if (signum(-inf*1L) != -1L)	print("error %d\n", __LINE__);
if (signum(t47_sc) != -1)	print("error %d\n", __LINE__);
if (signum(t47_uc) != 1)	print("error %d\n", __LINE__);
if (signum(t47_ss) != -1)	print("error %d\n", __LINE__);
if (signum(t47_us) != 1)	print("error %d\n", __LINE__);
if (signum(t47_si) != -1)	print("error %d\n", __LINE__);
if (signum(t47_ui) != 1)	print("error %d\n", __LINE__);
if (signum(t47_sl) != -1)	print("error %d\n", __LINE__);
if (signum(t47_ul) != 1)	print("error %d\n", __LINE__);
if (signum(t47_sf) != 1.0)	print("error %d\n", __LINE__);
if (signum(t47_df) != 1.0)	print("error %d\n", __LINE__);
if (signum(t47_sf_inf) != 1.0)	print("error %d\n", __LINE__);
if (signum(t47_df_inf) != 1.0)	print("error %d\n", __LINE__);
if (signum(t47_sf_ninf) != -1)	print("error %d\n", __LINE__);
if (signum(t47_df_ninf) != -1)	print("error %d\n", __LINE__);
if (signum(t47_w) != 1)		print("error %d\n", __LINE__);
if (signum(t47_f) != 1.0)	print("error %d\n", __LINE__);
if (signum(t47_x) != 1)		print("error %d\n", __LINE__);
if (signum(t47_z) != 1)		print("error %d\n", __LINE__);
if (signum(t47_q) != 1)		print("error %d\n", __LINE__);
if (signum(t47_r) != 1)		print("error %d\n", __LINE__);
if (signum(t47_dd) != I)	print("error %d\n", __LINE__);
if (signum(t47_qq) != I)	print("error %d\n", __LINE__);
if (signum(t47_cc) != I)	print("error %d\n", __LINE__);
if (signum(t47_inf) != 1)	print("error %d\n", __LINE__);
if (signum(t47_ninf) != -1)	print("error %d\n", __LINE__);
if (signum(t47_infL) != 1)	print("error %d\n", __LINE__);
if (signum(t47_ninfL) != -1)	print("error %d\n", __LINE__);
if (rational(1) != 1)		print("error %d\n", __LINE__);
if (rational(1.0) != 1)		print("error %d\n", __LINE__);
if (rational(1/2) != 1/2)	print("error %d\n", __LINE__);
if (rational(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (rational(0x800000000000000000000000000000000/5) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (rational(-1.0L) != -1)	print("error %d\n", __LINE__);
if (rational(t47_sc) != -1)	print("error %d\n", __LINE__);
if (rational(t47_uc) != 1)	print("error %d\n", __LINE__);
if (rational(t47_ss) != -2)	print("error %d\n", __LINE__);
if (rational(t47_us) != 2)	print("error %d\n", __LINE__);
if (rational(t47_si) != -4)	print("error %d\n", __LINE__);
if (rational(t47_ui) != 4)	print("error %d\n", __LINE__);
if (rational(t47_sl) != -8)	print("error %d\n", __LINE__);
if (rational(t47_ul) != 8)	print("error %d\n", __LINE__);
if (rational(t47_sf) != 1/4)	print("error %d\n", __LINE__);
if (rational(t47_df) != 1/8)	print("error %d\n", __LINE__);
if (rational(t47_w) != 1)	print("error %d\n", __LINE__);
if (rational(t47_f) != 1)	print("error %d\n", __LINE__);
if (rational(t47_x) != 1/2)	print("error %d\n", __LINE__);
if (rational(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (rational(t47_q) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (rational(t47_r) != 1)	print("error %d\n", __LINE__);
if (arg(1) != 0)		print("error %d\n", __LINE__);
if (arg(1.0) != 0)		print("error %d\n", __LINE__);
if (arg(1/2) != 0)		print("error %d\n", __LINE__);
if (arg(0x800000000000000000000000000000000) != 0)
    print("error %d\n", __LINE__);
if (arg(0x800000000000000000000000000000000/5) != 0)
    print("error %d\n", __LINE__);
if (arg(1.0L) != 0)		print("error %d\n", __LINE__);
if (arg(1.0*I) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(I) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(1L*I) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(inf) != 0)		print("error %d\n", __LINE__);
if (arg(-inf) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(inf*1L) != 0)		print("error %d\n", __LINE__);
if (arg(-inf*1L) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_sc) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_uc) != 0)		print("error %d\n", __LINE__);
if (arg(t47_ss) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_us) != 0)		print("error %d\n", __LINE__);
if (arg(t47_si) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_ui) != 0)		print("error %d\n", __LINE__);
if (arg(t47_sl) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_ul) != 0)		print("error %d\n", __LINE__);
if (arg(t47_sf) != 0)		print("error %d\n", __LINE__);
if (arg(t47_df) != 0)		print("error %d\n", __LINE__);
if (arg(t47_sf_inf) != 0)	print("error %d\n", __LINE__);
if (arg(t47_df_inf) != 0)	print("error %d\n", __LINE__);
if (arg(t47_sf_ninf) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_df_ninf) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_w) != 0)		print("error %d\n", __LINE__);
if (arg(t47_f) != 0)		print("error %d\n", __LINE__);
if (arg(t47_x) != 0)		print("error %d\n", __LINE__);
if (arg(t47_z) != 0)		print("error %d\n", __LINE__);
if (arg(t47_q) != 0)		print("error %d\n", __LINE__);
if (arg(t47_r) != 0)		print("error %d\n", __LINE__);
if (arg(t47_dd) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(t47_qq) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(t47_cc) != 1.5707963267948966)
    print("error %d\n", __LINE__);
if (arg(t47_inf) != 0)		print("error %d\n", __LINE__);
if (arg(t47_ninf) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (arg(t47_infL) != 0)	print("error %d\n", __LINE__);
if (arg(t47_ninfL) != 3.1415926535897932385)
    print("error %d\n", __LINE__);
if (conj(1) != 1)		print("error %d\n", __LINE__);
if (conj(1.0) != 1.0)		print("error %d\n", __LINE__);
if (conj(1/2) != 1/2)		print("error %d\n", __LINE__);
if (conj(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (conj(0x800000000000000000000000000000000/5) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (conj(1.0L) != 1L)		print("error %d\n", __LINE__);
if (conj(1.0*I) != -I)		print("error %d\n", __LINE__);
if (conj(I) != -I)		print("error %d\n", __LINE__);
if (conj(1L*I) != -I)		print("error %d\n", __LINE__);
if (conj(inf) != inf)		print("error %d\n", __LINE__);
if (conj(-inf) != -inf)		print("error %d\n", __LINE__);
if (conj(inf*1L) != inf)	print("error %d\n", __LINE__);
if (conj(-inf*1L) != -inf)	print("error %d\n", __LINE__);
if (conj(t47_sc) != -1)		print("error %d\n", __LINE__);
if (conj(t47_uc) != 1)		print("error %d\n", __LINE__);
if (conj(t47_ss) != -2)		print("error %d\n", __LINE__);
if (conj(t47_us) != 2)		print("error %d\n", __LINE__);
if (conj(t47_si) != -4)		print("error %d\n", __LINE__);
if (conj(t47_ui) != 4)		print("error %d\n", __LINE__);
if (conj(t47_sl) != -8)		print("error %d\n", __LINE__);
if (conj(t47_ul) != 8)		print("error %d\n", __LINE__);
if (conj(t47_sf) != 1/4)	print("error %d\n", __LINE__);
if (conj(t47_df) != 1/8)	print("error %d\n", __LINE__);
if (conj(t47_sf_inf) != inf)	print("error %d\n", __LINE__);
if (conj(t47_df_inf) != inf)	print("error %d\n", __LINE__);
if (conj(t47_sf_ninf) != -inf)	print("error %d\n", __LINE__);
if (conj(t47_df_ninf) != -inf)	print("error %d\n", __LINE__);
if (conj(t47_w) != 1)		print("error %d\n", __LINE__);
if (conj(t47_f) != 1)		print("error %d\n", __LINE__);
if (conj(t47_x) != 1/2)		print("error %d\n", __LINE__);
if (conj(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (conj(t47_q) != 0x800000000000000000000000000000000/5)
    print("error %d\n", __LINE__);
if (conj(t47_r) != 1)		print("error %d\n", __LINE__);
if (conj(t47_dd) != -I)		print("error %d\n", __LINE__);
if (conj(t47_qq) != -I)		print("error %d\n", __LINE__);
if (conj(t47_cc) != -I)		print("error %d\n", __LINE__);
if (conj(t47_inf) != inf)	print("error %d\n", __LINE__);
if (conj(t47_ninf) != -inf)	print("error %d\n", __LINE__);
if (conj(t47_infL) != inf)	print("error %d\n", __LINE__);
if (conj(t47_ninfL) != -inf)	print("error %d\n", __LINE__);
if (floor(1) != 1)		print("error %d\n", __LINE__);
if (floor(1.0) != 1)		print("error %d\n", __LINE__);
if (floor(1/2) != 0)		print("error %d\n", __LINE__);
if (floor(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (floor(0x800000000000000000000000000000000/5) != 0x199999999999999999999999999999999)
    print("error %d\n", __LINE__);
if (floor(1.0L) != 1)		print("error %d\n", __LINE__);
if (floor(t47_sc) != -1)	print("error %d\n", __LINE__);
if (floor(t47_uc) != 1)		print("error %d\n", __LINE__);
if (floor(t47_ss) != -2)	print("error %d\n", __LINE__);
if (floor(t47_us) != 2)		print("error %d\n", __LINE__);
if (floor(t47_si) != -4)	print("error %d\n", __LINE__);
if (floor(t47_ui) != 4)		print("error %d\n", __LINE__);
if (floor(t47_sl) != -8)	print("error %d\n", __LINE__);
if (floor(t47_ul) != 8)		print("error %d\n", __LINE__);
if (floor(t47_sf) != 0)		print("error %d\n", __LINE__);
if (floor(t47_df) != 0)		print("error %d\n", __LINE__);
if (floor(t47_w) != 1)		print("error %d\n", __LINE__);
if (floor(t47_f) != 1)		print("error %d\n", __LINE__);
if (floor(t47_x) != 0)		print("error %d\n", __LINE__);
if (floor(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (floor(t47_q) != 0x199999999999999999999999999999999)
    print("error %d\n", __LINE__);
if (floor(t47_r) != 1)		print("error %d\n", __LINE__);
if (trunc(1) != 1)		print("error %d\n", __LINE__);
if (trunc(1.0) != 1)		print("error %d\n", __LINE__);
if (trunc(1/2) != 0)		print("error %d\n", __LINE__);
if (trunc(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (trunc(0x800000000000000000000000000000000/5) != 0x199999999999999999999999999999999)
    print("error %d\n", __LINE__);
if (trunc(1.0L) != 1)		print("error %d\n", __LINE__);
if (trunc(t47_sc) != -1)	print("error %d\n", __LINE__);
if (trunc(t47_uc) != 1)		print("error %d\n", __LINE__);
if (trunc(t47_ss) != -2)	print("error %d\n", __LINE__);
if (trunc(t47_us) != 2)		print("error %d\n", __LINE__);
if (trunc(t47_si) != -4)	print("error %d\n", __LINE__);
if (trunc(t47_ui) != 4)		print("error %d\n", __LINE__);
if (trunc(t47_sl) != -8)	print("error %d\n", __LINE__);
if (trunc(t47_ul) != 8)		print("error %d\n", __LINE__);
if (trunc(t47_sf) != 0)		print("error %d\n", __LINE__);
if (trunc(t47_df) != 0)		print("error %d\n", __LINE__);
if (trunc(t47_w) != 1)		print("error %d\n", __LINE__);
if (trunc(t47_f) != 1)		print("error %d\n", __LINE__);
if (trunc(t47_x) != 0)		print("error %d\n", __LINE__);
if (trunc(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (trunc(t47_q) != 0x199999999999999999999999999999999)
    print("error %d\n", __LINE__);
if (trunc(t47_r) != 1)		print("error %d\n", __LINE__);
if (round(1) != 1)		print("error %d\n", __LINE__);
if (round(1.0) != 1)		print("error %d\n", __LINE__);
if (round(1/2) != 1)		print("error %d\n", __LINE__);
if (round(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (round(0x800000000000000000000000000000000/5) != 0x19999999999999999999999999999999a)
    print("error %d\n", __LINE__);
if (round(1.0L) != 1)		print("error %d\n", __LINE__);
if (round(t47_sc) != -1)	print("error %d\n", __LINE__);
if (round(t47_uc) != 1)		print("error %d\n", __LINE__);
if (round(t47_ss) != -2)	print("error %d\n", __LINE__);
if (round(t47_us) != 2)		print("error %d\n", __LINE__);
if (round(t47_si) != -4)	print("error %d\n", __LINE__);
if (round(t47_ui) != 4)		print("error %d\n", __LINE__);
if (round(t47_sl) != -8)	print("error %d\n", __LINE__);
if (round(t47_ul) != 8)		print("error %d\n", __LINE__);
if (round(t47_sf) != 0)		print("error %d\n", __LINE__);
if (round(t47_df) != 0)		print("error %d\n", __LINE__);
if (round(t47_w) != 1)		print("error %d\n", __LINE__);
if (round(t47_f) != 1)		print("error %d\n", __LINE__);
if (round(t47_x) != 1)		print("error %d\n", __LINE__);
if (round(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (round(t47_q) != 0x19999999999999999999999999999999a)
    print("error %d\n", __LINE__);
if (round(t47_r) != 1)		print("error %d\n", __LINE__);
if (ceil(1) != 1)		print("error %d\n", __LINE__);
if (ceil(1.0) != 1)		print("error %d\n", __LINE__);
if (ceil(1/2) != 1)		print("error %d\n", __LINE__);
if (ceil(0x800000000000000000000000000000000) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (ceil(0x800000000000000000000000000000000/5) != 0x19999999999999999999999999999999a)
    print("error %d\n", __LINE__);
if (ceil(1.0L) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_sc) != -1)	print("error %d\n", __LINE__);
if (ceil(t47_uc) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_ss) != -2)	print("error %d\n", __LINE__);
if (ceil(t47_us) != 2)		print("error %d\n", __LINE__);
if (ceil(t47_si) != -4)	print("error %d\n", __LINE__);
if (ceil(t47_ui) != 4)		print("error %d\n", __LINE__);
if (ceil(t47_sl) != -8)	print("error %d\n", __LINE__);
if (ceil(t47_ul) != 8)		print("error %d\n", __LINE__);
if (ceil(t47_sf) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_df) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_w) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_f) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_x) != 1)		print("error %d\n", __LINE__);
if (ceil(t47_z) != 0x800000000000000000000000000000000)
    print("error %d\n", __LINE__);
if (ceil(t47_q) != 0x19999999999999999999999999999999a)
    print("error %d\n", __LINE__);
if (ceil(t47_r) != 1)		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1), 1))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1.0), 1))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1/2), 0.70710678118654757))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(0x800000000000000000000000000000000), 52175271301331132000.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(0x800000000000000000000000000000000/5), 23333490674854064000.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1.0L), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1.0*I), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(I), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(1L*I), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(-inf), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(inf*1L), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(-inf*1L), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_sc), I))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_uc), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_ss), 1.4142135623730951*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_us), 1.4142135623730951))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_si), 2*I))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_ui), 2))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_sl), 2.8284271247461903*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_ul), 2.8284271247461903))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_sf), 0.5))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_df), 0.35355339059327379))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_sf_ninf), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_df_ninf), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_w), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_f), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_x), 0.70710678118654757))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_z), 52175271301331132000.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_q), 23333490674854064000.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_r), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_dd), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_qq), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_cc), (0.70710678118654757+0.70710678118654757*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_ninf), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sqrt(t47_ninfL), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1.0), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1/2), 0.79370052598409979))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(0x800000000000000000000000000000000), 13962927316663.119))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1.0L), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1.0*I), (0.86602540378443871+0.49999999999999994*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(I), (0.86602540378443871+0.49999999999999994*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(1L*I), (0.86602540378443871+0.5*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(-inf), -inf))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(inf*1L), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(-inf*1L), -inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_sc), -1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_uc), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_ui), 1.5874010519681996))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_sl), -2))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_ul), 2))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_sf), 0.6299605249474366))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_sf_ninf), -inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_df_ninf), -inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_w), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_f), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_x), 0.79370052598409979))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_z), 13962927316663.119))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_r), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_dd), (0.86602540378443871+0.49999999999999994*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_qq), (0.86602540378443871+0.49999999999999994*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_cc), (0.86602540378443871+0.5*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_ninf), -inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(cbrt(t47_ninfL), -inf))	print("error %d\n", __LINE__);
if (!t47_cmp(sin(1), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(1.0), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(1/2), 0.47942553860420301))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(0x800000000000000000000000000000000), -0.97445080272291196))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(0x800000000000000000000000000000000/5), -0.16295865569978896))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(1.0L), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(1.0*I), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(I), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(1L*I), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_sc), -0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_uc), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_ss), -0.9092974268256817))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_us), 0.90929742682568171))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_si), 0.7568024953079282))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_ui), -0.7568024953079282))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_sl), -0.98935824662338179))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_ul), 0.98935824662338179))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_sf), 0.24740395925452294))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_df), 0.12467473338522769))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_w), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_f), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_x), 0.47942553860420301))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_q), -0.16295865569978896))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_r), 0.8414709848078965))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_dd), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_qq), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sin(t47_cc), 1.1752011936438014*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1.0), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1/2), 0.87758256189037276))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(0x800000000000000000000000000000000), -0.22460105314239401))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(0x800000000000000000000000000000000/5), 0.98663289856588388))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1.0L), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1.0*I), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(I), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(1L*I), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_sc), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_uc), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_ss), -0.41614683654714241))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_us), -0.41614683654714241))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_si), -0.65364362086361194))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_ui), -0.6536436208636119))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_sl), -0.14550003380861354))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_ul), -0.14550003380861354))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_sf), 0.96891242171064473))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_df), 0.99219766722932901))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_w), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_f), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_x), 0.87758256189037276))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_q), 0.98663289856588388))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_r), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_dd), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_qq), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cos(t47_cc), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(1), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(1.0), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(1/2), 0.54630248984379048))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(0x800000000000000000000000000000000), 4.338585189558855))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(0x800000000000000000000000000000000/5), -0.16516645242283817))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(1.0L), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(1L*I), 0.76159415595576485*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_sc), -1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_uc), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_ss), 2.1850398632615189))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_us), -2.1850398632615189))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_si), -1.1578212823495775))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_ui), 1.1578212823495775))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_sl), 6.799711455220379))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_ul), -6.799711455220379))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_sf), 0.25534192122103627))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_df), 0.12565513657513097))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_w), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_f), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_x), 0.54630248984379048))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_q), -0.16516645242283817))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_r), 1.5574077246549023))
    print("error %d\n", __LINE__);
if (!t47_cmp(tan(t47_cc), 0.76159415595576485*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(1), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(1.0), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(1/2), 0.52359877559829893))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(1.0L), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(1L*I), 0.88137358701954305*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_sc), -1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_uc), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_sf), 0.25268025514207865))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_df), 0.1253278311680654))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_w), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_f), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_x), 0.52359877559829893))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_r), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(asin(t47_cc), 0.88137358701954305*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(1), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(1.0), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(1/2), 1.0471975511965979))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(1.0L), 0))	print("error %d\n", __LINE__);
if (!t47_cmp(acos(1L*I), (1.5707963267948966-0.88137358701954305*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_sc), 3.1415926535897931))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_uc), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_sf), 1.318116071652818))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_df), 1.4454684956268313))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_w), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_f), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_x), 1.0471975511965979))
    print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_r), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acos(t47_cc), (1.5707963267948966-0.88137358701954305*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(1), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(1.0), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(1/2), 0.46364760900080609))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(0x800000000000000000000000000000000), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(0x800000000000000000000000000000000/5), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(1.0L), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(1.0*I), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(I), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_sc), -0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_uc), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_ss), -1.1071487177940904))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_us), 1.1071487177940904))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_si), -1.3258176636680326))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_ui), 1.3258176636680326))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_sl), -1.4464413322481351))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_ul), 1.4464413322481351))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_sf), 0.24497866312686414))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_df), 0.12435499454676144))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_w), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_f), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_x), 0.46364760900080609))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_z), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_q), 1.5707963267948966))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_r), 0.78539816339744828))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_dd), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atan(t47_qq), complex(0, inf)))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1.0), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1/2), 0.52109530549374738))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(0x800000000000000000000000000000000), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(0x800000000000000000000000000000000/5), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1.0L), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1.0*I), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(I), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(1L*I), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_sc), -1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_uc), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_sl), -1490.4788257895502))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_ul), 1490.4788257895502))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_sf), 0.25261231680816831))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_df), 0.12532577524111546))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_w), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_f), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_x), 0.52109530549374738))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_z), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_q), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_r), 1.1752011936438014))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_dd), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_qq), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(sinh(t47_cc), 0.8414709848078965*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1.0), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1/2), 1.1276259652063807))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(0x800000000000000000000000000000000), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(0x800000000000000000000000000000000/5), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1.0L), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1.0*I), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(I), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(1L*I), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_sc), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_uc), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_ss), 3.7621956910836314))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_us), 3.7621956910836314))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_si), 27.308232836016487))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_ui), 27.308232836016487))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_sl), 1490.4791612521781))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_ul), 1490.4791612521781))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_sf), 1.0314130998795732))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_df), 1.0078226778257109))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_w), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_f), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_x), 1.1276259652063807))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_z), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_q), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_r), 1.5430806348152437))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_dd), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_qq), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(cosh(t47_cc), 0.54030230586813977))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1.0), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1/2), 0.46211715726000974))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(0x800000000000000000000000000000000), 1.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(0x800000000000000000000000000000000/5), 1.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1.0L), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1.0*I), 1.5574077246549021*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(I), 1.5574077246549021*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(1L*I), 1.5574077246549023*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_sc), -0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_uc), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_ss), -0.9640275800758169))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_us), 0.9640275800758169))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_si), -0.99932929973906703))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_ui), 0.99932929973906703))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_sl), -0.99999977492967584))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_ul), 0.99999977492967584))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_sf), 0.24491866240370913))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_w), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_f), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_x), 0.46211715726000974))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_z), 1.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_q), 1.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_r), 0.76159415595576485))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_dd), 1.5574077246549021*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_qq), 1.5574077246549021*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(tanh(t47_cc), 1.5574077246549023*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1.0), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1/2), 0.48121182505960347))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(0x800000000000000000000000000000000), 91.495427833912785))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(0x800000000000000000000000000000000/5), 89.885989921478682))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1.0L), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1.0*I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(1L*I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_sc), -0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_uc), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_ss), -1.4436354751788103))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_us), 1.4436354751788103))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_si), -2.0947125472611012))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_ui), 2.0947125472611012))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_sl), -2.7764722807237177))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_ul), 2.7764722807237177))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_sf), 0.24746646154726346))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_w), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_f), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_x), 0.48121182505960347))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_z), 91.495427833912785))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_q), 89.885989921478682))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_r), 0.88137358701954305))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_dd), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_qq), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(asinh(t47_cc), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(1), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(1.0), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(0x800000000000000000000000000000000), 91.495427833912785))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(0x800000000000000000000000000000000/5), 89.885989921478682))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(1.0L), 0))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(1.0*I), (0.88137358701954294+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(I), (0.88137358701954294+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(1L*I), (0.88137358701954305+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_sc), 3.1415926535897931*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_uc), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_ss), (1.3169578969248166+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_sl), (2.7686593833135738+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_ul), 2.7686593833135738))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_w), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_f), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_z), 91.495427833912785))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_q), 89.885989921478682))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_r), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_dd), (0.88137358701954294+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_qq), (0.88137358701954294+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(acosh(t47_cc), (0.88137358701954305+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(1), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(atanh(1.0), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(atanh(1L*I), 0.78539816339744828*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_sc), -inf))	print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_uc), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_ss), (-0.54930614433405489+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_us), (0.54930614433405489+1.5707963267948966*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_sf), 0.25541281188299536))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_df), 0.12565721414045303))
    print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_w), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_f), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(atanh(t47_cc), 0.78539816339744828*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(proj(1), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(1.0), 1.0))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(1/2), 1/2))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(0x800000000000000000000000000000000), 0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!t47_cmp(proj(0x800000000000000000000000000000000/5), 0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!t47_cmp(proj(1.0L), 1L))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(1.0*I), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(I), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(1L*I), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(-inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(inf*1L), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(-inf*1L), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_sc), -1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_uc), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_ss), -2))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_us), 2))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_si), -4))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_ui), 4))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_sl), -8))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_ul), 8))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_sf), 1/4))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_df), 1/8))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_sf_ninf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_df_ninf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_w), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_f), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_x), 1/2))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_z), 0x800000000000000000000000000000000))
    print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_q), 0x800000000000000000000000000000000/5))
    print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_r), 1))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_dd), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_qq), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_cc), I))		print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_ninf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(proj(t47_ninfL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(1), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(1.0), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(1/2), 1.6487212707001282))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(0x800000000000000000000000000000000), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(0x800000000000000000000000000000000/5), inf))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(1.0L), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(1.0*I), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(I), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(1L*I), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(-inf), 0.0))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(inf*1L), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(-inf*1L), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_sc), 0.36787944117144233))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_uc), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_ss), 0.1353352832366127))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_us), 7.3890560989306504))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_si), 0.018315638888734179))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_ui), 54.598150033144236))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_sl), 0.00033546262790251185))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_ul), 2980.9579870417283))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_sf), 1.2840254166877414))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_df), 1.1331484530668263))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_sf_ninf), 0))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_df_ninf), 0))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_w), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_f), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_x), 1.6487212707001282))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_z), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_q), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_r), 2.7182818284590451))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_dd), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_qq), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_cc), (0.54030230586813977+0.8414709848078965*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_ninf), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(exp(t47_ninfL), 0))	print("error %d\n", __LINE__);
if (!t47_cmp(log(1), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(1.0), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(1/2), -0.69314718055994529))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(0x800000000000000000000000000000000), 90.802280653352838))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(0x800000000000000000000000000000000/5), 89.192842740918735))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(1.0L), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(1.0*I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(1L*I), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log(-inf), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(inf*1L), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log(-inf*1L), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_sc), 3.1415926535897931*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_uc), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_ss), (0.69314718055994529+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_us), 0.69314718055994529))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_si), (1.3862943611198906+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_ui), 1.3862943611198906))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_sl), (2.0794415416798357+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_ul), 2.0794415416798357))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_sf), -1.3862943611198906))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_df), -2.0794415416798357))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_sf_ninf), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_df_ninf), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_w), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_f), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_x), -0.69314718055994529))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_z), 90.802280653352838))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_q), 89.192842740918735))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_r), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_dd), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_qq), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_cc), 1.5707963267948966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_ninf), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log(t47_ninfL), (inf+3.1415926535897931*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(1), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(1.0), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(1/2), -1))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(0x800000000000000000000000000000000), 131))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(0x800000000000000000000000000000000/5), 128.67807190511263))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(1.0L), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(1.0*I), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(I), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(1L*I), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(-inf), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(inf*1L), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(-inf*1L), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_sc), 4.5323601418271933*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_uc), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_ss), (1.0+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_us), 1.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_si), (2.0+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_ui), 2.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_sl), (3.0+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_ul), 3.0))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_sf), -2))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_df), -3))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_sf_ninf), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_df_ninf), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_w), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_f), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_x), -1))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_z), 131))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_q), 128.67807190511263))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_r), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_dd), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_qq), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_cc), 2.2661800709135966*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_ninf), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log2(t47_ninfL), (inf+4.5323601418271933*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(1), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(1.0), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(1/2), -0.3010299956639812))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(0x800000000000000000000000000000000), 39.434929431981537))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(0x800000000000000000000000000000000/5), 38.735959427645518))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(1.0L), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(1.0*I), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(I), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(1L*I), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(inf), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(-inf), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(inf*1L), inf))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(-inf*1L), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_sc), 1.3643763538418412*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_uc), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_ss), (0.3010299956639812+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_us), 0.3010299956639812))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_si), (0.6020599913279624+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_ui), 0.6020599913279624))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_sl), (0.90308998699194354+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_ul), 0.90308998699194354))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_sf), -0.6020599913279624))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_df), -0.90308998699194354))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_sf_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_df_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_sf_ninf), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_df_ninf), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_w), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_f), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_x), -0.3010299956639812))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_z), 39.434929431981537))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_q), 38.735959427645518))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_r), 0))		print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_dd), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_qq), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_cc), 0.6821881769209206*I))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_inf), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_ninf), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_infL), inf))	print("error %d\n", __LINE__);
if (!t47_cmp(log10(t47_ninfL), (inf+1.3643763538418412*I)))
    print("error %d\n", __LINE__);
#define t47_bin(fn,li,lr)						\
if (!t47_cmp(fn(li, 1), fn(lr, t47_uc)))	print("error 1 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -2), fn(lr, t47_ss)))	print("error 2 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 2), fn(lr, t47_us)))	print("error 3 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -4), fn(lr, t47_si)))	print("error 4 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 4), fn(lr, t47_ui)))	print("error 5 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -8), fn(lr, t47_sl)))	print("error 6 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 8), fn(lr, t47_ul)))	print("error 7 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1/4.0), fn(lr, t47_sf)))	print("error 8 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1/8.0), fn(lr, t47_df)))	print("error 9 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, inf), fn(lr, t47_sf_inf)))	print("error 10 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, inf), fn(lr, t47_df_inf)))	print("error 11 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -inf), fn(lr, t47_sf_ninf)))print("error 12 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -inf), fn(lr, t47_df_ninf)))print("error 13 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1), fn(lr, t47_w)))		print("error 14 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1.0), fn(lr, t47_f)))	print("error 15 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1/2), fn(lr, t47_x)))	print("error 16 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 0x800000000000000000000000000000000), fn(lr, t47_z)))\
    print("error 17 %d\n", __LINE__);					\
if (!t47_cmp(fn(li, 0x800000000000000000000000000000000/5), fn(lr, t47_q)))\
    print("error 18 %d\n", __LINE__);					\
if (!t47_cmp(fn(li, 1.0L), fn(lr, t47_r)))	print("error 19 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1.0*I), fn(lr, t47_dd)))	print("error 20 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, I), fn(lr, t47_qq)))	print("error 21 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, 1L*I), fn(lr, t47_cc)))	print("error 22 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, inf), fn(lr, t47_inf)))	print("error 23 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -inf), fn(lr, t47_ninf)))	print("error 24 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, inf*1L), fn(lr, t47_infL)))	print("error 25 %d\n", __LINE__);	\
if (!t47_cmp(fn(li, -inf*1L), fn(lr, t47_ninfL)))			\
    print("error 26 %d\n", __LINE__)
t47_bin(atan2, -1, t47_sc);
t47_bin(atan2, 1, t47_uc);
t47_bin(atan2, -2, t47_ss);
t47_bin(atan2, 2, t47_us);
t47_bin(atan2, -4, t47_si);
t47_bin(atan2, 4, t47_ui);
t47_bin(atan2, -8, t47_sl);
t47_bin(atan2, 8, t47_ul);
t47_bin(atan2, 1/4.0, t47_sf);
t47_bin(atan2, 1/8.0, t47_df);
t47_bin(atan2, inf, t47_sf_inf);
t47_bin(atan2, inf, t47_df_inf);
t47_bin(atan2, -inf, t47_sf_ninf);
t47_bin(atan2, -inf, t47_df_ninf);
t47_bin(atan2, 1, t47_w);
t47_bin(atan2, 1.0, t47_f);
t47_bin(atan2, 1/2, t47_x);
t47_bin(atan2, 0x800000000000000000000000000000000, t47_z);
t47_bin(atan2, 0x800000000000000000000000000000000/5, t47_q);
t47_bin(atan2, 1L, t47_r);
t47_bin(atan2, 1.0*I, t47_dd);
t47_bin(atan2, I, t47_qq);
t47_bin(atan2, 1L*I, t47_cc);
t47_bin(pow, -1, t47_sc);
t47_bin(pow, 1, t47_uc);
t47_bin(pow, -2, t47_ss);
t47_bin(pow, 2, t47_us);
t47_bin(pow, -4, t47_si);
t47_bin(pow, 4, t47_ui);
t47_bin(pow, -8, t47_sl);
t47_bin(pow, 8, t47_ul);
t47_bin(pow, 1/4.0, t47_sf);
t47_bin(pow, 1/8.0, t47_df);
t47_bin(pow, inf, t47_sf_inf);
t47_bin(pow, inf, t47_df_inf);
t47_bin(pow, -inf, t47_sf_ninf);
t47_bin(pow, -inf, t47_df_ninf);
t47_bin(pow, 1, t47_w);
t47_bin(pow, 1.0, t47_f);
t47_bin(pow, 1/2, t47_x);
t47_bin(pow, 0x800000000000000000000000000000000, t47_z);
t47_bin(pow, 0x800000000000000000000000000000000/5, t47_q);
t47_bin(pow, 1L, t47_r);
t47_bin(pow, 1.0*I, t47_dd);
t47_bin(pow, I, t47_qq);
t47_bin(pow, 1L*I, t47_cc);
t47_bin(hypot, -1, t47_sc);
t47_bin(hypot, 1, t47_uc);
t47_bin(hypot, -2, t47_ss);
t47_bin(hypot, 2, t47_us);
t47_bin(hypot, -4, t47_si);
t47_bin(hypot, 4, t47_ui);
t47_bin(hypot, -8, t47_sl);
t47_bin(hypot, 8, t47_ul);
t47_bin(hypot, 1/4.0, t47_sf);
t47_bin(hypot, 1/8.0, t47_df);
t47_bin(hypot, inf, t47_sf_inf);
t47_bin(hypot, inf, t47_df_inf);
t47_bin(hypot, -inf, t47_sf_ninf);
t47_bin(hypot, -inf, t47_df_ninf);
t47_bin(hypot, 1, t47_w);
t47_bin(hypot, 1.0, t47_f);
t47_bin(hypot, 1/2, t47_x);
t47_bin(hypot, 0x800000000000000000000000000000000, t47_z);
t47_bin(hypot, 0x800000000000000000000000000000000/5, t47_q);
t47_bin(hypot, 1L, t47_r);
t47_bin(hypot, 1.0*I, t47_dd);
t47_bin(hypot, I, t47_qq);
t47_bin(hypot, 1L*I, t47_cc);

int8_t t48_rfsc(int8_t n) {
    return n <= 1 ? 1 : n * t48_rfsc(n - 1);
}
int8_t t48_ifsc(int8_t n) {
    int8_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfsc(10), t48_ifsc(10));
uint8_t t48_rfuc(uint8_t n) {
    return n <= 1 ? 1 : n * t48_rfuc(n - 1);
}
uint8_t t48_ifuc(uint8_t n) {
    uint8_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfuc(10), t48_ifuc(10));
int16_t t48_rfss(int16_t n) {
    return n <= 1 ? 1 : n * t48_rfss(n - 1);
}
int16_t t48_ifss(int16_t n) {
    int16_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfss(10), t48_ifss(10));
uint16_t t48_rfus(uint16_t n) {
    return n <= 1 ? 1 : n * t48_rfus(n - 1);
}
uint16_t t48_ifus(uint16_t n) {
    uint16_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfus(10), t48_ifus(10));
int32_t t48_rfsi(int32_t n) {
    return n <= 1 ? 1 : n * t48_rfsi(n - 1);
}
int32_t t48_ifsi(int32_t n) {
    int32_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfsi(10), t48_ifsi(10));
uint32_t t48_rfui(uint32_t n) {
    return n <= 1 ? 1 : n * t48_rfui(n - 1);
}
uint32_t t48_ifui(uint32_t n) {
    uint32_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfui(10), t48_ifui(10));
int64_t t48_rfsl(int64_t n) {
    return n <= 1 ? 1 : n * t48_rfsl(n - 1);
}
int64_t t48_ifsl(int64_t n) {
    int64_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfsl(10), t48_ifsl(10));
uint64_t t48_rful(uint64_t n) {
    return n <= 1 ? 1 : n * t48_rful(n - 1);
}
uint64_t t48_iful(uint64_t n) {
    uint64_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rful(10), t48_iful(10));
float32_t t48_rfsf(float32_t n) {
    return n <= 1 ? 1 : n * t48_rfsf(n - 1);
}
float32_t t48_ifsf(float32_t n) {
    float32_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfsf(10), t48_ifsf(10));
float64_t t48_rfdf(float64_t n) {
    return n <= 1 ? 1 : n * t48_rfdf(n - 1);
}
float64_t t48_ifdf(float64_t n) {
    float64_t r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfdf(10), t48_ifdf(10));
auto t48_rfa(auto n) {
    return n <= 1 ? 1 : n * t48_rfa(n - 1);
}
auto t48_ifa(auto n) {
    auto r;
    for (r = 1; n > 1; --n)
	r *= n;
    return r;
}
print("%d\n%d\n", t48_rfa(10), t48_ifa(10));

void thread_routine(string_t name)
{
    auto i, j;
    print("%s: enter 0 to 1e6\n", name);
    for (i = 0; i < 5; ++i) {
	for (j = 0; j < 1000000; ++j)
	    ;
	print("%s: 0 to 1e6 %d times\n", name, i + 1);
    }
    print("%s: leave 0 to 1e6\n", name);
}
void thread_routine_with_lots_of_gc_calls(string_t name)
{
    auto i, j, k;
    string_t buffer;
    print("%s: enter 1Mb gc\n", name);
    for (i = 0; i < 5; ++i) {
	for (j = 0; j < 1024; ++j) {
	    buffer = new uint8_t[1024];
	    for (k = 0; k < 1024; ++k)
		buffer[k] = k & 0xff;
	}
	print("%s: 1Mb %d times\n", name, i + 1);
    }
    print("%s: leave 1Mb gc\n", name);
}
auto fact_recursive(auto n)
{
    return n <= 1 ? 1: n * fact_recursive(n - 1);
}
auto fact_sequential(auto n)
{
    auto r = n;
    while (--n > 1)
	r *= n;
    return r;
}
auto fib_recursive(auto n)
{
    return n < 2 ? n : fib_recursive(n - 1) + fib_recursive(n - 2);
}
auto fib_cached_rec(auto n, auto cache[])
{
    return cache[n] ? cache[n] :
	cache[n] = n < 2 ? n :
	    fib_cached_rec(n - 1, cache) + fib_cached_rec(n - 2, cache);
}
auto fib_cached(auto n)
{
    return fib_cached_rec(n, new auto[n + 1]);
}
auto fib_sequential(auto n) {
    auto a = 0, b = 1;
    if (n < 0)		// error
	return n;
    while (n--)
	a = b + (b = a);
    return a;
}
void run_fact_recursive(string_t name)
{
    print("%s: enter fact_recursive\n", name);
    auto i;
    for (i = 0; i < 300000; ++i) {
	switch (i & 3) {
	    case 0:
		if (fact_recursive(5) != 120)
		    print("%s: run_fact_recursive: error %d\n", name, i);
		break;
	    case 1:
		if (fact_recursive(10) != 3628800)
		    print("%s: run_fact_recursive: error %d\n", name, i);
		break;
	    default:
		if (fact_recursive(15) != 1307674368000)
		    print("%s: run_fact_recursive: error %d\n", name, i);
		break;
		    print("%s: run_fact_recursive: error %d\n", name, i);
	}
    }
    print("%s: leave fact_recursive\n", name);
}
void run_fact_sequential(string_t name)
{
    print("%s: enter fact_sequential\n", name);
    auto i;
    for (i = 0; i < 300000; ++i) {
	switch (i & 3) {
	    case 0:
		if (fact_sequential(5) != 120)
		    print("%s: run_fact_sequential: error %d\n", name, i);
		break;
	    case 1:
		if (fact_sequential(10) != 3628800)
		    print("%s: run_fact_sequential: error %d\n", name, i);
		break;
	    default:
		if (fact_sequential(15) != 1307674368000)
		    print("%s: run_fact_sequential: error %d\n", name, i);
		break;
	}
    }
    print("%s: leave fact_sequential\n", name);
}
void run_fib_recursive(string_t name)
{
    print("%s: enter fib_recursive\n", name);
    auto i;
    for (i = 0; i < 3; ++i) {
	switch (i & 3) {
	    case 0:
		if (fib_recursive(5) != 5)
		    print("%s: run_fib_recursive: error %d\n", name, i);
		break;
	    case 1:
		if (fib_recursive(10) != 55)
		    print("%s: run_fib_recursive: error %d\n", name, i);
		break;
	    default:
		if (fib_recursive(15) != 610)
		    print("%s: run_fib_recursive: error %d\n", name, i);
		break;
	}
    }
    print("%s: leave fib_recursive\n", name);
}
void run_fib_cached(string_t name)
{
    print("%s: enter fib_cached\n", name);
    auto i;
    for (i = 0; i < 30000; ++i) {
	switch (i & 3) {
	    case 0:
		if (fib_cached(5) != 5)
		    print("%s: run_fib_cached: error %d\n", name, i);
		break;
	    case 1:
		if (fib_cached(10) != 55)
		    print("%s: run_fib_cached: error %d\n", name, i);
		break;
	    default:
		if (fib_cached(15) != 610)
		    print("%s: run_fib_cached: error %d\n", name, i);
		break;
	}
    }
    print("%s: leave fib_cached\n", name);
}
void run_fib_sequential(string_t name)
{
    print("%s: enter fib_sequential\n", name);
    auto i;
    for (i = 0; i < 300000; ++i) {
	switch (i & 3) {
	    case 0:
		if (fib_sequential(5) != 5)
		    print("%s: run_fib_sequential: error %d\n", name, i);
		break;
	    case 1:
		if (fib_sequential(10) != 55)
		    print("%s: run_fib_sequential: error %d\n", name, i);
		break;
	    default:
		if (fib_sequential(15) != 610)
		    print("%s: run_fib_sequential: error %d\n", name, i);
		break;
	}
    }
    print("%s: leave fib_sequential\n", name);
}
thread(thread_routine(" 1"));
thread(thread_routine(" 2"));
thread(thread_routine(" 3"));
thread(thread_routine(" 4"));
thread(thread_routine(" 5"));
thread(thread_routine_with_lots_of_gc_calls(" 6"));
thread(thread_routine_with_lots_of_gc_calls(" 7"));
thread(thread_routine_with_lots_of_gc_calls(" 8"));
thread(thread_routine_with_lots_of_gc_calls(" 9"));
thread(thread_routine_with_lots_of_gc_calls("10"));
thread(run_fact_recursive("11"));
thread(run_fact_sequential("12"));
thread(run_fib_recursive("13"));
thread(run_fib_cached("14"));
thread(run_fib_sequential("15"));
thread(run_fact_recursive("16"));
thread(run_fact_sequential("17"));
thread(run_fib_recursive("18"));
thread(run_fib_cached("19"));
thread(run_fib_sequential("20"));

/* Test all combinations of thread arguments */
class t49a_t {
    string_t isa() {
	return "t49a_t";
    }
    void f() {
	thread g();
    }
    void g() {
	print("%s.g()\n", isa());
    }
};
class t49b_t : t49a_t {
    void h() {
	t49a_t.g();
    }
};
void t49f(int8_t sc, uint8_t uc,
	  int16_t ss, uint16_t us,
	  int32_t si, uint32_t ui,
	  int64_t sl, uint64_t ul,
	  float32_t sf, float64_t df,
	  auto a) {
    print("%d %d %d %d %d %d %d %d %d %d %d\n",
	  sc, uc, ss, us, si, ui, sl, ul, sf, df, a);
}
t49b_t t49b = {};
/* thread jit function */
thread(t49f(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10));
/* FIXME currently only class methods can make explicit (non virtual) calls
 * that means type check is trivial, but may be desirable to be able to
 * make explicit (non virtual) method calls only having an object pointer */
/* thread jit explicit method */
thread(t49b.h());
/* thread jit virtual method */
t49b.f();
/* thread native function */
thread(print("%d %d %d %d %d %d %d %d %d %d %d\n",
	     0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10));

auto t50_tid = thread(print("foobar\n"));
auto t50_ret = join(t50_tid);
print("%d\n", t50_ret);

string_t t51_a = {};
auto t51_v[] = {};
int32_t t51_c;
void t51_t(string_t format, auto value)
{
    printf(t51_a, format, value);
    if (scanf(t51_a, format, t51_v) != 1 || t51_v[0] != value)
	print("error %d\n", t51_c);
}
t51_c = __LINE__;	t51_t("foo%bbar", 0xa55a);
++t51_c;		t51_t("--%b++", -4e32);
++t51_c;		t51_t("%#b", 255);
++t51_c;		t51_t("\xff%b/\xff", -3);
++t51_c;		t51_t("\r\n$%o99", 0277);
++t51_c;		t51_t("+-%%%o&#", 1e-2);
++t51_c;		t51_t("?%#o?", -0x8000000000000000);
++t51_c;		t51_t("<%d>", 1);
++t51_c;		t51_t("/%d/", -7);
++t51_c;		t51_t(" * %F * ", 0.25);
++t51_c;		t51_t("  0x%x  ", 0x8000000000000000);
++t51_c;		t51_t("0000 %x 0000", 3.1415926535897932384626433832795029L);
++t51_c;		t51_t("%%%%%c%%%%", '%');
++t51_c;		t51_t("foo%#cbar", 'abcdef');
++t51_c;		t51_t("\x00%C\000", -1);
++t51_c;		t51_t("'%#c'", 'abcdefghijklm\'\\NOPQRSTUVWXYZ');
++t51_c;		t51_t("foo%23cbar", 'long constant character');
++t51_c;		t51_t("1234%s  x", "foobar");
++t51_c;		t51_t("abc%#s", "a string \"with\" spaces");
if (scanf("abcasdfgHJKL:", "abc%[a-z]", t51_v) != 1 || t51_v[0] != "asdfg")
    print("error %d\n", __LINE__);
if (scanf("]abc-[", "]%[^]-]-[", t51_v) != 1 || t51_v[0] != "abc")
    print("error %d\n", __LINE__);
t51_c = __LINE__;	t51_t("\xff%c\xff", 0xff);
if (scanf("a123b456d", "a%*db%dd", t51_v) != 1 || t51_v[0] != 456)
    print("error %d\n", __LINE__);
if (printf(t51_a, "%%%d**", 42) != 5)
    print("error %d\n", __LINE__);
if (printf(t51_a, "{ %5d }\n", -1) != 10 ||
    scanf(t51_a, "{ %5d }\n", t51_v) != 1 || t51_v[0] != -1)
    print("error %d\n", __LINE__);
auto t51_s;
/* FIXME these should be (well documented) builtins */
#define O_READ		1
#define O_WRITE		2
#define O_APPEND	4
#define O_NONBLOCK	8
#define O_BUFFERED	16
#define O_UNBUFFERED	32
#define SEEK_SET	0
#define SEEK_CUR	1
#define SEEK_END	2
if ((t51_s = open("test.txt", O_WRITE))) {
    if (printf(t51_s, "%b %o\n", 64, -128) != 13)
	print("error %d\n", __LINE__);
    if (printf(t51_s, "%d %x\n", -1, 1.5) != 7)
	print("error %d\n", __LINE__);
    close(t51_s);
}
else
    print("error %d\n", __LINE__);
if ((t51_s = open("test.txt", O_READ))) {
    if (scanf(t51_s, "%b %o\n", t51_v) != 2 ||
	t51_v[0] != 64 || t51_v[1] != -128)
	print("error %d\n", __LINE__);
    if (scanf(t51_s, "%d %x\n", t51_v) != 2 ||
	t51_v[0] != -1 || t51_v[1] != 1.5)
	print("error %d\n", __LINE__);
    close(t51_s);
}
else
    print("error %d\n", __LINE__);
if ((t51_s = open("test.txt", O_WRITE | O_APPEND))) {
    if (printf(t51_s, "%#b %#o\n", 255, -0x8000000000000001) != 36)
	print("error %d\n", __LINE__);
    if (printf(t51_s, "%#d %#x\n", 3.5L, 1e5) != 15)
	print("error %d\n", __LINE__);
    close(t51_s);
}
else
    print("error %d\n", __LINE__);
if ((t51_s = open("test.txt", O_READ))) {
    /* first 2 lines */
    if (scanf(t51_s, "%b %o\n", t51_v) != 2 ||
	t51_v[0] != 64 || t51_v[1] != -128)
	print("error %d\n", __LINE__);
    if (scanf(t51_s, "%d %x\n", t51_v) != 2 ||
	t51_v[0] != -1 || t51_v[1] != 1.5)
	print("error %d\n", __LINE__);
    /* appended data */
    if (scanf(t51_s, "%#b %#o\n", t51_v) != 2 ||
	t51_v[0] != 255 || t51_v[1] != -0x8000000000000001)
	print("error %d\n", __LINE__);
    if (scanf(t51_s, "%#d %#x\n", t51_v) != 2 ||
	t51_v[0] != 3.5L || t51_v[1] != 1e5)
	print("error %d\n", __LINE__);
    /* there is nothing to read, just ensure it "properly" fails */
    if (scanf(t51_s, "%s", t51_v) != 0)
	print("error %d\n", __LINE__);
    close(t51_s);
}
else
    print("error %d\n", __LINE__);
/* test.txt contents should be:
-%<-
1000000 -200
-1 1.8
0b11111111 -01000000000000000000001
3.5l 0x186a0.0
-%<-
 */
if ((t51_s = open("test.txt", O_READ|O_WRITE))) {
    /* seek to start of second line */
    if ( seek(t51_s, 13, SEEK_SET) != 13)
	print("error %d\n", __LINE__);
    /* invert signs of entries in second line and print it */
    if (printf(t51_s, "%d %x\n", 1, -1.5) != 7)
	print("error %d\n", __LINE__);
    if (seek(t51_s, -7, SEEK_CUR) != 13)
	print("error %d\n", __LINE__);
    if (seek(t51_s, -15, SEEK_END) != 56)
	print("error %d\n", __LINE__);
    /* not reading ending newline */
    if (scanf(t51_s, "%#d %#x", t51_v) != 2 ||
	t51_v[0] != 3.5L || t51_v[1] != 1e5)
	print("error %d\n", __LINE__);
    /* read the ending newline */
    if (scanf(t51_s, "%3c", t51_v) != 1 ||
	t51_v[0] != '\n')
	print("error %d\n", __LINE__);
    /* seek back to position of ending newline */
    if (seek(t51_s, -1, SEEK_END) != 70)
	print("error %d\n", __LINE__);
    /* close file */
    close(t51_s);
}
else
    print("error %d\n", __LINE__);
printf(t51_a, "%d", 12345);
if (scanf(t51_a, "%#s", t51_v) == 1)
    print("error %d\n", __LINE__);
if (scanf(t51_a, "%#c", t51_v) == 1)
    print("error %d\n", __LINE__);
if (scanf(t51_a, "%d", t51_v) != 1 || t51_v[0] != 12345)
    print("error %d\n", __LINE__);

hash_t t52_v = hash();
t52_v[0] = 0;
t52_v[1] = 1.0;
t52_v[2] = 0x8000000000000002;
t52_v[3] = 1/3;
t52_v[4] = 4.0L;
t52_v[5] = 5.0*I;
t52_v[6] = 1/6*I;
t52_v[7] = 7.0L*I;
t52_v[8] = "eight";
t52_v[0.0] = 0;
t52_v[1.0] = 1.0;
t52_v[2.0] = 0x8000000000000002;
t52_v[3.0] = 1/3;
t52_v[4.0] = 4.0L;
t52_v[5.0] = 5.0*I;
t52_v[6.0] = 1/6*I;
t52_v[7.0] = 7.0L*I;
t52_v[8.0] = "eight";
t52_v[0x8000000000000000] = 0;
t52_v[0x8000000000000001] = 1.0;
t52_v[0x8000000000000002] = 0x8000000000000002;
t52_v[0x8000000000000003] = 1/3;
t52_v[0x8000000000000004] = 4.0L;
t52_v[0x8000000000000005] = 5.0*I;
t52_v[0x8000000000000006] = 1/6*I;
t52_v[0x8000000000000007] = 7.0L*I;
t52_v[0x8000000000000008] = "eight";
t52_v[1/10] = 0;
t52_v[1/11] = 1.0;
t52_v[1/12] = 0x8000000000000002;
t52_v[1/13] = 1/3;
t52_v[1/14] = 4.0L;
t52_v[1/15] = 5.0*I;
t52_v[1/16] = 1/6*I;
t52_v[1/17] = 7.0L*I;
t52_v[1/18] = "eight";
t52_v[0.0L] = 0;
t52_v[1.0L] = 1.0;
t52_v[2.0L] = 0x8000000000000002;
t52_v[3.0L] = 1/3;
t52_v[4.0L] = 4.0L;
t52_v[5.0L] = 5.0*I;
t52_v[6.0L] = 1/6*I;
t52_v[7.0L] = 7.0L*I;
t52_v[8.0L] = "eight";
t52_v[10.0*I] = 0;
t52_v[11.0*I] = 1.0;
t52_v[12.0*I] = 0x8000000000000002;
t52_v[13.0*I] = 1/3;
t52_v[14.0*I] = 4.0L;
t52_v[15.0*I] = 5.0*I;
t52_v[16.0*I] = 1/6*I;
t52_v[17.0*I] = 7.0L*I;
t52_v[18.0*I] = "eight";
t52_v[1/10*I] = 0;
t52_v[1/11*I] = 1.0;
t52_v[1/12*I] = 0x8000000000000002;
t52_v[1/13*I] = 1/3;
t52_v[1/14*I] = 4.0L;
t52_v[1/15*I] = 5.0*I;
t52_v[1/16*I] = 1/6*I;
t52_v[1/17*I] = 7.0L*I;
t52_v[1/18*I] = "eight";
t52_v[10.0L*I] = 0;
t52_v[11.0L*I] = 1.0;
t52_v[12.0L*I] = 0x8000000000000002;
t52_v[13.0L*I] = 1/3;
t52_v[14.0L*I] = 4.0L;
t52_v[15.0L*I] = 5.0*I;
t52_v[16.0L*I] = 1/6*I;
t52_v[17.0L*I] = 7.0L*I;
t52_v[18.0L*I] = "eight";
t52_v["zero"] = 0;
t52_v["one"] = 1.0;
t52_v["two"] = 0x8000000000000002;
t52_v["three"] = 1/3;
t52_v["four"] = 4.0L;
t52_v["five"] = 5.0*I;
t52_v["six"] = 1/6*I;
t52_v["seven"] = 7.0L*I;
t52_v["eight"] = "eight";
/* simple comparisons */
if (t52_v[0] != t52_v[0] ||
    t52_v[0] != t52_v[0.0] ||
    t52_v[0] != t52_v[0x8000000000000000] ||
    t52_v[0] != t52_v[1/10] ||
    t52_v[0] != t52_v[10.0*I] ||
    t52_v[0] != t52_v[1/10*I] ||
    t52_v[0] != t52_v[10.0L*I] ||
    t52_v[0] != t52_v["zero"])
    print("error %d\n", __LINE__);
if (t52_v[1.0] != t52_v[1] ||
    t52_v[1.0] != t52_v[1.0] ||
    t52_v[1.0] != t52_v[0x8000000000000001] ||
    t52_v[1.0] != t52_v[1/11] ||
    t52_v[1.0] != t52_v[11.0*I] ||
    t52_v[1.0] != t52_v[1/11*I] ||
    t52_v[1.0] != t52_v[11.0L*I] ||
    t52_v[1.0] != t52_v["one"])
    print("error %d\n", __LINE__);
if (t52_v[0x8000000000000002] != t52_v[2] ||
    t52_v[0x8000000000000002] != t52_v[2.0] ||
    t52_v[0x8000000000000002] != t52_v[0x8000000000000002] ||
    t52_v[0x8000000000000002] != t52_v[1/12] ||
    t52_v[0x8000000000000002] != t52_v[12.0*I] ||
    t52_v[0x8000000000000002] != t52_v[1/12*I] ||
    t52_v[0x8000000000000002] != t52_v[12.0L*I] ||
    t52_v[0x8000000000000002] != t52_v["two"])
    print("error %d\n", __LINE__);
if (t52_v[1/13] != t52_v[3] ||
    t52_v[1/13] != t52_v[3.0] ||
    t52_v[1/13] != t52_v[0x8000000000000003] ||
    t52_v[1/13] != t52_v[1/13] ||
    t52_v[1/13] != t52_v[13.0*I] ||
    t52_v[1/13] != t52_v[1/13*I] ||
    t52_v[1/13] != t52_v[13.0L*I] ||
    t52_v[1/13] != t52_v["three"])
    print("error %d\n", __LINE__);
if (t52_v[4.0L] != t52_v[4] ||
    t52_v[4.0L] != t52_v[4.0] ||
    t52_v[4.0L] != t52_v[0x8000000000000004] ||
    t52_v[4.0L] != t52_v[1/14] ||
    t52_v[4.0L] != t52_v[14.0*I] ||
    t52_v[4.0L] != t52_v[1/14*I] ||
    t52_v[4.0L] != t52_v[14.0L*I] ||
    t52_v[4.0L] != t52_v["four"])
    print("error %d\n", __LINE__);
if (t52_v[15.0*I] != t52_v[5] ||
    t52_v[15.0*I] != t52_v[5.0] ||
    t52_v[15.0*I] != t52_v[0x8000000000000005] ||
    t52_v[15.0*I] != t52_v[1/15] ||
    t52_v[15.0*I] != t52_v[15.0*I] ||
    t52_v[15.0*I] != t52_v[1/15*I] ||
    t52_v[15.0*I] != t52_v[15.0L*I] ||
    t52_v[15.0*I] != t52_v["five"])
    print("error %d\n", __LINE__);
if (t52_v[1/16*I] != t52_v[6] ||
    t52_v[1/16*I] != t52_v[6.0] ||
    t52_v[1/16*I] != t52_v[0x8000000000000006] ||
    t52_v[1/16*I] != t52_v[1/16] ||
    t52_v[1/16*I] != t52_v[16.0*I] ||
    t52_v[1/16*I] != t52_v[1/16*I] ||
    t52_v[1/16*I] != t52_v[16.0L*I] ||
    t52_v[1/16*I] != t52_v["six"])
    print("error %d\n", __LINE__);
if (t52_v[17.0L*I] != t52_v[7] ||
    t52_v[17.0L*I] != t52_v[7.0] ||
    t52_v[17.0L*I] != t52_v[0x8000000000000007] ||
    t52_v[17.0L*I] != t52_v[1/17] ||
    t52_v[17.0L*I] != t52_v[17.0*I] ||
    t52_v[17.0L*I] != t52_v[1/17*I] ||
    t52_v[17.0L*I] != t52_v[17.0L*I] ||
    t52_v[17.0L*I] != t52_v["seven"])
    print("error %d\n", __LINE__);
if (t52_v["eight"] != t52_v[8] ||
    t52_v["eight"] != t52_v[8.0] ||
    t52_v["eight"] != t52_v[0x8000000000000008] ||
    t52_v["eight"] != t52_v[1/18] ||
    t52_v["eight"] != t52_v[18.0*I] ||
    t52_v["eight"] != t52_v[1/18*I] ||
    t52_v["eight"] != t52_v[18.0L*I] ||
    t52_v["eight"] != t52_v["eight"])
    print("error %d\n", __LINE__);
/* check that deleting entries work, and also do a noop "deleting" a
 * entry that doesn't exist */
t52_v[0] = t52_v[1.0] = t52_v[0x8000000000000002] =
t52_v[1/13] = t52_v[14.0L] = t52_v[15.0*I] = t52_v[1/16*I] =
t52_v[17.0L*I] = t52_v["eight"] = t52_v[t52_v] = null;
/* check that an exception is triggered when attempting to
 * store a null entry name */
auto t52_c = 0;
try {
    t52_v[null] = 0;
}
catch (auto t52_e) {
    t52_c = 1;
}
if (!t52_c)
    print("error %d\n", __LINE__);
t52_c = 0;
try {
    /* truly a noop... */
    t52_v[null] = null;
}
catch (auto t52_f) {
    t52_c = 1;
}
if (!t52_c)
    print("error %d\n", __LINE__);
/* check that the deleted entries were really deleted */
if (t52_v[0] || t52_v[1.0] || t52_v[0x8000000000000002] ||
    t52_v[1/13] || t52_v[14.0L] || t52_v[15.0*I] || t52_v[1/16*I] ||
    t52_v[17.0L*I] || t52_v["eight"] || t52_v[t52_v])
    print("error %d\n", __LINE__);

#define SEEK_SET	0
int8_t	t53_vsc[] = {
    0,   -1,   -2,   -3,   -4,   -5,   -6,   -7
};
uint8_t	t53_vuc[] = {
    0, 0xff, 0xfe, 0xfd, 0xfc, 0xfb, 0xfa, 0xf9
};
int16_t t53_vss[] = {
    0,     -1,     -2,     -3,     -4,     -5,     -6,     -7
};
uint16_t t53_vus[] = {
    0, 0xffff, 0xfffe, 0xfffd, 0xfffc, 0xfffb, 0xfffa, 0xfff9
};
int32_t t53_vsi[] = {
     0,                 -1,         -2,         -3,
    -4,                 -5,         -6,         -7
};
uint32_t t53_vui[] = {
     0,         0xffffffff, 0xfffffffe, 0xfffffffd,
    0xfffffffc, 0xfffffffb, 0xfffffffa, 0xfffffff9
};
float32_t t53_vsf[] = {
    0,   -1,    2,   -3,    4,   -5,    6,   -7
};
int64_t t53_vsl[] = {
     0,                                 -1,
    -2,                                 -3,
    -4,                                 -5,
    -6,                                 -7
};
uint64_t t53_vul[] = {
    0,                   0xfffffffffffffff,
    0xfffffffffffffffe, 0xfffffffffffffffd,
    0xfffffffffffffffc, 0xfffffffffffffffb,
    0xfffffffffffffffa, 0xfffffffffffffff9
};
float64_t t53_vdf[] = {
    0,   1,    -2,   3,    -4,   5,    -6,   7
};
int32_t t53_i;
string_t t53_stream = new uint8_t[64];
#define t53_test(T, V, L)						\
seek(t53_stream, SEEK_SET, 0);						\
write(t53_stream, V, 8);						\
T V##1[] = new T[8];							\
seek(t53_stream, SEEK_SET, 0);						\
read(t53_stream, V##1, 8);						\
for (t53_i = 0; t53_i < 8; ++t53_i)					\
    if (V##1[t53_i] != V[t53_i])					\
	print("error %d\n", L)
t53_test(int8_t, t53_vsc, __LINE__);
t53_test(uint8_t, t53_vuc, __LINE__);
t53_test(int16_t, t53_vss, __LINE__);
t53_test(uint16_t, t53_vus, __LINE__);
t53_test(int32_t, t53_vsi, __LINE__);
t53_test(uint32_t, t53_vui, __LINE__);
t53_test(int64_t, t53_vsl, __LINE__);
t53_test(uint64_t, t53_vul, __LINE__);
t53_test(float32_t, t53_vsf, __LINE__);
t53_test(float64_t, t53_vdf, __LINE__);

int32_t t54_i;
class t54_c0_t {
    int8_t	c;
};
t54_c0_t t54_v[3] = {};
for (t54_i = 0; t54_i < 3; ++t54_i)
    t54_v[t54_i] = { t54_i + 1 };
for (t54_i = 0; t54_i < 3; ++t54_i)
    print("v[%d].c = %d\n", t54_i, t54_v[t54_i].c);
class t54_c1_t {
    int8_t v[3];
};
t54_c1_t t54_c = { {} };
for (t54_i = 0; t54_i < 3; ++t54_i)
    t54_c.v[t54_i] = t54_i + 1;
for (t54_i = 0; t54_i < 3; ++t54_i)
    print("c.v[%d] = %d\n", t54_i, t54_c.v[t54_i]);

int32_t t55max(int32_t a, int32_t b) {
    return a >= b ? a : b;
}
namespace t55 {
    class c_t {
	int32_t		b;
	c_t() {
	    b = 1;
	}
    };
    int32_t max(int32_t a, int32_t b) {
	return a >= b ? a : b;
    }
    int32_t a = max(1, 2);
    print("max(1, 2) = %d\n", a);
    int32_t b = max(max(1, 4), max(3, 2));
    print("max(max(1, 4), max(3, 2)) = %d\n", b);
    namespace inner {
	class c_t {
	    float32_t	b;
	    c_t() {
		b = 2;
	    }
	};
	int32_t max(int32_t a, int32_t b) {
	    return a >= b ? a : b;
	}
	/* check that can access to shadowed root namespace symbol */
	int32_t t55max(int32_t a, int32_t b) {
	    print("error %d\n", __LINE__);
	}
	int32_t a = max(1, 2);
	print("max(1, 2) = %d\n", a);
	int32_t b = max(.t55max(1, 4), t55.max(3, 2));
	print("max(.t55max(1, 4), t55.max(3, 2)) = %d\n", b);
    }
    int32_t min(int32_t a, int32_t b) {
	return a <= b ? a : b;
    }
    a = min(1, 2);
    print("min(1, 2) = %d\n", a);
    b = min(min(1, 4), min(3, 2));
    print("min(min(1, 4), min(3, 2)) = %d\n", b);
    namespace inner {
	int32_t min(int32_t a, int32_t b) {
	    return a <= b ? a : b;
	}
	a = min(1, 2);
	print("min(1, 2) = %d\n", a);
	b = min(min(1, 4), min(3, 2));
	print("min(min(1, 4), min(3, 2)) = %d\n", b);
    }
    c_t ca = {};
    inner.c_t cb = {};
    print("%d %d\n", ca.b, cb.b);
    print("inner.min(inner.max(1, 2), 0) = %d\n",
	  inner.min(inner.max(1, 2), 0));
}

namespace t56 {
    enum {
	foo,
	bar = 42,
	baz
    };
    print("%d %d %d\n", foo, bar, baz);
    namespace inner {
	/* check that top namespace constants are properly parsed */
	print("%d %d %d\n", foo, bar, baz);
    }
}
int32_t t56i = t56.baz;
print("%d %d %d\n", t56.foo, t56.bar, t56.baz);
switch (t56i) {
    case t56.baz:
	break;
    default:
	print("error %d\n", __LINE__);
}
if (t56.baz != t56i)
    print("error %d\n", __LINE__);

namespace t57 {
    class vector_t {
	float64_t x, y, z;
	vector_t add(vector_t v) {
	    x += v.x;
	    y += v.y;
	    z += v.z;
	    return this;
	}
	vector_t sub(vector_t v) {
	    x -= v.x;
	    y -= v.y;
	    z -= v.z;
	    return this;
	}
	vector_t scale(float64_t s) {
	    x *= s;
	    y *= s;
	    z *= s;
	    return this;
	}
	vector_t invert() {
	    x = -x;
	    y = -y;
	    z = -z;
	    return this;
	}
	void show() {
	    print("%f %f %f\n", x, y, z);
	}
    };
    vector_t a = { 1, 2, 3 }, b = { 4, 5, 6 };
    /* 1+4, 2+5, 3+6 = 5.0 7.0 9.0 */
    a.add(b).show();
    /* -((5-4)*2), -((7-5)*2), -((9-6)*2) = -2.0 -4.0 -6.0 */
    a.sub(b).invert().scale(2).show();
    print("%f\n", b.invert().x);
}

/* Check a regression have been corrected */
namespace t58 {
    class a_t {
	uint8_t     u[];
    };
    a_t a = {};
    a.u = new uint8_t[32];
    class b_t {
	int32_t i, b;
    };
    b_t b = { 32, 4 };
    int32_t c;
    for (c = 0; c < b.i; c += b.b) {
	uint8_t c0 = a.u[c];
	uint8_t c2 = a.u[c + 2];
	a.u[c] ^= a.u[c + 2] ^= c0 ^= c2;
    }
}

/* Check another previous regression that was causing a crash due to
 * not properly handling a function call (or very complex expression)
 * as argument to new */
namespace t59 {
    int32_t call(int32_t a, int32_t b) {
	return a + b;
    }
    int32_t i = 1, j = 2, k = 3, l = 4, m = 5;
    string_t a = new uint8_t[call(1, 2)];
    if (sizeof(a) != 3)
	print("error %d\n", __LINE__);
    a = new uint8_t[i + j - k + m - l];
    if (sizeof(a) != 1)
	print("error %d\n", __LINE__);
};

namespace t60 {
    uint8_t v[2];
    try {
	renew(v, 5);
    }
    catch (auto e) {
	// just ensure it will not fail due to renew of a null vector pointer
    }
    v = { 1, 2 };
    int32_t a = 3;
    renew(v, a);
    if (sizeof(v) != 3 || v[0] != 1 || v[1] != 2 || v[2] != 0)
	print("error %d\n", __LINE__);
    renew(v, 1);
    if (sizeof(v) != 1 || v[0] != 1)
	print("error %d %d\n", __LINE__, sizeof(v));
};

namespace t61 {
    uint8_t cmp(float64_t a, float64_t b) {
	if ((a < 0 && b > 0) || (a > 0 && b < 0))
	    return 1;
	return abs(abs(a) - abs(b)) > 0.000001;
    }
    int32_t view[4] = { 0, 0, 640, 480 };
    float32_t v2f_a[2] = { 1, 2 };
    float32_t v2f_b[2] = { 3, 4 };
    float32_t v2f_c[2] = {};
    v2f.set(v2f_c, 5, 6);
    if (v2f_c[0] != 5 || v2f_c[1] != 6) 	    print("error %d\n", __LINE__);
    v2f.fill(v2f_c, -1);
    if (v2f_c[0] != -1 || v2f_c[1] != -1)	    print("error %d\n", __LINE__);
    v2f.copy(v2f_c, v2f_a);
    if (v2f_c[0] != 1 || v2f_c[1] != 2) 	    print("error %d\n", __LINE__);
    if (v2f.length(v2f_b) != 5) 		    print("error %d\n", __LINE__);
    if (v2f.dot(v2f_a, v2f_b) != 11)		    print("error %d\n", __LINE__);
    v2f.normalize(v2f_c, v2f_b);
    if (cmp(v2f_c[0], 0.6) || cmp(v2f_c[1], 0.8))   print("error %d\n", __LINE__);
    v2f.adds(v2f_c, v2f_b, 2);
    if (v2f_c[0] != 5 || v2f_c[1] != 6) 	print("error %d\n", __LINE__);
    v2f.subs(v2f_c, v2f_b, 2);
    if (v2f_c[0] != 1 || v2f_c[1] != 2) 	print("error %d\n", __LINE__);
    v2f.muls(v2f_c, v2f_b, 2);
    if (v2f_c[0] != 6 || v2f_c[1] != 8) 	print("error %d\n", __LINE__);
    v2f.divs(v2f_c, v2f_b, 2);
    if (v2f_c[0] != 1.5 || v2f_c[1] != 2)	print("error %d\n", __LINE__);
    if (v2f.eq(v2f_a, v2f_b))		print("error %d\n", __LINE__);
    if (v2f.ne(v2f_a, v2f_a))		print("error %d\n", __LINE__);
    v2f.copy(v2f_c, v2f_a);
    if (v2f.eq(v2f_b, v2f_c))		print("error %d\n", __LINE__);
    if (v2f.ne(v2f_a, v2f_c))		print("error %d\n", __LINE__);
    v2f.neg(v2f_c, v2f_a);
    if (v2f_c[0] != -1 || v2f_c[1] != -2)	    print("error %d\n", __LINE__);
    v2f.add(v2f_c, v2f_a, v2f_b);
    if (v2f_c[0] != 4 || v2f_c[1] != 6) 	    print("error %d\n", __LINE__);
    v2f.sub(v2f_c, v2f_a, v2f_b);
    if (v2f_c[0] != -2 || v2f_c[1] != -2)	    print("error %d\n", __LINE__);
    v2f.mul(v2f_c, v2f_a, v2f_b);
    if (v2f_c[0] != 3 || v2f_c[1] != 8) 	    print("error %d\n", __LINE__);
    v2f.div(v2f_c, v2f_a, v2f_b);
    if (cmp(v2f_c[0], 1/3) || v2f_c[1] != 0.5)	    print("error %d\n", __LINE__);
    float32_t v3f_a[3] = { 1, 2, 3 };
    float32_t v3f_b[3] = { 4, 5, 6 };
    float32_t v3f_c[3] = {};
    v3f.set(v3f_c, 7, 8, 9);
    if (v3f_c[0] != 7 || v3f_c[1] != 8 || v3f_c[2] != 9)
	print("error %d\n", __LINE__);
    v3f.fill(v3f_c, -1);
    if (v3f_c[0] != -1 || v3f_c[1] != -1 || v3f_c[2] != -1)
	print("error %d\n", __LINE__);
    v3f.copy(v3f_c, v3f_a);
    if (v3f_c[0] != 1 || v3f_c[1] != 2 || v3f_c[2] != 3)
	print("error %d\n", __LINE__);
    if (cmp(v3f.length(v3f_b), 8.774964))	    print("error %d\n", __LINE__);
    if (v3f.dot(v3f_a, v3f_b) != 32)		    print("error %d\n", __LINE__);
    v3f.normalize(v3f_c, v3f_b);
    if (cmp(v3f_c[0], 0.455842) || cmp(v3f_c[1], 0.569803) ||
	cmp(v3f_c[2], 0.683764))    print("error %d\n", __LINE__);
    v3f.adds(v3f_c, v3f_b, 2);
    if (v3f_c[0] != 6 || v3f_c[1] != 7 || v3f_c[2] != 8)
	print("error %d\n", __LINE__);
    v3f.subs(v3f_c, v3f_b, 2);
    if (v3f_c[0] != 2 || v3f_c[1] != 3 || v3f_c[2] != 4)
	print("error %d\n", __LINE__);
    v3f.muls(v3f_c, v3f_b, 2);
    if (v3f_c[0] != 8 || v3f_c[1] != 10 || v3f_c[2] != 12)
	print("error %d\n", __LINE__);
    v3f.divs(v3f_c, v3f_b, 2);
    if (v3f_c[0] != 2 || v3f_c[1] != 2.5 || v3f_c[2] != 3)
	print("error %d\n", __LINE__);
    v3f.cross(v3f_c, v3f_a, v3f_b);
    if (v3f_c[0] != -3 || v3f_c[1] != 6 || v3f_c[2] != -3)
	print("error %d\n", __LINE__);
    if (v3f.eq(v3f_a, v3f_b))		print("error %d\n", __LINE__);
    if (v3f.ne(v3f_a, v3f_a))		print("error %d\n", __LINE__);
    v3f.copy(v3f_c, v3f_a);
    if (v3f.eq(v3f_b, v3f_c))		print("error %d\n", __LINE__);
    if (v3f.ne(v3f_a, v3f_c))		print("error %d\n", __LINE__);
    v3f.neg(v3f_c, v3f_a);
    if (v3f_c[0] != -1 || v3f_c[1] != -2 || v3f_c[2] != -3)
	print("error %d\n", __LINE__);
    v3f.add(v3f_c, v3f_a, v3f_b);
    if (v3f_c[0] != 5 || v3f_c[1] != 7 || v3f_c[2] != 9)
	print("error %d\n", __LINE__);
    v3f.sub(v3f_c, v3f_a, v3f_b);
    if (v3f_c[0] != -3 || v3f_c[1] != -3 || v3f_c[2] != -3)
	print("error %d\n", __LINE__);
    v3f.mul(v3f_c, v3f_a, v3f_b);
    if (v3f_c[0] != 4 || v3f_c[1] != 10 || v3f_c[2] != 18)
	print("error %d\n", __LINE__);
    v3f.div(v3f_c, v3f_a, v3f_b);
    if (v3f_c[0] != 0.25 || cmp(v3f_c[1], 2/5) || v3f_c[2] != 0.5)
	print("error %d\n", __LINE__);
    float32_t v4f_a[4] = { 1, 2, 3, 4 };
    float32_t v4f_b[4] = { 5, 6, 7, 8 };
    float32_t v4f_c[4] = {};
    v4f.set(v4f_c, 9, 10, 11, 12);
    if (v4f_c[0] != 9 || v4f_c[1] != 10 || v4f_c[2] != 11 || v4f_c[3] != 12)
	print("error %d\n", __LINE__);
    v4f.fill(v4f_c, -1);
    if (v4f_c[0] != -1 || v4f_c[1] != -1 || v4f_c[2] != -1 || v4f_c[3] != -1)
	print("error %d\n", __LINE__);
    v4f.copy(v4f_c, v4f_a);
    if (v4f_c[0] != 1 || v4f_c[1] != 2 || v4f_c[2] != 3 || v4f_c[3] != 4)
	print("error %d\n", __LINE__);
    if (cmp(v4f.length(v4f_b), 13.190906))	    print("error %d\n", __LINE__);
    if (v4f.dot(v4f_a, v4f_b) != 70)		    print("error %d\n", __LINE__);
    v4f.normalize(v4f_c, v4f_b);
    if (cmp(v4f_c[0], 0.379049) || cmp(v4f_c[1], 0.454859) ||
	cmp(v4f_c[2], 0.530669) || cmp(v4f_c[3], 0.606478))
	print("error %d\n", __LINE__);
    v4f.adds(v4f_c, v4f_b, 2);
    if (v4f_c[0] != 7 || v4f_c[1] != 8 || v4f_c[2] != 9 || v4f_c[3] != 10)
	print("error %d\n", __LINE__);
    v4f.subs(v4f_c, v4f_b, 2);
    if (v4f_c[0] != 3 || v4f_c[1] != 4 || v4f_c[2] != 5 || v4f_c[3] != 6)
	print("error %d\n", __LINE__);
    v4f.muls(v4f_c, v4f_b, 2);
    if (v4f_c[0] != 10 || v4f_c[1] != 12 || v4f_c[2] != 14 || v4f_c[3] != 16)
	print("error %d\n", __LINE__);
    v4f.divs(v4f_c, v4f_b, 2);
    if (v4f_c[0] != 2.5 || v4f_c[1] != 3 || v4f_c[2] != 3.5 || v4f_c[3] != 4)
	print("error %d\n", __LINE__);
    if (v4f.eq(v4f_a, v4f_b))		print("error %d\n", __LINE__);
    if (v4f.ne(v4f_a, v4f_a))		print("error %d\n", __LINE__);
    v4f.copy(v4f_c, v4f_a);
    if (v4f.eq(v4f_b, v4f_c))		print("error %d\n", __LINE__);
    if (v4f.ne(v4f_a, v4f_c))		print("error %d\n", __LINE__);
    v4f.neg(v4f_c, v4f_a);
    if (v4f_c[0] != -1 || v4f_c[1] != -2 || v4f_c[2] != -3 || v4f_c[3] != -4)
	print("error %d\n", __LINE__);
    v4f.add(v4f_c, v4f_a, v4f_b);
    if (v4f_c[0] != 6 || v4f_c[1] != 8 || v4f_c[2] != 10 || v4f_c[3] != 12)
	print("error %d\n", __LINE__);
    v4f.sub(v4f_c, v4f_a, v4f_b);
    if (v4f_c[0] != -4 || v4f_c[1] != -4 || v4f_c[2] != -4 || v4f_c[3] != -4)
	print("error %d\n", __LINE__);
    v4f.mul(v4f_c, v4f_a, v4f_b);
    if (v4f_c[0] != 5 || v4f_c[1] != 12 || v4f_c[2] != 21 || v4f_c[3] != 32)
	print("error %d\n", __LINE__);
    v4f.div(v4f_c, v4f_a, v4f_b);
    if (v4f_c[0] != 0.2 || cmp(v4f_c[1], 2/6) ||
	cmp(v4f_c[2], 3/7) || v4f_c[3] != 0.5)
	print("error %d\n", __LINE__);
    float64_t v2d_a[2] = { 1, 2 };
    float64_t v2d_b[2] = { 3, 4 };
    float64_t v2d_c[2] = {};
    v2d.set(v2d_c, 5, 6);
    if (v2d_c[0] != 5 || v2d_c[1] != 6) 	    print("error %d\n", __LINE__);
    v2d.fill(v2d_c, -1);
    if (v2d_c[0] != -1 || v2d_c[1] != -1)	    print("error %d\n", __LINE__);
    v2d.copy(v2d_c, v2d_a);
    if (v2d_c[0] != 1 || v2d_c[1] != 2) 	    print("error %d\n", __LINE__);
    if (v2d.length(v2d_b) != 5) 		    print("error %d\n", __LINE__);
    if (v2d.dot(v2d_a, v2d_b) != 11)		    print("error %d\n", __LINE__);
    v2d.normalize(v2d_c, v2d_b);
    if (cmp(v2d_c[0], 0.6) || cmp(v2d_c[1], 0.8))   print("error %d\n", __LINE__);
    v2d.adds(v2d_c, v2d_b, 2);
    if (v2d_c[0] != 5 || v2d_c[1] != 6) 	print("error %d\n", __LINE__);
    v2d.subs(v2d_c, v2d_b, 2);
    if (v2d_c[0] != 1 || v2d_c[1] != 2) 	print("error %d\n", __LINE__);
    v2d.muls(v2d_c, v2d_b, 2);
    if (v2d_c[0] != 6 || v2d_c[1] != 8) 	print("error %d\n", __LINE__);
    v2d.divs(v2d_c, v2d_b, 2);
    if (v2d_c[0] != 1.5 || v2d_c[1] != 2)	print("error %d\n", __LINE__);
    if (v2d.eq(v2d_a, v2d_b))		print("error %d\n", __LINE__);
    if (v2d.ne(v2d_a, v2d_a))		print("error %d\n", __LINE__);
    v2d.copy(v2d_c, v2d_a);
    if (v2d.eq(v2d_b, v2d_c))		print("error %d\n", __LINE__);
    if (v2d.ne(v2d_a, v2d_c))		print("error %d\n", __LINE__);
    v2d.neg(v2d_c, v2d_a);
    if (v2d_c[0] != -1 || v2d_c[1] != -2)	    print("error %d\n", __LINE__);
    v2d.add(v2d_c, v2d_a, v2d_b);
    if (v2d_c[0] != 4 || v2d_c[1] != 6) 	    print("error %d\n", __LINE__);
    v2d.sub(v2d_c, v2d_a, v2d_b);
    if (v2d_c[0] != -2 || v2d_c[1] != -2)	    print("error %d\n", __LINE__);
    v2d.mul(v2d_c, v2d_a, v2d_b);
    if (v2d_c[0] != 3 || v2d_c[1] != 8) 	    print("error %d\n", __LINE__);
    v2d.div(v2d_c, v2d_a, v2d_b);
    if (cmp(v2d_c[0], 1/3) || v2d_c[1] != 0.5)	    print("error %d\n", __LINE__);
    float64_t v3d_a[3] = { 1, 2, 3 };
    float64_t v3d_b[3] = { 4, 5, 6 };
    float64_t v3d_c[3] = {};
    v3d.set(v3d_c, 7, 8, 9);
    if (v3d_c[0] != 7 || v3d_c[1] != 8 || v3d_c[2] != 9)
	print("error %d\n", __LINE__);
    v3d.fill(v3d_c, -1);
    if (v3d_c[0] != -1 || v3d_c[1] != -1 || v3d_c[2] != -1)
	print("error %d\n", __LINE__);
    v3d.copy(v3d_c, v3d_a);
    if (v3d_c[0] != 1 || v3d_c[1] != 2 || v3d_c[2] != 3)
	print("error %d\n", __LINE__);
    if (cmp(v3d.length(v3d_b), 8.774964))	    print("error %d\n", __LINE__);
    if (v3d.dot(v3d_a, v3d_b) != 32)		    print("error %d\n", __LINE__);
    v3d.normalize(v3d_c, v3d_b);
    if (cmp(v3d_c[0], 0.455842) || cmp(v3d_c[1], 0.569803) ||
	cmp(v3d_c[2], 0.683764))    print("error %d\n", __LINE__);
    v3d.adds(v3d_c, v3d_b, 2);
    if (v3d_c[0] != 6 || v3d_c[1] != 7 || v3d_c[2] != 8)
	print("error %d\n", __LINE__);
    v3d.subs(v3d_c, v3d_b, 2);
    if (v3d_c[0] != 2 || v3d_c[1] != 3 || v3d_c[2] != 4)
	print("error %d\n", __LINE__);
    v3d.muls(v3d_c, v3d_b, 2);
    if (v3d_c[0] != 8 || v3d_c[1] != 10 || v3d_c[2] != 12)
	print("error %d\n", __LINE__);
    v3d.divs(v3d_c, v3d_b, 2);
    if (v3d_c[0] != 2 || v3d_c[1] != 2.5 || v3d_c[2] != 3)
	print("error %d\n", __LINE__);
    v3d.cross(v3d_c, v3d_a, v3d_b);
    if (v3d_c[0] != -3 || v3d_c[1] != 6 || v3d_c[2] != -3)
	print("error %d\n", __LINE__);
    if (v3d.eq(v3d_a, v3d_b))		print("error %d\n", __LINE__);
    if (v3d.ne(v3d_a, v3d_a))		print("error %d\n", __LINE__);
    v3d.copy(v3d_c, v3d_a);
    if (v3d.eq(v3d_b, v3d_c))		print("error %d\n", __LINE__);
    if (v3d.ne(v3d_a, v3d_c))		print("error %d\n", __LINE__);
    v3d.neg(v3d_c, v3d_a);
    if (v3d_c[0] != -1 || v3d_c[1] != -2 || v3d_c[2] != -3)
	print("error %d\n", __LINE__);
    v3d.add(v3d_c, v3d_a, v3d_b);
    if (v3d_c[0] != 5 || v3d_c[1] != 7 || v3d_c[2] != 9)
	print("error %d\n", __LINE__);
    v3d.sub(v3d_c, v3d_a, v3d_b);
    if (v3d_c[0] != -3 || v3d_c[1] != -3 || v3d_c[2] != -3)
	print("error %d\n", __LINE__);
    v3d.mul(v3d_c, v3d_a, v3d_b);
    if (v3d_c[0] != 4 || v3d_c[1] != 10 || v3d_c[2] != 18)
	print("error %d\n", __LINE__);
    v3d.div(v3d_c, v3d_a, v3d_b);
    if (v3d_c[0] != 0.25 || cmp(v3d_c[1], 2/5) || v3d_c[2] != 0.5)
	print("error %d\n", __LINE__);
    float64_t v4d_a[4] = { 1, 2, 3, 4 };
    float64_t v4d_b[4] = { 5, 6, 7, 8 };
    float64_t v4d_c[4] = {};
    v4d.set(v4d_c, 9, 10, 11, 12);
    if (v4d_c[0] != 9 || v4d_c[1] != 10 || v4d_c[2] != 11 || v4d_c[3] != 12)
	print("error %d\n", __LINE__);
    v4d.fill(v4d_c, -1);
    if (v4d_c[0] != -1 || v4d_c[1] != -1 || v4d_c[2] != -1 || v4d_c[3] != -1)
	print("error %d\n", __LINE__);
    v4d.copy(v4d_c, v4d_a);
    if (v4d_c[0] != 1 || v4d_c[1] != 2 || v4d_c[2] != 3 || v4d_c[3] != 4)
	print("error %d\n", __LINE__);
    if (cmp(v4d.length(v4d_b), 13.190906))	    print("error %d\n", __LINE__);
    if (v4d.dot(v4d_a, v4d_b) != 70)		    print("error %d\n", __LINE__);
    v4d.normalize(v4d_c, v4d_b);
    if (cmp(v4d_c[0], 0.379049) || cmp(v4d_c[1], 0.454859) ||
	cmp(v4d_c[2], 0.530669) || cmp(v4d_c[3], 0.606478))
	print("error %d\n", __LINE__);
    v4d.adds(v4d_c, v4d_b, 2);
    if (v4d_c[0] != 7 || v4d_c[1] != 8 || v4d_c[2] != 9 || v4d_c[3] != 10)
	print("error %d\n", __LINE__);
    v4d.subs(v4d_c, v4d_b, 2);
    if (v4d_c[0] != 3 || v4d_c[1] != 4 || v4d_c[2] != 5 || v4d_c[3] != 6)
	print("error %d\n", __LINE__);
    v4d.muls(v4d_c, v4d_b, 2);
    if (v4d_c[0] != 10 || v4d_c[1] != 12 || v4d_c[2] != 14 || v4d_c[3] != 16)
	print("error %d\n", __LINE__);
    v4d.divs(v4d_c, v4d_b, 2);
    if (v4d_c[0] != 2.5 || v4d_c[1] != 3 || v4d_c[2] != 3.5 || v4d_c[3] != 4)
	print("error %d\n", __LINE__);
    if (v4d.eq(v4d_a, v4d_b))		print("error %d\n", __LINE__);
    if (v4d.ne(v4d_a, v4d_a))		print("error %d\n", __LINE__);
    v4d.copy(v4d_c, v4d_a);
    if (v4d.eq(v4d_b, v4d_c))		print("error %d\n", __LINE__);
    if (v4d.ne(v4d_a, v4d_c))		print("error %d\n", __LINE__);
    v4d.neg(v4d_c, v4d_a);
    if (v4d_c[0] != -1 || v4d_c[1] != -2 || v4d_c[2] != -3 || v4d_c[3] != -4)
	print("error %d\n", __LINE__);
    v4d.add(v4d_c, v4d_a, v4d_b);
    if (v4d_c[0] != 6 || v4d_c[1] != 8 || v4d_c[2] != 10 || v4d_c[3] != 12)
	print("error %d\n", __LINE__);
    v4d.sub(v4d_c, v4d_a, v4d_b);
    if (v4d_c[0] != -4 || v4d_c[1] != -4 || v4d_c[2] != -4 || v4d_c[3] != -4)
	print("error %d\n", __LINE__);
    v4d.mul(v4d_c, v4d_a, v4d_b);
    if (v4d_c[0] != 5 || v4d_c[1] != 12 || v4d_c[2] != 21 || v4d_c[3] != 32)
	print("error %d\n", __LINE__);
    v4d.div(v4d_c, v4d_a, v4d_b);
    if (v4d_c[0] != 0.2 || cmp(v4d_c[1], 2/6) ||
	cmp(v4d_c[2], 3/7) || v4d_c[3] != 0.5)
	print("error %d\n", __LINE__);
    float32_t m2f_a[4] = { 1, 2, 3, 4 };
    float32_t m2f_b[4] = { 4, 3, 2, 1 };
    float32_t m2f_c[4] = {};
    m2f.set(m2f_c, 1, 2, 3, 4);
    if (m2f_c[0] != 1 || m2f_c[1] != 2 || m2f_c[2] != 3 || m2f_c[3] != 4)
	print("error %d\n", __LINE__);
    m2f.fill(m2f_c, -1);
    if (m2f_c[0] != -1 || m2f_c[1] != -1 || m2f_c[2] != -1 || m2f_c[3] != -1)
	print("error %d\n", __LINE__);
    m2f.identity(m2f_c);
    if (m2f_c[0] != 1 || m2f_c[1] != 0 || m2f_c[2] != 0 || m2f_c[3] != 1)
	print("error %d\n", __LINE__);
    m2f.copy(m2f_c, m2f_a);
    if (m2f_c[0] != 1 || m2f_c[1] != 2 || m2f_c[2] != 3 || m2f_c[3] != 4)
	print("error %d\n", __LINE__);
    if (m2f.det(m2f_a) != -2)			    print("error %d\n", __LINE__);
    m2f.transpose(m2f_c, m2f_a);
    if (m2f_c[0] != 1 || m2f_c[1] != 3 || m2f_c[2] != 2 || m2f_c[3] != 4)
	print("error %d\n", __LINE__);
    m2f.transpose(m2f_c, m2f_c);
    if (m2f_c[0] != 1 || m2f_c[1] != 2 || m2f_c[2] != 3 || m2f_c[3] != 4)
	print("error %d\n", __LINE__);
    m2f.adds(m2f_c, m2f_a, 2);
    if (m2f_c[0] != 3 || m2f_c[1] != 4 || m2f_c[2] != 5 || m2f_c[3] != 6)
	print("error %d\n", __LINE__);
    m2f.subs(m2f_c, m2f_a, 2);
    if (m2f_c[0] != -1 || m2f_c[1] != 0 || m2f_c[2] != 1 || m2f_c[3] != 2)
	print("error %d\n", __LINE__);
    m2f.muls(m2f_c, m2f_a, 2);
    if (m2f_c[0] !=  2 || m2f_c[1] != 4 || m2f_c[2] != 6 || m2f_c[3] != 8)
	print("error %d\n", __LINE__);
    m2f.divs(m2f_c, m2f_a, 2);
    if (m2f_c[0] != 0.5 || m2f_c[1] != 1 || m2f_c[2] != 1.5 || m2f_c[3] != 2)
	print("error %d\n", __LINE__);
    m2f.inverse(m2f_c, m2f_a);
    if (m2f_c[0] != -2 || m2f_c[1] != 1 || m2f_c[2] != 1.5 || m2f_c[3] != -0.5)
	print("error %d\n", __LINE__);
    if (m2f.eq(m2f_a, m2f_b))		print("error %d\n", __LINE__);
    if (m2f.ne(m2f_a, m2f_a))		print("error %d\n", __LINE__);
    m2f.copy(m2f_c, m2f_a);
    if (m2f.eq(m2f_b, m2f_c))		print("error %d\n", __LINE__);
    if (m2f.ne(m2f_a, m2f_c))		print("error %d\n", __LINE__);
    m2f.neg(m2f_c, m2f_a);
    if (m2f_c[0] != -1 || m2f_c[1] != -2 || m2f_c[2] != -3 || m2f_c[3] != -4)
	print("error %d\n", __LINE__);
    m2f.add(m2f_c, m2f_a, m2f_b);
    if (m2f_c[0] != 5 || m2f_c[1] != 5 || m2f_c[2] != 5 || m2f_c[3] != 5)
	print("error %d\n", __LINE__);
    m2f.sub(m2f_c, m2f_a, m2f_b);
    if (m2f_c[0] != -3 || m2f_c[1] != -1 || m2f_c[2] != 1 || m2f_c[3] != 3)
	print("error %d\n", __LINE__);
    m2f.mul(m2f_c, m2f_a, m2f_b);
    if (m2f_c[0] != 13 || m2f_c[1] != 20 || m2f_c[2] != 5 || m2f_c[3] != 8)
	print("error %d\n", __LINE__);
    m2f.div(m2f_c, m2f_a, m2f_b);
    if (m2f_c[0] != 4 || m2f_c[1] != 5 || m2f_c[2] != -5 || m2f_c[3] != -6)
	print("error %d\n", __LINE__);
    float32_t m3f_a[9] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
    float32_t m3f_b[9] = { 9, 8, 7, 6, 5, 4, 3, 2, 1 };
    float32_t m3f_c[9] = {};
    m3f.set(m3f_c, 1, 2, 3, 4, 5, 4, 3, 2, 1);
    if (m3f_c[0] != 1 || m3f_c[1] != 2 || m3f_c[2] != 3 ||
	m3f_c[3] != 4 || m3f_c[4] != 5 || m3f_c[5] != 4 ||
	m3f_c[6] != 3 || m3f_c[7] != 2 || m3f_c[8] != 1)
	print("error %d\n", __LINE__);
    m3f.fill(m3f_c, -1);
    if (m3f_c[0] != -1 || m3f_c[1] != -1 || m3f_c[2] != -1 ||
	m3f_c[3] != -1 || m3f_c[4] != -1 || m3f_c[5] != -1 ||
	m3f_c[6] != -1 || m3f_c[7] != -1 || m3f_c[8] != -1)
	print("error %d\n", __LINE__);
    m3f.identity(m3f_c);
    if (m3f_c[0] != 1 || m3f_c[1] != 0 || m3f_c[2] != 0 ||
	m3f_c[3] != 0 || m3f_c[4] != 1 || m3f_c[5] != 0 ||
	m3f_c[6] != 0 || m3f_c[7] != 0 || m3f_c[8] != 1)
	print("error %d\n", __LINE__);
    m3f.copy(m3f_c, m3f_a);
    if (m3f_c[0] != 1 || m3f_c[1] != 2 || m3f_c[2] != 3 ||
	m3f_c[3] != 4 || m3f_c[4] != 5 || m3f_c[5] != 6 ||
	m3f_c[6] != 7 || m3f_c[7] != 8 || m3f_c[8] != 9)
	print("error %d\n", __LINE__);
    if (m3f.det(m3f_a) != 0)			    print("error %d\n", __LINE__);
    m3f.transpose(m3f_c, m3f_a);
    if (m3f_c[0] != 1 || m3f_c[1] != 4 || m3f_c[2] != 7 ||
	m3f_c[3] != 2 || m3f_c[4] != 5 || m3f_c[5] != 8 ||
	m3f_c[6] != 3 || m3f_c[7] != 6 || m3f_c[8] != 9)
	print("error %d\n", __LINE__);
    m3f.transpose(m3f_c, m3f_c);
    if (m3f_c[0] != 1 || m3f_c[1] != 2 || m3f_c[2] != 3 ||
	m3f_c[3] != 4 || m3f_c[4] != 5 || m3f_c[5] != 6 ||
	m3f_c[6] != 7 || m3f_c[7] != 8 || m3f_c[8] != 9)
	print("error %d\n", __LINE__);
    m3f.adds(m3f_c, m3f_a, 2);
    if (m3f_c[0] != 3 || m3f_c[1] !=  4 || m3f_c[2] !=	5 ||
	m3f_c[3] != 6 || m3f_c[4] !=  7 || m3f_c[5] !=	8 ||
	m3f_c[6] != 9 || m3f_c[7] != 10 || m3f_c[8] != 11)
	print("error %d\n", __LINE__);
    m3f.muls(m3f_c, m3f_a, 2);
    if (m3f_c[0] !=  2 || m3f_c[1] !=  4 || m3f_c[2] !=  6 ||
	m3f_c[3] !=  8 || m3f_c[4] != 10 || m3f_c[5] != 12 ||
	m3f_c[6] != 14 || m3f_c[7] != 16 || m3f_c[8] != 18)
	print("error %d\n", __LINE__);
    m3f.divs(m3f_c, m3f_a, 2);
    if (m3f_c[0] != 0.5 || m3f_c[1] != 1.0 || m3f_c[2] != 1.5 ||
	m3f_c[3] != 2.0 || m3f_c[4] != 2.5 || m3f_c[5] != 3.0 ||
	m3f_c[6] != 3.5 || m3f_c[7] != 4.0 || m3f_c[8] != 4.5)
	print("error %d\n", __LINE__);
    m3f.set(m3f_c,
	     7, 2,  1,
	     0, 3, -1,
	    -3, 4, -2);
    m3f.inverse(m3f_c, m3f_c);
    if (m3f_c[0] != -2 || m3f_c[1] !=	8 || m3f_c[2] != -5 ||
	m3f_c[3] !=  3 || m3f_c[4] != -11 || m3f_c[5] !=  7 ||
	m3f_c[6] !=  9 || m3f_c[7] != -34 || m3f_c[8] != 21)
	print("error %d\n", __LINE__);
    if (m3f.eq(m3f_a, m3f_b))		print("error %d\n", __LINE__);
    if (m3f.ne(m3f_a, m3f_a))		print("error %d\n", __LINE__);
    m3f.copy(m3f_c, m3f_a);
    if (m3f.eq(m3f_b, m3f_c))		print("error %d\n", __LINE__);
    if (m3f.ne(m3f_a, m3f_c))		print("error %d\n", __LINE__);
    m3f.neg(m3f_c, m3f_a);
    if (m3f_c[0] != -1 || m3f_c[1] != -2 || m3f_c[2] != -3 ||
	m3f_c[3] != -4 || m3f_c[4] != -5 || m3f_c[5] != -6 ||
	m3f_c[6] != -7 || m3f_c[7] != -8 || m3f_c[8] != -9)
	print("error %d\n", __LINE__);
    m3f.add(m3f_c, m3f_a, m3f_b);
    if (m3f_c[0] != 10 || m3f_c[1] != 10 || m3f_c[2] != 10 ||
	m3f_c[3] != 10 || m3f_c[4] != 10 || m3f_c[5] != 10 ||
	m3f_c[6] != 10 || m3f_c[7] != 10 || m3f_c[8] != 10)
	print("error %d\n", __LINE__);
    m3f.sub(m3f_c, m3f_a, m3f_b);
    if (m3f_c[0] != -8 || m3f_c[1] != -6 || m3f_c[2] != -4 ||
	m3f_c[3] != -2 || m3f_c[4] !=  0 || m3f_c[5] !=  2 ||
	m3f_c[6] !=  4 || m3f_c[7] !=  6 || m3f_c[8] !=  8)
	print("error %d\n", __LINE__);
    m3f.mul(m3f_c, m3f_a, m3f_b);
    if (m3f_c[0] != 90 || m3f_c[1] != 114 || m3f_c[2] != 138 ||
	m3f_c[3] != 54 || m3f_c[4] !=  69 || m3f_c[5] !=  84 ||
	m3f_c[6] != 18 || m3f_c[7] !=  24 || m3f_c[8] !=  30)
	print("error %d\n", __LINE__);
    m3f.set(m3f_c,
	     7, 2,  1,
	     0, 3, -1,
	    -3, 4, -2);
    m3f.div(m3f_c, m3f_a, m3f_c);
    if (m3f_c[0] != -5 || m3f_c[1] != -4 || m3f_c[2] != -3 ||
	m3f_c[3] !=  8 || m3f_c[4] !=  7 || m3f_c[5] !=  6 ||
	m3f_c[6] != 20 || m3f_c[7] != 16 || m3f_c[8] != 12)
	print("error %d\n", __LINE__);
    float32_t m4f_a[16] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 };
    float32_t m4f_b[16] = { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
    float32_t m4f_c[16] = {};
    m4f.fill(m4f_c, -1);
    if (m4f_c[ 0] != -1 || m4f_c[ 1] != -1 || m4f_c[ 2] != -1 || m4f_c[ 3] != -1 ||
	m4f_c[ 4] != -1 || m4f_c[ 5] != -1 || m4f_c[ 6] != -1 || m4f_c[ 7] != -1 ||
	m4f_c[ 8] != -1 || m4f_c[ 9] != -1 || m4f_c[10] != -1 || m4f_c[11] != -1 ||
	m4f_c[12] != -1 || m4f_c[13] != -1 || m4f_c[14] != -1 || m4f_c[15] != -1)
	print("error %d\n", __LINE__);
    m4f.identity(m4f_c);
    if (m4f_c[ 0] != 1 || m4f_c[ 1] != 0 || m4f_c[ 2] != 0 || m4f_c[ 3] != 0 ||
	m4f_c[ 4] != 0 || m4f_c[ 5] != 1 || m4f_c[ 6] != 0 || m4f_c[ 7] != 0 ||
	m4f_c[ 8] != 0 || m4f_c[ 9] != 0 || m4f_c[10] != 1 || m4f_c[11] != 0 ||
	m4f_c[12] != 0 || m4f_c[13] != 0 || m4f_c[14] != 0 || m4f_c[15] != 1)
	print("error %d\n", __LINE__);
    m4f.copy(m4f_c, m4f_a);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] !=  5 || m4f_c[ 5] !=  6 || m4f_c[ 6] !=  7 || m4f_c[ 7] !=  8 ||
	m4f_c[ 8] !=  9 || m4f_c[ 9] != 10 || m4f_c[10] != 11 || m4f_c[11] != 12 ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    if (m4f.det(m4f_a) != 0)			    print("error %d\n", __LINE__);
    m4f.transpose(m4f_c, m4f_a);
    if (m4f_c[ 0] != 1 || m4f_c[ 1] != 5 || m4f_c[ 2] !=  9 || m4f_c[ 3] != 13 ||
	m4f_c[ 4] != 2 || m4f_c[ 5] != 6 || m4f_c[ 6] != 10 || m4f_c[ 7] != 14 ||
	m4f_c[ 8] != 3 || m4f_c[ 9] != 7 || m4f_c[10] != 11 || m4f_c[11] != 15 ||
	m4f_c[12] != 4 || m4f_c[13] != 8 || m4f_c[14] != 12 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    m4f.transpose(m4f_c, m4f_c);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] !=  5 || m4f_c[ 5] !=  6 || m4f_c[ 6] !=  7 || m4f_c[ 7] !=  8 ||
	m4f_c[ 8] !=  9 || m4f_c[ 9] != 10 || m4f_c[10] != 11 || m4f_c[11] != 12 ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    m4f.adds(m4f_c, m4f_a, 2);
    if (m4f_c[ 0] !=  3 || m4f_c[ 1] !=  4 || m4f_c[ 2] !=  5 || m4f_c[ 3] !=  6 ||
	m4f_c[ 4] !=  7 || m4f_c[ 5] !=  8 || m4f_c[ 6] !=  9 || m4f_c[ 7] != 10 ||
	m4f_c[ 8] != 11 || m4f_c[ 9] != 12 || m4f_c[10] != 13 || m4f_c[11] != 14 ||
	m4f_c[12] != 15 || m4f_c[13] != 16 || m4f_c[14] != 17 || m4f_c[15] != 18)
	print("error %d\n", __LINE__);
    m4f.subs(m4f_c, m4f_a, 2);
    if (m4f_c[ 0] != -1 || m4f_c[ 1] !=  0 || m4f_c[ 2] !=  1 || m4f_c[ 3] !=  2 ||
	m4f_c[ 4] !=  3 || m4f_c[ 5] !=  4 || m4f_c[ 6] !=  5 || m4f_c[ 7] !=  6 ||
	m4f_c[ 8] !=  7 || m4f_c[ 9] !=  8 || m4f_c[10] !=  9 || m4f_c[11] != 10 ||
	m4f_c[12] != 11 || m4f_c[13] != 12 || m4f_c[14] != 13 || m4f_c[15] != 14)
	print("error %d\n", __LINE__);
    m4f.muls(m4f_c, m4f_a, 2);
    if (m4f_c[ 0] !=  2 || m4f_c[ 1] !=  4 || m4f_c[ 2] !=  6 || m4f_c[ 3] !=  8 ||
	m4f_c[ 4] != 10 || m4f_c[ 5] != 12 || m4f_c[ 6] != 14 || m4f_c[ 7] != 16 ||
	m4f_c[ 8] != 18 || m4f_c[ 9] != 20 || m4f_c[10] != 22 || m4f_c[11] != 24 ||
	m4f_c[12] != 26 || m4f_c[13] != 28 || m4f_c[14] != 30 || m4f_c[15] != 32)
	print("error %d\n", __LINE__);
    m4f.divs(m4f_c, m4f_a, 2);
    if (m4f_c[ 0] != 0.5 || m4f_c[ 1] != 1.0 || m4f_c[ 2] != 1.5 || m4f_c[ 3] != 2.0 ||
	m4f_c[ 4] != 2.5 || m4f_c[ 5] != 3.0 || m4f_c[ 6] != 3.5 || m4f_c[ 7] != 4.0 ||
	m4f_c[ 8] != 4.5 || m4f_c[ 9] != 5.0 || m4f_c[10] != 5.5 || m4f_c[11] != 6.0 ||
	m4f_c[12] != 6.5 || m4f_c[13] != 7.0 || m4f_c[14] != 7.5 || m4f_c[15] != 8.0)
	print("error %d\n", __LINE__);
    m4f.set(m4f_c,
	     7, 2,  1, 1,
	     0, 3, -1, 2,
	    -3, 4, -2, 3,
	     0, 0,  0, 1);
    m4f.inverse(m4f_c, m4f_c);
    if (m4f_c[ 0] != -2 || m4f_c[ 1] !=   8 || m4f_c[ 2] != -5 || m4f_c[ 3] !=	1 ||
	m4f_c[ 4] !=  3 || m4f_c[ 5] != -11 || m4f_c[ 6] !=  7 || m4f_c[ 7] != -2 ||
	m4f_c[ 8] !=  9 || m4f_c[ 9] != -34 || m4f_c[10] != 21 || m4f_c[11] != -4 ||
	m4f_c[12] !=  0 || m4f_c[13] !=   0 || m4f_c[14] !=  0 || m4f_c[15] != 1)
	print("error %d\n", __LINE__);
    if (m4f.eq(m4f_a, m4f_b))		print("error %d\n", __LINE__);
    if (m4f.ne(m4f_a, m4f_a))		print("error %d\n", __LINE__);
    m4f.copy(m4f_c, m4f_a);
    if (m4f.eq(m4f_b, m4f_c))		print("error %d\n", __LINE__);
    if (m4f.ne(m4f_a, m4f_c))		print("error %d\n", __LINE__);
    m4f.neg(m4f_c, m4f_a);
    if (m4f_c[ 0] !=  -1 || m4f_c[ 1] !=  -2 || m4f_c[ 2] !=  -3 || m4f_c[ 3] !=  -4 ||
	m4f_c[ 4] !=  -5 || m4f_c[ 5] !=  -6 || m4f_c[ 6] !=  -7 || m4f_c[ 7] !=  -8 ||
	m4f_c[ 8] !=  -9 || m4f_c[ 9] != -10 || m4f_c[10] != -11 || m4f_c[11] != -12 ||
	m4f_c[12] != -13 || m4f_c[13] != -14 || m4f_c[14] != -15 || m4f_c[15] != -16)
	print("error %d\n", __LINE__);
    m4f.add(m4f_c, m4f_a, m4f_b);
    if (m4f_c[ 0] != 17 || m4f_c[ 1] != 17 || m4f_c[ 2] != 17 || m4f_c[ 3] != 17 ||
	m4f_c[ 4] != 17 || m4f_c[ 5] != 17 || m4f_c[ 6] != 17 || m4f_c[ 7] != 17 ||
	m4f_c[ 8] != 17 || m4f_c[ 9] != 17 || m4f_c[10] != 17 || m4f_c[11] != 17 ||
	m4f_c[12] != 17 || m4f_c[13] != 17 || m4f_c[14] != 17 || m4f_c[15] != 17)
	print("error %d\n", __LINE__);
    m4f.sub(m4f_c, m4f_a, m4f_b);
    if (m4f_c[ 0] != -15 || m4f_c[ 1] != -13 || m4f_c[ 2] != -11 || m4f_c[ 3] != -9 ||
	m4f_c[ 4] !=  -7 || m4f_c[ 5] !=  -5 || m4f_c[ 6] !=  -3 || m4f_c[ 7] != -1 ||
	m4f_c[ 8] !=   1 || m4f_c[ 9] !=   3 || m4f_c[10] !=   5 || m4f_c[11] !=  7 ||
	m4f_c[12] !=   9 || m4f_c[13] !=  11 || m4f_c[14] !=  13 || m4f_c[15] != 15)
	print("error %d\n", __LINE__);
    m4f.mul(m4f_c, m4f_a, m4f_b);
    if (m4f_c[ 0] != 386 || m4f_c[ 1] != 444 || m4f_c[ 2] != 502 || m4f_c[ 3] != 560 ||
	m4f_c[ 4] != 274 || m4f_c[ 5] != 316 || m4f_c[ 6] != 358 || m4f_c[ 7] != 400 ||
	m4f_c[ 8] != 162 || m4f_c[ 9] != 188 || m4f_c[10] != 214 || m4f_c[11] != 240 ||
	m4f_c[12] !=  50 || m4f_c[13] !=  60 || m4f_c[14] !=  70 || m4f_c[15] !=  80)
	print("error %d\n", __LINE__);
    m4f.set(m4f_c,
	     7, 2,  1, 1,
	     0, 3, -1, 2,
	    -3, 4, -2, 3,
	     0, 0,  0, 1);
    m4f.div(m4f_c, m4f_a, m4f_c);
    if (m4f_c[ 0] !=   6 || m4f_c[ 1] !=   8 || m4f_c[ 2] !=  10 || m4f_c[ 3] !=  12 ||
	m4f_c[ 4] != -15 || m4f_c[ 5] != -18 || m4f_c[ 6] != -21 || m4f_c[ 7] != -24 ||
	m4f_c[ 8] != -24 || m4f_c[ 9] != -32 || m4f_c[10] != -40 || m4f_c[11] != -48 ||
	m4f_c[12] !=  13 || m4f_c[13] !=  14 || m4f_c[14] !=  15 || m4f_c[15] !=  16)
	print("error %d\n", __LINE__);
    m4f.translate(m4f_c, m4f_a, v3f_a);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] !=  5 || m4f_c[ 5] !=  6 || m4f_c[ 6] !=  7 || m4f_c[ 7] !=  8 ||
	m4f_c[ 8] !=  9 || m4f_c[ 9] != 10 || m4f_c[10] != 11 || m4f_c[11] != 12 ||
	m4f_c[12] != 51 || m4f_c[13] != 58 || m4f_c[14] != 65 || m4f_c[15] != 72)
	print("error %d\n", __LINE__);
    m4f.copy(m4f_c, m4f_a);
    m4f.translate(m4f_c, m4f_c, v3f_a);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] !=  5 || m4f_c[ 5] !=  6 || m4f_c[ 6] !=  7 || m4f_c[ 7] !=  8 ||
	m4f_c[ 8] !=  9 || m4f_c[ 9] != 10 || m4f_c[10] != 11 || m4f_c[11] != 12 ||
	m4f_c[12] != 51 || m4f_c[13] != 58 || m4f_c[14] != 65 || m4f_c[15] != 72)
	print("error %d\n", __LINE__);
    m4f.rotate(m4f_c, m4f_a, 45, v3f_a);
    if (cmp(m4f_c[0], 0.935155) || cmp(m4f_c[1], 1.956770) ||
	cmp(m4f_c[2], 2.978385) || cmp(m4f_c[3], 4) ||
	cmp(m4f_c[4], 6.259419) || cmp(m4f_c[5], 6.839613) ||
	cmp(m4f_c[6], 7.419806) || cmp(m4f_c[7], 8) ||
	cmp(m4f_c[8], 8.182002) || cmp(m4f_c[9], 9.454668) ||
	cmp(m4f_c[10], 10.727334) || cmp(m4f_c[11], 12) ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    m4f.copy(m4f_c, m4f_a);
    m4f.rotate(m4f_c, m4f_c, 45, v3f_a);
    if (cmp(m4f_c[0], 0.935155) || cmp(m4f_c[1], 1.956770) ||
	cmp(m4f_c[2], 2.978385) || cmp(m4f_c[3], 4) ||
	cmp(m4f_c[4], 6.259419) || cmp(m4f_c[5], 6.839613) ||
	cmp(m4f_c[6], 7.419806) || cmp(m4f_c[7], 8) ||
	cmp(m4f_c[8], 8.182002) || cmp(m4f_c[9], 9.454668) ||
	cmp(m4f_c[10], 10.727334) || cmp(m4f_c[11], 12) ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d %d\n", __LINE__);
    m4f.scale(m4f_c, m4f_a, v3f_a);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] != 10 || m4f_c[ 5] != 12 || m4f_c[ 6] != 14 || m4f_c[ 7] != 16 ||
	m4f_c[ 8] != 27 || m4f_c[ 9] != 30 || m4f_c[10] != 33 || m4f_c[11] != 36 ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    m4f.copy(m4f_c, m4f_a);
    m4f.scale(m4f_c, m4f_c, v3f_a);
    if (m4f_c[ 0] !=  1 || m4f_c[ 1] !=  2 || m4f_c[ 2] !=  3 || m4f_c[ 3] !=  4 ||
	m4f_c[ 4] != 10 || m4f_c[ 5] != 12 || m4f_c[ 6] != 14 || m4f_c[ 7] != 16 ||
	m4f_c[ 8] != 27 || m4f_c[ 9] != 30 || m4f_c[10] != 33 || m4f_c[11] != 36 ||
	m4f_c[12] != 13 || m4f_c[13] != 14 || m4f_c[14] != 15 || m4f_c[15] != 16)
	print("error %d\n", __LINE__);
    m4f.ortho(m4f_c, 0, 640, 480, 0, -1, 1);
    if (cmp(m4f_c[0], 0.003125) || m4f_c[1] != 0 || m4f_c[2] != 0 || m4f_c[3] != 0 ||
	m4f_c[4] != 0 || cmp(m4f_c[5], -0.004167) || m4f_c[6] != 0 || m4f_c[7] != 0 ||
	m4f_c[8] != 0 || m4f_c[9] != 0 || m4f_c[10] != -1 || m4f_c[11] != 0 ||
	m4f_c[12] != -1 || m4f_c[13] != 1 || m4f_c[14] != 0 || m4f_c[15] != 1)
	print("error %d\n", __LINE__);
    m4f.frustum(m4f_c, -640, 640, -480, 480, 1, 100);
    if (cmp(m4f_c[0], 0.001563) || m4f_c[1] != 0 || m4f_c[2] != 0 || m4f_c[3] != 0 ||
	m4f_c[4] != 0 || cmp(m4f_c[5], 0.002083) || m4f_c[6] != 0 || m4f_c[7] != 0 ||
	m4f_c[8] != 0 || m4f_c[9] != 0 || cmp(m4f_c[10], -1.020202) || m4f_c[11] != -1 ||
	m4f_c[12] != 0 || m4f_c[13] != 0 || cmp(m4f_c[14], -2.020202) || m4f_c[15] != 0)
	print("error %d\n", __LINE__);
    m4f.perspective(m4f_c, 45, 640.0/480.0, 1, 1000);
    if (cmp(m4f_c[0], 1.810660) || m4f_c[1] != 0 || m4f_c[2] != 0 || m4f_c[3] != 0 ||
	m4f_c[4] != 0 || cmp(m4f_c[5], 2.414213) || m4f_c[6] != 0 || m4f_c[7] != 0 ||
	m4f_c[8] != 0 || m4f_c[9] != 0 || cmp(m4f_c[10], -1.002002) || m4f_c[11] != -1 ||
	m4f_c[12] != 0 || m4f_c[13] != 0 || cmp(m4f_c[14], -2.002002) || m4f_c[15] != 0)
	print("error %d\n", __LINE__);
    m4f.set(m4f_c,
	     1,  2,   3,   4,
	    10, 20,  30,  40,
	    20, 30, 100,  50,
	    30, 40, 50, 1000);
    v3f.project(v3f_c, v3f_a, m4f_c, m4f_b, view);
    if (cmp(v3f_c[0], 934.562866) ||
	cmp(v3f_c[1], 627.281372) || cmp(v3f_c[2], 1.153418))
	print("error %d\n", __LINE__);
    m4f.set(m4f_c,
	    1,	0,  0, 1,
	    0,	2, -1, 0,
	    0, 10,  3, 0,
	    1, 0,   0, 4);
    float32_t m4f_d[16] = {
	 7, 2,	1, 1,
	 0, 3, -1, 2,
	-3, 4, -2, 3,
	 0, 0,	0, 1
    };
    v3f.unProject(v3f_c, v3f_a, m4f_c, m4f_d, view);
    if (cmp(v3f_c[0], -3.128831) ||
	cmp(v3f_c[1],  4.629525) || cmp(v3f_c[2], -0.117939))
	print("error %d\n", __LINE__);
    float32_t v2f_eye[2] = { 960, 540 };
    float32_t v2f_center[2] = { 1, 1 };
    m4f.pickMatrix(m4f_c, v2f_eye, v2f_center, view);
    if (m4f_c[ 0] !=   640 || m4f_c[ 1] !=    0 || m4f_c[ 2] != 0 || m4f_c[ 3] != 0 ||
	m4f_c[ 4] !=	 0 || m4f_c[ 5] !=  480 || m4f_c[ 6] != 0 || m4f_c[ 7] != 0 ||
	m4f_c[ 8] !=	 0 || m4f_c[ 9] !=    0 || m4f_c[10] != 1 || m4f_c[11] != 0 ||
	m4f_c[12] != -1280 || m4f_c[13] != -600 || m4f_c[14] != 0 || m4f_c[15] != 1)
	print("error %d\n", __LINE__);
    float32_t v3f_eye[3] = { 75, 75, 75 };
    float32_t v3f_center[3] = {};
    float32_t v3f_up[3] = { 0, 1, 0 };
    m4f.lookAt(m4f_c, v3f_eye, v3f_center, v3f_up);
    if (cmp(m4f_c[0], 0.707107) || cmp(m4f_c[1], -0.408248) ||
	cmp(m4f_c[2], 0.577350) || m4f_c[3] != 0 ||
	m4f_c[4] != 0 || cmp(m4f_c[5], 0.816497) ||
	cmp(m4f_c[6], 0.577350) || m4f_c[7] != 0 ||
	cmp(m4f_c[8], -0.707107) || cmp(m4f_c[9], -0.408248) ||
	cmp(m4f_c[10], 0.577350) || m4f_c[11] != 0 ||
	m4f_c[12] != 0 || m4f_c[13] != 0 ||
	cmp(m4f_c[14], -129.903809) || m4f_c[15] != 1)
	print("error %d\n", __LINE__);
    float64_t m2d_a[4] = { 1, 2, 3, 4 };
    float64_t m2d_b[4] = { 4, 3, 2, 1 };
    float64_t m2d_c[4] = {};
    m2d.set(m2d_c, 1, 2, 3, 4);
    if (m2d_c[0] != 1 || m2d_c[1] != 2 || m2d_c[2] != 3 || m2d_c[3] != 4)
	print("error %d\n", __LINE__);
    m2d.fill(m2d_c, -1);
    if (m2d_c[0] != -1 || m2d_c[1] != -1 || m2d_c[2] != -1 || m2d_c[3] != -1)
	print("error %d\n", __LINE__);
    m2d.identity(m2d_c);
    if (m2d_c[0] != 1 || m2d_c[1] != 0 || m2d_c[2] != 0 || m2d_c[3] != 1)
	print("error %d\n", __LINE__);
    m2d.copy(m2d_c, m2d_a);
    if (m2d_c[0] != 1 || m2d_c[1] != 2 || m2d_c[2] != 3 || m2d_c[3] != 4)
	print("error %d\n", __LINE__);
    if (m2d.det(m2d_a) != -2)			    print("error %d\n", __LINE__);
    m2d.transpose(m2d_c, m2d_a);
    if (m2d_c[0] != 1 || m2d_c[1] != 3 || m2d_c[2] != 2 || m2d_c[3] != 4)
	print("error %d\n", __LINE__);
    m2d.transpose(m2d_c, m2d_c);
    if (m2d_c[0] != 1 || m2d_c[1] != 2 || m2d_c[2] != 3 || m2d_c[3] != 4)
	print("error %d\n", __LINE__);
    m2d.adds(m2d_c, m2d_a, 2);
    if (m2d_c[0] != 3 || m2d_c[1] != 4 || m2d_c[2] != 5 || m2d_c[3] != 6)
	print("error %d\n", __LINE__);
    m2d.subs(m2d_c, m2d_a, 2);
    if (m2d_c[0] != -1 || m2d_c[1] != 0 || m2d_c[2] != 1 || m2d_c[3] != 2)
	print("error %d\n", __LINE__);
    m2d.muls(m2d_c, m2d_a, 2);
    if (m2d_c[0] !=  2 || m2d_c[1] != 4 || m2d_c[2] != 6 || m2d_c[3] != 8)
	print("error %d\n", __LINE__);
    m2d.divs(m2d_c, m2d_a, 2);
    if (m2d_c[0] != 0.5 || m2d_c[1] != 1 || m2d_c[2] != 1.5 || m2d_c[3] != 2)
	print("error %d\n", __LINE__);
    m2d.inverse(m2d_c, m2d_a);
    if (m2d_c[0] != -2 || m2d_c[1] != 1 || m2d_c[2] != 1.5 || m2d_c[3] != -0.5)
	print("error %d\n", __LINE__);
    if (m2d.eq(m2d_a, m2d_b))		print("error %d\n", __LINE__);
    if (m2d.ne(m2d_a, m2d_a))		print("error %d\n", __LINE__);
    m2d.copy(m2d_c, m2d_a);
    if (m2d.eq(m2d_b, m2d_c))		print("error %d\n", __LINE__);
    if (m2d.ne(m2d_a, m2d_c))		print("error %d\n", __LINE__);
    m2d.neg(m2d_c, m2d_a);
    if (m2d_c[0] != -1 || m2d_c[1] != -2 || m2d_c[2] != -3 || m2d_c[3] != -4)
	print("error %d\n", __LINE__);
    m2d.add(m2d_c, m2d_a, m2d_b);
    if (m2d_c[0] != 5 || m2d_c[1] != 5 || m2d_c[2] != 5 || m2d_c[3] != 5)
	print("error %d\n", __LINE__);
    m2d.sub(m2d_c, m2d_a, m2d_b);
    if (m2d_c[0] != -3 || m2d_c[1] != -1 || m2d_c[2] != 1 || m2d_c[3] != 3)
	print("error %d\n", __LINE__);
    m2d.mul(m2d_c, m2d_a, m2d_b);
    if (m2d_c[0] != 13 || m2d_c[1] != 20 || m2d_c[2] != 5 || m2d_c[3] != 8)
	print("error %d\n", __LINE__);
    m2d.div(m2d_c, m2d_a, m2d_b);
    if (m2d_c[0] != 4 || m2d_c[1] != 5 || m2d_c[2] != -5 || m2d_c[3] != -6)
	print("error %d\n", __LINE__);
    float64_t m3d_a[9] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
    float64_t m3d_b[9] = { 9, 8, 7, 6, 5, 4, 3, 2, 1 };
    float64_t m3d_c[9] = {};
    m3d.set(m3d_c, 1, 2, 3, 4, 5, 4, 3, 2, 1);
    if (m3d_c[0] != 1 || m3d_c[1] != 2 || m3d_c[2] != 3 ||
	m3d_c[3] != 4 || m3d_c[4] != 5 || m3d_c[5] != 4 ||
	m3d_c[6] != 3 || m3d_c[7] != 2 || m3d_c[8] != 1)
	print("error %d\n", __LINE__);
    m3d.fill(m3d_c, -1);
    if (m3d_c[0] != -1 || m3d_c[1] != -1 || m3d_c[2] != -1 ||
	m3d_c[3] != -1 || m3d_c[4] != -1 || m3d_c[5] != -1 ||
	m3d_c[6] != -1 || m3d_c[7] != -1 || m3d_c[8] != -1)
	print("error %d\n", __LINE__);
    m3d.identity(m3d_c);
    if (m3d_c[0] != 1 || m3d_c[1] != 0 || m3d_c[2] != 0 ||
	m3d_c[3] != 0 || m3d_c[4] != 1 || m3d_c[5] != 0 ||
	m3d_c[6] != 0 || m3d_c[7] != 0 || m3d_c[8] != 1)
	print("error %d\n", __LINE__);
    m3d.copy(m3d_c, m3d_a);
    if (m3d_c[0] != 1 || m3d_c[1] != 2 || m3d_c[2] != 3 ||
	m3d_c[3] != 4 || m3d_c[4] != 5 || m3d_c[5] != 6 ||
	m3d_c[6] != 7 || m3d_c[7] != 8 || m3d_c[8] != 9)
	print("error %d\n", __LINE__);
    if (m3d.det(m3d_a) != 0)			    print("error %d\n", __LINE__);
    m3d.transpose(m3d_c, m3d_a);
    if (m3d_c[0] != 1 || m3d_c[1] != 4 || m3d_c[2] != 7 ||
	m3d_c[3] != 2 || m3d_c[4] != 5 || m3d_c[5] != 8 ||
	m3d_c[6] != 3 || m3d_c[7] != 6 || m3d_c[8] != 9)
	print("error %d\n", __LINE__);
    m3d.transpose(m3d_c, m3d_c);
    if (m3d_c[0] != 1 || m3d_c[1] != 2 || m3d_c[2] != 3 ||
	m3d_c[3] != 4 || m3d_c[4] != 5 || m3d_c[5] != 6 ||
	m3d_c[6] != 7 || m3d_c[7] != 8 || m3d_c[8] != 9)
	print("error %d\n", __LINE__);
    m3d.adds(m3d_c, m3d_a, 2);
    if (m3d_c[0] != 3 || m3d_c[1] !=  4 || m3d_c[2] !=	5 ||
	m3d_c[3] != 6 || m3d_c[4] !=  7 || m3d_c[5] !=	8 ||
	m3d_c[6] != 9 || m3d_c[7] != 10 || m3d_c[8] != 11)
	print("error %d\n", __LINE__);
    m3d.muls(m3d_c, m3d_a, 2);
    if (m3d_c[0] !=  2 || m3d_c[1] !=  4 || m3d_c[2] !=  6 ||
	m3d_c[3] !=  8 || m3d_c[4] != 10 || m3d_c[5] != 12 ||
	m3d_c[6] != 14 || m3d_c[7] != 16 || m3d_c[8] != 18)
	print("error %d\n", __LINE__);
    m3d.divs(m3d_c, m3d_a, 2);
    if (m3d_c[0] != 0.5 || m3d_c[1] != 1.0 || m3d_c[2] != 1.5 ||
	m3d_c[3] != 2.0 || m3d_c[4] != 2.5 || m3d_c[5] != 3.0 ||
	m3d_c[6] != 3.5 || m3d_c[7] != 4.0 || m3d_c[8] != 4.5)
	print("error %d\n", __LINE__);
    m3d.set(m3d_c,
	     7, 2,  1,
	     0, 3, -1,
	    -3, 4, -2);
    m3d.inverse(m3d_c, m3d_c);
    if (m3d_c[0] != -2 || m3d_c[1] !=	8 || m3d_c[2] != -5 ||
	m3d_c[3] !=  3 || m3d_c[4] != -11 || m3d_c[5] !=  7 ||
	m3d_c[6] !=  9 || m3d_c[7] != -34 || m3d_c[8] != 21)
	print("error %d\n", __LINE__);
    if (m3d.eq(m3d_a, m3d_b))		print("error %d\n", __LINE__);
    if (m3d.ne(m3d_a, m3d_a))		print("error %d\n", __LINE__);
    m3d.copy(m3d_c, m3d_a);
    if (m3d.eq(m3d_b, m3d_c))		print("error %d\n", __LINE__);
    if (m3d.ne(m3d_a, m3d_c))		print("error %d\n", __LINE__);
    m3d.neg(m3d_c, m3d_a);
    if (m3d_c[0] != -1 || m3d_c[1] != -2 || m3d_c[2] != -3 ||
	m3d_c[3] != -4 || m3d_c[4] != -5 || m3d_c[5] != -6 ||
	m3d_c[6] != -7 || m3d_c[7] != -8 || m3d_c[8] != -9)
	print("error %d\n", __LINE__);
    m3d.add(m3d_c, m3d_a, m3d_b);
    if (m3d_c[0] != 10 || m3d_c[1] != 10 || m3d_c[2] != 10 ||
	m3d_c[3] != 10 || m3d_c[4] != 10 || m3d_c[5] != 10 ||
	m3d_c[6] != 10 || m3d_c[7] != 10 || m3d_c[8] != 10)
	print("error %d\n", __LINE__);
    m3d.sub(m3d_c, m3d_a, m3d_b);
    if (m3d_c[0] != -8 || m3d_c[1] != -6 || m3d_c[2] != -4 ||
	m3d_c[3] != -2 || m3d_c[4] !=  0 || m3d_c[5] !=  2 ||
	m3d_c[6] !=  4 || m3d_c[7] !=  6 || m3d_c[8] !=  8)
	print("error %d\n", __LINE__);
    m3d.mul(m3d_c, m3d_a, m3d_b);
    if (m3d_c[0] != 90 || m3d_c[1] != 114 || m3d_c[2] != 138 ||
	m3d_c[3] != 54 || m3d_c[4] !=  69 || m3d_c[5] !=  84 ||
	m3d_c[6] != 18 || m3d_c[7] !=  24 || m3d_c[8] !=  30)
	print("error %d\n", __LINE__);
    m3d.set(m3d_c,
	     7, 2,  1,
	     0, 3, -1,
	    -3, 4, -2);
    m3d.div(m3d_c, m3d_a, m3d_c);
    if (m3d_c[0] != -5 || m3d_c[1] != -4 || m3d_c[2] != -3 ||
	m3d_c[3] !=  8 || m3d_c[4] !=  7 || m3d_c[5] !=  6 ||
	m3d_c[6] != 20 || m3d_c[7] != 16 || m3d_c[8] != 12)
	print("error %d\n", __LINE__);
    float64_t m4d_a[16] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 };
    float64_t m4d_b[16] = { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 };
    float64_t m4d_c[16] = {};
    m4d.fill(m4d_c, -1);
    if (m4d_c[ 0] != -1 || m4d_c[ 1] != -1 || m4d_c[ 2] != -1 || m4d_c[ 3] != -1 ||
	m4d_c[ 4] != -1 || m4d_c[ 5] != -1 || m4d_c[ 6] != -1 || m4d_c[ 7] != -1 ||
	m4d_c[ 8] != -1 || m4d_c[ 9] != -1 || m4d_c[10] != -1 || m4d_c[11] != -1 ||
	m4d_c[12] != -1 || m4d_c[13] != -1 || m4d_c[14] != -1 || m4d_c[15] != -1)
	print("error %d\n", __LINE__);
    m4d.identity(m4d_c);
    if (m4d_c[ 0] != 1 || m4d_c[ 1] != 0 || m4d_c[ 2] != 0 || m4d_c[ 3] != 0 ||
	m4d_c[ 4] != 0 || m4d_c[ 5] != 1 || m4d_c[ 6] != 0 || m4d_c[ 7] != 0 ||
	m4d_c[ 8] != 0 || m4d_c[ 9] != 0 || m4d_c[10] != 1 || m4d_c[11] != 0 ||
	m4d_c[12] != 0 || m4d_c[13] != 0 || m4d_c[14] != 0 || m4d_c[15] != 1)
	print("error %d\n", __LINE__);
    m4d.copy(m4d_c, m4d_a);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] !=  5 || m4d_c[ 5] !=  6 || m4d_c[ 6] !=  7 || m4d_c[ 7] !=  8 ||
	m4d_c[ 8] !=  9 || m4d_c[ 9] != 10 || m4d_c[10] != 11 || m4d_c[11] != 12 ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    if (m4d.det(m4d_a) != 0)			    print("error %d\n", __LINE__);
    m4d.transpose(m4d_c, m4d_a);
    if (m4d_c[ 0] != 1 || m4d_c[ 1] != 5 || m4d_c[ 2] !=  9 || m4d_c[ 3] != 13 ||
	m4d_c[ 4] != 2 || m4d_c[ 5] != 6 || m4d_c[ 6] != 10 || m4d_c[ 7] != 14 ||
	m4d_c[ 8] != 3 || m4d_c[ 9] != 7 || m4d_c[10] != 11 || m4d_c[11] != 15 ||
	m4d_c[12] != 4 || m4d_c[13] != 8 || m4d_c[14] != 12 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.transpose(m4d_c, m4d_c);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] !=  5 || m4d_c[ 5] !=  6 || m4d_c[ 6] !=  7 || m4d_c[ 7] !=  8 ||
	m4d_c[ 8] !=  9 || m4d_c[ 9] != 10 || m4d_c[10] != 11 || m4d_c[11] != 12 ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.adds(m4d_c, m4d_a, 2);
    if (m4d_c[ 0] !=  3 || m4d_c[ 1] !=  4 || m4d_c[ 2] !=  5 || m4d_c[ 3] !=  6 ||
	m4d_c[ 4] !=  7 || m4d_c[ 5] !=  8 || m4d_c[ 6] !=  9 || m4d_c[ 7] != 10 ||
	m4d_c[ 8] != 11 || m4d_c[ 9] != 12 || m4d_c[10] != 13 || m4d_c[11] != 14 ||
	m4d_c[12] != 15 || m4d_c[13] != 16 || m4d_c[14] != 17 || m4d_c[15] != 18)
	print("error %d\n", __LINE__);
    m4d.subs(m4d_c, m4d_a, 2);
    if (m4d_c[ 0] != -1 || m4d_c[ 1] !=  0 || m4d_c[ 2] !=  1 || m4d_c[ 3] !=  2 ||
	m4d_c[ 4] !=  3 || m4d_c[ 5] !=  4 || m4d_c[ 6] !=  5 || m4d_c[ 7] !=  6 ||
	m4d_c[ 8] !=  7 || m4d_c[ 9] !=  8 || m4d_c[10] !=  9 || m4d_c[11] != 10 ||
	m4d_c[12] != 11 || m4d_c[13] != 12 || m4d_c[14] != 13 || m4d_c[15] != 14)
	print("error %d\n", __LINE__);
    m4d.muls(m4d_c, m4d_a, 2);
    if (m4d_c[ 0] !=  2 || m4d_c[ 1] !=  4 || m4d_c[ 2] !=  6 || m4d_c[ 3] !=  8 ||
	m4d_c[ 4] != 10 || m4d_c[ 5] != 12 || m4d_c[ 6] != 14 || m4d_c[ 7] != 16 ||
	m4d_c[ 8] != 18 || m4d_c[ 9] != 20 || m4d_c[10] != 22 || m4d_c[11] != 24 ||
	m4d_c[12] != 26 || m4d_c[13] != 28 || m4d_c[14] != 30 || m4d_c[15] != 32)
	print("error %d\n", __LINE__);
    m4d.divs(m4d_c, m4d_a, 2);
    if (m4d_c[ 0] != 0.5 || m4d_c[ 1] != 1.0 || m4d_c[ 2] != 1.5 || m4d_c[ 3] != 2.0 ||
	m4d_c[ 4] != 2.5 || m4d_c[ 5] != 3.0 || m4d_c[ 6] != 3.5 || m4d_c[ 7] != 4.0 ||
	m4d_c[ 8] != 4.5 || m4d_c[ 9] != 5.0 || m4d_c[10] != 5.5 || m4d_c[11] != 6.0 ||
	m4d_c[12] != 6.5 || m4d_c[13] != 7.0 || m4d_c[14] != 7.5 || m4d_c[15] != 8.0)
	print("error %d\n", __LINE__);
    m4d.set(m4d_c,
	     7, 2,  1, 1,
	     0, 3, -1, 2,
	    -3, 4, -2, 3,
	     0, 0,  0, 1);
    m4d.inverse(m4d_c, m4d_c);
    if (m4d_c[ 0] != -2 || m4d_c[ 1] !=   8 || m4d_c[ 2] != -5 || m4d_c[ 3] !=	1 ||
	m4d_c[ 4] !=  3 || m4d_c[ 5] != -11 || m4d_c[ 6] !=  7 || m4d_c[ 7] != -2 ||
	m4d_c[ 8] !=  9 || m4d_c[ 9] != -34 || m4d_c[10] != 21 || m4d_c[11] != -4 ||
	m4d_c[12] !=  0 || m4d_c[13] !=   0 || m4d_c[14] !=  0 || m4d_c[15] != 1)
	print("error %d\n", __LINE__);
    if (m4d.eq(m4d_a, m4d_b))		print("error %d\n", __LINE__);
    if (m4d.ne(m4d_a, m4d_a))		print("error %d\n", __LINE__);
    m4d.copy(m4d_c, m4d_a);
    if (m4d.eq(m4d_b, m4d_c))		print("error %d\n", __LINE__);
    if (m4d.ne(m4d_a, m4d_c))		print("error %d\n", __LINE__);
    m4d.neg(m4d_c, m4d_a);
    if (m4d_c[ 0] !=  -1 || m4d_c[ 1] !=  -2 || m4d_c[ 2] !=  -3 || m4d_c[ 3] !=  -4 ||
	m4d_c[ 4] !=  -5 || m4d_c[ 5] !=  -6 || m4d_c[ 6] !=  -7 || m4d_c[ 7] !=  -8 ||
	m4d_c[ 8] !=  -9 || m4d_c[ 9] != -10 || m4d_c[10] != -11 || m4d_c[11] != -12 ||
	m4d_c[12] != -13 || m4d_c[13] != -14 || m4d_c[14] != -15 || m4d_c[15] != -16)
	print("error %d\n", __LINE__);
    m4d.add(m4d_c, m4d_a, m4d_b);
    if (m4d_c[ 0] != 17 || m4d_c[ 1] != 17 || m4d_c[ 2] != 17 || m4d_c[ 3] != 17 ||
	m4d_c[ 4] != 17 || m4d_c[ 5] != 17 || m4d_c[ 6] != 17 || m4d_c[ 7] != 17 ||
	m4d_c[ 8] != 17 || m4d_c[ 9] != 17 || m4d_c[10] != 17 || m4d_c[11] != 17 ||
	m4d_c[12] != 17 || m4d_c[13] != 17 || m4d_c[14] != 17 || m4d_c[15] != 17)
	print("error %d\n", __LINE__);
    m4d.sub(m4d_c, m4d_a, m4d_b);
    if (m4d_c[ 0] != -15 || m4d_c[ 1] != -13 || m4d_c[ 2] != -11 || m4d_c[ 3] != -9 ||
	m4d_c[ 4] !=  -7 || m4d_c[ 5] !=  -5 || m4d_c[ 6] !=  -3 || m4d_c[ 7] != -1 ||
	m4d_c[ 8] !=   1 || m4d_c[ 9] !=   3 || m4d_c[10] !=   5 || m4d_c[11] !=  7 ||
	m4d_c[12] !=   9 || m4d_c[13] !=  11 || m4d_c[14] !=  13 || m4d_c[15] != 15)
	print("error %d\n", __LINE__);
    m4d.mul(m4d_c, m4d_a, m4d_b);
    if (m4d_c[ 0] != 386 || m4d_c[ 1] != 444 || m4d_c[ 2] != 502 || m4d_c[ 3] != 560 ||
	m4d_c[ 4] != 274 || m4d_c[ 5] != 316 || m4d_c[ 6] != 358 || m4d_c[ 7] != 400 ||
	m4d_c[ 8] != 162 || m4d_c[ 9] != 188 || m4d_c[10] != 214 || m4d_c[11] != 240 ||
	m4d_c[12] !=  50 || m4d_c[13] !=  60 || m4d_c[14] !=  70 || m4d_c[15] !=  80)
	print("error %d\n", __LINE__);
    m4d.set(m4d_c,
	     7, 2,  1, 1,
	     0, 3, -1, 2,
	    -3, 4, -2, 3,
	     0, 0,  0, 1);
    m4d.div(m4d_c, m4d_a, m4d_c);
    if (m4d_c[ 0] !=   6 || m4d_c[ 1] !=   8 || m4d_c[ 2] !=  10 || m4d_c[ 3] !=  12 ||
	m4d_c[ 4] != -15 || m4d_c[ 5] != -18 || m4d_c[ 6] != -21 || m4d_c[ 7] != -24 ||
	m4d_c[ 8] != -24 || m4d_c[ 9] != -32 || m4d_c[10] != -40 || m4d_c[11] != -48 ||
	m4d_c[12] !=  13 || m4d_c[13] !=  14 || m4d_c[14] !=  15 || m4d_c[15] !=  16)
	print("error %d\n", __LINE__);
    m4d.translate(m4d_c, m4d_a, v3d_a);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] !=  5 || m4d_c[ 5] !=  6 || m4d_c[ 6] !=  7 || m4d_c[ 7] !=  8 ||
	m4d_c[ 8] !=  9 || m4d_c[ 9] != 10 || m4d_c[10] != 11 || m4d_c[11] != 12 ||
	m4d_c[12] != 51 || m4d_c[13] != 58 || m4d_c[14] != 65 || m4d_c[15] != 72)
	print("error %d\n", __LINE__);
    m4d.copy(m4d_c, m4d_a);
    m4d.translate(m4d_c, m4d_c, v3d_a);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] !=  5 || m4d_c[ 5] !=  6 || m4d_c[ 6] !=  7 || m4d_c[ 7] !=  8 ||
	m4d_c[ 8] !=  9 || m4d_c[ 9] != 10 || m4d_c[10] != 11 || m4d_c[11] != 12 ||
	m4d_c[12] != 51 || m4d_c[13] != 58 || m4d_c[14] != 65 || m4d_c[15] != 72)
	print("error %d\n", __LINE__);
    m4d.rotate(m4d_c, m4d_a, 45, v3d_a);
    if (cmp(m4d_c[0], 0.935155) || cmp(m4d_c[1], 1.956770) ||
	cmp(m4d_c[2], 2.978385) || cmp(m4d_c[3], 4) ||
	cmp(m4d_c[4], 6.259419) || cmp(m4d_c[5], 6.839613) ||
	cmp(m4d_c[6], 7.419806) || cmp(m4d_c[7], 8) ||
	cmp(m4d_c[8], 8.182002) || cmp(m4d_c[9], 9.454668) ||
	cmp(m4d_c[10], 10.727334) || cmp(m4d_c[11], 12) ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.copy(m4d_c, m4d_a);
    m4d.rotate(m4d_c, m4d_c, 45, v3d_a);
    if (cmp(m4d_c[0], 0.935155) || cmp(m4d_c[1], 1.956770) ||
	cmp(m4d_c[2], 2.978385) || cmp(m4d_c[3], 4) ||
	cmp(m4d_c[4], 6.259419) || cmp(m4d_c[5], 6.839613) ||
	cmp(m4d_c[6], 7.419806) || cmp(m4d_c[7], 8) ||
	cmp(m4d_c[8], 8.182002) || cmp(m4d_c[9], 9.454668) ||
	cmp(m4d_c[10], 10.727334) || cmp(m4d_c[11], 12) ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.scale(m4d_c, m4d_a, v3d_a);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] != 10 || m4d_c[ 5] != 12 || m4d_c[ 6] != 14 || m4d_c[ 7] != 16 ||
	m4d_c[ 8] != 27 || m4d_c[ 9] != 30 || m4d_c[10] != 33 || m4d_c[11] != 36 ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.copy(m4d_c, m4d_a);
    m4d.scale(m4d_c, m4d_c, v3d_a);
    if (m4d_c[ 0] !=  1 || m4d_c[ 1] !=  2 || m4d_c[ 2] !=  3 || m4d_c[ 3] !=  4 ||
	m4d_c[ 4] != 10 || m4d_c[ 5] != 12 || m4d_c[ 6] != 14 || m4d_c[ 7] != 16 ||
	m4d_c[ 8] != 27 || m4d_c[ 9] != 30 || m4d_c[10] != 33 || m4d_c[11] != 36 ||
	m4d_c[12] != 13 || m4d_c[13] != 14 || m4d_c[14] != 15 || m4d_c[15] != 16)
	print("error %d\n", __LINE__);
    m4d.ortho(m4d_c, 0, 640, 480, 0, -1, 1);
    if (cmp(m4d_c[0], 0.003125) || m4d_c[1] != 0 || m4d_c[2] != 0 || m4d_c[3] != 0 ||
	m4d_c[4] != 0 || cmp(m4d_c[5], -0.004167) || m4d_c[6] != 0 || m4d_c[7] != 0 ||
	m4d_c[8] != 0 || m4d_c[9] != 0 || m4d_c[10] != -1 || m4d_c[11] != 0 ||
	m4d_c[12] != -1 || m4d_c[13] != 1 || m4d_c[14] != 0 || m4d_c[15] != 1)
	print("error %d\n", __LINE__);
    m4d.frustum(m4d_c, -640, 640, -480, 480, 1, 100);
    if (cmp(m4d_c[0], 0.001563) || m4d_c[1] != 0 || m4d_c[2] != 0 || m4d_c[3] != 0 ||
	m4d_c[4] != 0 || cmp(m4d_c[5], 0.002083) || m4d_c[6] != 0 || m4d_c[7] != 0 ||
	m4d_c[8] != 0 || m4d_c[9] != 0 || cmp(m4d_c[10], -1.020202) || m4d_c[11] != -1 ||
	m4d_c[12] != 0 || m4d_c[13] != 0 || cmp(m4d_c[14], -2.020202) || m4d_c[15] != 0)
	print("error %d\n", __LINE__);
    m4d.perspective(m4d_c, 45, 640.0/480.0, 1, 1000);
    if (cmp(m4d_c[0], 1.810660) || m4d_c[1] != 0 || m4d_c[2] != 0 || m4d_c[3] != 0 ||
	m4d_c[4] != 0 || cmp(m4d_c[5], 2.414213) || m4d_c[6] != 0 || m4d_c[7] != 0 ||
	m4d_c[8] != 0 || m4d_c[9] != 0 || cmp(m4d_c[10], -1.002002) || m4d_c[11] != -1 ||
	m4d_c[12] != 0 || m4d_c[13] != 0 || cmp(m4d_c[14], -2.002002) || m4d_c[15] != 0)
	print("error %d\n", __LINE__);
    m4d.set(m4d_c,
	     1,  2,   3,   4,
	    10, 20,  30,  40,
	    20, 30, 100,  50,
	    30, 40, 50, 1000);
    v3d.project(v3d_c, v3d_a, m4d_c, m4d_b, view);
    if (cmp(v3d_c[0], 934.56279809220985) ||
	cmp(v3d_c[1], 627.28139904610487) || cmp(v3d_c[2], 1.1534181240063592))
	print("error %d\n", __LINE__);
    m4d.set(m4d_c,
	    1,	0,  0, 1,
	    0,	2, -1, 0,
	    0, 10,  3, 0,
	    1, 0,   0, 4);
    float64_t m4d_d[16] = {
	 7, 2,	1, 1,
	 0, 3, -1, 2,
	-3, 4, -2, 3,
	 0, 0,	0, 1
    };
    v3d.unProject(v3d_c, v3d_a, m4d_c, m4d_d, view);
    if (cmp(v3d_c[0], -3.128831) ||
	cmp(v3d_c[1],  4.629525) || cmp(v3d_c[2], -0.117939))
	print("error %d\n", __LINE__);
    float64_t v2d_eye[2] = { 960, 540 };
    float64_t v2d_center[2] = { 1, 1 };
    m4d.pickMatrix(m4d_c, v2d_eye, v2d_center, view);
    if (m4d_c[ 0] !=   640 || m4d_c[ 1] !=    0 || m4d_c[ 2] != 0 || m4d_c[ 3] != 0 ||
	m4d_c[ 4] !=	 0 || m4d_c[ 5] !=  480 || m4d_c[ 6] != 0 || m4d_c[ 7] != 0 ||
	m4d_c[ 8] !=	 0 || m4d_c[ 9] !=    0 || m4d_c[10] != 1 || m4d_c[11] != 0 ||
	m4d_c[12] != -1280 || m4d_c[13] != -600 || m4d_c[14] != 0 || m4d_c[15] != 1)
	print("error %d\n", __LINE__);
    float64_t v3d_eye[3] = { 75, 75, 75 };
    float64_t v3d_center[3] = {};
    float64_t v3d_up[3] = { 0, 1, 0 };
    m4d.lookAt(m4d_c, v3d_eye, v3d_center, v3d_up);
    if (cmp(m4d_c[0], 0.707107) || cmp(m4d_c[1], -0.408248) ||
	cmp(m4d_c[2], 0.577350) || m4d_c[3] != 0 ||
	m4d_c[4] != 0 || cmp(m4d_c[5], 0.816497) ||
	cmp(m4d_c[6], 0.577350) || m4d_c[7] != 0 ||
	cmp(m4d_c[8], -0.707107) || cmp(m4d_c[9], -0.408248) ||
	cmp(m4d_c[10], 0.577350) || m4d_c[11] != 0 ||
	m4d_c[12] != 0 || m4d_c[13] != 0 ||
	cmp(m4d_c[14], -129.9038105676658) || m4d_c[15] != 1)
	print("error %d\n", __LINE__);
};
